<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1686" onload="init(evt)" viewBox="0 0 1200 1686" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1686.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1669" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1669" > </text>
<g id="frames">
<g >
<title>core::intrinsics::copy_nonoverlapping (31 samples, 0.06%)</title><rect x="1179.5" y="805" width="0.6" height="15.0" fill="rgb(230,167,33)" rx="2" ry="2" />
<text  x="1182.48" y="815.5" ></text>
</g>
<g >
<title>futures::task_impl::with (6 samples, 0.01%)</title><rect x="1011.7" y="1397" width="0.1" height="15.0" fill="rgb(250,137,28)" rx="2" ry="2" />
<text  x="1014.72" y="1407.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::notify (18 samples, 0.03%)</title><rect x="180.0" y="1365" width="0.4" height="15.0" fill="rgb(206,160,12)" rx="2" ry="2" />
<text  x="183.03" y="1375.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (22 samples, 0.04%)</title><rect x="1059.9" y="1493" width="0.5" height="15.0" fill="rgb(230,92,10)" rx="2" ry="2" />
<text  x="1062.89" y="1503.5" ></text>
</g>
<g >
<title>chrono::naive::datetime::NaiveDateTime::checked_add_signed (9 samples, 0.02%)</title><rect x="978.1" y="1141" width="0.2" height="15.0" fill="rgb(209,15,18)" rx="2" ry="2" />
<text  x="981.11" y="1151.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::into_key_slice (95 samples, 0.17%)</title><rect x="667.2" y="1173" width="2.0" height="15.0" fill="rgb(243,31,23)" rx="2" ry="2" />
<text  x="670.21" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (10 samples, 0.02%)</title><rect x="207.1" y="1269" width="0.2" height="15.0" fill="rgb(241,83,30)" rx="2" ry="2" />
<text  x="210.10" y="1279.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::unpark (47 samples, 0.08%)</title><rect x="184.9" y="1189" width="1.0" height="15.0" fill="rgb(234,9,33)" rx="2" ry="2" />
<text  x="187.91" y="1199.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::Pool&lt;MS,Target,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::poll_ready (26 samples, 0.05%)</title><rect x="1003.5" y="1589" width="0.6" height="15.0" fill="rgb(209,142,27)" rx="2" ry="2" />
<text  x="1006.53" y="1599.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::notify (47 samples, 0.08%)</title><rect x="1048.0" y="1157" width="1.0" height="15.0" fill="rgb(252,8,8)" rx="2" ry="2" />
<text  x="1050.96" y="1167.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (27 samples, 0.05%)</title><rect x="1030.5" y="965" width="0.5" height="15.0" fill="rgb(207,21,46)" rx="2" ry="2" />
<text  x="1033.48" y="975.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::into_slices (241 samples, 0.43%)</title><rect x="666.7" y="1189" width="5.1" height="15.0" fill="rgb(206,116,29)" rx="2" ry="2" />
<text  x="669.70" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (32 samples, 0.06%)</title><rect x="1031.8" y="1125" width="0.7" height="15.0" fill="rgb(228,50,15)" rx="2" ry="2" />
<text  x="1034.79" y="1135.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (37 samples, 0.07%)</title><rect x="1014.2" y="1381" width="0.7" height="15.0" fill="rgb(229,12,7)" rx="2" ry="2" />
<text  x="1017.16" y="1391.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (38 samples, 0.07%)</title><rect x="964.0" y="1237" width="0.8" height="15.0" fill="rgb(221,48,30)" rx="2" ry="2" />
<text  x="966.98" y="1247.5" ></text>
</g>
<g >
<title>core::mem::drop (10 samples, 0.02%)</title><rect x="560.5" y="1237" width="0.2" height="15.0" fill="rgb(236,165,3)" rx="2" ry="2" />
<text  x="563.52" y="1247.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (10 samples, 0.02%)</title><rect x="593.7" y="997" width="0.2" height="15.0" fill="rgb(221,28,14)" rx="2" ry="2" />
<text  x="596.73" y="1007.5" ></text>
</g>
<g >
<title>fake::Fake::fake (114 samples, 0.20%)</title><rect x="197.3" y="1349" width="2.4" height="15.0" fill="rgb(251,100,14)" rx="2" ry="2" />
<text  x="200.26" y="1359.5" ></text>
</g>
<g >
<title>std::panicking::try (348 samples, 0.63%)</title><rect x="195.2" y="1477" width="7.3" height="15.0" fill="rgb(244,123,45)" rx="2" ry="2" />
<text  x="198.16" y="1487.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.02%)</title><rect x="999.2" y="789" width="0.2" height="15.0" fill="rgb(239,154,14)" rx="2" ry="2" />
<text  x="1002.20" y="799.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (12 samples, 0.02%)</title><rect x="1025.1" y="1573" width="0.3" height="15.0" fill="rgb(246,0,53)" rx="2" ry="2" />
<text  x="1028.11" y="1583.5" ></text>
</g>
<g >
<title>sys_sendto (49 samples, 0.09%)</title><rect x="1041.7" y="741" width="1.0" height="15.0" fill="rgb(240,143,40)" rx="2" ry="2" />
<text  x="1044.70" y="751.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (5 samples, 0.01%)</title><rect x="983.8" y="933" width="0.1" height="15.0" fill="rgb(244,85,16)" rx="2" ry="2" />
<text  x="986.82" y="943.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping (12 samples, 0.02%)</title><rect x="1110.4" y="821" width="0.2" height="15.0" fill="rgb(246,204,33)" rx="2" ry="2" />
<text  x="1113.39" y="831.5" ></text>
</g>
<g >
<title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="991.8" y="1461" width="0.1" height="15.0" fill="rgb(253,27,37)" rx="2" ry="2" />
<text  x="994.77" y="1471.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (118 samples, 0.21%)</title><rect x="1027.4" y="1557" width="2.5" height="15.0" fill="rgb(214,5,35)" rx="2" ry="2" />
<text  x="1030.44" y="1567.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="558.7" y="1221" width="0.1" height="15.0" fill="rgb(208,60,1)" rx="2" ry="2" />
<text  x="561.66" y="1231.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::insert (8 samples, 0.01%)</title><rect x="1020.2" y="1397" width="0.2" height="15.0" fill="rgb(216,80,11)" rx="2" ry="2" />
<text  x="1023.21" y="1407.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::DataType&gt;::serialize (6 samples, 0.01%)</title><rect x="1027.4" y="949" width="0.2" height="15.0" fill="rgb(221,191,14)" rx="2" ry="2" />
<text  x="1030.44" y="959.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (32 samples, 0.06%)</title><rect x="1021.2" y="1557" width="0.7" height="15.0" fill="rgb(243,78,21)" rx="2" ry="2" />
<text  x="1024.20" y="1567.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (8 samples, 0.01%)</title><rect x="1013.2" y="1445" width="0.2" height="15.0" fill="rgb(210,32,16)" rx="2" ry="2" />
<text  x="1016.18" y="1455.5" ></text>
</g>
<g >
<title>chrono::format::parsed::Parsed::to_naive_date::_$u7b$$u7b$closure$u7d$$u7d$::h538fefb0d61a1510 (6 samples, 0.01%)</title><rect x="1002.1" y="565" width="0.1" height="15.0" fill="rgb(221,14,44)" rx="2" ry="2" />
<text  x="1005.11" y="575.5" ></text>
</g>
<g >
<title>tokio_sync::loom::sync::CausalCell&lt;T&gt;::with (43 samples, 0.08%)</title><rect x="1134.0" y="725" width="1.0" height="15.0" fill="rgb(233,183,0)" rx="2" ry="2" />
<text  x="1137.05" y="735.5" ></text>
</g>
<g >
<title>&lt;tokio_tcp::stream::TcpStream as std::io::Write&gt;::write (62 samples, 0.11%)</title><rect x="1038.5" y="885" width="1.3" height="15.0" fill="rgb(250,216,34)" rx="2" ry="2" />
<text  x="1041.48" y="895.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (21 samples, 0.04%)</title><rect x="997.2" y="1365" width="0.4" height="15.0" fill="rgb(206,218,51)" rx="2" ry="2" />
<text  x="1000.16" y="1375.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (112 samples, 0.20%)</title><rect x="410.8" y="1285" width="2.3" height="15.0" fill="rgb(209,167,20)" rx="2" ry="2" />
<text  x="413.76" y="1295.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (11 samples, 0.02%)</title><rect x="198.6" y="1253" width="0.3" height="15.0" fill="rgb(214,227,21)" rx="2" ry="2" />
<text  x="201.64" y="1263.5" ></text>
</g>
<g >
<title>__vfs_write (5 samples, 0.01%)</title><rect x="983.3" y="1061" width="0.1" height="15.0" fill="rgb(221,222,32)" rx="2" ry="2" />
<text  x="986.33" y="1071.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::right_edge (36 samples, 0.06%)</title><rect x="665.3" y="1205" width="0.8" height="15.0" fill="rgb(217,22,48)" rx="2" ry="2" />
<text  x="668.30" y="1215.5" ></text>
</g>
<g >
<title>[gen] (8 samples, 0.01%)</title><rect x="501.3" y="1173" width="0.1" height="15.0" fill="rgb(239,13,16)" rx="2" ry="2" />
<text  x="504.28" y="1183.5" ></text>
</g>
<g >
<title>mio_extras::channel::Sender&lt;T&gt;::send (6 samples, 0.01%)</title><rect x="1004.3" y="1477" width="0.1" height="15.0" fill="rgb(238,155,26)" rx="2" ry="2" />
<text  x="1007.25" y="1487.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (8 samples, 0.01%)</title><rect x="1037.8" y="1205" width="0.2" height="15.0" fill="rgb(252,212,22)" rx="2" ry="2" />
<text  x="1040.82" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (11 samples, 0.02%)</title><rect x="1034.0" y="1317" width="0.2" height="15.0" fill="rgb(218,36,32)" rx="2" ry="2" />
<text  x="1036.96" y="1327.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::enumerate (30 samples, 0.05%)</title><rect x="548.8" y="1237" width="0.7" height="15.0" fill="rgb(234,194,3)" rx="2" ry="2" />
<text  x="551.83" y="1247.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (138 samples, 0.25%)</title><rect x="518.5" y="1269" width="3.0" height="15.0" fill="rgb(206,21,33)" rx="2" ry="2" />
<text  x="521.53" y="1279.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (5 samples, 0.01%)</title><rect x="978.9" y="1269" width="0.1" height="15.0" fill="rgb(247,171,52)" rx="2" ry="2" />
<text  x="981.85" y="1279.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.02%)</title><rect x="1119.7" y="965" width="0.2" height="15.0" fill="rgb(223,23,3)" rx="2" ry="2" />
<text  x="1122.66" y="975.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (24 samples, 0.04%)</title><rect x="1186.8" y="853" width="0.5" height="15.0" fill="rgb(210,66,27)" rx="2" ry="2" />
<text  x="1189.84" y="863.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (93 samples, 0.17%)</title><rect x="1057.1" y="1589" width="2.0" height="15.0" fill="rgb(215,12,2)" rx="2" ry="2" />
<text  x="1060.09" y="1599.5" ></text>
</g>
<g >
<title>serde_json::de::from_slice (5 samples, 0.01%)</title><rect x="1021.0" y="1509" width="0.1" height="15.0" fill="rgb(239,69,47)" rx="2" ry="2" />
<text  x="1024.01" y="1519.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::into_key_slice_mut (294 samples, 0.53%)</title><rect x="348.9" y="1269" width="6.2" height="15.0" fill="rgb(220,76,37)" rx="2" ry="2" />
<text  x="351.89" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (33 samples, 0.06%)</title><rect x="1035.2" y="1253" width="0.7" height="15.0" fill="rgb(224,111,12)" rx="2" ry="2" />
<text  x="1038.19" y="1263.5" ></text>
</g>
<g >
<title>&lt;chrono::naive::datetime::NaiveDateTime as core::str::FromStr&gt;::from_str (81 samples, 0.15%)</title><rect x="1000.7" y="613" width="1.7" height="15.0" fill="rgb(236,143,37)" rx="2" ry="2" />
<text  x="1003.69" y="623.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (13 samples, 0.02%)</title><rect x="1051.6" y="1493" width="0.3" height="15.0" fill="rgb(231,225,6)" rx="2" ry="2" />
<text  x="1054.59" y="1503.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (8 samples, 0.01%)</title><rect x="1025.6" y="1013" width="0.2" height="15.0" fill="rgb(228,149,53)" rx="2" ry="2" />
<text  x="1028.62" y="1023.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (5 samples, 0.01%)</title><rect x="1040.5" y="821" width="0.1" height="15.0" fill="rgb(219,142,36)" rx="2" ry="2" />
<text  x="1043.47" y="831.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::will_notify (7 samples, 0.01%)</title><rect x="1003.1" y="1301" width="0.2" height="15.0" fill="rgb(254,115,47)" rx="2" ry="2" />
<text  x="1006.15" y="1311.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::h21cd600e9f97af32 (284 samples, 0.51%)</title><rect x="1038.4" y="1525" width="6.0" height="15.0" fill="rgb(210,223,26)" rx="2" ry="2" />
<text  x="1041.41" y="1535.5" ></text>
</g>
<g >
<title>&lt;tokio_tcp::stream::TcpStream as std::io::Write&gt;::write (8 samples, 0.01%)</title><rect x="1051.9" y="1173" width="0.2" height="15.0" fill="rgb(221,102,34)" rx="2" ry="2" />
<text  x="1054.89" y="1183.5" ></text>
</g>
<g >
<title>sys_futex (7 samples, 0.01%)</title><rect x="192.3" y="1141" width="0.2" height="15.0" fill="rgb(253,93,33)" rx="2" ry="2" />
<text  x="195.33" y="1151.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.01%)</title><rect x="1053.7" y="1077" width="0.2" height="15.0" fill="rgb(224,8,10)" rx="2" ry="2" />
<text  x="1056.73" y="1087.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::worker::state::Lifecycle as core::convert::From&lt;usize&gt;&gt;::from (10 samples, 0.02%)</title><rect x="1121.1" y="1045" width="0.2" height="15.0" fill="rgb(231,118,16)" rx="2" ry="2" />
<text  x="1124.10" y="1055.5" ></text>
</g>
<g >
<title>gen::main::_$u7b$$u7b$closure$u7d$$u7d$::ha3f38d0bb5274a86 (5 samples, 0.01%)</title><rect x="192.5" y="1477" width="0.1" height="15.0" fill="rgb(211,73,26)" rx="2" ry="2" />
<text  x="195.48" y="1487.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::signal_work (16 samples, 0.03%)</title><rect x="180.1" y="1237" width="0.3" height="15.0" fill="rgb(248,209,20)" rx="2" ry="2" />
<text  x="183.07" y="1247.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (33 samples, 0.06%)</title><rect x="998.0" y="1477" width="0.7" height="15.0" fill="rgb(226,210,11)" rx="2" ry="2" />
<text  x="1001.01" y="1487.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.01%)</title><rect x="1110.0" y="917" width="0.2" height="15.0" fill="rgb(216,43,15)" rx="2" ry="2" />
<text  x="1112.98" y="927.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::channel (5 samples, 0.01%)</title><rect x="184.2" y="1461" width="0.1" height="15.0" fill="rgb(245,16,52)" rx="2" ry="2" />
<text  x="187.21" y="1471.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::spawn_thread::_$u7b$$u7b$closure$u7d$$u7d$::ha7200d58e6efae3b (17 samples, 0.03%)</title><rect x="1025.4" y="1381" width="0.4" height="15.0" fill="rgb(226,102,36)" rx="2" ry="2" />
<text  x="1028.43" y="1391.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_store (7 samples, 0.01%)</title><rect x="1092.0" y="853" width="0.1" height="15.0" fill="rgb(236,77,12)" rx="2" ry="2" />
<text  x="1094.99" y="863.5" ></text>
</g>
<g >
<title>std::panicking::update_panic_count (7 samples, 0.01%)</title><rect x="488.5" y="1173" width="0.2" height="15.0" fill="rgb(209,141,20)" rx="2" ry="2" />
<text  x="491.53" y="1183.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (9 samples, 0.02%)</title><rect x="1025.4" y="1045" width="0.2" height="15.0" fill="rgb(237,220,1)" rx="2" ry="2" />
<text  x="1028.43" y="1055.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (284 samples, 0.51%)</title><rect x="1038.4" y="1333" width="6.0" height="15.0" fill="rgb(205,139,53)" rx="2" ry="2" />
<text  x="1041.41" y="1343.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (8 samples, 0.01%)</title><rect x="1021.9" y="1573" width="0.2" height="15.0" fill="rgb(254,103,45)" rx="2" ry="2" />
<text  x="1024.95" y="1583.5" ></text>
</g>
<g >
<title>std::panicking::try (216 samples, 0.39%)</title><rect x="1044.8" y="1557" width="4.6" height="15.0" fill="rgb(239,179,38)" rx="2" ry="2" />
<text  x="1047.80" y="1567.5" ></text>
</g>
<g >
<title>futures::task_impl::std::&lt;impl futures::task_impl::Spawn&lt;F&gt;&gt;::wait_future (50 samples, 0.09%)</title><rect x="192.8" y="1365" width="1.1" height="15.0" fill="rgb(248,52,27)" rx="2" ry="2" />
<text  x="195.84" y="1375.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (5 samples, 0.01%)</title><rect x="1049.6" y="1061" width="0.1" height="15.0" fill="rgb(246,63,26)" rx="2" ry="2" />
<text  x="1052.55" y="1071.5" ></text>
</g>
<g >
<title>serde::de::EnumAccess::variant (9 samples, 0.02%)</title><rect x="1000.1" y="757" width="0.2" height="15.0" fill="rgb(211,224,6)" rx="2" ry="2" />
<text  x="1003.13" y="767.5" ></text>
</g>
<g >
<title>&lt;tokio_timer::clock::clock::Clock as tokio_timer::timer::now::Now&gt;::now (25 samples, 0.04%)</title><rect x="1114.6" y="997" width="0.5" height="15.0" fill="rgb(247,112,13)" rx="2" ry="2" />
<text  x="1117.61" y="1007.5" ></text>
</g>
<g >
<title>&lt;&lt;futures::stream::futures_unordered::FuturesUnordered&lt;T&gt; as futures::stream::Stream&gt;::poll::Bomb&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.02%)</title><rect x="1006.4" y="1493" width="0.2" height="15.0" fill="rgb(243,60,32)" rx="2" ry="2" />
<text  x="1009.37" y="1503.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (5 samples, 0.01%)</title><rect x="1023.8" y="1189" width="0.1" height="15.0" fill="rgb(251,178,18)" rx="2" ry="2" />
<text  x="1026.81" y="1199.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::stack::Stack::pop (8 samples, 0.01%)</title><rect x="1109.2" y="741" width="0.1" height="15.0" fill="rgb(239,46,41)" rx="2" ry="2" />
<text  x="1112.18" y="751.5" ></text>
</g>
<g >
<title>&lt;&amp;tokio_tcp::stream::TcpStream as tokio_io::async_write::AsyncWrite&gt;::write_buf (20 samples, 0.04%)</title><rect x="1131.2" y="581" width="0.4" height="15.0" fill="rgb(214,111,38)" rx="2" ry="2" />
<text  x="1134.16" y="591.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter_mut (659 samples, 1.19%)</title><rect x="940.7" y="1301" width="13.9" height="15.0" fill="rgb(212,188,26)" rx="2" ry="2" />
<text  x="943.66" y="1311.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (25 samples, 0.04%)</title><rect x="435.7" y="1253" width="0.5" height="15.0" fill="rgb(238,51,16)" rx="2" ry="2" />
<text  x="438.71" y="1263.5" ></text>
</g>
<g >
<title>core::slice::Iter&lt;T&gt;::post_inc_start (8 samples, 0.01%)</title><rect x="987.7" y="1125" width="0.2" height="15.0" fill="rgb(249,155,48)" rx="2" ry="2" />
<text  x="990.74" y="1135.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (7 samples, 0.01%)</title><rect x="978.7" y="1237" width="0.1" height="15.0" fill="rgb(240,189,29)" rx="2" ry="2" />
<text  x="981.68" y="1247.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (5 samples, 0.01%)</title><rect x="557.7" y="1221" width="0.1" height="15.0" fill="rgb(247,74,19)" rx="2" ry="2" />
<text  x="560.72" y="1231.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::poll_complete (62 samples, 0.11%)</title><rect x="1041.4" y="917" width="1.3" height="15.0" fill="rgb(240,226,18)" rx="2" ry="2" />
<text  x="1044.43" y="927.5" ></text>
</g>
<g >
<title>cache_bin_alloc_easy (7 samples, 0.01%)</title><rect x="1016.3" y="1477" width="0.2" height="15.0" fill="rgb(227,151,28)" rx="2" ry="2" />
<text  x="1019.35" y="1487.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="1056.9" y="1269" width="0.2" height="15.0" fill="rgb(210,79,54)" rx="2" ry="2" />
<text  x="1059.94" y="1279.5" ></text>
</g>
<g >
<title>&lt;arccstr::ArcCStr as core::convert::TryFrom&lt;alloc::string::String&gt;&gt;::try_from (18 samples, 0.03%)</title><rect x="195.3" y="1317" width="0.4" height="15.0" fill="rgb(206,80,5)" rx="2" ry="2" />
<text  x="198.28" y="1327.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (8 samples, 0.01%)</title><rect x="194.5" y="1413" width="0.2" height="15.0" fill="rgb(248,112,24)" rx="2" ry="2" />
<text  x="197.54" y="1423.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts_mut (15 samples, 0.03%)</title><rect x="439.2" y="1285" width="0.3" height="15.0" fill="rgb(232,39,35)" rx="2" ry="2" />
<text  x="442.19" y="1295.5" ></text>
</g>
<g >
<title>std::panicking::try (20 samples, 0.04%)</title><rect x="1038.0" y="1349" width="0.4" height="15.0" fill="rgb(233,133,36)" rx="2" ry="2" />
<text  x="1040.99" y="1359.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (10 samples, 0.02%)</title><rect x="1014.6" y="741" width="0.2" height="15.0" fill="rgb(217,142,53)" rx="2" ry="2" />
<text  x="1017.63" y="751.5" ></text>
</g>
<g >
<title>nf_conntrack_in (6 samples, 0.01%)</title><rect x="1050.2" y="565" width="0.1" height="15.0" fill="rgb(231,2,37)" rx="2" ry="2" />
<text  x="1053.17" y="575.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (15 samples, 0.03%)</title><rect x="893.9" y="1285" width="0.3" height="15.0" fill="rgb(239,183,37)" rx="2" ry="2" />
<text  x="896.89" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run (284 samples, 0.51%)</title><rect x="1038.4" y="1573" width="6.0" height="15.0" fill="rgb(235,48,24)" rx="2" ry="2" />
<text  x="1041.41" y="1583.5" ></text>
</g>
<g >
<title>tracing::span::Span::in_scope (6 samples, 0.01%)</title><rect x="181.9" y="1445" width="0.1" height="15.0" fill="rgb(229,151,41)" rx="2" ry="2" />
<text  x="184.91" y="1455.5" ></text>
</g>
<g >
<title>tcp_rcv_established (18 samples, 0.03%)</title><rect x="1042.1" y="277" width="0.4" height="15.0" fill="rgb(232,97,25)" rx="2" ry="2" />
<text  x="1045.08" y="287.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::notify (6 samples, 0.01%)</title><rect x="1058.3" y="1253" width="0.1" height="15.0" fill="rgb(216,23,4)" rx="2" ry="2" />
<text  x="1061.25" y="1263.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.02%)</title><rect x="1084.3" y="949" width="0.3" height="15.0" fill="rgb(248,145,42)" rx="2" ry="2" />
<text  x="1087.31" y="959.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (8 samples, 0.01%)</title><rect x="1023.5" y="1525" width="0.2" height="15.0" fill="rgb(234,185,2)" rx="2" ry="2" />
<text  x="1026.54" y="1535.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (11 samples, 0.02%)</title><rect x="1059.1" y="1381" width="0.2" height="15.0" fill="rgb(250,35,38)" rx="2" ry="2" />
<text  x="1062.06" y="1391.5" ></text>
</g>
<g >
<title>futures::task_impl::current::_$u7b$$u7b$closure$u7d$$u7d$::hb88041a16b038a29 (15 samples, 0.03%)</title><rect x="1058.7" y="1205" width="0.3" height="15.0" fill="rgb(253,136,48)" rx="2" ry="2" />
<text  x="1061.72" y="1215.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicIsize::compare_exchange (5 samples, 0.01%)</title><rect x="1162.9" y="1013" width="0.1" height="15.0" fill="rgb(245,189,2)" rx="2" ry="2" />
<text  x="1165.90" y="1023.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (15 samples, 0.03%)</title><rect x="1034.9" y="1301" width="0.3" height="15.0" fill="rgb(238,72,41)" rx="2" ry="2" />
<text  x="1037.87" y="1311.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (113 samples, 0.20%)</title><rect x="992.9" y="1541" width="2.4" height="15.0" fill="rgb(220,29,8)" rx="2" ry="2" />
<text  x="995.92" y="1551.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as tokio_tower::multiplex::client::TagStore&lt;&lt;T as futures::sink::Sink&gt;::SinkItem,&lt;T as futures::stream::Stream&gt;::Item&gt;&gt;::assign_tag (5 samples, 0.01%)</title><rect x="1043.0" y="949" width="0.1" height="15.0" fill="rgb(220,18,50)" rx="2" ry="2" />
<text  x="1045.97" y="959.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (6 samples, 0.01%)</title><rect x="1027.4" y="1093" width="0.2" height="15.0" fill="rgb(213,13,10)" rx="2" ry="2" />
<text  x="1030.44" y="1103.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (5 samples, 0.01%)</title><rect x="1035.9" y="1077" width="0.1" height="15.0" fill="rgb(224,110,33)" rx="2" ry="2" />
<text  x="1038.89" y="1087.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::Instant::now (5 samples, 0.01%)</title><rect x="1106.1" y="901" width="0.1" height="15.0" fill="rgb(220,45,1)" rx="2" ry="2" />
<text  x="1109.08" y="911.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (13 samples, 0.02%)</title><rect x="1033.4" y="1349" width="0.3" height="15.0" fill="rgb(222,166,6)" rx="2" ry="2" />
<text  x="1036.41" y="1359.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (5 samples, 0.01%)</title><rect x="993.5" y="1237" width="0.1" height="15.0" fill="rgb(234,89,4)" rx="2" ry="2" />
<text  x="996.47" y="1247.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (661 samples, 1.19%)</title><rect x="616.2" y="1237" width="14.0" height="15.0" fill="rgb(205,113,32)" rx="2" ry="2" />
<text  x="619.18" y="1247.5" ></text>
</g>
<g >
<title>core::mem::size_of_val (58 samples, 0.10%)</title><rect x="901.8" y="1285" width="1.2" height="15.0" fill="rgb(212,169,6)" rx="2" ry="2" />
<text  x="904.76" y="1295.5" ></text>
</g>
<g >
<title>chrono::naive::datetime::serde::&lt;impl serde::ser::Serialize for chrono::naive::datetime::NaiveDateTime&gt;::serialize (33 samples, 0.06%)</title><rect x="998.0" y="1157" width="0.7" height="15.0" fill="rgb(206,158,16)" rx="2" ry="2" />
<text  x="1001.01" y="1167.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (112 samples, 0.20%)</title><rect x="997.6" y="1573" width="2.4" height="15.0" fill="rgb(237,23,19)" rx="2" ry="2" />
<text  x="1000.61" y="1583.5" ></text>
</g>
<g >
<title>noria::table::_::&lt;impl serde::ser::Serialize for noria::table::Input&gt;::serialize (19 samples, 0.03%)</title><rect x="997.6" y="1365" width="0.4" height="15.0" fill="rgb(253,222,12)" rx="2" ry="2" />
<text  x="1000.61" y="1375.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::wakeup (86 samples, 0.15%)</title><rect x="1144.5" y="885" width="1.8" height="15.0" fill="rgb(242,103,18)" rx="2" ry="2" />
<text  x="1147.46" y="895.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (33 samples, 0.06%)</title><rect x="1035.2" y="1173" width="0.7" height="15.0" fill="rgb(205,160,44)" rx="2" ry="2" />
<text  x="1038.19" y="1183.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (12 samples, 0.02%)</title><rect x="997.4" y="965" width="0.2" height="15.0" fill="rgb(224,218,49)" rx="2" ry="2" />
<text  x="1000.35" y="975.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (25 samples, 0.04%)</title><rect x="1108.4" y="517" width="0.6" height="15.0" fill="rgb(235,161,54)" rx="2" ry="2" />
<text  x="1111.43" y="527.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (27 samples, 0.05%)</title><rect x="733.9" y="1237" width="0.6" height="15.0" fill="rgb(214,192,1)" rx="2" ry="2" />
<text  x="736.94" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (11 samples, 0.02%)</title><rect x="1034.0" y="1285" width="0.2" height="15.0" fill="rgb(211,59,17)" rx="2" ry="2" />
<text  x="1036.96" y="1295.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (7 samples, 0.01%)</title><rect x="1034.2" y="1413" width="0.1" height="15.0" fill="rgb(228,120,42)" rx="2" ry="2" />
<text  x="1037.19" y="1423.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfb347edd97d33f3d (17 samples, 0.03%)</title><rect x="1025.4" y="1237" width="0.4" height="15.0" fill="rgb(252,190,13)" rx="2" ry="2" />
<text  x="1028.43" y="1247.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (24 samples, 0.04%)</title><rect x="1046.6" y="1205" width="0.5" height="15.0" fill="rgb(223,88,46)" rx="2" ry="2" />
<text  x="1049.60" y="1215.5" ></text>
</g>
<g >
<title>futex_wake (15 samples, 0.03%)</title><rect x="1043.8" y="773" width="0.3" height="15.0" fill="rgb(242,16,17)" rx="2" ry="2" />
<text  x="1046.76" y="783.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.02%)</title><rect x="1026.0" y="1445" width="0.2" height="15.0" fill="rgb(244,175,19)" rx="2" ry="2" />
<text  x="1028.98" y="1455.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (7 samples, 0.01%)</title><rect x="1053.7" y="1045" width="0.2" height="15.0" fill="rgb(210,11,45)" rx="2" ry="2" />
<text  x="1056.73" y="1055.5" ></text>
</g>
<g >
<title>__netif_receive_skb (5 samples, 0.01%)</title><rect x="1131.4" y="69" width="0.1" height="15.0" fill="rgb(253,108,35)" rx="2" ry="2" />
<text  x="1134.37" y="79.5" ></text>
</g>
<g >
<title>&lt;noria::controller::Controller&lt;A&gt; as tower_service::Service&lt;noria::controller::ControllerRequest&gt;&gt;::call (7 samples, 0.01%)</title><rect x="1047.8" y="1333" width="0.2" height="15.0" fill="rgb(239,137,49)" rx="2" ry="2" />
<text  x="1050.81" y="1343.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (38 samples, 0.07%)</title><rect x="1026.6" y="1301" width="0.8" height="15.0" fill="rgb(207,75,42)" rx="2" ry="2" />
<text  x="1029.64" y="1311.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::notify (56 samples, 0.10%)</title><rect x="184.8" y="1349" width="1.2" height="15.0" fill="rgb(218,167,23)" rx="2" ry="2" />
<text  x="187.80" y="1359.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (15 samples, 0.03%)</title><rect x="1098.4" y="853" width="0.4" height="15.0" fill="rgb(239,83,43)" rx="2" ry="2" />
<text  x="1101.44" y="863.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (7 samples, 0.01%)</title><rect x="1056.7" y="1573" width="0.2" height="15.0" fill="rgb(245,74,30)" rx="2" ry="2" />
<text  x="1059.70" y="1583.5" ></text>
</g>
<g >
<title>std::sync::mpsc::Receiver&lt;T&gt;::recv (53 samples, 0.10%)</title><rect x="984.6" y="1349" width="1.2" height="15.0" fill="rgb(207,34,35)" rx="2" ry="2" />
<text  x="987.64" y="1359.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::add (20 samples, 0.04%)</title><rect x="585.9" y="1061" width="0.5" height="15.0" fill="rgb(210,40,20)" rx="2" ry="2" />
<text  x="588.94" y="1071.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple (7 samples, 0.01%)</title><rect x="1058.1" y="1109" width="0.2" height="15.0" fill="rgb(214,201,28)" rx="2" ry="2" />
<text  x="1061.10" y="1119.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (8 samples, 0.01%)</title><rect x="1026.3" y="1045" width="0.2" height="15.0" fill="rgb(224,78,21)" rx="2" ry="2" />
<text  x="1029.30" y="1055.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (15 samples, 0.03%)</title><rect x="1036.2" y="1093" width="0.3" height="15.0" fill="rgb(237,164,23)" rx="2" ry="2" />
<text  x="1039.16" y="1103.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (7 samples, 0.01%)</title><rect x="466.2" y="1205" width="0.2" height="15.0" fill="rgb(247,178,46)" rx="2" ry="2" />
<text  x="469.25" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (47 samples, 0.08%)</title><rect x="1048.0" y="1189" width="1.0" height="15.0" fill="rgb(205,169,18)" rx="2" ry="2" />
<text  x="1050.96" y="1199.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::run (5 samples, 0.01%)</title><rect x="998.6" y="933" width="0.1" height="15.0" fill="rgb(222,189,37)" rx="2" ry="2" />
<text  x="1001.61" y="943.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::entry (9 samples, 0.02%)</title><rect x="1121.9" y="1061" width="0.2" height="15.0" fill="rgb(210,153,47)" rx="2" ry="2" />
<text  x="1124.89" y="1071.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (271 samples, 0.49%)</title><rect x="812.2" y="1109" width="5.7" height="15.0" fill="rgb(248,45,2)" rx="2" ry="2" />
<text  x="815.20" y="1119.5" ></text>
</g>
<g >
<title>SYSC_sendto (53 samples, 0.10%)</title><rect x="1038.6" y="725" width="1.1" height="15.0" fill="rgb(210,173,41)" rx="2" ry="2" />
<text  x="1041.58" y="735.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (5 samples, 0.01%)</title><rect x="1041.3" y="885" width="0.1" height="15.0" fill="rgb(235,51,11)" rx="2" ry="2" />
<text  x="1044.32" y="895.5" ></text>
</g>
<g >
<title>&lt;futures::future::map::Map&lt;A,F&gt; as futures::future::Future&gt;::poll (17 samples, 0.03%)</title><rect x="189.0" y="1365" width="0.4" height="15.0" fill="rgb(244,157,37)" rx="2" ry="2" />
<text  x="192.02" y="1375.5" ></text>
</g>
<g >
<title>noria::table::SyncTable::insert (66 samples, 0.12%)</title><rect x="199.8" y="1349" width="1.4" height="15.0" fill="rgb(240,91,45)" rx="2" ry="2" />
<text  x="202.80" y="1359.5" ></text>
</g>
<g >
<title>core::fmt::Write::write_char (9 samples, 0.02%)</title><rect x="983.8" y="1141" width="0.1" height="15.0" fill="rgb(238,84,2)" rx="2" ry="2" />
<text  x="986.75" y="1151.5" ></text>
</g>
<g >
<title>&lt;noria::consensus::zk::ZookeeperAuthority as noria::consensus::Authority&gt;::get_leader (29 samples, 0.05%)</title><rect x="1004.1" y="1525" width="0.6" height="15.0" fill="rgb(241,142,24)" rx="2" ry="2" />
<text  x="1007.10" y="1535.5" ></text>
</g>
<g >
<title>indexmap::map::OrderMapCore&lt;K,V&gt;::swap_remove_found (8 samples, 0.01%)</title><rect x="1132.5" y="709" width="0.2" height="15.0" fill="rgb(208,174,28)" rx="2" ry="2" />
<text  x="1135.54" y="719.5" ></text>
</g>
<g >
<title>noria::table::_::&lt;impl serde::ser::Serialize for noria::table::Input&gt;::serialize (17 samples, 0.03%)</title><rect x="1023.0" y="1269" width="0.3" height="15.0" fill="rgb(220,93,51)" rx="2" ry="2" />
<text  x="1025.97" y="1279.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 0.02%)</title><rect x="1054.0" y="1013" width="0.3" height="15.0" fill="rgb(230,56,47)" rx="2" ry="2" />
<text  x="1057.01" y="1023.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (33 samples, 0.06%)</title><rect x="998.0" y="1365" width="0.7" height="15.0" fill="rgb(243,163,17)" rx="2" ry="2" />
<text  x="1001.01" y="1375.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::Handle as tokio_executor::park::Unpark&gt;::unpark (46 samples, 0.08%)</title><rect x="1108.2" y="709" width="1.0" height="15.0" fill="rgb(233,138,0)" rx="2" ry="2" />
<text  x="1111.18" y="719.5" ></text>
</g>
<g >
<title>http::request::Request&lt; (6 samples, 0.01%)</title><rect x="1056.1" y="1253" width="0.1" height="15.0" fill="rgb(209,45,35)" rx="2" ry="2" />
<text  x="1059.09" y="1263.5" ></text>
</g>
<g >
<title>__rg_dealloc (142 samples, 0.26%)</title><rect x="890.2" y="1269" width="3.0" height="15.0" fill="rgb(229,203,52)" rx="2" ry="2" />
<text  x="893.18" y="1279.5" ></text>
</g>
<g >
<title>rand::distributions::integer::&lt;impl rand::distributions::Distribution&lt;usize&gt; for rand::distributions::Standard&gt;::sample (9 samples, 0.02%)</title><rect x="199.5" y="1189" width="0.2" height="15.0" fill="rgb(243,31,37)" rx="2" ry="2" />
<text  x="202.46" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::std::_$LT$impl$u20$futures..task_impl..Spawn$LT$F$GT$$GT$::wait_future::_$u7b$$u7b$closure$u7d$$u7d$::hd0f6d5cc3fe9bd86 (67 samples, 0.12%)</title><rect x="187.0" y="1589" width="1.5" height="15.0" fill="rgb(243,115,17)" rx="2" ry="2" />
<text  x="190.05" y="1599.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.02%)</title><rect x="995.3" y="1381" width="0.3" height="15.0" fill="rgb(230,143,30)" rx="2" ry="2" />
<text  x="998.32" y="1391.5" ></text>
</g>
<g >
<title>tcache_alloc_small (8 samples, 0.01%)</title><rect x="1017.9" y="1509" width="0.1" height="15.0" fill="rgb(206,55,42)" rx="2" ry="2" />
<text  x="1020.85" y="1519.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (49 samples, 0.09%)</title><rect x="396.9" y="1269" width="1.0" height="15.0" fill="rgb(231,73,17)" rx="2" ry="2" />
<text  x="399.86" y="1279.5" ></text>
</g>
<g >
<title>noria::view::_::&lt;impl serde::ser::Serialize for noria::view::ReadQuery&gt;::serialize (13 samples, 0.02%)</title><rect x="1054.0" y="1157" width="0.3" height="15.0" fill="rgb(215,214,49)" rx="2" ry="2" />
<text  x="1057.01" y="1167.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (55 samples, 0.10%)</title><rect x="980.1" y="1189" width="1.2" height="15.0" fill="rgb(232,28,53)" rx="2" ry="2" />
<text  x="983.12" y="1199.5" ></text>
</g>
<g >
<title>inet_recvmsg (5 samples, 0.01%)</title><rect x="1031.4" y="741" width="0.1" height="15.0" fill="rgb(252,152,22)" rx="2" ry="2" />
<text  x="1034.43" y="751.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (77 samples, 0.14%)</title><rect x="391.8" y="1301" width="1.6" height="15.0" fill="rgb(223,132,22)" rx="2" ry="2" />
<text  x="394.81" y="1311.5" ></text>
</g>
<g >
<title>core::num::wrapping::&lt;impl core::ops::bit::Shl&lt;usize&gt; for core::num::Wrapping&lt;u64&gt;&gt;::shl (5 samples, 0.01%)</title><rect x="581.4" y="1093" width="0.1" height="15.0" fill="rgb(218,211,28)" rx="2" ry="2" />
<text  x="584.36" y="1103.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (126 samples, 0.23%)</title><rect x="1038.4" y="1141" width="2.7" height="15.0" fill="rgb(240,114,6)" rx="2" ry="2" />
<text  x="1041.41" y="1151.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (6 samples, 0.01%)</title><rect x="188.5" y="1589" width="0.1" height="15.0" fill="rgb(209,136,7)" rx="2" ry="2" />
<text  x="191.47" y="1599.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::unpark (27 samples, 0.05%)</title><rect x="10.5" y="1221" width="0.6" height="15.0" fill="rgb(224,154,40)" rx="2" ry="2" />
<text  x="13.49" y="1231.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (8 samples, 0.01%)</title><rect x="1023.5" y="1589" width="0.2" height="15.0" fill="rgb(229,95,13)" rx="2" ry="2" />
<text  x="1026.54" y="1599.5" ></text>
</g>
<g >
<title>&lt;&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple::Access&lt;R,O&gt; as serde::de::SeqAccess&gt;::next_element_seed (11 samples, 0.02%)</title><rect x="1055.2" y="1077" width="0.2" height="15.0" fill="rgb(247,147,39)" rx="2" ry="2" />
<text  x="1058.15" y="1087.5" ></text>
</g>
<g >
<title>tsdn_tsd (43 samples, 0.08%)</title><rect x="154.8" y="1525" width="0.9" height="15.0" fill="rgb(220,81,41)" rx="2" ry="2" />
<text  x="157.80" y="1535.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h1e333f0842b39e4b (6 samples, 0.01%)</title><rect x="996.3" y="1189" width="0.1" height="15.0" fill="rgb(226,154,20)" rx="2" ry="2" />
<text  x="999.27" y="1199.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.01%)</title><rect x="1045.0" y="933" width="0.1" height="15.0" fill="rgb(239,116,38)" rx="2" ry="2" />
<text  x="1047.97" y="943.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueue::prepare_for_sleep (37 samples, 0.07%)</title><rect x="1093.5" y="917" width="0.8" height="15.0" fill="rgb(214,227,3)" rx="2" ry="2" />
<text  x="1096.54" y="927.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (14 samples, 0.03%)</title><rect x="1023.0" y="1013" width="0.3" height="15.0" fill="rgb(234,2,51)" rx="2" ry="2" />
<text  x="1026.03" y="1023.5" ></text>
</g>
<g >
<title>&lt;jemallocator::Jemalloc as core::alloc::GlobalAlloc&gt;::dealloc (126 samples, 0.23%)</title><rect x="802.1" y="1077" width="2.7" height="15.0" fill="rgb(232,124,2)" rx="2" ry="2" />
<text  x="805.08" y="1087.5" ></text>
</g>
<g >
<title>futures::future::option::&lt;impl futures::future::Future for core::option::Option&lt;F&gt;&gt;::poll (26 samples, 0.05%)</title><rect x="996.3" y="1573" width="0.5" height="15.0" fill="rgb(244,208,46)" rx="2" ry="2" />
<text  x="999.27" y="1583.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::run (21 samples, 0.04%)</title><rect x="983.5" y="1221" width="0.4" height="15.0" fill="rgb(254,72,54)" rx="2" ry="2" />
<text  x="986.50" y="1231.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="1034.7" y="1205" width="0.2" height="15.0" fill="rgb(226,33,12)" rx="2" ry="2" />
<text  x="1037.70" y="1215.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (144 samples, 0.26%)</title><rect x="1000.0" y="901" width="3.0" height="15.0" fill="rgb(250,98,53)" rx="2" ry="2" />
<text  x="1002.99" y="911.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (7 samples, 0.01%)</title><rect x="1049.4" y="1317" width="0.1" height="15.0" fill="rgb(206,7,47)" rx="2" ry="2" />
<text  x="1052.38" y="1327.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (6,084 samples, 10.94%)</title><rect x="1060.6" y="1397" width="129.1" height="15.0" fill="rgb(243,180,3)" rx="2" ry="2" />
<text  x="1063.61" y="1407.5" >std::sys_common:..</text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit::_$u7b$$u7b$closure$u7d$$u7d$::h83d517d17b1a75b2 (15 samples, 0.03%)</title><rect x="1028.1" y="1141" width="0.3" height="15.0" fill="rgb(207,222,49)" rx="2" ry="2" />
<text  x="1031.06" y="1151.5" ></text>
</g>
<g >
<title>std::panicking::try (12 samples, 0.02%)</title><rect x="1029.9" y="1493" width="0.3" height="15.0" fill="rgb(216,79,16)" rx="2" ry="2" />
<text  x="1032.95" y="1503.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit::_$u7b$$u7b$closure$u7d$$u7d$::h83d517d17b1a75b2 (5 samples, 0.01%)</title><rect x="997.0" y="1189" width="0.1" height="15.0" fill="rgb(237,124,43)" rx="2" ry="2" />
<text  x="999.95" y="1199.5" ></text>
</g>
<g >
<title>futures::future::Future::wait (15 samples, 0.03%)</title><rect x="194.7" y="1557" width="0.3" height="15.0" fill="rgb(213,159,53)" rx="2" ry="2" />
<text  x="197.71" y="1567.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (37 samples, 0.07%)</title><rect x="1105.1" y="805" width="0.8" height="15.0" fill="rgb(241,127,6)" rx="2" ry="2" />
<text  x="1108.10" y="815.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (46 samples, 0.08%)</title><rect x="768.4" y="1141" width="0.9" height="15.0" fill="rgb(224,225,14)" rx="2" ry="2" />
<text  x="771.36" y="1151.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (7 samples, 0.01%)</title><rect x="1053.7" y="1093" width="0.2" height="15.0" fill="rgb(211,205,20)" rx="2" ry="2" />
<text  x="1056.73" y="1103.5" ></text>
</g>
<g >
<title>std::panicking::try (12 samples, 0.02%)</title><rect x="1029.9" y="997" width="0.3" height="15.0" fill="rgb(247,26,38)" rx="2" ry="2" />
<text  x="1032.95" y="1007.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (16 samples, 0.03%)</title><rect x="197.3" y="1269" width="0.4" height="15.0" fill="rgb(215,221,47)" rx="2" ry="2" />
<text  x="200.34" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (172 samples, 0.31%)</title><rect x="1150.4" y="821" width="3.6" height="15.0" fill="rgb(238,55,3)" rx="2" ry="2" />
<text  x="1153.36" y="831.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_char_boundary (7 samples, 0.01%)</title><rect x="988.0" y="1109" width="0.2" height="15.0" fill="rgb(250,204,9)" rx="2" ry="2" />
<text  x="991.04" y="1119.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (12 samples, 0.02%)</title><rect x="995.3" y="1237" width="0.3" height="15.0" fill="rgb(214,183,29)" rx="2" ry="2" />
<text  x="998.32" y="1247.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (35 samples, 0.06%)</title><rect x="191.8" y="1541" width="0.8" height="15.0" fill="rgb(205,96,25)" rx="2" ry="2" />
<text  x="194.85" y="1551.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h3169cfffdbef5731 (5 samples, 0.01%)</title><rect x="192.5" y="1221" width="0.1" height="15.0" fill="rgb(211,2,28)" rx="2" ry="2" />
<text  x="195.48" y="1231.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (6 samples, 0.01%)</title><rect x="1150.9" y="453" width="0.1" height="15.0" fill="rgb(217,193,38)" rx="2" ry="2" />
<text  x="1153.91" y="463.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (6 samples, 0.01%)</title><rect x="1030.2" y="1269" width="0.1" height="15.0" fill="rgb(249,11,42)" rx="2" ry="2" />
<text  x="1033.20" y="1279.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (6 samples, 0.01%)</title><rect x="1057.9" y="1029" width="0.1" height="15.0" fill="rgb(217,148,4)" rx="2" ry="2" />
<text  x="1060.89" y="1039.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (9 samples, 0.02%)</title><rect x="352.4" y="1237" width="0.2" height="15.0" fill="rgb(244,127,5)" rx="2" ry="2" />
<text  x="355.39" y="1247.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (64 samples, 0.12%)</title><rect x="1050.0" y="1221" width="1.4" height="15.0" fill="rgb(208,99,53)" rx="2" ry="2" />
<text  x="1053.02" y="1231.5" ></text>
</g>
<g >
<title>jemallocator::layout_to_flags (17 samples, 0.03%)</title><rect x="849.7" y="1077" width="0.4" height="15.0" fill="rgb(212,42,18)" rx="2" ry="2" />
<text  x="852.73" y="1087.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="996.1" y="1573" width="0.2" height="15.0" fill="rgb(242,64,0)" rx="2" ry="2" />
<text  x="999.14" y="1583.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (11 samples, 0.02%)</title><rect x="1034.3" y="1461" width="0.3" height="15.0" fill="rgb(222,11,27)" rx="2" ry="2" />
<text  x="1037.34" y="1471.5" ></text>
</g>
<g >
<title>&lt;async_bincode::reader::AsyncBincodeReader&lt;R,T&gt; as futures::stream::Stream&gt;::poll (144 samples, 0.26%)</title><rect x="1000.0" y="1541" width="3.0" height="15.0" fill="rgb(230,112,1)" rx="2" ry="2" />
<text  x="1002.99" y="1551.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::cast (49 samples, 0.09%)</title><rect x="922.5" y="1301" width="1.0" height="15.0" fill="rgb(232,193,11)" rx="2" ry="2" />
<text  x="925.45" y="1311.5" ></text>
</g>
<g >
<title>_rjem_sdallocx (54 samples, 0.10%)</title><rect x="912.7" y="1205" width="1.1" height="15.0" fill="rgb(217,224,2)" rx="2" ry="2" />
<text  x="915.69" y="1215.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (7 samples, 0.01%)</title><rect x="683.8" y="1189" width="0.2" height="15.0" fill="rgb(207,92,53)" rx="2" ry="2" />
<text  x="686.85" y="1199.5" ></text>
</g>
<g >
<title>&lt;tower_balance::p2c::service::Balance&lt;D,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (70 samples, 0.13%)</title><rect x="1131.9" y="741" width="1.5" height="15.0" fill="rgb(213,212,31)" rx="2" ry="2" />
<text  x="1134.90" y="751.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (18 samples, 0.03%)</title><rect x="854.9" y="1253" width="0.4" height="15.0" fill="rgb(244,167,2)" rx="2" ry="2" />
<text  x="857.91" y="1263.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::chan::Tx&lt;T,S&gt;::try_send (56 samples, 0.10%)</title><rect x="184.8" y="1461" width="1.2" height="15.0" fill="rgb(247,169,50)" rx="2" ry="2" />
<text  x="187.80" y="1471.5" ></text>
</g>
<g >
<title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1053.1" y="1253" width="0.1" height="15.0" fill="rgb(214,206,51)" rx="2" ry="2" />
<text  x="1056.05" y="1263.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::poll_evented::PollEvented&lt;E&gt; as std::io::Read&gt;::read (19 samples, 0.03%)</title><rect x="1046.2" y="1205" width="0.4" height="15.0" fill="rgb(206,119,49)" rx="2" ry="2" />
<text  x="1049.20" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (158 samples, 0.28%)</title><rect x="1041.1" y="1093" width="3.3" height="15.0" fill="rgb(252,123,25)" rx="2" ry="2" />
<text  x="1044.09" y="1103.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h78b272fd5f571c5e (5 samples, 0.01%)</title><rect x="180.7" y="1413" width="0.1" height="15.0" fill="rgb(211,129,41)" rx="2" ry="2" />
<text  x="183.73" y="1423.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (8 samples, 0.01%)</title><rect x="189.2" y="1301" width="0.2" height="15.0" fill="rgb(213,94,5)" rx="2" ry="2" />
<text  x="192.21" y="1311.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::get_default (8 samples, 0.01%)</title><rect x="184.3" y="1445" width="0.2" height="15.0" fill="rgb(253,222,14)" rx="2" ry="2" />
<text  x="187.33" y="1455.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (22 samples, 0.04%)</title><rect x="1032.8" y="1269" width="0.4" height="15.0" fill="rgb(214,207,11)" rx="2" ry="2" />
<text  x="1035.77" y="1279.5" ></text>
</g>
<g >
<title>core::ptr::write (114 samples, 0.20%)</title><rect x="503.8" y="1205" width="2.4" height="15.0" fill="rgb(235,148,20)" rx="2" ry="2" />
<text  x="506.78" y="1215.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (219 samples, 0.39%)</title><rect x="776.8" y="1157" width="4.6" height="15.0" fill="rgb(244,120,40)" rx="2" ry="2" />
<text  x="779.76" y="1167.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (9 samples, 0.02%)</title><rect x="1129.6" y="901" width="0.2" height="15.0" fill="rgb(220,100,12)" rx="2" ry="2" />
<text  x="1132.61" y="911.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (99 samples, 0.18%)</title><rect x="716.3" y="1285" width="2.1" height="15.0" fill="rgb(213,128,33)" rx="2" ry="2" />
<text  x="719.27" y="1295.5" ></text>
</g>
<g >
<title>&lt;futures::future::map::Map&lt;A,F&gt; as futures::future::Future&gt;::poll (18 samples, 0.03%)</title><rect x="995.7" y="1589" width="0.4" height="15.0" fill="rgb(252,122,51)" rx="2" ry="2" />
<text  x="998.68" y="1599.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (6 samples, 0.01%)</title><rect x="1022.2" y="1173" width="0.1" height="15.0" fill="rgb(221,10,8)" rx="2" ry="2" />
<text  x="1025.20" y="1183.5" ></text>
</g>
<g >
<title>mio::poll::SetReadiness::set_readiness (39 samples, 0.07%)</title><rect x="185.0" y="1141" width="0.8" height="15.0" fill="rgb(247,148,39)" rx="2" ry="2" />
<text  x="188.01" y="1151.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (30 samples, 0.05%)</title><rect x="950.2" y="1253" width="0.6" height="15.0" fill="rgb(228,131,33)" rx="2" ry="2" />
<text  x="953.16" y="1263.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (136 samples, 0.24%)</title><rect x="933.3" y="1317" width="2.9" height="15.0" fill="rgb(205,19,20)" rx="2" ry="2" />
<text  x="936.29" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.01%)</title><rect x="1134.6" y="549" width="0.1" height="15.0" fill="rgb(219,81,11)" rx="2" ry="2" />
<text  x="1137.56" y="559.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (11 samples, 0.02%)</title><rect x="1034.0" y="1477" width="0.2" height="15.0" fill="rgb(233,88,39)" rx="2" ry="2" />
<text  x="1036.96" y="1487.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (8 samples, 0.01%)</title><rect x="1157.4" y="965" width="0.2" height="15.0" fill="rgb(241,73,8)" rx="2" ry="2" />
<text  x="1160.39" y="975.5" ></text>
</g>
<g >
<title>futures::task_impl::core::BorrowedUnpark::to_owned (10 samples, 0.02%)</title><rect x="1007.5" y="1429" width="0.3" height="15.0" fill="rgb(233,21,51)" rx="2" ry="2" />
<text  x="1010.54" y="1439.5" ></text>
</g>
<g >
<title>sock_recvmsg (5 samples, 0.01%)</title><rect x="1031.4" y="757" width="0.1" height="15.0" fill="rgb(205,93,2)" rx="2" ry="2" />
<text  x="1034.43" y="767.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (174 samples, 0.31%)</title><rect x="1053.0" y="1445" width="3.7" height="15.0" fill="rgb(224,214,0)" rx="2" ry="2" />
<text  x="1056.01" y="1455.5" ></text>
</g>
<g >
<title>chan::select::Select::recv (8,323 samples, 14.97%)</title><rect x="243.5" y="1349" width="176.6" height="15.0" fill="rgb(214,158,27)" rx="2" ry="2" />
<text  x="246.53" y="1359.5" >chan::select::Select::..</text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.01%)</title><rect x="1030.3" y="1509" width="0.2" height="15.0" fill="rgb(239,216,22)" rx="2" ry="2" />
<text  x="1033.33" y="1519.5" ></text>
</g>
<g >
<title>sys_writev (12 samples, 0.02%)</title><rect x="1131.3" y="469" width="0.2" height="15.0" fill="rgb(221,52,48)" rx="2" ry="2" />
<text  x="1134.29" y="479.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (28 samples, 0.05%)</title><rect x="1035.9" y="1493" width="0.6" height="15.0" fill="rgb(218,142,42)" rx="2" ry="2" />
<text  x="1038.89" y="1503.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::clear (5 samples, 0.01%)</title><rect x="1041.5" y="901" width="0.1" height="15.0" fill="rgb(215,150,40)" rx="2" ry="2" />
<text  x="1044.49" y="911.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (22 samples, 0.04%)</title><rect x="1024.0" y="1317" width="0.5" height="15.0" fill="rgb(232,157,7)" rx="2" ry="2" />
<text  x="1027.01" y="1327.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (21 samples, 0.04%)</title><rect x="189.4" y="1237" width="0.4" height="15.0" fill="rgb(222,131,11)" rx="2" ry="2" />
<text  x="192.38" y="1247.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (21 samples, 0.04%)</title><rect x="997.2" y="1317" width="0.4" height="15.0" fill="rgb(220,85,54)" rx="2" ry="2" />
<text  x="1000.16" y="1327.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (33 samples, 0.06%)</title><rect x="1035.2" y="1285" width="0.7" height="15.0" fill="rgb(226,145,13)" rx="2" ry="2" />
<text  x="1038.19" y="1295.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (5 samples, 0.01%)</title><rect x="180.5" y="1141" width="0.1" height="15.0" fill="rgb(213,201,54)" rx="2" ry="2" />
<text  x="183.45" y="1151.5" ></text>
</g>
<g >
<title>futex_wake (21 samples, 0.04%)</title><rect x="202.0" y="1285" width="0.5" height="15.0" fill="rgb(229,95,20)" rx="2" ry="2" />
<text  x="205.03" y="1295.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (208 samples, 0.37%)</title><rect x="625.5" y="1141" width="4.4" height="15.0" fill="rgb(243,16,54)" rx="2" ry="2" />
<text  x="628.45" y="1151.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (8 samples, 0.01%)</title><rect x="1037.8" y="1189" width="0.2" height="15.0" fill="rgb(246,206,12)" rx="2" ry="2" />
<text  x="1040.82" y="1199.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (33 samples, 0.06%)</title><rect x="1030.5" y="1541" width="0.7" height="15.0" fill="rgb(212,52,30)" rx="2" ry="2" />
<text  x="1033.48" y="1551.5" ></text>
</g>
<g >
<title>ip_finish_output2 (6 samples, 0.01%)</title><rect x="1131.4" y="181" width="0.1" height="15.0" fill="rgb(210,41,25)" rx="2" ry="2" />
<text  x="1134.37" y="191.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (13 samples, 0.02%)</title><rect x="1033.4" y="1221" width="0.3" height="15.0" fill="rgb(243,117,27)" rx="2" ry="2" />
<text  x="1036.41" y="1231.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.01%)</title><rect x="1030.3" y="1445" width="0.2" height="15.0" fill="rgb(236,24,4)" rx="2" ry="2" />
<text  x="1033.33" y="1455.5" ></text>
</g>
<g >
<title>&lt;zookeeper::proto::GetDataResponse as zookeeper::proto::ReadFrom&gt;::read_from (6 samples, 0.01%)</title><rect x="1004.1" y="1477" width="0.1" height="15.0" fill="rgb(208,188,7)" rx="2" ry="2" />
<text  x="1007.10" y="1487.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (5 samples, 0.01%)</title><rect x="1088.0" y="901" width="0.1" height="15.0" fill="rgb(223,213,2)" rx="2" ry="2" />
<text  x="1091.00" y="911.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (13 samples, 0.02%)</title><rect x="1054.0" y="981" width="0.3" height="15.0" fill="rgb(213,193,54)" rx="2" ry="2" />
<text  x="1057.01" y="991.5" ></text>
</g>
<g >
<title>core::alloc::Layout::size (13 samples, 0.02%)</title><rect x="389.7" y="1253" width="0.2" height="15.0" fill="rgb(240,60,9)" rx="2" ry="2" />
<text  x="392.67" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (5 samples, 0.01%)</title><rect x="186.0" y="1589" width="0.1" height="15.0" fill="rgb(228,104,51)" rx="2" ry="2" />
<text  x="189.03" y="1599.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (10 samples, 0.02%)</title><rect x="653.0" y="1125" width="0.2" height="15.0" fill="rgb(234,176,38)" rx="2" ry="2" />
<text  x="655.99" y="1135.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (41 samples, 0.07%)</title><rect x="874.2" y="1285" width="0.8" height="15.0" fill="rgb(207,129,35)" rx="2" ry="2" />
<text  x="877.16" y="1295.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.03%)</title><rect x="1111.6" y="805" width="0.4" height="15.0" fill="rgb(205,214,43)" rx="2" ry="2" />
<text  x="1114.64" y="815.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (7 samples, 0.01%)</title><rect x="1003.8" y="1461" width="0.1" height="15.0" fill="rgb(220,210,5)" rx="2" ry="2" />
<text  x="1006.78" y="1471.5" ></text>
</g>
<g >
<title>sys_write (18 samples, 0.03%)</title><rect x="1028.6" y="773" width="0.4" height="15.0" fill="rgb(232,152,43)" rx="2" ry="2" />
<text  x="1031.59" y="783.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (158 samples, 0.28%)</title><rect x="1041.1" y="1077" width="3.3" height="15.0" fill="rgb(215,59,40)" rx="2" ry="2" />
<text  x="1044.09" y="1087.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (65 samples, 0.12%)</title><rect x="682.9" y="1221" width="1.4" height="15.0" fill="rgb(221,16,29)" rx="2" ry="2" />
<text  x="685.89" y="1231.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (13 samples, 0.02%)</title><rect x="1031.9" y="1013" width="0.3" height="15.0" fill="rgb(208,78,14)" rx="2" ry="2" />
<text  x="1034.88" y="1023.5" ></text>
</g>
<g >
<title>bincode::config::Options::deserialize (7 samples, 0.01%)</title><rect x="1058.1" y="1205" width="0.2" height="15.0" fill="rgb(229,64,48)" rx="2" ry="2" />
<text  x="1061.10" y="1215.5" ></text>
</g>
<g >
<title>bincode::de::Deserializer&lt;R,O&gt;::deserialize_byte (14 samples, 0.03%)</title><rect x="1002.7" y="581" width="0.3" height="15.0" fill="rgb(205,229,49)" rx="2" ry="2" />
<text  x="1005.74" y="591.5" ></text>
</g>
<g >
<title>futures::task_impl::current (5 samples, 0.01%)</title><rect x="1003.4" y="1397" width="0.1" height="15.0" fill="rgb(232,11,8)" rx="2" ry="2" />
<text  x="1006.42" y="1407.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::destroy (71 samples, 0.13%)</title><rect x="906.5" y="1237" width="1.5" height="15.0" fill="rgb(233,181,7)" rx="2" ry="2" />
<text  x="909.50" y="1247.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (20 samples, 0.04%)</title><rect x="1038.0" y="1285" width="0.4" height="15.0" fill="rgb(253,132,6)" rx="2" ry="2" />
<text  x="1040.99" y="1295.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="1033.7" y="997" width="0.1" height="15.0" fill="rgb(222,223,54)" rx="2" ry="2" />
<text  x="1036.68" y="1007.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (33 samples, 0.06%)</title><rect x="1030.5" y="1237" width="0.7" height="15.0" fill="rgb(248,28,39)" rx="2" ry="2" />
<text  x="1033.48" y="1247.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (33 samples, 0.06%)</title><rect x="998.0" y="1253" width="0.7" height="15.0" fill="rgb(235,32,43)" rx="2" ry="2" />
<text  x="1001.01" y="1263.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (5 samples, 0.01%)</title><rect x="1022.5" y="773" width="0.1" height="15.0" fill="rgb(248,116,25)" rx="2" ry="2" />
<text  x="1025.48" y="783.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (10 samples, 0.02%)</title><rect x="1089.0" y="949" width="0.2" height="15.0" fill="rgb(216,199,14)" rx="2" ry="2" />
<text  x="1091.98" y="959.5" ></text>
</g>
<g >
<title>mio::sys::unix::tcp::TcpStream::writev (13 samples, 0.02%)</title><rect x="1131.3" y="549" width="0.2" height="15.0" fill="rgb(239,110,50)" rx="2" ry="2" />
<text  x="1134.27" y="559.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (9 samples, 0.02%)</title><rect x="1026.0" y="949" width="0.2" height="15.0" fill="rgb(231,143,33)" rx="2" ry="2" />
<text  x="1028.98" y="959.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.03%)</title><rect x="188.6" y="1461" width="0.4" height="15.0" fill="rgb(229,111,3)" rx="2" ry="2" />
<text  x="191.64" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="983.8" y="1029" width="0.1" height="15.0" fill="rgb(218,78,35)" rx="2" ry="2" />
<text  x="986.80" y="1039.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (10 samples, 0.02%)</title><rect x="1014.2" y="1349" width="0.2" height="15.0" fill="rgb(208,111,27)" rx="2" ry="2" />
<text  x="1017.16" y="1359.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::notify (27 samples, 0.05%)</title><rect x="10.5" y="1237" width="0.6" height="15.0" fill="rgb(246,28,41)" rx="2" ry="2" />
<text  x="13.49" y="1247.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::first_leaf_edge (171 samples, 0.31%)</title><rect x="423.3" y="1285" width="3.6" height="15.0" fill="rgb(227,137,13)" rx="2" ry="2" />
<text  x="426.28" y="1295.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::worker::Worker&lt;T,Request&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="1025.4" y="773" width="0.2" height="15.0" fill="rgb(247,24,17)" rx="2" ry="2" />
<text  x="1028.43" y="783.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (15 samples, 0.03%)</title><rect x="633.7" y="1269" width="0.3" height="15.0" fill="rgb(222,221,52)" rx="2" ry="2" />
<text  x="636.68" y="1279.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (37 samples, 0.07%)</title><rect x="473.7" y="1205" width="0.8" height="15.0" fill="rgb(234,224,29)" rx="2" ry="2" />
<text  x="476.69" y="1215.5" ></text>
</g>
<g >
<title>crossbeam_utils::atomic::atomic_cell::atomic_swap (10 samples, 0.02%)</title><rect x="1055.4" y="1253" width="0.2" height="15.0" fill="rgb(250,85,36)" rx="2" ry="2" />
<text  x="1058.39" y="1263.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple (144 samples, 0.26%)</title><rect x="1000.0" y="1109" width="3.0" height="15.0" fill="rgb(216,121,15)" rx="2" ry="2" />
<text  x="1002.99" y="1119.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::spawn_thread::_$u7b$$u7b$closure$u7d$$u7d$::ha7200d58e6efae3b (6 samples, 0.01%)</title><rect x="1030.2" y="1573" width="0.1" height="15.0" fill="rgb(214,99,19)" rx="2" ry="2" />
<text  x="1033.20" y="1583.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (44 samples, 0.08%)</title><rect x="1027.4" y="1381" width="1.0" height="15.0" fill="rgb(211,22,39)" rx="2" ry="2" />
<text  x="1030.44" y="1391.5" ></text>
</g>
<g >
<title>noria::controller::ControllerHandle&lt;A&gt;::rpc (13 samples, 0.02%)</title><rect x="989.0" y="1285" width="0.3" height="15.0" fill="rgb(212,86,22)" rx="2" ry="2" />
<text  x="991.99" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (11 samples, 0.02%)</title><rect x="1059.1" y="1301" width="0.2" height="15.0" fill="rgb(228,85,37)" rx="2" ry="2" />
<text  x="1062.06" y="1311.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (17 samples, 0.03%)</title><rect x="1025.4" y="1093" width="0.4" height="15.0" fill="rgb(211,41,5)" rx="2" ry="2" />
<text  x="1028.43" y="1103.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::bounded::Sender&lt;T&gt;::try_send (18 samples, 0.03%)</title><rect x="183.8" y="1461" width="0.4" height="15.0" fill="rgb(228,163,7)" rx="2" ry="2" />
<text  x="186.82" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.03%)</title><rect x="1035.5" y="885" width="0.3" height="15.0" fill="rgb(209,207,40)" rx="2" ry="2" />
<text  x="1038.51" y="895.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (13 samples, 0.02%)</title><rect x="1033.4" y="1173" width="0.3" height="15.0" fill="rgb(217,144,42)" rx="2" ry="2" />
<text  x="1036.41" y="1183.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (13 samples, 0.02%)</title><rect x="1027.7" y="949" width="0.3" height="15.0" fill="rgb(209,86,44)" rx="2" ry="2" />
<text  x="1030.74" y="959.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::poll_complete (21 samples, 0.04%)</title><rect x="1057.1" y="1269" width="0.5" height="15.0" fill="rgb(213,105,37)" rx="2" ry="2" />
<text  x="1060.15" y="1279.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.01%)</title><rect x="1027.6" y="1205" width="0.1" height="15.0" fill="rgb(240,71,11)" rx="2" ry="2" />
<text  x="1030.57" y="1215.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (9 samples, 0.02%)</title><rect x="1051.4" y="1125" width="0.2" height="15.0" fill="rgb(244,132,2)" rx="2" ry="2" />
<text  x="1054.38" y="1135.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (14 samples, 0.03%)</title><rect x="1049.7" y="1141" width="0.3" height="15.0" fill="rgb(243,135,51)" rx="2" ry="2" />
<text  x="1052.72" y="1151.5" ></text>
</g>
<g >
<title>ticker_ticks (210 samples, 0.38%)</title><rect x="149.3" y="1477" width="4.4" height="15.0" fill="rgb(220,123,31)" rx="2" ry="2" />
<text  x="152.28" y="1487.5" ></text>
</g>
<g >
<title>arena_ralloc_move_helper (9 samples, 0.02%)</title><rect x="102.0" y="1541" width="0.2" height="15.0" fill="rgb(222,98,16)" rx="2" ry="2" />
<text  x="104.96" y="1551.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::io::Io as std::io::Write&gt;::write (26 samples, 0.05%)</title><rect x="1108.4" y="565" width="0.6" height="15.0" fill="rgb(239,105,17)" rx="2" ry="2" />
<text  x="1111.41" y="575.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (22 samples, 0.04%)</title><rect x="1043.6" y="885" width="0.5" height="15.0" fill="rgb(224,217,15)" rx="2" ry="2" />
<text  x="1046.63" y="895.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (6 samples, 0.01%)</title><rect x="1033.8" y="1093" width="0.1" height="15.0" fill="rgb(223,199,44)" rx="2" ry="2" />
<text  x="1036.81" y="1103.5" ></text>
</g>
<g >
<title>tokio_timer::timer::Timer&lt;T,N&gt;::process (49 samples, 0.09%)</title><rect x="1126.2" y="1013" width="1.0" height="15.0" fill="rgb(230,162,2)" rx="2" ry="2" />
<text  x="1129.17" y="1023.5" ></text>
</g>
<g >
<title>_start (9 samples, 0.02%)</title><rect x="990.9" y="1605" width="0.2" height="15.0" fill="rgb(227,182,52)" rx="2" ry="2" />
<text  x="993.90" y="1615.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::CurrentTask::clear (5 samples, 0.01%)</title><rect x="1130.0" y="981" width="0.1" height="15.0" fill="rgb(217,209,9)" rx="2" ry="2" />
<text  x="1132.97" y="991.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::reborrow (25 samples, 0.04%)</title><rect x="543.8" y="1221" width="0.6" height="15.0" fill="rgb(249,161,25)" rx="2" ry="2" />
<text  x="546.82" y="1231.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (27 samples, 0.05%)</title><rect x="1188.4" y="869" width="0.6" height="15.0" fill="rgb(248,63,20)" rx="2" ry="2" />
<text  x="1191.41" y="879.5" ></text>
</g>
<g >
<title>futures::task_impl::std::_$LT$impl$u20$futures..task_impl..Spawn$LT$F$GT$$GT$::wait_future::_$u7b$$u7b$closure$u7d$$u7d$::hd0f6d5cc3fe9bd86 (17 samples, 0.03%)</title><rect x="189.0" y="1477" width="0.4" height="15.0" fill="rgb(223,211,10)" rx="2" ry="2" />
<text  x="192.02" y="1487.5" ></text>
</g>
<g >
<title>std::sys_common::condvar::Condvar::wait (21 samples, 0.04%)</title><rect x="982.0" y="1157" width="0.4" height="15.0" fill="rgb(247,90,12)" rx="2" ry="2" />
<text  x="984.97" y="1167.5" ></text>
</g>
<g >
<title>crossbeam_epoch::internal::Global::collect (15 samples, 0.03%)</title><rect x="1019.5" y="1461" width="0.3" height="15.0" fill="rgb(206,30,24)" rx="2" ry="2" />
<text  x="1022.51" y="1471.5" ></text>
</g>
<g >
<title>_rjem_mallocx (4,265 samples, 7.67%)</title><rect x="11.3" y="1589" width="90.5" height="15.0" fill="rgb(232,104,40)" rx="2" ry="2" />
<text  x="14.27" y="1599.5" >_rjem_mall..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::capacity (19 samples, 0.03%)</title><rect x="657.1" y="1237" width="0.4" height="15.0" fill="rgb(247,224,43)" rx="2" ry="2" />
<text  x="660.09" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (22 samples, 0.04%)</title><rect x="1032.8" y="1061" width="0.4" height="15.0" fill="rgb(221,79,15)" rx="2" ry="2" />
<text  x="1035.77" y="1071.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (20 samples, 0.04%)</title><rect x="1059.3" y="1493" width="0.4" height="15.0" fill="rgb(210,62,19)" rx="2" ry="2" />
<text  x="1062.29" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (3,065 samples, 5.51%)</title><rect x="995.3" y="1605" width="65.1" height="15.0" fill="rgb(223,202,35)" rx="2" ry="2" />
<text  x="998.32" y="1615.5" >[unknown]</text>
</g>
<g >
<title>ip_rcv (16 samples, 0.03%)</title><rect x="1050.4" y="437" width="0.4" height="15.0" fill="rgb(218,11,53)" rx="2" ry="2" />
<text  x="1053.44" y="447.5" ></text>
</g>
<g >
<title>epoll_wait (33 samples, 0.06%)</title><rect x="1112.9" y="901" width="0.7" height="15.0" fill="rgb(246,187,33)" rx="2" ry="2" />
<text  x="1115.87" y="911.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="997.4" y="933" width="0.2" height="15.0" fill="rgb(240,201,9)" rx="2" ry="2" />
<text  x="1000.35" y="943.5" ></text>
</g>
<g >
<title>core::mem::swap (6 samples, 0.01%)</title><rect x="1008.1" y="1349" width="0.2" height="15.0" fill="rgb(243,179,36)" rx="2" ry="2" />
<text  x="1011.13" y="1359.5" ></text>
</g>
<g >
<title>futex_wait_cancelable (14 samples, 0.03%)</title><rect x="985.0" y="1205" width="0.3" height="15.0" fill="rgb(233,157,52)" rx="2" ry="2" />
<text  x="988.00" y="1215.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.02%)</title><rect x="1046.6" y="789" width="0.3" height="15.0" fill="rgb(214,138,17)" rx="2" ry="2" />
<text  x="1049.62" y="799.5" ></text>
</g>
<g >
<title>&lt;mio::net::tcp::TcpStream as std::io::Write&gt;::write (58 samples, 0.10%)</title><rect x="1038.5" y="853" width="1.2" height="15.0" fill="rgb(230,24,40)" rx="2" ry="2" />
<text  x="1041.48" y="863.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 0.03%)</title><rect x="997.6" y="1349" width="0.4" height="15.0" fill="rgb(254,91,15)" rx="2" ry="2" />
<text  x="1000.61" y="1359.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (9 samples, 0.02%)</title><rect x="602.0" y="1029" width="0.2" height="15.0" fill="rgb(222,136,40)" rx="2" ry="2" />
<text  x="604.96" y="1039.5" ></text>
</g>
<g >
<title>rand::StdRng::new (61 samples, 0.11%)</title><rect x="189.9" y="1589" width="1.2" height="15.0" fill="rgb(228,138,3)" rx="2" ry="2" />
<text  x="192.85" y="1599.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (28 samples, 0.05%)</title><rect x="1037.8" y="1477" width="0.6" height="15.0" fill="rgb(226,183,16)" rx="2" ry="2" />
<text  x="1040.82" y="1487.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (348 samples, 0.63%)</title><rect x="195.2" y="1397" width="7.3" height="15.0" fill="rgb(254,119,15)" rx="2" ry="2" />
<text  x="198.16" y="1407.5" ></text>
</g>
<g >
<title>finish_task_switch (9 samples, 0.02%)</title><rect x="1113.3" y="757" width="0.2" height="15.0" fill="rgb(251,202,30)" rx="2" ry="2" />
<text  x="1116.29" y="767.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (9 samples, 0.02%)</title><rect x="1025.4" y="1061" width="0.2" height="15.0" fill="rgb(214,184,9)" rx="2" ry="2" />
<text  x="1028.43" y="1071.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessNode::enqueue_with_wakeup (22 samples, 0.04%)</title><rect x="1024.0" y="1157" width="0.5" height="15.0" fill="rgb(208,67,34)" rx="2" ry="2" />
<text  x="1027.01" y="1167.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (27 samples, 0.05%)</title><rect x="1030.5" y="949" width="0.5" height="15.0" fill="rgb(228,157,38)" rx="2" ry="2" />
<text  x="1033.48" y="959.5" ></text>
</g>
<g >
<title>std::panicking::try (22 samples, 0.04%)</title><rect x="1032.8" y="1237" width="0.4" height="15.0" fill="rgb(223,56,51)" rx="2" ry="2" />
<text  x="1035.77" y="1247.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (28 samples, 0.05%)</title><rect x="185.2" y="1013" width="0.6" height="15.0" fill="rgb(251,185,31)" rx="2" ry="2" />
<text  x="188.23" y="1023.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (23 samples, 0.04%)</title><rect x="545.7" y="1205" width="0.5" height="15.0" fill="rgb(228,227,53)" rx="2" ry="2" />
<text  x="548.67" y="1215.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::signal_work (27 samples, 0.05%)</title><rect x="1028.4" y="1077" width="0.6" height="15.0" fill="rgb(213,49,11)" rx="2" ry="2" />
<text  x="1031.40" y="1087.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (24 samples, 0.04%)</title><rect x="1046.6" y="1013" width="0.5" height="15.0" fill="rgb(237,213,19)" rx="2" ry="2" />
<text  x="1049.60" y="1023.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::DropNotifyService&lt;Svc&gt; as tower_service::Service&lt;Request&gt;&gt;::call (21 samples, 0.04%)</title><rect x="1056.3" y="1269" width="0.4" height="15.0" fill="rgb(248,55,14)" rx="2" ry="2" />
<text  x="1059.26" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::he0977de3e88b310a (5 samples, 0.01%)</title><rect x="186.0" y="1525" width="0.1" height="15.0" fill="rgb(253,20,50)" rx="2" ry="2" />
<text  x="189.03" y="1535.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (26 samples, 0.05%)</title><rect x="1029.4" y="1109" width="0.5" height="15.0" fill="rgb(208,197,33)" rx="2" ry="2" />
<text  x="1032.39" y="1119.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (93 samples, 0.17%)</title><rect x="1057.1" y="1493" width="2.0" height="15.0" fill="rgb(227,119,49)" rx="2" ry="2" />
<text  x="1060.09" y="1503.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (47 samples, 0.08%)</title><rect x="1048.0" y="1173" width="1.0" height="15.0" fill="rgb(233,217,45)" rx="2" ry="2" />
<text  x="1050.96" y="1183.5" ></text>
</g>
<g >
<title>tsdn_witness_tsdp_get (87 samples, 0.16%)</title><rect x="70.6" y="1509" width="1.8" height="15.0" fill="rgb(238,138,40)" rx="2" ry="2" />
<text  x="73.60" y="1519.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (5 samples, 0.01%)</title><rect x="1049.6" y="1045" width="0.1" height="15.0" fill="rgb(252,150,21)" rx="2" ry="2" />
<text  x="1052.55" y="1055.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (13 samples, 0.02%)</title><rect x="1044.9" y="1045" width="0.3" height="15.0" fill="rgb(230,189,17)" rx="2" ry="2" />
<text  x="1047.93" y="1055.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (12 samples, 0.02%)</title><rect x="969.4" y="1237" width="0.3" height="15.0" fill="rgb(221,194,27)" rx="2" ry="2" />
<text  x="972.41" y="1247.5" ></text>
</g>
<g >
<title>_$LT$rand_core..block..BlockRng$LT$R$GT$$u20$as$u20$rand_core..RngCore$GT$::next_u64::_$u7b$$u7b$closure$u7d$$u7d$::hc2007dcce00f208c (7 samples, 0.01%)</title><rect x="199.5" y="1125" width="0.1" height="15.0" fill="rgb(215,178,37)" rx="2" ry="2" />
<text  x="202.48" y="1135.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (13 samples, 0.02%)</title><rect x="1126.8" y="965" width="0.3" height="15.0" fill="rgb(248,127,43)" rx="2" ry="2" />
<text  x="1129.83" y="975.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (8 samples, 0.01%)</title><rect x="1025.6" y="1029" width="0.2" height="15.0" fill="rgb(241,194,23)" rx="2" ry="2" />
<text  x="1028.62" y="1039.5" ></text>
</g>
<g >
<title>tsd_thread_deallocatedp_get_unsafe (11 samples, 0.02%)</title><rect x="165.0" y="1541" width="0.2" height="15.0" fill="rgb(222,219,37)" rx="2" ry="2" />
<text  x="167.96" y="1551.5" ></text>
</g>
<g >
<title>std::panicking::try (11 samples, 0.02%)</title><rect x="1034.0" y="1461" width="0.2" height="15.0" fill="rgb(219,153,27)" rx="2" ry="2" />
<text  x="1036.96" y="1471.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (12 samples, 0.02%)</title><rect x="593.7" y="1013" width="0.2" height="15.0" fill="rgb(206,170,20)" rx="2" ry="2" />
<text  x="596.69" y="1023.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (8 samples, 0.01%)</title><rect x="1027.6" y="1045" width="0.1" height="15.0" fill="rgb(227,19,35)" rx="2" ry="2" />
<text  x="1030.57" y="1055.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="1034.6" y="1189" width="0.1" height="15.0" fill="rgb(230,41,54)" rx="2" ry="2" />
<text  x="1037.57" y="1199.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::IntoIter&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="978.8" y="1285" width="0.2" height="15.0" fill="rgb(244,202,52)" rx="2" ry="2" />
<text  x="981.83" y="1295.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (17 samples, 0.03%)</title><rect x="189.0" y="1349" width="0.4" height="15.0" fill="rgb(209,154,18)" rx="2" ry="2" />
<text  x="192.02" y="1359.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (7 samples, 0.01%)</title><rect x="1058.1" y="1125" width="0.2" height="15.0" fill="rgb(210,100,30)" rx="2" ry="2" />
<text  x="1061.10" y="1135.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (28 samples, 0.05%)</title><rect x="1035.9" y="1541" width="0.6" height="15.0" fill="rgb(246,196,45)" rx="2" ry="2" />
<text  x="1038.89" y="1551.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.01%)</title><rect x="1044.5" y="1157" width="0.1" height="15.0" fill="rgb(208,60,50)" rx="2" ry="2" />
<text  x="1047.48" y="1167.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::DataType&gt;::serialize (60 samples, 0.11%)</title><rect x="998.7" y="1189" width="1.3" height="15.0" fill="rgb(214,91,32)" rx="2" ry="2" />
<text  x="1001.71" y="1199.5" ></text>
</g>
<g >
<title>zookeeper::io::ZkIo::run (102 samples, 0.18%)</title><rect x="993.2" y="1365" width="2.1" height="15.0" fill="rgb(250,168,37)" rx="2" ry="2" />
<text  x="996.15" y="1375.5" ></text>
</g>
<g >
<title>mio::poll::RegistrationInner::set_readiness (37 samples, 0.07%)</title><rect x="1048.0" y="949" width="0.8" height="15.0" fill="rgb(216,110,46)" rx="2" ry="2" />
<text  x="1050.98" y="959.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (5 samples, 0.01%)</title><rect x="1022.2" y="1029" width="0.1" height="15.0" fill="rgb(221,34,40)" rx="2" ry="2" />
<text  x="1025.22" y="1039.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (12 samples, 0.02%)</title><rect x="1029.9" y="1157" width="0.3" height="15.0" fill="rgb(246,144,46)" rx="2" ry="2" />
<text  x="1032.95" y="1167.5" ></text>
</g>
<g >
<title>std::sync::mpsc::sync_channel (7 samples, 0.01%)</title><rect x="1004.5" y="1477" width="0.2" height="15.0" fill="rgb(213,60,46)" rx="2" ry="2" />
<text  x="1007.51" y="1487.5" ></text>
</g>
<g >
<title>tsd_get (57 samples, 0.10%)</title><rect x="175.6" y="1541" width="1.2" height="15.0" fill="rgb(247,177,46)" rx="2" ry="2" />
<text  x="178.63" y="1551.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::add (5 samples, 0.01%)</title><rect x="1013.4" y="1445" width="0.1" height="15.0" fill="rgb(226,107,25)" rx="2" ry="2" />
<text  x="1016.35" y="1455.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc (354 samples, 0.64%)</title><rect x="800.5" y="1125" width="7.5" height="15.0" fill="rgb(228,198,0)" rx="2" ry="2" />
<text  x="803.46" y="1135.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (174 samples, 0.31%)</title><rect x="1053.0" y="1509" width="3.7" height="15.0" fill="rgb(233,85,6)" rx="2" ry="2" />
<text  x="1056.01" y="1519.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (21 samples, 0.04%)</title><rect x="1039.0" y="469" width="0.5" height="15.0" fill="rgb(253,52,30)" rx="2" ry="2" />
<text  x="1042.01" y="479.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::chan::Tx&lt;T,S&gt;::try_send (7 samples, 0.01%)</title><rect x="985.9" y="1237" width="0.1" height="15.0" fill="rgb(229,96,48)" rx="2" ry="2" />
<text  x="988.90" y="1247.5" ></text>
</g>
<g >
<title>sz_s2u (362 samples, 0.65%)</title><rect x="111.4" y="1557" width="7.7" height="15.0" fill="rgb(245,116,54)" rx="2" ry="2" />
<text  x="114.38" y="1567.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::unpark (41 samples, 0.07%)</title><rect x="1048.0" y="1013" width="0.9" height="15.0" fill="rgb(211,148,3)" rx="2" ry="2" />
<text  x="1050.98" y="1023.5" ></text>
</g>
<g >
<title>tokio_tower::mediator::Sender&lt;T&gt;::try_send (5 samples, 0.01%)</title><rect x="1051.5" y="917" width="0.1" height="15.0" fill="rgb(226,162,30)" rx="2" ry="2" />
<text  x="1054.46" y="927.5" ></text>
</g>
<g >
<title>jemallocator::layout_to_flags (10 samples, 0.02%)</title><rect x="389.9" y="1253" width="0.3" height="15.0" fill="rgb(221,138,35)" rx="2" ry="2" />
<text  x="392.94" y="1263.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (92 samples, 0.17%)</title><rect x="1057.1" y="1301" width="1.9" height="15.0" fill="rgb(228,228,40)" rx="2" ry="2" />
<text  x="1060.09" y="1311.5" ></text>
</g>
<g >
<title>tokio_reactor::Reactor::turn (145 samples, 0.26%)</title><rect x="1110.6" y="997" width="3.1" height="15.0" fill="rgb(234,160,13)" rx="2" ry="2" />
<text  x="1113.64" y="1007.5" ></text>
</g>
<g >
<title>tracing::span::Span::in_scope (6 samples, 0.01%)</title><rect x="1044.3" y="949" width="0.1" height="15.0" fill="rgb(239,90,32)" rx="2" ry="2" />
<text  x="1047.31" y="959.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.02%)</title><rect x="1083.0" y="981" width="0.2" height="15.0" fill="rgb(216,69,15)" rx="2" ry="2" />
<text  x="1086.01" y="991.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.01%)</title><rect x="1044.5" y="1061" width="0.1" height="15.0" fill="rgb(239,203,32)" rx="2" ry="2" />
<text  x="1047.48" y="1071.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (320 samples, 0.58%)</title><rect x="259.5" y="1317" width="6.8" height="15.0" fill="rgb(222,211,21)" rx="2" ry="2" />
<text  x="262.49" y="1327.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (27 samples, 0.05%)</title><rect x="1030.5" y="901" width="0.5" height="15.0" fill="rgb(238,125,26)" rx="2" ry="2" />
<text  x="1033.48" y="911.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_fn_notify::_$u7b$$u7b$closure$u7d$$u7d$::ha88a9967d8789224 (6 samples, 0.01%)</title><rect x="183.0" y="1333" width="0.1" height="15.0" fill="rgb(209,43,38)" rx="2" ry="2" />
<text  x="185.95" y="1343.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (28 samples, 0.05%)</title><rect x="1037.8" y="1557" width="0.6" height="15.0" fill="rgb(235,54,20)" rx="2" ry="2" />
<text  x="1040.82" y="1567.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.02%)</title><rect x="1053.4" y="1077" width="0.3" height="15.0" fill="rgb(249,69,44)" rx="2" ry="2" />
<text  x="1056.44" y="1087.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (7 samples, 0.01%)</title><rect x="1056.9" y="1381" width="0.2" height="15.0" fill="rgb(222,67,28)" rx="2" ry="2" />
<text  x="1059.94" y="1391.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (5 samples, 0.01%)</title><rect x="1023.8" y="1237" width="0.1" height="15.0" fill="rgb(213,185,1)" rx="2" ry="2" />
<text  x="1026.81" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (158 samples, 0.28%)</title><rect x="1041.1" y="1221" width="3.3" height="15.0" fill="rgb(215,23,32)" rx="2" ry="2" />
<text  x="1044.09" y="1231.5" ></text>
</g>
<g >
<title>chrono::naive::datetime::serde::&lt;impl serde::ser::Serialize for chrono::naive::datetime::NaiveDateTime&gt;::serialize (9 samples, 0.02%)</title><rect x="1027.7" y="933" width="0.2" height="15.0" fill="rgb(231,21,54)" rx="2" ry="2" />
<text  x="1030.74" y="943.5" ></text>
</g>
<g >
<title>tokio_io::async_write::AsyncWrite::poll_write (21 samples, 0.04%)</title><rect x="1057.1" y="1221" width="0.5" height="15.0" fill="rgb(235,88,41)" rx="2" ry="2" />
<text  x="1060.15" y="1231.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h7829251bc9cd1175 (11 samples, 0.02%)</title><rect x="992.9" y="1413" width="0.3" height="15.0" fill="rgb(254,193,20)" rx="2" ry="2" />
<text  x="995.92" y="1423.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (131 samples, 0.24%)</title><rect x="395.4" y="1301" width="2.8" height="15.0" fill="rgb(209,174,19)" rx="2" ry="2" />
<text  x="398.40" y="1311.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (12 samples, 0.02%)</title><rect x="1033.7" y="1397" width="0.2" height="15.0" fill="rgb(244,77,19)" rx="2" ry="2" />
<text  x="1036.68" y="1407.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (6 samples, 0.01%)</title><rect x="1030.2" y="1349" width="0.1" height="15.0" fill="rgb(229,163,5)" rx="2" ry="2" />
<text  x="1033.20" y="1359.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::Reactor as tokio_executor::park::Park&gt;::park_timeout (145 samples, 0.26%)</title><rect x="1110.6" y="1013" width="3.1" height="15.0" fill="rgb(217,141,17)" rx="2" ry="2" />
<text  x="1113.64" y="1023.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (6 samples, 0.01%)</title><rect x="1024.8" y="1429" width="0.1" height="15.0" fill="rgb(225,114,42)" rx="2" ry="2" />
<text  x="1027.79" y="1439.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::add (28 samples, 0.05%)</title><rect x="658.8" y="1205" width="0.6" height="15.0" fill="rgb(243,89,22)" rx="2" ry="2" />
<text  x="661.81" y="1215.5" ></text>
</g>
<g >
<title>__pthread_cond_signal (5 samples, 0.01%)</title><rect x="1040.5" y="789" width="0.1" height="15.0" fill="rgb(207,101,19)" rx="2" ry="2" />
<text  x="1043.47" y="799.5" ></text>
</g>
<g >
<title>zookeeper::zookeeper::ZooKeeper::connect::_$u7b$$u7b$closure$u7d$$u7d$::h0ba0abee6e09b6d9 (5 samples, 0.01%)</title><rect x="992.8" y="1461" width="0.1" height="15.0" fill="rgb(231,209,20)" rx="2" ry="2" />
<text  x="995.81" y="1471.5" ></text>
</g>
<g >
<title>_$LT$alloc..collections..btree..map..Keys$LT$K$C$V$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::_$u7b$$u7b$closure$u7d$$u7d$::h1f10e2dcb0e28f2b (7 samples, 0.01%)</title><rect x="674.4" y="1221" width="0.2" height="15.0" fill="rgb(239,140,25)" rx="2" ry="2" />
<text  x="677.45" y="1231.5" ></text>
</g>
<g >
<title>std::sys_common::poison::map_result (91 samples, 0.16%)</title><rect x="456.9" y="1221" width="1.9" height="15.0" fill="rgb(235,72,10)" rx="2" ry="2" />
<text  x="459.89" y="1231.5" ></text>
</g>
<g >
<title>sz_index2size_lookup (148 samples, 0.27%)</title><rect x="113.4" y="1525" width="3.2" height="15.0" fill="rgb(245,144,12)" rx="2" ry="2" />
<text  x="116.44" y="1535.5" ></text>
</g>
<g >
<title>std::sync::mpsc::stream::Packet&lt;T&gt;::decrement (9 samples, 0.02%)</title><rect x="985.3" y="1317" width="0.2" height="15.0" fill="rgb(229,153,34)" rx="2" ry="2" />
<text  x="988.34" y="1327.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::poll_evented::PollEvented&lt;E&gt; as std::io::Read&gt;::read (5 samples, 0.01%)</title><rect x="1052.3" y="1125" width="0.1" height="15.0" fill="rgb(209,140,20)" rx="2" ry="2" />
<text  x="1055.33" y="1135.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (18 samples, 0.03%)</title><rect x="1048.4" y="805" width="0.3" height="15.0" fill="rgb(224,62,22)" rx="2" ry="2" />
<text  x="1051.36" y="815.5" ></text>
</g>
<g >
<title>zookeeper::io::ZkIo::reregister (5 samples, 0.01%)</title><rect x="994.1" y="1317" width="0.1" height="15.0" fill="rgb(221,33,42)" rx="2" ry="2" />
<text  x="997.11" y="1327.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.01%)</title><rect x="1026.2" y="1221" width="0.1" height="15.0" fill="rgb(251,20,49)" rx="2" ry="2" />
<text  x="1029.19" y="1231.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (33 samples, 0.06%)</title><rect x="1131.1" y="661" width="0.7" height="15.0" fill="rgb(245,0,36)" rx="2" ry="2" />
<text  x="1134.05" y="671.5" ></text>
</g>
<g >
<title>chrono::datetime::DateTime&lt;Tz&gt;::naive_local (5 samples, 0.01%)</title><rect x="196.2" y="1349" width="0.1" height="15.0" fill="rgb(250,14,17)" rx="2" ry="2" />
<text  x="199.17" y="1359.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNot&lt;T&gt;&gt;::serialize (19 samples, 0.03%)</title><rect x="1045.8" y="1189" width="0.4" height="15.0" fill="rgb(240,123,45)" rx="2" ry="2" />
<text  x="1048.80" y="1199.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (207 samples, 0.37%)</title><rect x="1176.5" y="885" width="4.4" height="15.0" fill="rgb(230,204,38)" rx="2" ry="2" />
<text  x="1179.48" y="895.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (7 samples, 0.01%)</title><rect x="988.0" y="1157" width="0.2" height="15.0" fill="rgb(220,107,27)" rx="2" ry="2" />
<text  x="991.04" y="1167.5" ></text>
</g>
<g >
<title>std::panicking::try (26 samples, 0.05%)</title><rect x="1029.4" y="1093" width="0.5" height="15.0" fill="rgb(233,201,15)" rx="2" ry="2" />
<text  x="1032.39" y="1103.5" ></text>
</g>
<g >
<title>std::panicking::try (8 samples, 0.01%)</title><rect x="1015.2" y="1109" width="0.1" height="15.0" fill="rgb(244,71,16)" rx="2" ry="2" />
<text  x="1018.18" y="1119.5" ></text>
</g>
<g >
<title>__rg_dealloc (59 samples, 0.11%)</title><rect x="729.4" y="1221" width="1.3" height="15.0" fill="rgb(244,148,54)" rx="2" ry="2" />
<text  x="732.40" y="1231.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (17 samples, 0.03%)</title><rect x="1113.1" y="805" width="0.4" height="15.0" fill="rgb(254,170,35)" rx="2" ry="2" />
<text  x="1116.12" y="815.5" ></text>
</g>
<g >
<title>crossbeam_epoch::default::pin::_$u7b$$u7b$closure$u7d$$u7d$::h154c0e75eaa3b342 (15 samples, 0.03%)</title><rect x="1019.5" y="1509" width="0.3" height="15.0" fill="rgb(243,208,49)" rx="2" ry="2" />
<text  x="1022.51" y="1519.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::signal_work (22 samples, 0.04%)</title><rect x="1024.0" y="1269" width="0.5" height="15.0" fill="rgb(228,219,50)" rx="2" ry="2" />
<text  x="1027.01" y="1279.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (105 samples, 0.19%)</title><rect x="483.4" y="1189" width="2.2" height="15.0" fill="rgb(239,119,40)" rx="2" ry="2" />
<text  x="486.39" y="1199.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (10 samples, 0.02%)</title><rect x="1135.4" y="981" width="0.3" height="15.0" fill="rgb(239,229,15)" rx="2" ry="2" />
<text  x="1138.45" y="991.5" ></text>
</g>
<g >
<title>mio::event_imp::Ready::is_readable (12 samples, 0.02%)</title><rect x="1093.1" y="869" width="0.2" height="15.0" fill="rgb(213,95,34)" rx="2" ry="2" />
<text  x="1096.07" y="879.5" ></text>
</g>
<g >
<title>core::slice::IterMut&lt;T&gt;::post_inc_start (41 samples, 0.07%)</title><rect x="510.1" y="1285" width="0.9" height="15.0" fill="rgb(237,102,4)" rx="2" ry="2" />
<text  x="513.11" y="1295.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (32 samples, 0.06%)</title><rect x="1031.8" y="1269" width="0.7" height="15.0" fill="rgb(231,197,49)" rx="2" ry="2" />
<text  x="1034.79" y="1279.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::is_null (9 samples, 0.02%)</title><rect x="439.0" y="1269" width="0.2" height="15.0" fill="rgb(249,106,8)" rx="2" ry="2" />
<text  x="442.00" y="1279.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts (7 samples, 0.01%)</title><rect x="1098.8" y="869" width="0.2" height="15.0" fill="rgb(219,3,22)" rx="2" ry="2" />
<text  x="1101.84" y="879.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (35 samples, 0.06%)</title><rect x="1051.9" y="1269" width="0.7" height="15.0" fill="rgb(222,68,46)" rx="2" ry="2" />
<text  x="1054.87" y="1279.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (10 samples, 0.02%)</title><rect x="989.6" y="1205" width="0.2" height="15.0" fill="rgb(222,118,32)" rx="2" ry="2" />
<text  x="992.61" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (27 samples, 0.05%)</title><rect x="1028.4" y="1237" width="0.6" height="15.0" fill="rgb(246,73,25)" rx="2" ry="2" />
<text  x="1031.40" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (64 samples, 0.12%)</title><rect x="1050.0" y="1333" width="1.4" height="15.0" fill="rgb(238,164,4)" rx="2" ry="2" />
<text  x="1053.02" y="1343.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts (46 samples, 0.08%)</title><rect x="547.9" y="1205" width="0.9" height="15.0" fill="rgb(207,114,20)" rx="2" ry="2" />
<text  x="550.85" y="1215.5" ></text>
</g>
<g >
<title>&lt;mio::net::tcp::TcpStream as std::io::Read&gt;::read (17 samples, 0.03%)</title><rect x="1031.3" y="933" width="0.4" height="15.0" fill="rgb(254,108,0)" rx="2" ry="2" />
<text  x="1034.30" y="943.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::TaskUnpark as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="1058.4" y="1205" width="0.2" height="15.0" fill="rgb(247,144,15)" rx="2" ry="2" />
<text  x="1061.44" y="1215.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.01%)</title><rect x="199.2" y="1141" width="0.2" height="15.0" fill="rgb(233,17,48)" rx="2" ry="2" />
<text  x="202.21" y="1151.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::sleep (2,492 samples, 4.48%)</title><rect x="1068.5" y="1077" width="52.9" height="15.0" fill="rgb(216,223,21)" rx="2" ry="2" />
<text  x="1071.52" y="1087.5" >tokio..</text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (15 samples, 0.03%)</title><rect x="1034.9" y="1397" width="0.3" height="15.0" fill="rgb(205,141,19)" rx="2" ry="2" />
<text  x="1037.87" y="1407.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (6 samples, 0.01%)</title><rect x="1033.7" y="1253" width="0.1" height="15.0" fill="rgb(208,172,15)" rx="2" ry="2" />
<text  x="1036.68" y="1263.5" ></text>
</g>
<g >
<title>std::sync::mpsc::sync::Packet&lt;T&gt;::recv (6 samples, 0.01%)</title><rect x="1004.4" y="1461" width="0.1" height="15.0" fill="rgb(230,5,30)" rx="2" ry="2" />
<text  x="1007.38" y="1471.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (6 samples, 0.01%)</title><rect x="1026.7" y="821" width="0.1" height="15.0" fill="rgb(221,129,52)" rx="2" ry="2" />
<text  x="1029.72" y="831.5" ></text>
</g>
<g >
<title>bincode::de::Deserializer&lt;R,O&gt;::deserialize_literal_u32 (5 samples, 0.01%)</title><rect x="1000.2" y="709" width="0.1" height="15.0" fill="rgb(209,135,27)" rx="2" ry="2" />
<text  x="1003.20" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (9 samples, 0.02%)</title><rect x="189.9" y="1445" width="0.2" height="15.0" fill="rgb(241,80,51)" rx="2" ry="2" />
<text  x="192.87" y="1455.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (6 samples, 0.01%)</title><rect x="1033.8" y="1061" width="0.1" height="15.0" fill="rgb(254,124,19)" rx="2" ry="2" />
<text  x="1036.81" y="1071.5" ></text>
</g>
<g >
<title>noria::table::_::&lt;impl serde::ser::Serialize for noria::table::Input&gt;::serialize (19 samples, 0.03%)</title><rect x="1045.8" y="1125" width="0.4" height="15.0" fill="rgb(218,199,26)" rx="2" ry="2" />
<text  x="1048.80" y="1135.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::deallocate_and_ascend (433 samples, 0.78%)</title><rect x="728.5" y="1269" width="9.2" height="15.0" fill="rgb(239,103,0)" rx="2" ry="2" />
<text  x="731.47" y="1279.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (60 samples, 0.11%)</title><rect x="998.7" y="1269" width="1.3" height="15.0" fill="rgb(221,174,36)" rx="2" ry="2" />
<text  x="1001.71" y="1279.5" ></text>
</g>
<g >
<title>pipe_write (11 samples, 0.02%)</title><rect x="1028.7" y="709" width="0.2" height="15.0" fill="rgb(221,190,10)" rx="2" ry="2" />
<text  x="1031.67" y="719.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::worker::Worker&lt;T,Request&gt; as futures::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="1014.9" y="1397" width="0.3" height="15.0" fill="rgb(211,9,53)" rx="2" ry="2" />
<text  x="1017.94" y="1407.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (5 samples, 0.01%)</title><rect x="182.4" y="1317" width="0.1" height="15.0" fill="rgb(248,58,42)" rx="2" ry="2" />
<text  x="185.42" y="1327.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (11 samples, 0.02%)</title><rect x="1036.9" y="1317" width="0.2" height="15.0" fill="rgb(239,213,52)" rx="2" ry="2" />
<text  x="1039.91" y="1327.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (13 samples, 0.02%)</title><rect x="979.5" y="1317" width="0.3" height="15.0" fill="rgb(242,25,33)" rx="2" ry="2" />
<text  x="982.51" y="1327.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::bounded::Sender&lt;T&gt;::try_send (26 samples, 0.05%)</title><rect x="187.5" y="1333" width="0.6" height="15.0" fill="rgb(238,15,39)" rx="2" ry="2" />
<text  x="190.54" y="1343.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (5 samples, 0.01%)</title><rect x="1180.4" y="789" width="0.1" height="15.0" fill="rgb(241,224,48)" rx="2" ry="2" />
<text  x="1183.41" y="799.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::worker::Worker&lt;T,Request&gt; as futures::future::Future&gt;::poll (28 samples, 0.05%)</title><rect x="1028.4" y="1381" width="0.6" height="15.0" fill="rgb(233,114,53)" rx="2" ry="2" />
<text  x="1031.38" y="1391.5" ></text>
</g>
<g >
<title>core::iter::adapters::Enumerate&lt;I&gt;::new (14 samples, 0.03%)</title><rect x="549.2" y="1221" width="0.3" height="15.0" fill="rgb(220,146,28)" rx="2" ry="2" />
<text  x="552.17" y="1231.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::hedee26c57df783a5 (102 samples, 0.18%)</title><rect x="993.2" y="1509" width="2.1" height="15.0" fill="rgb(247,22,25)" rx="2" ry="2" />
<text  x="996.15" y="1519.5" ></text>
</g>
<g >
<title>&lt;noria::data::DataType as core::convert::From&lt;alloc::string::String&gt;&gt;::from (17 samples, 0.03%)</title><rect x="977.4" y="1333" width="0.3" height="15.0" fill="rgb(241,98,28)" rx="2" ry="2" />
<text  x="980.39" y="1343.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.01%)</title><rect x="182.4" y="1333" width="0.1" height="15.0" fill="rgb(213,83,25)" rx="2" ry="2" />
<text  x="185.42" y="1343.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (15 samples, 0.03%)</title><rect x="1034.9" y="1317" width="0.3" height="15.0" fill="rgb(220,82,43)" rx="2" ry="2" />
<text  x="1037.87" y="1327.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (139 samples, 0.25%)</title><rect x="483.0" y="1205" width="3.0" height="15.0" fill="rgb(232,16,37)" rx="2" ry="2" />
<text  x="486.03" y="1215.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (16 samples, 0.03%)</title><rect x="1049.4" y="1477" width="0.3" height="15.0" fill="rgb(236,180,50)" rx="2" ry="2" />
<text  x="1052.38" y="1487.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (48 samples, 0.09%)</title><rect x="819.3" y="1109" width="1.0" height="15.0" fill="rgb(252,98,31)" rx="2" ry="2" />
<text  x="822.29" y="1119.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (26 samples, 0.05%)</title><rect x="1029.4" y="1157" width="0.5" height="15.0" fill="rgb(215,111,38)" rx="2" ry="2" />
<text  x="1032.39" y="1167.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (8 samples, 0.01%)</title><rect x="1036.5" y="1301" width="0.2" height="15.0" fill="rgb(236,10,48)" rx="2" ry="2" />
<text  x="1039.48" y="1311.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (19 samples, 0.03%)</title><rect x="1045.8" y="1077" width="0.4" height="15.0" fill="rgb(247,87,8)" rx="2" ry="2" />
<text  x="1048.80" y="1087.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::drop (5 samples, 0.01%)</title><rect x="182.6" y="1349" width="0.1" height="15.0" fill="rgb(212,114,41)" rx="2" ry="2" />
<text  x="185.55" y="1359.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (5 samples, 0.01%)</title><rect x="996.8" y="1349" width="0.1" height="15.0" fill="rgb(220,2,14)" rx="2" ry="2" />
<text  x="999.82" y="1359.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (6 samples, 0.01%)</title><rect x="1022.2" y="1125" width="0.1" height="15.0" fill="rgb(208,40,7)" rx="2" ry="2" />
<text  x="1025.20" y="1135.5" ></text>
</g>
<g >
<title>sys_write (19 samples, 0.03%)</title><rect x="1024.1" y="965" width="0.4" height="15.0" fill="rgb(242,134,34)" rx="2" ry="2" />
<text  x="1027.07" y="975.5" ></text>
</g>
<g >
<title>futures::future::Future::wait (9 samples, 0.02%)</title><rect x="10.0" y="1349" width="0.2" height="15.0" fill="rgb(225,74,48)" rx="2" ry="2" />
<text  x="13.02" y="1359.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.02%)</title><rect x="1026.0" y="1365" width="0.2" height="15.0" fill="rgb(237,83,41)" rx="2" ry="2" />
<text  x="1028.98" y="1375.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (19 samples, 0.03%)</title><rect x="997.6" y="1317" width="0.4" height="15.0" fill="rgb(231,155,38)" rx="2" ry="2" />
<text  x="1000.61" y="1327.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.01%)</title><rect x="1030.2" y="1525" width="0.1" height="15.0" fill="rgb(233,191,0)" rx="2" ry="2" />
<text  x="1033.20" y="1535.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (11 samples, 0.02%)</title><rect x="992.9" y="1445" width="0.3" height="15.0" fill="rgb(239,65,3)" rx="2" ry="2" />
<text  x="995.92" y="1455.5" ></text>
</g>
<g >
<title>tokio_sync::task::atomic_task::AtomicTask::do_register (8 samples, 0.01%)</title><rect x="1046.3" y="1093" width="0.2" height="15.0" fill="rgb(237,202,3)" rx="2" ry="2" />
<text  x="1049.28" y="1103.5" ></text>
</g>
<g >
<title>&lt;&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple::Access&lt;R,O&gt; as serde::de::SeqAccess&gt;::next_element_seed (7 samples, 0.01%)</title><rect x="1022.5" y="965" width="0.1" height="15.0" fill="rgb(210,16,28)" rx="2" ry="2" />
<text  x="1025.48" y="975.5" ></text>
</g>
<g >
<title>core::ptr::read (6 samples, 0.01%)</title><rect x="1120.4" y="933" width="0.1" height="15.0" fill="rgb(210,18,20)" rx="2" ry="2" />
<text  x="1123.38" y="943.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (27 samples, 0.05%)</title><rect x="1030.5" y="869" width="0.5" height="15.0" fill="rgb(236,69,11)" rx="2" ry="2" />
<text  x="1033.48" y="879.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (8 samples, 0.01%)</title><rect x="1037.8" y="1397" width="0.2" height="15.0" fill="rgb(231,161,15)" rx="2" ry="2" />
<text  x="1040.82" y="1407.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="193.9" y="1157" width="0.2" height="15.0" fill="rgb(206,33,27)" rx="2" ry="2" />
<text  x="196.90" y="1167.5" ></text>
</g>
<g >
<title>&lt;futures::future::select2::Select2&lt;A,B&gt; as futures::future::Future&gt;::poll (18 samples, 0.03%)</title><rect x="995.7" y="1573" width="0.4" height="15.0" fill="rgb(233,28,9)" rx="2" ry="2" />
<text  x="998.68" y="1583.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (17 samples, 0.03%)</title><rect x="1023.0" y="1237" width="0.3" height="15.0" fill="rgb(242,67,21)" rx="2" ry="2" />
<text  x="1025.97" y="1247.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.01%)</title><rect x="1154.1" y="789" width="0.2" height="15.0" fill="rgb(206,29,18)" rx="2" ry="2" />
<text  x="1157.10" y="799.5" ></text>
</g>
<g >
<title>futures::task_impl::current (15 samples, 0.03%)</title><rect x="1012.7" y="1413" width="0.3" height="15.0" fill="rgb(251,45,21)" rx="2" ry="2" />
<text  x="1015.70" y="1423.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll2 (32 samples, 0.06%)</title><rect x="993.2" y="1317" width="0.7" height="15.0" fill="rgb(228,199,38)" rx="2" ry="2" />
<text  x="996.24" y="1327.5" ></text>
</g>
<g >
<title>mio::sys::unix::awakener::pipe::Awakener::wakeup (85 samples, 0.15%)</title><rect x="1144.5" y="869" width="1.8" height="15.0" fill="rgb(242,192,50)" rx="2" ry="2" />
<text  x="1147.49" y="879.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (12 samples, 0.02%)</title><rect x="193.4" y="1189" width="0.2" height="15.0" fill="rgb(209,151,5)" rx="2" ry="2" />
<text  x="196.35" y="1199.5" ></text>
</g>
<g >
<title>&lt;noria::Tagger as tokio_tower::multiplex::client::TagStore&lt;noria::Tagged&lt;Request&gt;,noria::Tagged&lt;Response&gt;&gt;&gt;::assign_tag (5 samples, 0.01%)</title><rect x="1043.0" y="933" width="0.1" height="15.0" fill="rgb(253,111,25)" rx="2" ry="2" />
<text  x="1045.97" y="943.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::new_kv (30 samples, 0.05%)</title><rect x="525.8" y="1253" width="0.6" height="15.0" fill="rgb(223,151,16)" rx="2" ry="2" />
<text  x="528.77" y="1263.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (119 samples, 0.21%)</title><rect x="518.9" y="1253" width="2.6" height="15.0" fill="rgb(253,23,23)" rx="2" ry="2" />
<text  x="521.93" y="1263.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (29 samples, 0.05%)</title><rect x="1116.7" y="949" width="0.6" height="15.0" fill="rgb(214,77,27)" rx="2" ry="2" />
<text  x="1119.67" y="959.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (12 samples, 0.02%)</title><rect x="1029.9" y="821" width="0.3" height="15.0" fill="rgb(254,135,49)" rx="2" ry="2" />
<text  x="1032.95" y="831.5" ></text>
</g>
<g >
<title>&lt;chrono::naive::time::NaiveTime as core::fmt::Debug&gt;::fmt (11 samples, 0.02%)</title><rect x="998.5" y="981" width="0.2" height="15.0" fill="rgb(242,149,35)" rx="2" ry="2" />
<text  x="1001.48" y="991.5" ></text>
</g>
<g >
<title>mio::poll::SetReadiness::set_readiness (22 samples, 0.04%)</title><rect x="1014.5" y="1061" width="0.4" height="15.0" fill="rgb(224,61,17)" rx="2" ry="2" />
<text  x="1017.46" y="1071.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current (5 samples, 0.01%)</title><rect x="989.3" y="1237" width="0.1" height="15.0" fill="rgb(251,32,45)" rx="2" ry="2" />
<text  x="992.29" y="1247.5" ></text>
</g>
<g >
<title>chan::Sender&lt;T&gt;::send (5 samples, 0.01%)</title><rect x="977.1" y="1365" width="0.1" height="15.0" fill="rgb(214,65,27)" rx="2" ry="2" />
<text  x="980.13" y="1375.5" ></text>
</g>
<g >
<title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::flush (25 samples, 0.04%)</title><rect x="1131.1" y="629" width="0.5" height="15.0" fill="rgb(214,120,7)" rx="2" ry="2" />
<text  x="1134.05" y="639.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="1136.7" y="997" width="0.1" height="15.0" fill="rgb(225,36,21)" rx="2" ry="2" />
<text  x="1139.72" y="1007.5" ></text>
</g>
<g >
<title>core::mem::drop (7 samples, 0.01%)</title><rect x="817.8" y="1093" width="0.1" height="15.0" fill="rgb(226,164,39)" rx="2" ry="2" />
<text  x="820.80" y="1103.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (11 samples, 0.02%)</title><rect x="253.0" y="1269" width="0.3" height="15.0" fill="rgb(244,81,45)" rx="2" ry="2" />
<text  x="256.04" y="1279.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (142 samples, 0.26%)</title><rect x="1044.8" y="1349" width="3.0" height="15.0" fill="rgb(211,229,33)" rx="2" ry="2" />
<text  x="1047.80" y="1359.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (140 samples, 0.25%)</title><rect x="966.7" y="1269" width="3.0" height="15.0" fill="rgb(218,72,10)" rx="2" ry="2" />
<text  x="969.69" y="1279.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (70 samples, 0.13%)</title><rect x="1160.3" y="949" width="1.5" height="15.0" fill="rgb(206,64,40)" rx="2" ry="2" />
<text  x="1163.29" y="959.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_enum (144 samples, 0.26%)</title><rect x="1000.0" y="789" width="3.0" height="15.0" fill="rgb(232,100,10)" rx="2" ry="2" />
<text  x="1002.99" y="799.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple (27 samples, 0.05%)</title><rect x="1002.5" y="693" width="0.5" height="15.0" fill="rgb(223,200,32)" rx="2" ry="2" />
<text  x="1005.47" y="703.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (10 samples, 0.02%)</title><rect x="236.1" y="1285" width="0.2" height="15.0" fill="rgb(223,146,14)" rx="2" ry="2" />
<text  x="239.09" y="1295.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.01%)</title><rect x="1030.2" y="1477" width="0.1" height="15.0" fill="rgb(226,135,49)" rx="2" ry="2" />
<text  x="1033.20" y="1487.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::is_null (17 samples, 0.03%)</title><rect x="278.8" y="1253" width="0.4" height="15.0" fill="rgb(223,36,16)" rx="2" ry="2" />
<text  x="281.82" y="1263.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (109 samples, 0.20%)</title><rect x="986.4" y="1173" width="2.3" height="15.0" fill="rgb(211,118,9)" rx="2" ry="2" />
<text  x="989.43" y="1183.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (18 samples, 0.03%)</title><rect x="180.0" y="1429" width="0.4" height="15.0" fill="rgb(222,220,51)" rx="2" ry="2" />
<text  x="183.03" y="1439.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.02%)</title><rect x="1029.9" y="1285" width="0.3" height="15.0" fill="rgb(249,92,52)" rx="2" ry="2" />
<text  x="1032.95" y="1295.5" ></text>
</g>
<g >
<title>rand::Rng::shuffle (2,092 samples, 3.76%)</title><rect x="561.8" y="1301" width="44.4" height="15.0" fill="rgb(251,72,38)" rx="2" ry="2" />
<text  x="564.80" y="1311.5" >rand..</text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (17 samples, 0.03%)</title><rect x="1025.4" y="1541" width="0.4" height="15.0" fill="rgb(232,218,21)" rx="2" ry="2" />
<text  x="1028.43" y="1551.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (8 samples, 0.01%)</title><rect x="1026.3" y="1205" width="0.2" height="15.0" fill="rgb(207,52,23)" rx="2" ry="2" />
<text  x="1029.30" y="1215.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *const T&gt;::offset (41 samples, 0.07%)</title><rect x="584.3" y="1045" width="0.9" height="15.0" fill="rgb(227,134,6)" rx="2" ry="2" />
<text  x="587.29" y="1055.5" ></text>
</g>
<g >
<title>_rjem_je_arena_tcache_fill_small (7 samples, 0.01%)</title><rect x="1016.2" y="1461" width="0.1" height="15.0" fill="rgb(235,85,5)" rx="2" ry="2" />
<text  x="1019.20" y="1471.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (9 samples, 0.02%)</title><rect x="1043.4" y="949" width="0.2" height="15.0" fill="rgb(254,148,33)" rx="2" ry="2" />
<text  x="1046.40" y="959.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (43 samples, 0.08%)</title><rect x="1036.9" y="1493" width="0.9" height="15.0" fill="rgb(209,111,35)" rx="2" ry="2" />
<text  x="1039.91" y="1503.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (36 samples, 0.06%)</title><rect x="1032.5" y="1461" width="0.7" height="15.0" fill="rgb(224,118,38)" rx="2" ry="2" />
<text  x="1035.47" y="1471.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (32 samples, 0.06%)</title><rect x="1031.8" y="1237" width="0.7" height="15.0" fill="rgb(246,16,29)" rx="2" ry="2" />
<text  x="1034.79" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (20 samples, 0.04%)</title><rect x="1038.0" y="1173" width="0.4" height="15.0" fill="rgb(229,10,50)" rx="2" ry="2" />
<text  x="1040.99" y="1183.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (38 samples, 0.07%)</title><rect x="1026.6" y="1365" width="0.8" height="15.0" fill="rgb(233,48,21)" rx="2" ry="2" />
<text  x="1029.64" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.01%)</title><rect x="984.1" y="1109" width="0.1" height="15.0" fill="rgb(228,196,34)" rx="2" ry="2" />
<text  x="987.09" y="1119.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (43 samples, 0.08%)</title><rect x="698.4" y="1253" width="0.9" height="15.0" fill="rgb(242,165,7)" rx="2" ry="2" />
<text  x="701.42" y="1263.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::h580292910721dddc (348 samples, 0.63%)</title><rect x="195.2" y="1509" width="7.3" height="15.0" fill="rgb(248,169,11)" rx="2" ry="2" />
<text  x="198.16" y="1519.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (16 samples, 0.03%)</title><rect x="996.8" y="1493" width="0.4" height="15.0" fill="rgb(240,210,36)" rx="2" ry="2" />
<text  x="999.82" y="1503.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (14 samples, 0.03%)</title><rect x="1032.5" y="1301" width="0.3" height="15.0" fill="rgb(212,225,26)" rx="2" ry="2" />
<text  x="1035.47" y="1311.5" ></text>
</g>
<g >
<title>bincode::config::legacy::Config::serialized_size (5 samples, 0.01%)</title><rect x="1049.8" y="949" width="0.1" height="15.0" fill="rgb(226,9,4)" rx="2" ry="2" />
<text  x="1052.76" y="959.5" ></text>
</g>
<g >
<title>core::sync::atomic::fence (8 samples, 0.01%)</title><rect x="925.3" y="1301" width="0.2" height="15.0" fill="rgb(254,152,47)" rx="2" ry="2" />
<text  x="928.32" y="1311.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::clone_id (8 samples, 0.01%)</title><rect x="1013.8" y="1413" width="0.2" height="15.0" fill="rgb(252,218,36)" rx="2" ry="2" />
<text  x="1016.84" y="1423.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (29 samples, 0.05%)</title><rect x="1150.4" y="581" width="0.6" height="15.0" fill="rgb(245,2,46)" rx="2" ry="2" />
<text  x="1153.43" y="591.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (67 samples, 0.12%)</title><rect x="425.5" y="1269" width="1.4" height="15.0" fill="rgb(207,105,25)" rx="2" ry="2" />
<text  x="428.49" y="1279.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (20 samples, 0.04%)</title><rect x="1029.0" y="1077" width="0.4" height="15.0" fill="rgb(221,41,12)" rx="2" ry="2" />
<text  x="1031.97" y="1087.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple (5 samples, 0.01%)</title><rect x="1022.5" y="789" width="0.1" height="15.0" fill="rgb(206,161,12)" rx="2" ry="2" />
<text  x="1025.48" y="799.5" ></text>
</g>
<g >
<title>bincode::internal::serialize_into (7 samples, 0.01%)</title><rect x="1022.2" y="1397" width="0.1" height="15.0" fill="rgb(243,225,45)" rx="2" ry="2" />
<text  x="1025.18" y="1407.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (8 samples, 0.01%)</title><rect x="1044.4" y="1381" width="0.2" height="15.0" fill="rgb(220,127,53)" rx="2" ry="2" />
<text  x="1047.44" y="1391.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (9 samples, 0.02%)</title><rect x="982.7" y="1221" width="0.2" height="15.0" fill="rgb(251,41,53)" rx="2" ry="2" />
<text  x="985.71" y="1231.5" ></text>
</g>
<g >
<title>core::mem::size_of (15 samples, 0.03%)</title><rect x="692.4" y="1221" width="0.3" height="15.0" fill="rgb(224,195,4)" rx="2" ry="2" />
<text  x="695.40" y="1231.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="1041.1" y="885" width="0.2" height="15.0" fill="rgb(249,170,3)" rx="2" ry="2" />
<text  x="1044.09" y="895.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (21 samples, 0.04%)</title><rect x="1056.3" y="1061" width="0.4" height="15.0" fill="rgb(235,70,18)" rx="2" ry="2" />
<text  x="1059.26" y="1071.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::notify (5 samples, 0.01%)</title><rect x="997.0" y="1285" width="0.1" height="15.0" fill="rgb(243,61,53)" rx="2" ry="2" />
<text  x="999.95" y="1295.5" ></text>
</g>
<g >
<title>std::sys::unix::condvar::Condvar::destroy (6 samples, 0.01%)</title><rect x="905.8" y="1237" width="0.1" height="15.0" fill="rgb(205,136,27)" rx="2" ry="2" />
<text  x="908.82" y="1247.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (17 samples, 0.03%)</title><rect x="982.5" y="1285" width="0.4" height="15.0" fill="rgb(225,84,9)" rx="2" ry="2" />
<text  x="985.54" y="1295.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (12 samples, 0.02%)</title><rect x="1009.1" y="1493" width="0.2" height="15.0" fill="rgb(239,180,3)" rx="2" ry="2" />
<text  x="1012.07" y="1503.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (11 samples, 0.02%)</title><rect x="1150.0" y="821" width="0.2" height="15.0" fill="rgb(228,24,29)" rx="2" ry="2" />
<text  x="1152.98" y="831.5" ></text>
</g>
<g >
<title>tsd_tsdn (59 samples, 0.11%)</title><rect x="74.0" y="1525" width="1.2" height="15.0" fill="rgb(236,225,38)" rx="2" ry="2" />
<text  x="76.95" y="1535.5" ></text>
</g>
<g >
<title>core::alloc::Layout::size (11 samples, 0.02%)</title><rect x="893.7" y="1269" width="0.2" height="15.0" fill="rgb(246,118,53)" rx="2" ry="2" />
<text  x="896.66" y="1279.5" ></text>
</g>
<g >
<title>imalloc_no_sample (1,771 samples, 3.18%)</title><rect x="37.6" y="1541" width="37.6" height="15.0" fill="rgb(213,87,47)" rx="2" ry="2" />
<text  x="40.63" y="1551.5" >ima..</text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::h3c294772b9273f11 (8 samples, 0.01%)</title><rect x="189.2" y="1317" width="0.2" height="15.0" fill="rgb(238,117,45)" rx="2" ry="2" />
<text  x="192.21" y="1327.5" ></text>
</g>
<g >
<title>sz_size2index_lookup (77 samples, 0.14%)</title><rect x="77.9" y="1525" width="1.6" height="15.0" fill="rgb(219,152,2)" rx="2" ry="2" />
<text  x="80.90" y="1535.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.02%)</title><rect x="188.2" y="1301" width="0.3" height="15.0" fill="rgb(245,154,8)" rx="2" ry="2" />
<text  x="191.20" y="1311.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (19 samples, 0.03%)</title><rect x="997.6" y="1301" width="0.4" height="15.0" fill="rgb(228,73,38)" rx="2" ry="2" />
<text  x="1000.61" y="1311.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (22 samples, 0.04%)</title><rect x="1032.8" y="1045" width="0.4" height="15.0" fill="rgb(240,147,53)" rx="2" ry="2" />
<text  x="1035.77" y="1055.5" ></text>
</g>
<g >
<title>imalloc (5 samples, 0.01%)</title><rect x="1015.4" y="1573" width="0.1" height="15.0" fill="rgb(216,222,41)" rx="2" ry="2" />
<text  x="1018.43" y="1583.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::ok_or (16 samples, 0.03%)</title><rect x="1171.5" y="965" width="0.3" height="15.0" fill="rgb(217,51,50)" rx="2" ry="2" />
<text  x="1174.48" y="975.5" ></text>
</g>
<g >
<title>rand_chacha::guts::refill_wide_impl (32 samples, 0.06%)</title><rect x="191.1" y="1557" width="0.7" height="15.0" fill="rgb(219,146,43)" rx="2" ry="2" />
<text  x="194.15" y="1567.5" ></text>
</g>
<g >
<title>mio::poll::enqueue_with_wakeup (5 samples, 0.01%)</title><rect x="1024.8" y="1141" width="0.1" height="15.0" fill="rgb(225,140,1)" rx="2" ry="2" />
<text  x="1027.79" y="1151.5" ></text>
</g>
<g >
<title>bincode::internal::serialize_into (8 samples, 0.01%)</title><rect x="1014.2" y="1285" width="0.1" height="15.0" fill="rgb(236,192,29)" rx="2" ry="2" />
<text  x="1017.16" y="1295.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (12 samples, 0.02%)</title><rect x="997.4" y="1109" width="0.2" height="15.0" fill="rgb(252,227,14)" rx="2" ry="2" />
<text  x="1000.35" y="1119.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::he0977de3e88b310a (14 samples, 0.03%)</title><rect x="180.4" y="1397" width="0.3" height="15.0" fill="rgb(209,138,25)" rx="2" ry="2" />
<text  x="183.43" y="1407.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (78 samples, 0.14%)</title><rect x="1049.7" y="1397" width="1.7" height="15.0" fill="rgb(224,167,41)" rx="2" ry="2" />
<text  x="1052.72" y="1407.5" ></text>
</g>
<g >
<title>&lt;futures::future::either::Either&lt;A,B&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="1041.3" y="933" width="0.1" height="15.0" fill="rgb(224,91,18)" rx="2" ry="2" />
<text  x="1044.32" y="943.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (158 samples, 0.28%)</title><rect x="1041.1" y="1269" width="3.3" height="15.0" fill="rgb(217,71,25)" rx="2" ry="2" />
<text  x="1044.09" y="1279.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts_mut (32 samples, 0.06%)</title><rect x="966.0" y="1237" width="0.7" height="15.0" fill="rgb(232,34,14)" rx="2" ry="2" />
<text  x="969.01" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (9 samples, 0.02%)</title><rect x="1049.5" y="1173" width="0.2" height="15.0" fill="rgb(245,223,54)" rx="2" ry="2" />
<text  x="1052.53" y="1183.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (109 samples, 0.20%)</title><rect x="986.4" y="1205" width="2.3" height="15.0" fill="rgb(239,209,25)" rx="2" ry="2" />
<text  x="989.43" y="1215.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::write (22 samples, 0.04%)</title><rect x="1024.0" y="1045" width="0.5" height="15.0" fill="rgb(228,18,0)" rx="2" ry="2" />
<text  x="1027.01" y="1055.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (10 samples, 0.02%)</title><rect x="1026.0" y="1269" width="0.2" height="15.0" fill="rgb(230,53,3)" rx="2" ry="2" />
<text  x="1028.98" y="1279.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (16 samples, 0.03%)</title><rect x="1013.1" y="1557" width="0.4" height="15.0" fill="rgb(205,42,49)" rx="2" ry="2" />
<text  x="1016.12" y="1567.5" ></text>
</g>
<g >
<title>&lt;tower_balance::p2c::service::Balance&lt;D,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (13 samples, 0.02%)</title><rect x="1030.8" y="821" width="0.2" height="15.0" fill="rgb(205,138,44)" rx="2" ry="2" />
<text  x="1033.77" y="831.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (12 samples, 0.02%)</title><rect x="1015.2" y="1477" width="0.2" height="15.0" fill="rgb(240,123,37)" rx="2" ry="2" />
<text  x="1018.18" y="1487.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (21 samples, 0.04%)</title><rect x="981.4" y="1125" width="0.4" height="15.0" fill="rgb(216,195,52)" rx="2" ry="2" />
<text  x="984.36" y="1135.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::InternalAsyncWriter&lt;S,T,D&gt; as std::io::Read&gt;::read (5 samples, 0.01%)</title><rect x="1038.2" y="1029" width="0.1" height="15.0" fill="rgb(212,208,4)" rx="2" ry="2" />
<text  x="1041.24" y="1039.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (6 samples, 0.01%)</title><rect x="1049.7" y="981" width="0.2" height="15.0" fill="rgb(232,180,6)" rx="2" ry="2" />
<text  x="1052.74" y="991.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (7 samples, 0.01%)</title><rect x="1034.2" y="1317" width="0.1" height="15.0" fill="rgb(223,3,50)" rx="2" ry="2" />
<text  x="1037.19" y="1327.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (9 samples, 0.02%)</title><rect x="1025.4" y="901" width="0.2" height="15.0" fill="rgb(220,148,46)" rx="2" ry="2" />
<text  x="1028.43" y="911.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNotInner&lt;T&gt;&gt;::serialize (11 samples, 0.02%)</title><rect x="1053.4" y="1125" width="0.3" height="15.0" fill="rgb(213,123,8)" rx="2" ry="2" />
<text  x="1056.44" y="1135.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (5 samples, 0.01%)</title><rect x="1023.8" y="1141" width="0.1" height="15.0" fill="rgb(248,17,20)" rx="2" ry="2" />
<text  x="1026.81" y="1151.5" ></text>
</g>
<g >
<title>core::mem::swap (28 samples, 0.05%)</title><rect x="1141.9" y="933" width="0.6" height="15.0" fill="rgb(220,94,40)" rx="2" ry="2" />
<text  x="1144.90" y="943.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::Pool&lt;MS,Target,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::poll_ready (267 samples, 0.48%)</title><rect x="1005.2" y="1573" width="5.6" height="15.0" fill="rgb(250,26,54)" rx="2" ry="2" />
<text  x="1008.16" y="1583.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (17 samples, 0.03%)</title><rect x="1031.3" y="901" width="0.4" height="15.0" fill="rgb(253,3,10)" rx="2" ry="2" />
<text  x="1034.30" y="911.5" ></text>
</g>
<g >
<title>ip_rcv (21 samples, 0.04%)</title><rect x="1042.0" y="373" width="0.5" height="15.0" fill="rgb(241,158,26)" rx="2" ry="2" />
<text  x="1045.02" y="383.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter_mut (64 samples, 0.12%)</title><rect x="436.8" y="1285" width="1.4" height="15.0" fill="rgb(222,114,15)" rx="2" ry="2" />
<text  x="439.82" y="1295.5" ></text>
</g>
<g >
<title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (6 samples, 0.01%)</title><rect x="1180.2" y="789" width="0.1" height="15.0" fill="rgb(248,78,38)" rx="2" ry="2" />
<text  x="1183.20" y="799.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (22 samples, 0.04%)</title><rect x="1032.8" y="1093" width="0.4" height="15.0" fill="rgb(253,85,25)" rx="2" ry="2" />
<text  x="1035.77" y="1103.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (6 samples, 0.01%)</title><rect x="964.7" y="1221" width="0.1" height="15.0" fill="rgb(228,141,32)" rx="2" ry="2" />
<text  x="967.66" y="1231.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (216 samples, 0.39%)</title><rect x="1044.8" y="1365" width="4.6" height="15.0" fill="rgb(216,25,28)" rx="2" ry="2" />
<text  x="1047.80" y="1375.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (21 samples, 0.04%)</title><rect x="1134.5" y="661" width="0.4" height="15.0" fill="rgb(238,162,2)" rx="2" ry="2" />
<text  x="1137.47" y="671.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::as_leaf_mut (14 samples, 0.03%)</title><rect x="335.6" y="1285" width="0.3" height="15.0" fill="rgb(232,43,24)" rx="2" ry="2" />
<text  x="338.65" y="1295.5" ></text>
</g>
<g >
<title>core::ptr::read (75 samples, 0.13%)</title><rect x="825.5" y="1029" width="1.6" height="15.0" fill="rgb(233,91,36)" rx="2" ry="2" />
<text  x="828.55" y="1039.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.01%)</title><rect x="1027.6" y="1237" width="0.1" height="15.0" fill="rgb(219,57,31)" rx="2" ry="2" />
<text  x="1030.57" y="1247.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::worker::Worker&lt;T,Request&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="1153.9" y="773" width="0.1" height="15.0" fill="rgb(249,92,3)" rx="2" ry="2" />
<text  x="1156.86" y="783.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (6 samples, 0.01%)</title><rect x="1033.7" y="1173" width="0.1" height="15.0" fill="rgb(229,165,27)" rx="2" ry="2" />
<text  x="1036.68" y="1183.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::clone_id (6 samples, 0.01%)</title><rect x="1058.4" y="1157" width="0.2" height="15.0" fill="rgb(206,28,5)" rx="2" ry="2" />
<text  x="1061.44" y="1167.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.02%)</title><rect x="1131.3" y="501" width="0.2" height="15.0" fill="rgb(253,174,51)" rx="2" ry="2" />
<text  x="1134.29" y="511.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::unpark (22 samples, 0.04%)</title><rect x="1024.0" y="1237" width="0.5" height="15.0" fill="rgb(234,105,8)" rx="2" ry="2" />
<text  x="1027.01" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (6 samples, 0.01%)</title><rect x="1034.6" y="1237" width="0.1" height="15.0" fill="rgb(234,143,47)" rx="2" ry="2" />
<text  x="1037.57" y="1247.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.01%)</title><rect x="201.1" y="1285" width="0.1" height="15.0" fill="rgb(238,221,7)" rx="2" ry="2" />
<text  x="204.10" y="1295.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::offset (21 samples, 0.04%)</title><rect x="510.5" y="1269" width="0.5" height="15.0" fill="rgb(223,188,30)" rx="2" ry="2" />
<text  x="513.53" y="1279.5" ></text>
</g>
<g >
<title>&lt;async_bincode::reader::AsyncBincodeReader&lt;R,T&gt; as futures::stream::Stream&gt;::poll (23 samples, 0.04%)</title><rect x="1035.4" y="1093" width="0.4" height="15.0" fill="rgb(228,133,11)" rx="2" ry="2" />
<text  x="1038.36" y="1103.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (11 samples, 0.02%)</title><rect x="1034.3" y="1301" width="0.3" height="15.0" fill="rgb(237,188,38)" rx="2" ry="2" />
<text  x="1037.34" y="1311.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (8 samples, 0.01%)</title><rect x="181.4" y="1397" width="0.1" height="15.0" fill="rgb(205,102,36)" rx="2" ry="2" />
<text  x="184.36" y="1407.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.01%)</title><rect x="1026.2" y="1253" width="0.1" height="15.0" fill="rgb(239,226,52)" rx="2" ry="2" />
<text  x="1029.19" y="1263.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll (258 samples, 0.46%)</title><rect x="1075.0" y="949" width="5.5" height="15.0" fill="rgb(225,219,3)" rx="2" ry="2" />
<text  x="1077.99" y="959.5" ></text>
</g>
<g >
<title>&lt;tokio_sync::oneshot::Inner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="182.4" y="1397" width="0.3" height="15.0" fill="rgb(218,0,50)" rx="2" ry="2" />
<text  x="185.42" y="1407.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (323 samples, 0.58%)</title><rect x="536.5" y="1237" width="6.9" height="15.0" fill="rgb(232,1,30)" rx="2" ry="2" />
<text  x="539.55" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (8 samples, 0.01%)</title><rect x="1034.7" y="1461" width="0.2" height="15.0" fill="rgb(249,123,29)" rx="2" ry="2" />
<text  x="1037.70" y="1471.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (6 samples, 0.01%)</title><rect x="187.0" y="1253" width="0.2" height="15.0" fill="rgb(254,171,21)" rx="2" ry="2" />
<text  x="190.05" y="1263.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default::_$u7b$$u7b$closure$u7d$$u7d$::ha80fbdab9b554b03 (20 samples, 0.04%)</title><rect x="1036.5" y="1541" width="0.4" height="15.0" fill="rgb(237,4,29)" rx="2" ry="2" />
<text  x="1039.48" y="1551.5" ></text>
</g>
<g >
<title>&lt;hyper::client::dispatch::Receiver&lt;T,U&gt; as futures::stream::Stream&gt;::poll (14 samples, 0.03%)</title><rect x="996.5" y="1445" width="0.3" height="15.0" fill="rgb(244,151,15)" rx="2" ry="2" />
<text  x="999.53" y="1455.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::enqueue_node_with_wakeup (26 samples, 0.05%)</title><rect x="1108.4" y="613" width="0.6" height="15.0" fill="rgb(221,193,33)" rx="2" ry="2" />
<text  x="1111.41" y="623.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Root&lt;K,V&gt;::is_shared_root (266 samples, 0.48%)</title><rect x="269.6" y="1301" width="5.7" height="15.0" fill="rgb(225,95,5)" rx="2" ry="2" />
<text  x="272.63" y="1311.5" ></text>
</g>
<g >
<title>crossbeam_utils::atomic::atomic_cell::atomic_swap (5 samples, 0.01%)</title><rect x="1008.6" y="1333" width="0.1" height="15.0" fill="rgb(250,144,52)" rx="2" ry="2" />
<text  x="1011.64" y="1343.5" ></text>
</g>
<g >
<title>&lt;jemallocator::Jemalloc as core::alloc::GlobalAlloc&gt;::alloc (55 samples, 0.10%)</title><rect x="228.0" y="1269" width="1.1" height="15.0" fill="rgb(220,162,39)" rx="2" ry="2" />
<text  x="230.96" y="1279.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (7 samples, 0.01%)</title><rect x="1117.3" y="949" width="0.1" height="15.0" fill="rgb(220,127,20)" rx="2" ry="2" />
<text  x="1120.28" y="959.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (6,084 samples, 10.94%)</title><rect x="1060.6" y="1461" width="129.1" height="15.0" fill="rgb(235,225,37)" rx="2" ry="2" />
<text  x="1063.61" y="1471.5" >__rust_maybe_cat..</text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (11 samples, 0.02%)</title><rect x="1045.6" y="1173" width="0.2" height="15.0" fill="rgb(209,33,10)" rx="2" ry="2" />
<text  x="1048.56" y="1183.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (20 samples, 0.04%)</title><rect x="1038.0" y="1253" width="0.4" height="15.0" fill="rgb(235,72,35)" rx="2" ry="2" />
<text  x="1040.99" y="1263.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (5 samples, 0.01%)</title><rect x="1044.5" y="1173" width="0.1" height="15.0" fill="rgb(220,88,21)" rx="2" ry="2" />
<text  x="1047.48" y="1183.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (9 samples, 0.02%)</title><rect x="1020.2" y="1429" width="0.2" height="15.0" fill="rgb(217,176,54)" rx="2" ry="2" />
<text  x="1023.19" y="1439.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (46 samples, 0.08%)</title><rect x="1029.0" y="1445" width="0.9" height="15.0" fill="rgb(234,133,30)" rx="2" ry="2" />
<text  x="1031.97" y="1455.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (6 samples, 0.01%)</title><rect x="1104.0" y="821" width="0.1" height="15.0" fill="rgb(227,137,6)" rx="2" ry="2" />
<text  x="1107.00" y="831.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (13 samples, 0.02%)</title><rect x="1051.6" y="1557" width="0.3" height="15.0" fill="rgb(234,119,20)" rx="2" ry="2" />
<text  x="1054.59" y="1567.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (80 samples, 0.14%)</title><rect x="1160.2" y="965" width="1.7" height="15.0" fill="rgb(222,6,23)" rx="2" ry="2" />
<text  x="1163.19" y="975.5" ></text>
</g>
<g >
<title>core::num::wrapping::&lt;impl core::ops::bit::Shl&lt;usize&gt; for core::num::Wrapping&lt;u32&gt;&gt;::shl (12 samples, 0.02%)</title><rect x="1142.9" y="981" width="0.2" height="15.0" fill="rgb(238,161,44)" rx="2" ry="2" />
<text  x="1145.89" y="991.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (32 samples, 0.06%)</title><rect x="1037.1" y="1301" width="0.7" height="15.0" fill="rgb(253,109,38)" rx="2" ry="2" />
<text  x="1040.14" y="1311.5" ></text>
</g>
<g >
<title>__libc_write (25 samples, 0.04%)</title><rect x="1108.4" y="501" width="0.6" height="15.0" fill="rgb(218,156,43)" rx="2" ry="2" />
<text  x="1111.43" y="511.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::new (126 samples, 0.23%)</title><rect x="415.6" y="1317" width="2.7" height="15.0" fill="rgb(207,161,41)" rx="2" ry="2" />
<text  x="418.58" y="1327.5" ></text>
</g>
<g >
<title>ticker_tick (21 samples, 0.04%)</title><rect x="992.1" y="1605" width="0.5" height="15.0" fill="rgb(218,105,37)" rx="2" ry="2" />
<text  x="995.11" y="1615.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as tokio_tower::multiplex::client::TagStore&lt;&lt;T as futures::sink::Sink&gt;::SinkItem,&lt;T as futures::stream::Stream&gt;::Item&gt;&gt;::finish_tag (5 samples, 0.01%)</title><rect x="1043.1" y="949" width="0.1" height="15.0" fill="rgb(236,153,51)" rx="2" ry="2" />
<text  x="1046.08" y="959.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (9 samples, 0.02%)</title><rect x="1025.4" y="1013" width="0.2" height="15.0" fill="rgb(217,173,22)" rx="2" ry="2" />
<text  x="1028.43" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (54 samples, 0.10%)</title><rect x="1038.6" y="773" width="1.1" height="15.0" fill="rgb(231,61,40)" rx="2" ry="2" />
<text  x="1041.56" y="783.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::notify (15 samples, 0.03%)</title><rect x="1028.1" y="1333" width="0.3" height="15.0" fill="rgb(243,120,13)" rx="2" ry="2" />
<text  x="1031.06" y="1343.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (216 samples, 0.39%)</title><rect x="1044.8" y="1413" width="4.6" height="15.0" fill="rgb(232,227,45)" rx="2" ry="2" />
<text  x="1047.80" y="1423.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (6 samples, 0.01%)</title><rect x="1014.2" y="1013" width="0.1" height="15.0" fill="rgb(232,73,28)" rx="2" ry="2" />
<text  x="1017.20" y="1023.5" ></text>
</g>
<g >
<title>&lt;async_bincode::reader::AsyncBincodeReader&lt;R,T&gt; as futures::stream::Stream&gt;::poll (43 samples, 0.08%)</title><rect x="1046.2" y="1285" width="0.9" height="15.0" fill="rgb(218,84,45)" rx="2" ry="2" />
<text  x="1049.20" y="1295.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default::_$u7b$$u7b$closure$u7d$$u7d$::ha80fbdab9b554b03 (12 samples, 0.02%)</title><rect x="1029.9" y="1269" width="0.3" height="15.0" fill="rgb(229,56,1)" rx="2" ry="2" />
<text  x="1032.95" y="1279.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::Thread::new::thread_start (37,453 samples, 67.35%)</title><rect x="195.2" y="1573" width="794.7" height="15.0" fill="rgb(217,179,53)" rx="2" ry="2" />
<text  x="198.16" y="1583.5" >std::sys::unix::thread::Thread::new::thread_start</text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (38 samples, 0.07%)</title><rect x="874.2" y="1269" width="0.8" height="15.0" fill="rgb(253,136,13)" rx="2" ry="2" />
<text  x="877.22" y="1279.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::saturating_mul (13 samples, 0.02%)</title><rect x="1115.7" y="981" width="0.3" height="15.0" fill="rgb(243,160,26)" rx="2" ry="2" />
<text  x="1118.69" y="991.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="1026.0" y="853" width="0.1" height="15.0" fill="rgb(251,65,18)" rx="2" ry="2" />
<text  x="1028.98" y="863.5" ></text>
</g>
<g >
<title>&lt;noria::table::Table as tower_service::Service&lt;noria::table::Input&gt;&gt;::call (49 samples, 0.09%)</title><rect x="183.8" y="1493" width="1.0" height="15.0" fill="rgb(211,53,32)" rx="2" ry="2" />
<text  x="186.76" y="1503.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (6 samples, 0.01%)</title><rect x="1083.8" y="981" width="0.2" height="15.0" fill="rgb(220,31,40)" rx="2" ry="2" />
<text  x="1086.84" y="991.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (6 samples, 0.01%)</title><rect x="1032.0" y="997" width="0.2" height="15.0" fill="rgb(243,219,13)" rx="2" ry="2" />
<text  x="1035.03" y="1007.5" ></text>
</g>
<g >
<title>futures::task_impl::current::_$u7b$$u7b$closure$u7d$$u7d$::hb88041a16b038a29 (6 samples, 0.01%)</title><rect x="1055.9" y="1221" width="0.2" height="15.0" fill="rgb(241,202,44)" rx="2" ry="2" />
<text  x="1058.94" y="1231.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1057.7" y="1045" width="0.1" height="15.0" fill="rgb(250,65,36)" rx="2" ry="2" />
<text  x="1060.68" y="1055.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (36,502 samples, 65.64%)</title><rect x="202.5" y="1445" width="774.6" height="15.0" fill="rgb(238,25,26)" rx="2" ry="2" />
<text  x="205.54" y="1455.5" >std::panicking::try::do_call</text>
</g>
<g >
<title>chrono::format::parsed::Parsed::to_naive_date (12 samples, 0.02%)</title><rect x="1002.1" y="581" width="0.2" height="15.0" fill="rgb(210,205,31)" rx="2" ry="2" />
<text  x="1005.06" y="591.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (20 samples, 0.04%)</title><rect x="187.0" y="1317" width="0.5" height="15.0" fill="rgb(246,36,21)" rx="2" ry="2" />
<text  x="190.05" y="1327.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::resize (7 samples, 0.01%)</title><rect x="1020.2" y="1349" width="0.2" height="15.0" fill="rgb(242,105,47)" rx="2" ry="2" />
<text  x="1023.23" y="1359.5" ></text>
</g>
<g >
<title>_rjem_je_tsd_cleanup (11 samples, 0.02%)</title><rect x="1060.4" y="1557" width="0.2" height="15.0" fill="rgb(235,104,37)" rx="2" ry="2" />
<text  x="1063.37" y="1567.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts_mut (88 samples, 0.16%)</title><rect x="353.3" y="1253" width="1.8" height="15.0" fill="rgb(212,66,7)" rx="2" ry="2" />
<text  x="356.26" y="1263.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::new (46 samples, 0.08%)</title><rect x="418.3" y="1317" width="0.9" height="15.0" fill="rgb(212,192,6)" rx="2" ry="2" />
<text  x="421.25" y="1327.5" ></text>
</g>
<g >
<title>rand::distributions::range::Range&lt;X&gt;::new (148 samples, 0.27%)</title><rect x="603.0" y="1269" width="3.2" height="15.0" fill="rgb(248,126,28)" rx="2" ry="2" />
<text  x="606.04" y="1279.5" ></text>
</g>
<g >
<title>tcp_write_xmit (42 samples, 0.08%)</title><rect x="1038.8" y="613" width="0.9" height="15.0" fill="rgb(223,96,2)" rx="2" ry="2" />
<text  x="1041.77" y="623.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::into_unique (183 samples, 0.33%)</title><rect x="222.5" y="1301" width="3.8" height="15.0" fill="rgb(254,18,34)" rx="2" ry="2" />
<text  x="225.46" y="1311.5" ></text>
</g>
<g >
<title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="1041.3" y="917" width="0.1" height="15.0" fill="rgb(228,92,54)" rx="2" ry="2" />
<text  x="1044.32" y="927.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNot&lt;T&gt;&gt;::serialize (16 samples, 0.03%)</title><rect x="1045.2" y="1189" width="0.4" height="15.0" fill="rgb(252,68,25)" rx="2" ry="2" />
<text  x="1048.22" y="1199.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (284 samples, 0.51%)</title><rect x="1038.4" y="1317" width="6.0" height="15.0" fill="rgb(246,206,22)" rx="2" ry="2" />
<text  x="1041.41" y="1327.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (61 samples, 0.11%)</title><rect x="1031.2" y="1445" width="1.3" height="15.0" fill="rgb(208,43,3)" rx="2" ry="2" />
<text  x="1034.18" y="1455.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (138 samples, 0.25%)</title><rect x="180.8" y="1557" width="3.0" height="15.0" fill="rgb(238,195,45)" rx="2" ry="2" />
<text  x="183.83" y="1567.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts_mut (5 samples, 0.01%)</title><rect x="436.7" y="1253" width="0.1" height="15.0" fill="rgb(231,107,23)" rx="2" ry="2" />
<text  x="439.71" y="1263.5" ></text>
</g>
<g >
<title>&lt;futures::future::either::Either&lt;A,B&gt; as futures::future::Future&gt;::poll (45 samples, 0.08%)</title><rect x="1152.9" y="725" width="0.9" height="15.0" fill="rgb(247,107,0)" rx="2" ry="2" />
<text  x="1155.89" y="735.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::wakeup (26 samples, 0.05%)</title><rect x="1108.4" y="597" width="0.6" height="15.0" fill="rgb(243,202,27)" rx="2" ry="2" />
<text  x="1111.41" y="607.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="1036.5" y="1237" width="0.2" height="15.0" fill="rgb(251,49,6)" rx="2" ry="2" />
<text  x="1039.48" y="1247.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (5 samples, 0.01%)</title><rect x="984.1" y="1013" width="0.1" height="15.0" fill="rgb(215,41,12)" rx="2" ry="2" />
<text  x="987.09" y="1023.5" ></text>
</g>
<g >
<title>&lt;chrono::naive::date::NaiveDate as core::fmt::Debug&gt;::fmt (32 samples, 0.06%)</title><rect x="983.3" y="1269" width="0.6" height="15.0" fill="rgb(235,137,53)" rx="2" ry="2" />
<text  x="986.27" y="1279.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (31 samples, 0.06%)</title><rect x="1059.1" y="1509" width="0.6" height="15.0" fill="rgb(244,202,26)" rx="2" ry="2" />
<text  x="1062.06" y="1519.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (7 samples, 0.01%)</title><rect x="1059.4" y="1141" width="0.1" height="15.0" fill="rgb(231,45,46)" rx="2" ry="2" />
<text  x="1062.36" y="1151.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_store (6 samples, 0.01%)</title><rect x="1115.3" y="965" width="0.2" height="15.0" fill="rgb(247,83,41)" rx="2" ry="2" />
<text  x="1118.33" y="975.5" ></text>
</g>
<g >
<title>tokio_reactor::HandlePriv::wakeup (27 samples, 0.05%)</title><rect x="1028.4" y="1013" width="0.6" height="15.0" fill="rgb(209,87,40)" rx="2" ry="2" />
<text  x="1031.40" y="1023.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.02%)</title><rect x="1015.2" y="1397" width="0.2" height="15.0" fill="rgb(210,100,4)" rx="2" ry="2" />
<text  x="1018.18" y="1407.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (93 samples, 0.17%)</title><rect x="1057.1" y="1557" width="2.0" height="15.0" fill="rgb(223,103,17)" rx="2" ry="2" />
<text  x="1060.09" y="1567.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (7 samples, 0.01%)</title><rect x="1028.7" y="677" width="0.1" height="15.0" fill="rgb(237,81,17)" rx="2" ry="2" />
<text  x="1031.69" y="687.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (18 samples, 0.03%)</title><rect x="1035.4" y="917" width="0.4" height="15.0" fill="rgb(211,150,47)" rx="2" ry="2" />
<text  x="1038.42" y="927.5" ></text>
</g>
<g >
<title>mio_extras::timer::spawn_wakeup_thread::_$u7b$$u7b$closure$u7d$$u7d$::he52342d6b3790f9b (11 samples, 0.02%)</title><rect x="992.9" y="1381" width="0.3" height="15.0" fill="rgb(239,138,40)" rx="2" ry="2" />
<text  x="995.92" y="1391.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (8 samples, 0.01%)</title><rect x="1023.5" y="1541" width="0.2" height="15.0" fill="rgb(210,119,46)" rx="2" ry="2" />
<text  x="1026.54" y="1551.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (12 samples, 0.02%)</title><rect x="1029.9" y="1365" width="0.3" height="15.0" fill="rgb(209,83,1)" rx="2" ry="2" />
<text  x="1032.95" y="1375.5" ></text>
</g>
<g >
<title>futures::future::loop_fn::loop_fn (50 samples, 0.09%)</title><rect x="1004.1" y="1557" width="1.1" height="15.0" fill="rgb(246,94,40)" rx="2" ry="2" />
<text  x="1007.10" y="1567.5" ></text>
</g>
<g >
<title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (10 samples, 0.02%)</title><rect x="816.9" y="997" width="0.2" height="15.0" fill="rgb(239,10,49)" rx="2" ry="2" />
<text  x="819.89" y="1007.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (6 samples, 0.01%)</title><rect x="1033.8" y="1189" width="0.1" height="15.0" fill="rgb(237,206,53)" rx="2" ry="2" />
<text  x="1036.81" y="1199.5" ></text>
</g>
<g >
<title>schedule (10 samples, 0.02%)</title><rect x="1113.3" y="789" width="0.2" height="15.0" fill="rgb(244,172,31)" rx="2" ry="2" />
<text  x="1116.27" y="799.5" ></text>
</g>
<g >
<title>tokio_timer::atomic::imp::AtomicU64::store (5 samples, 0.01%)</title><rect x="1126.3" y="997" width="0.1" height="15.0" fill="rgb(230,118,47)" rx="2" ry="2" />
<text  x="1129.32" y="1007.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.01%)</title><rect x="979.6" y="1285" width="0.2" height="15.0" fill="rgb(224,222,49)" rx="2" ry="2" />
<text  x="982.64" y="1295.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (6 samples, 0.01%)</title><rect x="1025.6" y="693" width="0.1" height="15.0" fill="rgb(210,27,8)" rx="2" ry="2" />
<text  x="1028.62" y="703.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_init (88 samples, 0.16%)</title><rect x="238.6" y="1285" width="1.8" height="15.0" fill="rgb(221,42,8)" rx="2" ry="2" />
<text  x="241.57" y="1295.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::as_leaf_mut (74 samples, 0.13%)</title><rect x="351.0" y="1253" width="1.6" height="15.0" fill="rgb(227,174,37)" rx="2" ry="2" />
<text  x="354.01" y="1263.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (468 samples, 0.84%)</title><rect x="281.5" y="1285" width="9.9" height="15.0" fill="rgb(228,73,48)" rx="2" ry="2" />
<text  x="284.45" y="1295.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::notify (7 samples, 0.01%)</title><rect x="1055.6" y="1173" width="0.2" height="15.0" fill="rgb(241,205,19)" rx="2" ry="2" />
<text  x="1058.64" y="1183.5" ></text>
</g>
<g >
<title>noria::controller::ControllerHandle&lt;A&gt;::export_data (13 samples, 0.02%)</title><rect x="985.9" y="1301" width="0.3" height="15.0" fill="rgb(254,91,9)" rx="2" ry="2" />
<text  x="988.90" y="1311.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 0.02%)</title><rect x="1027.7" y="1141" width="0.3" height="15.0" fill="rgb(224,65,6)" rx="2" ry="2" />
<text  x="1030.74" y="1151.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="1036.5" y="1077" width="0.2" height="15.0" fill="rgb(209,39,37)" rx="2" ry="2" />
<text  x="1039.48" y="1087.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (16 samples, 0.03%)</title><rect x="1049.4" y="1493" width="0.3" height="15.0" fill="rgb(212,221,9)" rx="2" ry="2" />
<text  x="1052.38" y="1503.5" ></text>
</g>
<g >
<title>indexmap::map::hash_elem_using (7 samples, 0.01%)</title><rect x="1133.2" y="677" width="0.1" height="15.0" fill="rgb(243,88,1)" rx="2" ry="2" />
<text  x="1136.15" y="687.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (38 samples, 0.07%)</title><rect x="1026.6" y="1349" width="0.8" height="15.0" fill="rgb(211,181,13)" rx="2" ry="2" />
<text  x="1029.64" y="1359.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::DropNotifyService&lt;Svc&gt; as tower_service::Service&lt;Request&gt;&gt;::poll_ready (31 samples, 0.06%)</title><rect x="1005.3" y="1525" width="0.7" height="15.0" fill="rgb(231,104,14)" rx="2" ry="2" />
<text  x="1008.31" y="1535.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (241 samples, 0.43%)</title><rect x="1176.0" y="901" width="5.2" height="15.0" fill="rgb(237,173,0)" rx="2" ry="2" />
<text  x="1179.04" y="911.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (14 samples, 0.03%)</title><rect x="983.6" y="1205" width="0.3" height="15.0" fill="rgb(207,20,3)" rx="2" ry="2" />
<text  x="986.65" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::park (27 samples, 0.05%)</title><rect x="193.3" y="1269" width="0.6" height="15.0" fill="rgb(219,224,19)" rx="2" ry="2" />
<text  x="196.33" y="1279.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8 samples, 0.01%)</title><rect x="559.9" y="1141" width="0.2" height="15.0" fill="rgb(240,202,53)" rx="2" ry="2" />
<text  x="562.95" y="1151.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (8 samples, 0.01%)</title><rect x="192.6" y="1573" width="0.2" height="15.0" fill="rgb(209,53,2)" rx="2" ry="2" />
<text  x="195.63" y="1583.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNot&lt;T&gt;&gt;::serialize (33 samples, 0.06%)</title><rect x="998.0" y="1445" width="0.7" height="15.0" fill="rgb(231,87,12)" rx="2" ry="2" />
<text  x="1001.01" y="1455.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (24 samples, 0.04%)</title><rect x="825.0" y="1029" width="0.5" height="15.0" fill="rgb(218,136,33)" rx="2" ry="2" />
<text  x="828.04" y="1039.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (230 samples, 0.41%)</title><rect x="931.3" y="1333" width="4.9" height="15.0" fill="rgb(222,203,5)" rx="2" ry="2" />
<text  x="934.32" y="1343.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (7 samples, 0.01%)</title><rect x="1030.3" y="1269" width="0.2" height="15.0" fill="rgb(210,79,11)" rx="2" ry="2" />
<text  x="1033.33" y="1279.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (12 samples, 0.02%)</title><rect x="1022.2" y="1445" width="0.2" height="15.0" fill="rgb(250,172,13)" rx="2" ry="2" />
<text  x="1025.18" y="1455.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::notify (148 samples, 0.27%)</title><rect x="1143.4" y="1029" width="3.1" height="15.0" fill="rgb(214,17,49)" rx="2" ry="2" />
<text  x="1146.40" y="1039.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (14 samples, 0.03%)</title><rect x="438.7" y="1269" width="0.3" height="15.0" fill="rgb(220,200,53)" rx="2" ry="2" />
<text  x="441.71" y="1279.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::swap_remove (10 samples, 0.02%)</title><rect x="1010.4" y="1445" width="0.3" height="15.0" fill="rgb(243,52,37)" rx="2" ry="2" />
<text  x="1013.45" y="1455.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default (21 samples, 0.04%)</title><rect x="997.2" y="1461" width="0.4" height="15.0" fill="rgb(220,17,43)" rx="2" ry="2" />
<text  x="1000.16" y="1471.5" ></text>
</g>
<g >
<title>__rg_alloc (125 samples, 0.22%)</title><rect x="211.6" y="1285" width="2.7" height="15.0" fill="rgb(249,48,27)" rx="2" ry="2" />
<text  x="214.60" y="1295.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv_mut (364 samples, 0.65%)</title><rect x="961.9" y="1285" width="7.8" height="15.0" fill="rgb(216,42,10)" rx="2" ry="2" />
<text  x="964.94" y="1295.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (25 samples, 0.04%)</title><rect x="1108.4" y="549" width="0.6" height="15.0" fill="rgb(208,95,18)" rx="2" ry="2" />
<text  x="1111.43" y="559.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (12 samples, 0.02%)</title><rect x="1029.9" y="1301" width="0.3" height="15.0" fill="rgb(218,135,5)" rx="2" ry="2" />
<text  x="1032.95" y="1311.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (6 samples, 0.01%)</title><rect x="10.8" y="853" width="0.1" height="15.0" fill="rgb(245,51,50)" rx="2" ry="2" />
<text  x="13.79" y="863.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::chan::Tx&lt;T,S&gt;::try_send (22 samples, 0.04%)</title><rect x="187.6" y="1317" width="0.5" height="15.0" fill="rgb(239,34,38)" rx="2" ry="2" />
<text  x="190.62" y="1327.5" ></text>
</g>
<g >
<title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (35 samples, 0.06%)</title><rect x="633.3" y="1285" width="0.7" height="15.0" fill="rgb(226,174,48)" rx="2" ry="2" />
<text  x="636.26" y="1295.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (7 samples, 0.01%)</title><rect x="982.6" y="1237" width="0.1" height="15.0" fill="rgb(252,168,35)" rx="2" ry="2" />
<text  x="985.56" y="1247.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (17 samples, 0.03%)</title><rect x="1119.6" y="981" width="0.3" height="15.0" fill="rgb(211,109,32)" rx="2" ry="2" />
<text  x="1122.57" y="991.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll1 (145 samples, 0.26%)</title><rect x="1122.9" y="949" width="3.1" height="15.0" fill="rgb(205,160,41)" rx="2" ry="2" />
<text  x="1125.91" y="959.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::wrappers::ClientResponseFutInner&lt;T,E&gt; as futures::future::Future&gt;::poll (45 samples, 0.08%)</title><rect x="181.1" y="1461" width="0.9" height="15.0" fill="rgb(235,203,41)" rx="2" ry="2" />
<text  x="184.09" y="1471.5" ></text>
</g>
<g >
<title>_rjem_je_tcache_cleanup (11 samples, 0.02%)</title><rect x="1060.4" y="1525" width="0.2" height="15.0" fill="rgb(225,43,21)" rx="2" ry="2" />
<text  x="1063.37" y="1535.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (126 samples, 0.23%)</title><rect x="1038.4" y="1221" width="2.7" height="15.0" fill="rgb(206,52,23)" rx="2" ry="2" />
<text  x="1041.41" y="1231.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (131 samples, 0.24%)</title><rect x="613.2" y="1237" width="2.8" height="15.0" fill="rgb(238,132,43)" rx="2" ry="2" />
<text  x="616.19" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (6,082 samples, 10.94%)</title><rect x="1060.7" y="1221" width="129.0" height="15.0" fill="rgb(244,177,26)" rx="2" ry="2" />
<text  x="1063.65" y="1231.5" >tokio_threadpool..</text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (30 samples, 0.05%)</title><rect x="1022.9" y="1573" width="0.6" height="15.0" fill="rgb(229,135,31)" rx="2" ry="2" />
<text  x="1025.90" y="1583.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (309 samples, 0.56%)</title><rect x="1148.2" y="1045" width="6.6" height="15.0" fill="rgb(208,0,27)" rx="2" ry="2" />
<text  x="1151.24" y="1055.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (504 samples, 0.91%)</title><rect x="662.9" y="1221" width="10.7" height="15.0" fill="rgb(209,173,14)" rx="2" ry="2" />
<text  x="665.90" y="1231.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::is_some (23 samples, 0.04%)</title><rect x="701.1" y="1301" width="0.4" height="15.0" fill="rgb(253,79,27)" rx="2" ry="2" />
<text  x="704.05" y="1311.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::Mutex::destroy (77 samples, 0.14%)</title><rect x="906.4" y="1253" width="1.6" height="15.0" fill="rgb(243,173,9)" rx="2" ry="2" />
<text  x="909.37" y="1263.5" ></text>
</g>
<g >
<title>sz_index2size_lookup (73 samples, 0.13%)</title><rect x="75.7" y="1525" width="1.6" height="15.0" fill="rgb(229,47,48)" rx="2" ry="2" />
<text  x="78.74" y="1535.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (14 samples, 0.03%)</title><rect x="1049.7" y="1301" width="0.3" height="15.0" fill="rgb(219,137,41)" rx="2" ry="2" />
<text  x="1052.72" y="1311.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::notify (6 samples, 0.01%)</title><rect x="996.3" y="1141" width="0.1" height="15.0" fill="rgb(249,24,47)" rx="2" ry="2" />
<text  x="999.27" y="1151.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (174 samples, 0.31%)</title><rect x="1053.0" y="1461" width="3.7" height="15.0" fill="rgb(244,219,31)" rx="2" ry="2" />
<text  x="1056.01" y="1471.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (12 samples, 0.02%)</title><rect x="814.8" y="1013" width="0.3" height="15.0" fill="rgb(250,167,6)" rx="2" ry="2" />
<text  x="817.83" y="1023.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::Thread::new::thread_start (12 samples, 0.02%)</title><rect x="1029.9" y="1589" width="0.3" height="15.0" fill="rgb(205,39,27)" rx="2" ry="2" />
<text  x="1032.95" y="1599.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::spawn_thread::_$u7b$$u7b$closure$u7d$$u7d$::ha7200d58e6efae3b (10 samples, 0.02%)</title><rect x="1026.0" y="1477" width="0.2" height="15.0" fill="rgb(251,32,37)" rx="2" ry="2" />
<text  x="1028.98" y="1487.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::get (69 samples, 0.12%)</title><rect x="875.0" y="1285" width="1.5" height="15.0" fill="rgb(236,80,41)" rx="2" ry="2" />
<text  x="878.03" y="1295.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (6 samples, 0.01%)</title><rect x="1031.2" y="1029" width="0.1" height="15.0" fill="rgb(221,72,23)" rx="2" ry="2" />
<text  x="1034.18" y="1039.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (5 samples, 0.01%)</title><rect x="1041.3" y="869" width="0.1" height="15.0" fill="rgb(249,188,4)" rx="2" ry="2" />
<text  x="1044.32" y="879.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (6 samples, 0.01%)</title><rect x="1034.6" y="1349" width="0.1" height="15.0" fill="rgb(240,80,35)" rx="2" ry="2" />
<text  x="1037.57" y="1359.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.01%)</title><rect x="981.1" y="1109" width="0.1" height="15.0" fill="rgb(227,210,24)" rx="2" ry="2" />
<text  x="984.08" y="1119.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (49 samples, 0.09%)</title><rect x="656.0" y="1205" width="1.1" height="15.0" fill="rgb(212,11,31)" rx="2" ry="2" />
<text  x="659.05" y="1215.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (17 samples, 0.03%)</title><rect x="1031.3" y="885" width="0.4" height="15.0" fill="rgb(247,180,6)" rx="2" ry="2" />
<text  x="1034.30" y="895.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h5f075d7206874737 (11 samples, 0.02%)</title><rect x="977.1" y="1413" width="0.2" height="15.0" fill="rgb(238,63,36)" rx="2" ry="2" />
<text  x="980.07" y="1423.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (21 samples, 0.04%)</title><rect x="997.2" y="1349" width="0.4" height="15.0" fill="rgb(254,62,48)" rx="2" ry="2" />
<text  x="1000.16" y="1359.5" ></text>
</g>
<g >
<title>noria::controller::ControllerHandle&lt;A&gt;::import_data (112 samples, 0.20%)</title><rect x="986.4" y="1301" width="2.3" height="15.0" fill="rgb(244,84,4)" rx="2" ry="2" />
<text  x="989.36" y="1311.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (6 samples, 0.01%)</title><rect x="996.3" y="1397" width="0.1" height="15.0" fill="rgb(247,165,1)" rx="2" ry="2" />
<text  x="999.27" y="1407.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (7 samples, 0.01%)</title><rect x="1019.3" y="1541" width="0.1" height="15.0" fill="rgb(242,169,14)" rx="2" ry="2" />
<text  x="1022.27" y="1551.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (7 samples, 0.01%)</title><rect x="1131.6" y="645" width="0.1" height="15.0" fill="rgb(221,89,20)" rx="2" ry="2" />
<text  x="1134.58" y="655.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (17 samples, 0.03%)</title><rect x="685.6" y="1157" width="0.3" height="15.0" fill="rgb(205,165,8)" rx="2" ry="2" />
<text  x="688.59" y="1167.5" ></text>
</g>
<g >
<title>alloc::rc::RcBoxPtr::dec_strong (522 samples, 0.94%)</title><rect x="872.4" y="1317" width="11.1" height="15.0" fill="rgb(236,156,29)" rx="2" ry="2" />
<text  x="875.40" y="1327.5" ></text>
</g>
<g >
<title>core::alloc::Layout::size (16 samples, 0.03%)</title><rect x="806.6" y="1093" width="0.3" height="15.0" fill="rgb(244,27,39)" rx="2" ry="2" />
<text  x="809.55" y="1103.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (5 samples, 0.01%)</title><rect x="1007.6" y="1365" width="0.1" height="15.0" fill="rgb(208,226,15)" rx="2" ry="2" />
<text  x="1010.60" y="1375.5" ></text>
</g>
<g >
<title>&lt;noria::table::Table as tower_service::Service&lt;noria::table::Input&gt;&gt;::call (8 samples, 0.01%)</title><rect x="11.1" y="1509" width="0.2" height="15.0" fill="rgb(241,74,31)" rx="2" ry="2" />
<text  x="14.10" y="1519.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (21 samples, 0.04%)</title><rect x="1022.9" y="1445" width="0.5" height="15.0" fill="rgb(235,6,33)" rx="2" ry="2" />
<text  x="1025.92" y="1455.5" ></text>
</g>
<g >
<title>futures::task_impl::with (8 samples, 0.01%)</title><rect x="1003.1" y="1349" width="0.2" height="15.0" fill="rgb(252,208,0)" rx="2" ry="2" />
<text  x="1006.13" y="1359.5" ></text>
</g>
<g >
<title>core::mem::size_of (5 samples, 0.01%)</title><rect x="509.0" y="1285" width="0.1" height="15.0" fill="rgb(254,12,25)" rx="2" ry="2" />
<text  x="511.96" y="1295.5" ></text>
</g>
<g >
<title>__rg_alloc (94 samples, 0.17%)</title><rect x="685.1" y="1189" width="2.0" height="15.0" fill="rgb(212,131,53)" rx="2" ry="2" />
<text  x="688.10" y="1199.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="1034.7" y="1413" width="0.2" height="15.0" fill="rgb(208,171,18)" rx="2" ry="2" />
<text  x="1037.70" y="1423.5" ></text>
</g>
<g >
<title>&lt;&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple::Access&lt;R,O&gt; as serde::de::SeqAccess&gt;::next_element_seed (144 samples, 0.26%)</title><rect x="1000.0" y="1365" width="3.0" height="15.0" fill="rgb(228,102,0)" rx="2" ry="2" />
<text  x="1002.99" y="1375.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.01%)</title><rect x="1027.6" y="1141" width="0.1" height="15.0" fill="rgb(252,138,10)" rx="2" ry="2" />
<text  x="1030.57" y="1151.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (20 samples, 0.04%)</title><rect x="1029.0" y="1013" width="0.4" height="15.0" fill="rgb(243,180,40)" rx="2" ry="2" />
<text  x="1031.97" y="1023.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (10 samples, 0.02%)</title><rect x="736.3" y="1237" width="0.3" height="15.0" fill="rgb(216,105,28)" rx="2" ry="2" />
<text  x="739.34" y="1247.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (13 samples, 0.02%)</title><rect x="397.9" y="1269" width="0.3" height="15.0" fill="rgb(234,168,40)" rx="2" ry="2" />
<text  x="400.90" y="1279.5" ></text>
</g>
<g >
<title>serde::de::SeqAccess::next_element (11 samples, 0.02%)</title><rect x="1046.9" y="821" width="0.2" height="15.0" fill="rgb(230,194,25)" rx="2" ry="2" />
<text  x="1049.86" y="831.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (16 samples, 0.03%)</title><rect x="1013.1" y="1493" width="0.4" height="15.0" fill="rgb(244,69,44)" rx="2" ry="2" />
<text  x="1016.12" y="1503.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (9 samples, 0.02%)</title><rect x="10.0" y="1301" width="0.2" height="15.0" fill="rgb(251,222,23)" rx="2" ry="2" />
<text  x="13.02" y="1311.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::h21cd600e9f97af32 (38 samples, 0.07%)</title><rect x="1026.6" y="1461" width="0.8" height="15.0" fill="rgb(211,198,35)" rx="2" ry="2" />
<text  x="1029.64" y="1471.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts_mut (6 samples, 0.01%)</title><rect x="439.4" y="1269" width="0.1" height="15.0" fill="rgb(228,169,5)" rx="2" ry="2" />
<text  x="442.38" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (6 samples, 0.01%)</title><rect x="1031.0" y="901" width="0.2" height="15.0" fill="rgb(229,107,20)" rx="2" ry="2" />
<text  x="1034.05" y="911.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (83 samples, 0.15%)</title><rect x="1138.0" y="1045" width="1.8" height="15.0" fill="rgb(218,229,26)" rx="2" ry="2" />
<text  x="1141.01" y="1055.5" ></text>
</g>
<g >
<title>ep_send_events_proc (34 samples, 0.06%)</title><rect x="1104.3" y="805" width="0.7" height="15.0" fill="rgb(230,35,3)" rx="2" ry="2" />
<text  x="1107.32" y="815.5" ></text>
</g>
<g >
<title>net_rx_action (19 samples, 0.03%)</title><rect x="1050.4" y="501" width="0.4" height="15.0" fill="rgb(246,184,13)" rx="2" ry="2" />
<text  x="1053.38" y="511.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (7 samples, 0.01%)</title><rect x="223.7" y="1269" width="0.2" height="15.0" fill="rgb(213,179,6)" rx="2" ry="2" />
<text  x="226.72" y="1279.5" ></text>
</g>
<g >
<title>noria::trace_next_op (5 samples, 0.01%)</title><rect x="194.9" y="1221" width="0.1" height="15.0" fill="rgb(207,208,47)" rx="2" ry="2" />
<text  x="197.86" y="1231.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (38 samples, 0.07%)</title><rect x="1026.6" y="1317" width="0.8" height="15.0" fill="rgb(240,179,34)" rx="2" ry="2" />
<text  x="1029.64" y="1327.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.01%)</title><rect x="189.2" y="1205" width="0.2" height="15.0" fill="rgb(224,108,19)" rx="2" ry="2" />
<text  x="192.24" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::he0977de3e88b310a (15 samples, 0.03%)</title><rect x="188.6" y="1333" width="0.4" height="15.0" fill="rgb(242,212,48)" rx="2" ry="2" />
<text  x="191.64" y="1343.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::write (8 samples, 0.01%)</title><rect x="983.8" y="1077" width="0.1" height="15.0" fill="rgb(206,193,52)" rx="2" ry="2" />
<text  x="986.75" y="1087.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Sender&lt;T&gt;::send (6 samples, 0.01%)</title><rect x="1040.5" y="949" width="0.1" height="15.0" fill="rgb(247,18,41)" rx="2" ry="2" />
<text  x="1043.47" y="959.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (24 samples, 0.04%)</title><rect x="1046.6" y="997" width="0.5" height="15.0" fill="rgb(240,173,35)" rx="2" ry="2" />
<text  x="1049.60" y="1007.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (5 samples, 0.01%)</title><rect x="1022.3" y="1237" width="0.1" height="15.0" fill="rgb(238,130,1)" rx="2" ry="2" />
<text  x="1025.33" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::std::_$LT$impl$u20$futures..task_impl..Spawn$LT$F$GT$$GT$::wait_future::_$u7b$$u7b$closure$u7d$$u7d$::hd0f6d5cc3fe9bd86 (22 samples, 0.04%)</title><rect x="189.4" y="1445" width="0.5" height="15.0" fill="rgb(249,99,29)" rx="2" ry="2" />
<text  x="192.38" y="1455.5" ></text>
</g>
<g >
<title>tokio_reactor::Reactor::dispatch (193 samples, 0.35%)</title><rect x="1106.5" y="965" width="4.1" height="15.0" fill="rgb(222,79,39)" rx="2" ry="2" />
<text  x="1109.55" y="975.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::unpark (17 samples, 0.03%)</title><rect x="1073.1" y="1013" width="0.3" height="15.0" fill="rgb(243,115,32)" rx="2" ry="2" />
<text  x="1076.06" y="1023.5" ></text>
</g>
<g >
<title>core::alloc::Layout::size (9 samples, 0.02%)</title><rect x="228.9" y="1253" width="0.1" height="15.0" fill="rgb(237,217,7)" rx="2" ry="2" />
<text  x="231.85" y="1263.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (9 samples, 0.02%)</title><rect x="1025.8" y="1509" width="0.2" height="15.0" fill="rgb(248,133,37)" rx="2" ry="2" />
<text  x="1028.79" y="1519.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit (6 samples, 0.01%)</title><rect x="996.3" y="1253" width="0.1" height="15.0" fill="rgb(250,166,30)" rx="2" ry="2" />
<text  x="999.27" y="1263.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (17 samples, 0.03%)</title><rect x="1025.4" y="1429" width="0.4" height="15.0" fill="rgb(224,198,30)" rx="2" ry="2" />
<text  x="1028.43" y="1439.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (10 samples, 0.02%)</title><rect x="995.3" y="1077" width="0.2" height="15.0" fill="rgb(228,198,7)" rx="2" ry="2" />
<text  x="998.32" y="1087.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (18 samples, 0.03%)</title><rect x="192.1" y="1205" width="0.4" height="15.0" fill="rgb(214,173,1)" rx="2" ry="2" />
<text  x="195.10" y="1215.5" ></text>
</g>
<g >
<title>&lt;alloc::collections::btree::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (951 samples, 1.71%)</title><rect x="954.6" y="1317" width="20.2" height="15.0" fill="rgb(236,147,1)" rx="2" ry="2" />
<text  x="957.64" y="1327.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.01%)</title><rect x="820.2" y="1077" width="0.1" height="15.0" fill="rgb(223,204,22)" rx="2" ry="2" />
<text  x="823.20" y="1087.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (20 samples, 0.04%)</title><rect x="981.4" y="1077" width="0.4" height="15.0" fill="rgb(229,77,53)" rx="2" ry="2" />
<text  x="984.38" y="1087.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (12 samples, 0.02%)</title><rect x="995.3" y="1397" width="0.3" height="15.0" fill="rgb(210,20,49)" rx="2" ry="2" />
<text  x="998.32" y="1407.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::future::ResponseFuture&lt;T&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="194.7" y="1205" width="0.1" height="15.0" fill="rgb(245,127,4)" rx="2" ry="2" />
<text  x="197.71" y="1215.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (5 samples, 0.01%)</title><rect x="1131.4" y="117" width="0.1" height="15.0" fill="rgb(224,11,44)" rx="2" ry="2" />
<text  x="1134.37" y="127.5" ></text>
</g>
<g >
<title>&lt;futures::future::then::Then&lt;A,B,F&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="180.4" y="1333" width="0.2" height="15.0" fill="rgb(205,102,16)" rx="2" ry="2" />
<text  x="183.43" y="1343.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (26 samples, 0.05%)</title><rect x="1029.4" y="1141" width="0.5" height="15.0" fill="rgb(225,86,40)" rx="2" ry="2" />
<text  x="1032.39" y="1151.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (12 samples, 0.02%)</title><rect x="997.4" y="1045" width="0.2" height="15.0" fill="rgb(251,53,19)" rx="2" ry="2" />
<text  x="1000.35" y="1055.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (219 samples, 0.39%)</title><rect x="459.1" y="1221" width="4.6" height="15.0" fill="rgb(210,128,31)" rx="2" ry="2" />
<text  x="462.08" y="1231.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="1037.8" y="1365" width="0.2" height="15.0" fill="rgb(249,70,23)" rx="2" ry="2" />
<text  x="1040.82" y="1375.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (126 samples, 0.23%)</title><rect x="1038.4" y="1237" width="2.7" height="15.0" fill="rgb(209,215,14)" rx="2" ry="2" />
<text  x="1041.41" y="1247.5" ></text>
</g>
<g >
<title>alloc::collections::btree::search::search_tree (1,756 samples, 3.16%)</title><rect x="293.5" y="1317" width="37.3" height="15.0" fill="rgb(229,37,30)" rx="2" ry="2" />
<text  x="296.50" y="1327.5" >all..</text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (32 samples, 0.06%)</title><rect x="1037.1" y="1221" width="0.7" height="15.0" fill="rgb(228,105,6)" rx="2" ry="2" />
<text  x="1040.14" y="1231.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (29 samples, 0.05%)</title><rect x="1031.2" y="1221" width="0.6" height="15.0" fill="rgb(213,200,45)" rx="2" ry="2" />
<text  x="1034.18" y="1231.5" ></text>
</g>
<g >
<title>std::panicking::try (19 samples, 0.03%)</title><rect x="1052.6" y="1541" width="0.4" height="15.0" fill="rgb(238,129,23)" rx="2" ry="2" />
<text  x="1055.61" y="1551.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h3d3457b86cb67885 (21 samples, 0.04%)</title><rect x="997.2" y="1573" width="0.4" height="15.0" fill="rgb(223,194,48)" rx="2" ry="2" />
<text  x="1000.16" y="1583.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (64 samples, 0.12%)</title><rect x="535.2" y="1205" width="1.3" height="15.0" fill="rgb(208,124,53)" rx="2" ry="2" />
<text  x="538.19" y="1215.5" ></text>
</g>
<g >
<title>tokio_reactor::poll_evented::PollEvented&lt;E&gt;::poll_read_ready (12 samples, 0.02%)</title><rect x="1046.2" y="1173" width="0.3" height="15.0" fill="rgb(220,18,27)" rx="2" ry="2" />
<text  x="1049.20" y="1183.5" ></text>
</g>
<g >
<title>chan::Receiver&lt;T&gt;::try_recv (2,110 samples, 3.79%)</title><rect x="443.9" y="1285" width="44.8" height="15.0" fill="rgb(227,23,41)" rx="2" ry="2" />
<text  x="446.90" y="1295.5" >chan..</text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (26 samples, 0.05%)</title><rect x="1141.9" y="917" width="0.6" height="15.0" fill="rgb(250,152,45)" rx="2" ry="2" />
<text  x="1144.94" y="927.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::drop (5 samples, 0.01%)</title><rect x="180.5" y="1077" width="0.1" height="15.0" fill="rgb(226,116,38)" rx="2" ry="2" />
<text  x="183.45" y="1087.5" ></text>
</g>
<g >
<title>core::mem::replace (5 samples, 0.01%)</title><rect x="183.3" y="1493" width="0.1" height="15.0" fill="rgb(207,194,25)" rx="2" ry="2" />
<text  x="186.32" y="1503.5" ></text>
</g>
<g >
<title>futures::future::Future::wait (8 samples, 0.01%)</title><rect x="194.5" y="1557" width="0.2" height="15.0" fill="rgb(222,73,12)" rx="2" ry="2" />
<text  x="197.54" y="1567.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default (12 samples, 0.02%)</title><rect x="1015.2" y="1429" width="0.2" height="15.0" fill="rgb(207,92,8)" rx="2" ry="2" />
<text  x="1018.18" y="1439.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::bounded::Sender&lt;T&gt;::try_send (33 samples, 0.06%)</title><rect x="10.4" y="1509" width="0.7" height="15.0" fill="rgb(247,5,20)" rx="2" ry="2" />
<text  x="13.40" y="1519.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_enum (7 samples, 0.01%)</title><rect x="1022.5" y="1125" width="0.1" height="15.0" fill="rgb(234,20,12)" rx="2" ry="2" />
<text  x="1025.48" y="1135.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (23 samples, 0.04%)</title><rect x="1111.5" y="853" width="0.5" height="15.0" fill="rgb(246,185,26)" rx="2" ry="2" />
<text  x="1114.49" y="863.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="1023.5" y="1477" width="0.2" height="15.0" fill="rgb(244,46,42)" rx="2" ry="2" />
<text  x="1026.54" y="1487.5" ></text>
</g>
<g >
<title>core::ptr::write (29 samples, 0.05%)</title><rect x="697.6" y="1269" width="0.6" height="15.0" fill="rgb(217,137,18)" rx="2" ry="2" />
<text  x="700.55" y="1279.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.01%)</title><rect x="196.0" y="1349" width="0.1" height="15.0" fill="rgb(240,85,16)" rx="2" ry="2" />
<text  x="198.98" y="1359.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::as_mut_ptr (10 samples, 0.02%)</title><rect x="882.5" y="1205" width="0.2" height="15.0" fill="rgb(232,198,19)" rx="2" ry="2" />
<text  x="885.45" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::std::&lt;impl futures::task_impl::Spawn&lt;F&gt;&gt;::wait_future (5 samples, 0.01%)</title><rect x="192.5" y="1381" width="0.1" height="15.0" fill="rgb(237,221,39)" rx="2" ry="2" />
<text  x="195.48" y="1391.5" ></text>
</g>
<g >
<title>bincode::internal::serialize_into (7 samples, 0.01%)</title><rect x="1044.4" y="1349" width="0.2" height="15.0" fill="rgb(226,163,33)" rx="2" ry="2" />
<text  x="1047.44" y="1359.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="188.5" y="1525" width="0.1" height="15.0" fill="rgb(233,148,29)" rx="2" ry="2" />
<text  x="191.47" y="1535.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.01%)</title><rect x="1080.8" y="981" width="0.2" height="15.0" fill="rgb(214,111,17)" rx="2" ry="2" />
<text  x="1083.83" y="991.5" ></text>
</g>
<g >
<title>core::mem::swap (5 samples, 0.01%)</title><rect x="1047.3" y="1253" width="0.2" height="15.0" fill="rgb(212,33,22)" rx="2" ry="2" />
<text  x="1050.35" y="1263.5" ></text>
</g>
<g >
<title>ip_finish_output (6 samples, 0.01%)</title><rect x="1131.4" y="197" width="0.1" height="15.0" fill="rgb(205,94,25)" rx="2" ry="2" />
<text  x="1134.37" y="207.5" ></text>
</g>
<g >
<title>&lt;tokio_sync::oneshot::Receiver&lt;T&gt; as futures::future::Future&gt;::poll (50 samples, 0.09%)</title><rect x="182.2" y="1493" width="1.0" height="15.0" fill="rgb(207,78,53)" rx="2" ry="2" />
<text  x="185.17" y="1503.5" ></text>
</g>
<g >
<title>mio_extras::channel::SenderCtl::inc (5 samples, 0.01%)</title><rect x="1004.3" y="1429" width="0.1" height="15.0" fill="rgb(250,212,27)" rx="2" ry="2" />
<text  x="1007.25" y="1439.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *const T&gt;::offset (31 samples, 0.06%)</title><rect x="550.6" y="1205" width="0.6" height="15.0" fill="rgb(250,81,0)" rx="2" ry="2" />
<text  x="553.59" y="1215.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNot&lt;T&gt;&gt;::serialize (13 samples, 0.02%)</title><rect x="1027.7" y="1221" width="0.3" height="15.0" fill="rgb(207,74,4)" rx="2" ry="2" />
<text  x="1030.74" y="1231.5" ></text>
</g>
<g >
<title>new_sync_write (6 samples, 0.01%)</title><rect x="983.5" y="997" width="0.1" height="15.0" fill="rgb(215,205,40)" rx="2" ry="2" />
<text  x="986.52" y="1007.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (17 samples, 0.03%)</title><rect x="1036.1" y="1125" width="0.4" height="15.0" fill="rgb(253,146,29)" rx="2" ry="2" />
<text  x="1039.12" y="1135.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (5 samples, 0.01%)</title><rect x="11.1" y="1397" width="0.1" height="15.0" fill="rgb(253,224,30)" rx="2" ry="2" />
<text  x="14.10" y="1407.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (22 samples, 0.04%)</title><rect x="207.5" y="1301" width="0.5" height="15.0" fill="rgb(253,163,36)" rx="2" ry="2" />
<text  x="210.55" y="1311.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::TableOperation&gt;::serialize (5 samples, 0.01%)</title><rect x="1023.8" y="1205" width="0.1" height="15.0" fill="rgb(250,218,35)" rx="2" ry="2" />
<text  x="1026.81" y="1215.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (12 samples, 0.02%)</title><rect x="996.3" y="1477" width="0.2" height="15.0" fill="rgb(239,229,13)" rx="2" ry="2" />
<text  x="999.27" y="1487.5" ></text>
</g>
<g >
<title>mio_extras::channel::Sender$LT$T$GT$::send::_$u7b$$u7b$closure$u7d$$u7d$::h9f332907c7c3a33a (5 samples, 0.01%)</title><rect x="1004.3" y="1445" width="0.1" height="15.0" fill="rgb(236,41,38)" rx="2" ry="2" />
<text  x="1007.25" y="1455.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run (17 samples, 0.03%)</title><rect x="1025.4" y="1365" width="0.4" height="15.0" fill="rgb(237,19,12)" rx="2" ry="2" />
<text  x="1028.43" y="1375.5" ></text>
</g>
<g >
<title>pipe_write (15 samples, 0.03%)</title><rect x="185.4" y="853" width="0.3" height="15.0" fill="rgb(251,160,31)" rx="2" ry="2" />
<text  x="188.35" y="863.5" ></text>
</g>
<g >
<title>iealloc (7 samples, 0.01%)</title><rect x="1017.6" y="1525" width="0.1" height="15.0" fill="rgb(206,124,47)" rx="2" ry="2" />
<text  x="1020.55" y="1535.5" ></text>
</g>
<g >
<title>futures::task_impl::current (8 samples, 0.01%)</title><rect x="1060.2" y="1173" width="0.2" height="15.0" fill="rgb(229,208,32)" rx="2" ry="2" />
<text  x="1063.18" y="1183.5" ></text>
</g>
<g >
<title>&lt;async_bincode::reader::AsyncBincodeReader&lt;R,T&gt; as futures::stream::Stream&gt;::poll (14 samples, 0.03%)</title><rect x="1037.4" y="1109" width="0.3" height="15.0" fill="rgb(235,186,6)" rx="2" ry="2" />
<text  x="1040.39" y="1119.5" ></text>
</g>
<g >
<title>arena_malloc (1,048 samples, 1.88%)</title><rect x="45.7" y="1509" width="22.2" height="15.0" fill="rgb(245,139,12)" rx="2" ry="2" />
<text  x="48.69" y="1519.5" >a..</text>
</g>
<g >
<title>__rust_maybe_catch_panic (14 samples, 0.03%)</title><rect x="1049.7" y="1237" width="0.3" height="15.0" fill="rgb(232,51,19)" rx="2" ry="2" />
<text  x="1052.72" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (21 samples, 0.04%)</title><rect x="997.2" y="1237" width="0.4" height="15.0" fill="rgb(217,206,21)" rx="2" ry="2" />
<text  x="1000.16" y="1247.5" ></text>
</g>
<g >
<title>mio::poll::enqueue_with_wakeup (27 samples, 0.05%)</title><rect x="1108.4" y="629" width="0.6" height="15.0" fill="rgb(205,168,46)" rx="2" ry="2" />
<text  x="1111.39" y="639.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (203 samples, 0.37%)</title><rect x="387.5" y="1301" width="4.3" height="15.0" fill="rgb(216,19,28)" rx="2" ry="2" />
<text  x="390.50" y="1311.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::entry (32 samples, 0.06%)</title><rect x="1070.9" y="1061" width="0.6" height="15.0" fill="rgb(217,130,3)" rx="2" ry="2" />
<text  x="1073.86" y="1071.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessNode::enqueue_with_wakeup (27 samples, 0.05%)</title><rect x="1028.4" y="965" width="0.6" height="15.0" fill="rgb(229,32,43)" rx="2" ry="2" />
<text  x="1031.40" y="975.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (5,495 samples, 9.88%)</title><rect x="737.7" y="1269" width="116.6" height="15.0" fill="rgb(235,81,3)" rx="2" ry="2" />
<text  x="740.66" y="1279.5" >core::iter::tr..</text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (6 samples, 0.01%)</title><rect x="1127.0" y="933" width="0.1" height="15.0" fill="rgb(222,220,30)" rx="2" ry="2" />
<text  x="1129.98" y="943.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (5 samples, 0.01%)</title><rect x="1143.6" y="965" width="0.1" height="15.0" fill="rgb(226,229,33)" rx="2" ry="2" />
<text  x="1146.59" y="975.5" ></text>
</g>
<g >
<title>tokio_reactor::HandlePriv::wakeup (5 samples, 0.01%)</title><rect x="1024.8" y="1205" width="0.1" height="15.0" fill="rgb(228,51,32)" rx="2" ry="2" />
<text  x="1027.79" y="1215.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1022.3" y="1253" width="0.1" height="15.0" fill="rgb(236,12,18)" rx="2" ry="2" />
<text  x="1025.33" y="1263.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (7 samples, 0.01%)</title><rect x="1133.7" y="741" width="0.2" height="15.0" fill="rgb(225,211,21)" rx="2" ry="2" />
<text  x="1136.73" y="751.5" ></text>
</g>
<g >
<title>core::ptr::read (14 samples, 0.03%)</title><rect x="1118.3" y="917" width="0.3" height="15.0" fill="rgb(243,184,34)" rx="2" ry="2" />
<text  x="1121.26" y="927.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (15 samples, 0.03%)</title><rect x="1028.1" y="1301" width="0.3" height="15.0" fill="rgb(232,94,21)" rx="2" ry="2" />
<text  x="1031.06" y="1311.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (61 samples, 0.11%)</title><rect x="1031.2" y="1429" width="1.3" height="15.0" fill="rgb(217,162,50)" rx="2" ry="2" />
<text  x="1034.18" y="1439.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::park_timeout (584 samples, 1.05%)</title><rect x="1073.7" y="1045" width="12.4" height="15.0" fill="rgb(246,22,51)" rx="2" ry="2" />
<text  x="1076.74" y="1055.5" ></text>
</g>
<g >
<title>bincode::internal::serialize_into (7 samples, 0.01%)</title><rect x="1023.8" y="1413" width="0.1" height="15.0" fill="rgb(206,23,48)" rx="2" ry="2" />
<text  x="1026.77" y="1423.5" ></text>
</g>
<g >
<title>sz_size2index (106 samples, 0.19%)</title><rect x="77.3" y="1541" width="2.2" height="15.0" fill="rgb(245,175,17)" rx="2" ry="2" />
<text  x="80.28" y="1551.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts_mut (6 samples, 0.01%)</title><rect x="660.3" y="1253" width="0.1" height="15.0" fill="rgb(233,35,33)" rx="2" ry="2" />
<text  x="663.27" y="1263.5" ></text>
</g>
<g >
<title>alloc::sync::Weak&lt;T&gt;::upgrade (6 samples, 0.01%)</title><rect x="1146.4" y="949" width="0.1" height="15.0" fill="rgb(215,167,14)" rx="2" ry="2" />
<text  x="1149.37" y="959.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (7 samples, 0.01%)</title><rect x="1056.9" y="1477" width="0.2" height="15.0" fill="rgb(214,125,29)" rx="2" ry="2" />
<text  x="1059.94" y="1487.5" ></text>
</g>
<g >
<title>&lt;usize as rand::distributions::range::SampleRange&gt;::sample_range (1,649 samples, 2.97%)</title><rect x="567.7" y="1253" width="35.0" height="15.0" fill="rgb(218,35,39)" rx="2" ry="2" />
<text  x="570.74" y="1263.5" >&lt;u..</text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (22 samples, 0.04%)</title><rect x="1024.0" y="1445" width="0.5" height="15.0" fill="rgb(226,23,35)" rx="2" ry="2" />
<text  x="1027.01" y="1455.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (5 samples, 0.01%)</title><rect x="1026.2" y="1029" width="0.1" height="15.0" fill="rgb(247,19,41)" rx="2" ry="2" />
<text  x="1029.19" y="1039.5" ></text>
</g>
<g >
<title>&lt;jemallocator::Jemalloc as core::alloc::GlobalAlloc&gt;::alloc (53 samples, 0.10%)</title><rect x="685.3" y="1173" width="1.2" height="15.0" fill="rgb(238,106,24)" rx="2" ry="2" />
<text  x="688.33" y="1183.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (89 samples, 0.16%)</title><rect x="381.1" y="1285" width="1.9" height="15.0" fill="rgb(247,28,32)" rx="2" ry="2" />
<text  x="384.10" y="1295.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (10 samples, 0.02%)</title><rect x="1014.6" y="757" width="0.2" height="15.0" fill="rgb(253,88,41)" rx="2" ry="2" />
<text  x="1017.63" y="767.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.02%)</title><rect x="1026.0" y="1381" width="0.2" height="15.0" fill="rgb(230,165,20)" rx="2" ry="2" />
<text  x="1028.98" y="1391.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="1015.2" y="1077" width="0.1" height="15.0" fill="rgb(224,25,5)" rx="2" ry="2" />
<text  x="1018.18" y="1087.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (19 samples, 0.03%)</title><rect x="1045.8" y="1093" width="0.4" height="15.0" fill="rgb(230,208,15)" rx="2" ry="2" />
<text  x="1048.80" y="1103.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="826.5" y="997" width="0.1" height="15.0" fill="rgb(211,218,21)" rx="2" ry="2" />
<text  x="829.46" y="1007.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (18 samples, 0.03%)</title><rect x="1053.9" y="1189" width="0.4" height="15.0" fill="rgb(215,164,24)" rx="2" ry="2" />
<text  x="1056.90" y="1199.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (69 samples, 0.12%)</title><rect x="272.2" y="1269" width="1.5" height="15.0" fill="rgb(238,55,7)" rx="2" ry="2" />
<text  x="275.20" y="1279.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (17 samples, 0.03%)</title><rect x="1025.4" y="1397" width="0.4" height="15.0" fill="rgb(210,229,30)" rx="2" ry="2" />
<text  x="1028.43" y="1407.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (109 samples, 0.20%)</title><rect x="181.0" y="1525" width="2.3" height="15.0" fill="rgb(224,167,45)" rx="2" ry="2" />
<text  x="183.96" y="1535.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::poll_complete (48 samples, 0.09%)</title><rect x="1050.1" y="997" width="1.0" height="15.0" fill="rgb(232,127,42)" rx="2" ry="2" />
<text  x="1053.06" y="1007.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (18 samples, 0.03%)</title><rect x="1034.2" y="1573" width="0.4" height="15.0" fill="rgb(238,25,51)" rx="2" ry="2" />
<text  x="1037.19" y="1583.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Root&lt;K,V&gt;::shared_empty_root (124 samples, 0.22%)</title><rect x="205.4" y="1317" width="2.6" height="15.0" fill="rgb(214,16,16)" rx="2" ry="2" />
<text  x="208.38" y="1327.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (5 samples, 0.01%)</title><rect x="1035.9" y="1045" width="0.1" height="15.0" fill="rgb(247,202,11)" rx="2" ry="2" />
<text  x="1038.89" y="1055.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (8 samples, 0.01%)</title><rect x="1034.7" y="1429" width="0.2" height="15.0" fill="rgb(207,134,31)" rx="2" ry="2" />
<text  x="1037.70" y="1439.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="1037.8" y="1317" width="0.2" height="15.0" fill="rgb(235,52,39)" rx="2" ry="2" />
<text  x="1040.82" y="1327.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (6 samples, 0.01%)</title><rect x="1045.0" y="949" width="0.1" height="15.0" fill="rgb(225,182,38)" rx="2" ry="2" />
<text  x="1047.97" y="959.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (20 samples, 0.04%)</title><rect x="1038.0" y="1221" width="0.4" height="15.0" fill="rgb(210,94,23)" rx="2" ry="2" />
<text  x="1040.99" y="1231.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (9 samples, 0.02%)</title><rect x="1078.0" y="837" width="0.2" height="15.0" fill="rgb(223,161,45)" rx="2" ry="2" />
<text  x="1081.03" y="847.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (98 samples, 0.18%)</title><rect x="538.7" y="1221" width="2.1" height="15.0" fill="rgb(246,69,51)" rx="2" ry="2" />
<text  x="541.71" y="1231.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (22 samples, 0.04%)</title><rect x="1022.2" y="1493" width="0.4" height="15.0" fill="rgb(219,229,25)" rx="2" ry="2" />
<text  x="1025.18" y="1503.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (34 samples, 0.06%)</title><rect x="1162.0" y="949" width="0.7" height="15.0" fill="rgb(227,164,43)" rx="2" ry="2" />
<text  x="1164.97" y="959.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (45 samples, 0.08%)</title><rect x="1041.7" y="661" width="1.0" height="15.0" fill="rgb(243,100,40)" rx="2" ry="2" />
<text  x="1044.72" y="671.5" ></text>
</g>
<g >
<title>_rjem_je_arena_ralloc (50 samples, 0.09%)</title><rect x="1017.1" y="1557" width="1.1" height="15.0" fill="rgb(254,9,1)" rx="2" ry="2" />
<text  x="1020.13" y="1567.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (42 samples, 0.08%)</title><rect x="1041.8" y="629" width="0.9" height="15.0" fill="rgb(231,73,10)" rx="2" ry="2" />
<text  x="1044.77" y="639.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="181.4" y="1413" width="0.1" height="15.0" fill="rgb(231,214,5)" rx="2" ry="2" />
<text  x="184.36" y="1423.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (21 samples, 0.04%)</title><rect x="561.0" y="1253" width="0.4" height="15.0" fill="rgb(222,216,24)" rx="2" ry="2" />
<text  x="563.97" y="1263.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (28 samples, 0.05%)</title><rect x="1035.9" y="1477" width="0.6" height="15.0" fill="rgb(233,142,41)" rx="2" ry="2" />
<text  x="1038.89" y="1487.5" ></text>
</g>
<g >
<title>std::sync::mutex::MutexGuard$LT$T$GT$::new::_$u7b$$u7b$closure$u7d$$u7d$::h83d828b4444f50bb (18 samples, 0.03%)</title><rect x="457.9" y="1205" width="0.4" height="15.0" fill="rgb(247,145,35)" rx="2" ry="2" />
<text  x="460.93" y="1215.5" ></text>
</g>
<g >
<title>tcp_rcv_established (14 samples, 0.03%)</title><rect x="1050.5" y="341" width="0.3" height="15.0" fill="rgb(218,89,42)" rx="2" ry="2" />
<text  x="1053.49" y="351.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (17 samples, 0.03%)</title><rect x="1036.1" y="1381" width="0.4" height="15.0" fill="rgb(248,78,9)" rx="2" ry="2" />
<text  x="1039.12" y="1391.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (218 samples, 0.39%)</title><rect x="1149.7" y="933" width="4.6" height="15.0" fill="rgb(247,210,40)" rx="2" ry="2" />
<text  x="1152.66" y="943.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (8 samples, 0.01%)</title><rect x="1098.0" y="901" width="0.1" height="15.0" fill="rgb(244,170,49)" rx="2" ry="2" />
<text  x="1100.95" y="911.5" ></text>
</g>
<g >
<title>core::mem::take (14 samples, 0.03%)</title><rect x="1110.3" y="885" width="0.3" height="15.0" fill="rgb(241,15,21)" rx="2" ry="2" />
<text  x="1113.34" y="895.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (6 samples, 0.01%)</title><rect x="1031.0" y="1141" width="0.2" height="15.0" fill="rgb(215,1,8)" rx="2" ry="2" />
<text  x="1034.05" y="1151.5" ></text>
</g>
<g >
<title>_$LT$tokio_sync..oneshot..Inner$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::_$u7b$$u7b$closure$u7d$$u7d$::h68e01d55c2f0834a (5 samples, 0.01%)</title><rect x="182.4" y="1365" width="0.1" height="15.0" fill="rgb(246,225,4)" rx="2" ry="2" />
<text  x="185.42" y="1375.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (9 samples, 0.02%)</title><rect x="1051.4" y="1269" width="0.2" height="15.0" fill="rgb(249,107,41)" rx="2" ry="2" />
<text  x="1054.38" y="1279.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::get (12 samples, 0.02%)</title><rect x="806.3" y="1077" width="0.3" height="15.0" fill="rgb(247,168,40)" rx="2" ry="2" />
<text  x="809.30" y="1087.5" ></text>
</g>
<g >
<title>rw_verify_area (6 samples, 0.01%)</title><rect x="185.7" y="885" width="0.1" height="15.0" fill="rgb(205,19,8)" rx="2" ry="2" />
<text  x="188.67" y="895.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (839 samples, 1.51%)</title><rect x="679.4" y="1237" width="17.8" height="15.0" fill="rgb(239,37,9)" rx="2" ry="2" />
<text  x="682.41" y="1247.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (5 samples, 0.01%)</title><rect x="198.8" y="1205" width="0.1" height="15.0" fill="rgb(237,179,18)" rx="2" ry="2" />
<text  x="201.76" y="1215.5" ></text>
</g>
<g >
<title>tokio_sync::task::atomic_task::AtomicTask::register (28 samples, 0.05%)</title><rect x="1012.4" y="1493" width="0.6" height="15.0" fill="rgb(246,50,26)" rx="2" ry="2" />
<text  x="1015.42" y="1503.5" ></text>
</g>
<g >
<title>futures::future::option::&lt;impl futures::future::Future for core::option::Option&lt;F&gt;&gt;::poll (6 samples, 0.01%)</title><rect x="1031.0" y="821" width="0.2" height="15.0" fill="rgb(206,60,31)" rx="2" ry="2" />
<text  x="1034.05" y="831.5" ></text>
</g>
<g >
<title>core::mem::swap (11 samples, 0.02%)</title><rect x="1112.6" y="885" width="0.2" height="15.0" fill="rgb(229,213,46)" rx="2" ry="2" />
<text  x="1115.57" y="895.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (60 samples, 0.11%)</title><rect x="998.7" y="1461" width="1.3" height="15.0" fill="rgb(232,123,42)" rx="2" ry="2" />
<text  x="1001.71" y="1471.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::register_task (18 samples, 0.03%)</title><rect x="1005.5" y="1461" width="0.3" height="15.0" fill="rgb(254,69,42)" rx="2" ry="2" />
<text  x="1008.46" y="1471.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (15 samples, 0.03%)</title><rect x="1034.9" y="1269" width="0.3" height="15.0" fill="rgb(220,8,52)" rx="2" ry="2" />
<text  x="1037.87" y="1279.5" ></text>
</g>
<g >
<title>_$LT$noria..controller..Controller$LT$A$GT$$u20$as$u20$tower_service..Service$LT$noria..controller..ControllerRequest$GT$$GT$::call::_$u7b$$u7b$closure$u7d$$u7d$::h90ac19dc5a1b25c0 (9 samples, 0.02%)</title><rect x="1056.1" y="1269" width="0.2" height="15.0" fill="rgb(254,174,33)" rx="2" ry="2" />
<text  x="1059.07" y="1279.5" ></text>
</g>
<g >
<title>dev_queue_xmit (5 samples, 0.01%)</title><rect x="1042.5" y="501" width="0.1" height="15.0" fill="rgb(250,83,47)" rx="2" ry="2" />
<text  x="1045.47" y="511.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::is_null (9 samples, 0.02%)</title><rect x="236.3" y="1301" width="0.2" height="15.0" fill="rgb(225,98,48)" rx="2" ry="2" />
<text  x="239.30" y="1311.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::notify (13 samples, 0.02%)</title><rect x="1056.3" y="997" width="0.3" height="15.0" fill="rgb(219,6,40)" rx="2" ry="2" />
<text  x="1059.30" y="1007.5" ></text>
</g>
<g >
<title>zookeeper::io::ZkIo::ready_channel (12 samples, 0.02%)</title><rect x="994.0" y="1333" width="0.2" height="15.0" fill="rgb(212,217,20)" rx="2" ry="2" />
<text  x="996.96" y="1343.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (18 samples, 0.03%)</title><rect x="817.1" y="1013" width="0.4" height="15.0" fill="rgb(228,75,20)" rx="2" ry="2" />
<text  x="820.10" y="1023.5" ></text>
</g>
<g >
<title>mio::poll::Poll::reregister (5 samples, 0.01%)</title><rect x="994.1" y="1301" width="0.1" height="15.0" fill="rgb(248,183,35)" rx="2" ry="2" />
<text  x="997.11" y="1311.5" ></text>
</g>
<g >
<title>core::fmt::write (11 samples, 0.02%)</title><rect x="998.5" y="949" width="0.2" height="15.0" fill="rgb(251,189,27)" rx="2" ry="2" />
<text  x="1001.48" y="959.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (12 samples, 0.02%)</title><rect x="1015.2" y="1413" width="0.2" height="15.0" fill="rgb(214,165,19)" rx="2" ry="2" />
<text  x="1018.18" y="1423.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (8 samples, 0.01%)</title><rect x="1015.2" y="965" width="0.1" height="15.0" fill="rgb(229,96,37)" rx="2" ry="2" />
<text  x="1018.18" y="975.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (12 samples, 0.02%)</title><rect x="995.3" y="1157" width="0.3" height="15.0" fill="rgb(210,95,17)" rx="2" ry="2" />
<text  x="998.32" y="1167.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h78b272fd5f571c5e (8 samples, 0.01%)</title><rect x="194.5" y="1381" width="0.2" height="15.0" fill="rgb(250,25,29)" rx="2" ry="2" />
<text  x="197.54" y="1391.5" ></text>
</g>
<g >
<title>core::option::Option$LT$$RF$T$GT$::cloned::_$u7b$$u7b$closure$u7d$$u7d$::hebd15506a80f35f6 (24 samples, 0.04%)</title><rect x="656.6" y="1189" width="0.5" height="15.0" fill="rgb(240,195,43)" rx="2" ry="2" />
<text  x="659.58" y="1199.5" ></text>
</g>
<g >
<title>slab::Slab&lt;T&gt;::insert (5 samples, 0.01%)</title><rect x="1043.0" y="917" width="0.1" height="15.0" fill="rgb(213,37,24)" rx="2" ry="2" />
<text  x="1045.97" y="927.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts (110 samples, 0.20%)</title><rect x="762.7" y="1141" width="2.3" height="15.0" fill="rgb(250,94,50)" rx="2" ry="2" />
<text  x="765.67" y="1151.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (6 samples, 0.01%)</title><rect x="1049.7" y="1013" width="0.2" height="15.0" fill="rgb(218,21,32)" rx="2" ry="2" />
<text  x="1052.74" y="1023.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (7 samples, 0.01%)</title><rect x="1056.9" y="1349" width="0.2" height="15.0" fill="rgb(219,44,41)" rx="2" ry="2" />
<text  x="1059.94" y="1359.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (10 samples, 0.02%)</title><rect x="1037.2" y="1109" width="0.2" height="15.0" fill="rgb(228,144,27)" rx="2" ry="2" />
<text  x="1040.18" y="1119.5" ></text>
</g>
<g >
<title>futures::task_impl::with (6 samples, 0.01%)</title><rect x="1012.5" y="1365" width="0.1" height="15.0" fill="rgb(217,138,20)" rx="2" ry="2" />
<text  x="1015.50" y="1375.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::with_default (50 samples, 0.09%)</title><rect x="192.8" y="1413" width="1.1" height="15.0" fill="rgb(210,27,11)" rx="2" ry="2" />
<text  x="195.84" y="1423.5" ></text>
</g>
<g >
<title>tsd_tcachep_get_unsafe (11 samples, 0.02%)</title><rect x="73.7" y="1509" width="0.3" height="15.0" fill="rgb(245,63,50)" rx="2" ry="2" />
<text  x="76.72" y="1519.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_and (6 samples, 0.01%)</title><rect x="1075.4" y="901" width="0.1" height="15.0" fill="rgb(212,122,49)" rx="2" ry="2" />
<text  x="1078.35" y="911.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::clone_id (5 samples, 0.01%)</title><rect x="1056.0" y="1157" width="0.1" height="15.0" fill="rgb(214,21,7)" rx="2" ry="2" />
<text  x="1058.96" y="1167.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::hde6c925a41e0fa41 (64 samples, 0.12%)</title><rect x="1151.3" y="677" width="1.3" height="15.0" fill="rgb(252,2,42)" rx="2" ry="2" />
<text  x="1154.25" y="687.5" ></text>
</g>
<g >
<title>noria::table::_::&lt;impl serde::ser::Serialize for noria::table::Input&gt;::serialize (13 samples, 0.02%)</title><rect x="1044.9" y="1109" width="0.3" height="15.0" fill="rgb(224,70,24)" rx="2" ry="2" />
<text  x="1047.93" y="1119.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (17 samples, 0.03%)</title><rect x="899.4" y="1269" width="0.4" height="15.0" fill="rgb(247,167,28)" rx="2" ry="2" />
<text  x="902.43" y="1279.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (5 samples, 0.01%)</title><rect x="1083.1" y="949" width="0.1" height="15.0" fill="rgb(211,90,30)" rx="2" ry="2" />
<text  x="1086.12" y="959.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (93 samples, 0.17%)</title><rect x="1057.1" y="1317" width="2.0" height="15.0" fill="rgb(252,51,10)" rx="2" ry="2" />
<text  x="1060.09" y="1327.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (5 samples, 0.01%)</title><rect x="992.8" y="1509" width="0.1" height="15.0" fill="rgb(226,195,0)" rx="2" ry="2" />
<text  x="995.81" y="1519.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (7 samples, 0.01%)</title><rect x="1088.6" y="901" width="0.2" height="15.0" fill="rgb(229,25,11)" rx="2" ry="2" />
<text  x="1091.64" y="911.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::cast (161 samples, 0.29%)</title><rect x="868.5" y="1301" width="3.4" height="15.0" fill="rgb(249,224,44)" rx="2" ry="2" />
<text  x="871.47" y="1311.5" ></text>
</g>
<g >
<title>vfs_write (6 samples, 0.01%)</title><rect x="989.7" y="965" width="0.1" height="15.0" fill="rgb(253,46,20)" rx="2" ry="2" />
<text  x="992.69" y="975.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (5 samples, 0.01%)</title><rect x="996.8" y="1381" width="0.1" height="15.0" fill="rgb(254,37,16)" rx="2" ry="2" />
<text  x="999.82" y="1391.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (12 samples, 0.02%)</title><rect x="996.3" y="1461" width="0.2" height="15.0" fill="rgb(252,36,18)" rx="2" ry="2" />
<text  x="999.27" y="1471.5" ></text>
</g>
<g >
<title>vfs_write (16 samples, 0.03%)</title><rect x="1014.6" y="821" width="0.3" height="15.0" fill="rgb(206,25,44)" rx="2" ry="2" />
<text  x="1017.58" y="831.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::Handle as tokio_executor::park::Unpark&gt;::unpark (27 samples, 0.05%)</title><rect x="1028.4" y="1029" width="0.6" height="15.0" fill="rgb(240,50,9)" rx="2" ry="2" />
<text  x="1031.40" y="1039.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (8 samples, 0.01%)</title><rect x="1034.7" y="1349" width="0.2" height="15.0" fill="rgb(247,27,43)" rx="2" ry="2" />
<text  x="1037.70" y="1359.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (15 samples, 0.03%)</title><rect x="1052.6" y="1333" width="0.3" height="15.0" fill="rgb(214,187,4)" rx="2" ry="2" />
<text  x="1055.61" y="1343.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::LineWriter&lt;W&gt; as std::io::Write&gt;::flush (9 samples, 0.02%)</title><rect x="989.6" y="1141" width="0.2" height="15.0" fill="rgb(249,100,22)" rx="2" ry="2" />
<text  x="992.63" y="1151.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.01%)</title><rect x="983.8" y="1013" width="0.1" height="15.0" fill="rgb(216,100,40)" rx="2" ry="2" />
<text  x="986.80" y="1023.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (6 samples, 0.01%)</title><rect x="660.0" y="1221" width="0.1" height="15.0" fill="rgb(228,66,46)" rx="2" ry="2" />
<text  x="663.02" y="1231.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (216 samples, 0.39%)</title><rect x="1044.8" y="1525" width="4.6" height="15.0" fill="rgb(206,27,53)" rx="2" ry="2" />
<text  x="1047.80" y="1535.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (5 samples, 0.01%)</title><rect x="1124.9" y="853" width="0.1" height="15.0" fill="rgb(235,170,54)" rx="2" ry="2" />
<text  x="1127.88" y="863.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (13 samples, 0.02%)</title><rect x="1054.0" y="1061" width="0.3" height="15.0" fill="rgb(254,21,15)" rx="2" ry="2" />
<text  x="1057.01" y="1071.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (9 samples, 0.02%)</title><rect x="997.2" y="1045" width="0.2" height="15.0" fill="rgb(227,192,17)" rx="2" ry="2" />
<text  x="1000.16" y="1055.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (12 samples, 0.02%)</title><rect x="1029.9" y="981" width="0.3" height="15.0" fill="rgb(242,72,31)" rx="2" ry="2" />
<text  x="1032.95" y="991.5" ></text>
</g>
<g >
<title>&lt;&amp;T as core::fmt::Display&gt;::fmt (19 samples, 0.03%)</title><rect x="997.6" y="1061" width="0.4" height="15.0" fill="rgb(215,186,26)" rx="2" ry="2" />
<text  x="1000.61" y="1071.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (8 samples, 0.01%)</title><rect x="1036.5" y="1093" width="0.2" height="15.0" fill="rgb(219,133,47)" rx="2" ry="2" />
<text  x="1039.48" y="1103.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::list::Rx&lt;T&gt;::pop (5 samples, 0.01%)</title><rect x="1003.6" y="1461" width="0.1" height="15.0" fill="rgb(219,32,2)" rx="2" ry="2" />
<text  x="1006.64" y="1471.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfb347edd97d33f3d (12 samples, 0.02%)</title><rect x="995.3" y="1285" width="0.3" height="15.0" fill="rgb(231,214,25)" rx="2" ry="2" />
<text  x="998.32" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::std::_$LT$impl$u20$futures..task_impl..Spawn$LT$F$GT$$GT$::wait_future::_$u7b$$u7b$closure$u7d$$u7d$::hd0f6d5cc3fe9bd86 (116 samples, 0.21%)</title><rect x="980.1" y="1205" width="2.4" height="15.0" fill="rgb(244,25,23)" rx="2" ry="2" />
<text  x="983.06" y="1215.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (24 samples, 0.04%)</title><rect x="624.2" y="1173" width="0.5" height="15.0" fill="rgb(217,129,47)" rx="2" ry="2" />
<text  x="627.20" y="1183.5" ></text>
</g>
<g >
<title>tokio_reactor::HandlePriv::wakeup (137 samples, 0.25%)</title><rect x="1143.6" y="981" width="2.9" height="15.0" fill="rgb(213,158,10)" rx="2" ry="2" />
<text  x="1146.59" y="991.5" ></text>
</g>
<g >
<title>__pthread_cond_signal (15 samples, 0.03%)</title><rect x="1043.8" y="789" width="0.3" height="15.0" fill="rgb(234,127,4)" rx="2" ry="2" />
<text  x="1046.76" y="799.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::Client&lt;T,E&gt; as tower_service::Service&lt;&lt;T as futures::sink::Sink&gt;::SinkItem&gt;&gt;::call (21 samples, 0.04%)</title><rect x="1056.3" y="1253" width="0.4" height="15.0" fill="rgb(245,106,32)" rx="2" ry="2" />
<text  x="1059.26" y="1263.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (7 samples, 0.01%)</title><rect x="1022.5" y="1029" width="0.1" height="15.0" fill="rgb(217,38,11)" rx="2" ry="2" />
<text  x="1025.48" y="1039.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (5 samples, 0.01%)</title><rect x="1040.5" y="885" width="0.1" height="15.0" fill="rgb(237,42,11)" rx="2" ry="2" />
<text  x="1043.47" y="895.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (5 samples, 0.01%)</title><rect x="1026.2" y="1013" width="0.1" height="15.0" fill="rgb(239,179,38)" rx="2" ry="2" />
<text  x="1029.19" y="1023.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (72 samples, 0.13%)</title><rect x="1027.4" y="1509" width="1.6" height="15.0" fill="rgb(206,103,51)" rx="2" ry="2" />
<text  x="1030.44" y="1519.5" ></text>
</g>
<g >
<title>sock_write_iter (12 samples, 0.02%)</title><rect x="1131.3" y="389" width="0.2" height="15.0" fill="rgb(232,149,42)" rx="2" ry="2" />
<text  x="1134.29" y="399.5" ></text>
</g>
<g >
<title>tokio_timer::ms (26 samples, 0.05%)</title><rect x="1115.5" y="997" width="0.5" height="15.0" fill="rgb(239,221,9)" rx="2" ry="2" />
<text  x="1118.48" y="1007.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_desugared (1,021 samples, 1.84%)</title><rect x="637.8" y="1253" width="21.7" height="15.0" fill="rgb(252,158,3)" rx="2" ry="2" />
<text  x="640.84" y="1263.5" >a..</text>
</g>
<g >
<title>tcp_v4_rcv (16 samples, 0.03%)</title><rect x="1039.0" y="309" width="0.4" height="15.0" fill="rgb(246,225,1)" rx="2" ry="2" />
<text  x="1042.05" y="319.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (20 samples, 0.04%)</title><rect x="1050.4" y="533" width="0.4" height="15.0" fill="rgb(216,65,13)" rx="2" ry="2" />
<text  x="1053.38" y="543.5" ></text>
</g>
<g >
<title>bincode::internal::serialize_into (7 samples, 0.01%)</title><rect x="1037.2" y="1061" width="0.1" height="15.0" fill="rgb(211,64,51)" rx="2" ry="2" />
<text  x="1040.18" y="1071.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (11 samples, 0.02%)</title><rect x="1034.3" y="1253" width="0.3" height="15.0" fill="rgb(236,39,33)" rx="2" ry="2" />
<text  x="1037.34" y="1263.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (27 samples, 0.05%)</title><rect x="1027.4" y="1333" width="0.6" height="15.0" fill="rgb(224,22,53)" rx="2" ry="2" />
<text  x="1030.44" y="1343.5" ></text>
</g>
<g >
<title>tokio_sync::loom::sync::CausalCell&lt;T&gt;::with_mut (9 samples, 0.02%)</title><rect x="181.5" y="1397" width="0.2" height="15.0" fill="rgb(211,207,47)" rx="2" ry="2" />
<text  x="184.53" y="1407.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (7 samples, 0.01%)</title><rect x="671.7" y="1157" width="0.1" height="15.0" fill="rgb(229,5,34)" rx="2" ry="2" />
<text  x="674.67" y="1167.5" ></text>
</g>
<g >
<title>&lt;usize as core::ops::arith::AddAssign&gt;::add_assign (31 samples, 0.06%)</title><rect x="314.8" y="1253" width="0.7" height="15.0" fill="rgb(215,165,39)" rx="2" ry="2" />
<text  x="317.81" y="1263.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (11 samples, 0.02%)</title><rect x="895.4" y="1269" width="0.2" height="15.0" fill="rgb(230,68,1)" rx="2" ry="2" />
<text  x="898.40" y="1279.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (6 samples, 0.01%)</title><rect x="733.0" y="1237" width="0.1" height="15.0" fill="rgb(232,116,29)" rx="2" ry="2" />
<text  x="735.97" y="1247.5" ></text>
</g>
<g >
<title>core::mem::swap (59 samples, 0.11%)</title><rect x="1160.5" y="917" width="1.3" height="15.0" fill="rgb(226,217,36)" rx="2" ry="2" />
<text  x="1163.53" y="927.5" ></text>
</g>
<g >
<title>tokio_tower::mediator::Receiver&lt;T&gt;::try_recv (5 samples, 0.01%)</title><rect x="997.0" y="1397" width="0.1" height="15.0" fill="rgb(225,120,30)" rx="2" ry="2" />
<text  x="999.95" y="1407.5" ></text>
</g>
<g >
<title>ip_local_out (35 samples, 0.06%)</title><rect x="1038.8" y="565" width="0.8" height="15.0" fill="rgb(210,198,2)" rx="2" ry="2" />
<text  x="1041.84" y="575.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (22 samples, 0.04%)</title><rect x="1024.0" y="1461" width="0.5" height="15.0" fill="rgb(206,102,13)" rx="2" ry="2" />
<text  x="1027.01" y="1471.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (20 samples, 0.04%)</title><rect x="199.0" y="1157" width="0.4" height="15.0" fill="rgb(246,201,29)" rx="2" ry="2" />
<text  x="201.95" y="1167.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::clone_id (5 samples, 0.01%)</title><rect x="1060.2" y="1061" width="0.1" height="15.0" fill="rgb(249,105,33)" rx="2" ry="2" />
<text  x="1063.23" y="1071.5" ></text>
</g>
<g >
<title>futures::task_impl::std::_$LT$impl$u20$futures..task_impl..Spawn$LT$F$GT$$GT$::wait_future::_$u7b$$u7b$closure$u7d$$u7d$::hd0f6d5cc3fe9bd86 (14 samples, 0.03%)</title><rect x="180.4" y="1493" width="0.3" height="15.0" fill="rgb(212,25,22)" rx="2" ry="2" />
<text  x="183.43" y="1503.5" ></text>
</g>
<g >
<title>std::panicking::try (32 samples, 0.06%)</title><rect x="1037.1" y="1381" width="0.7" height="15.0" fill="rgb(252,47,35)" rx="2" ry="2" />
<text  x="1040.14" y="1391.5" ></text>
</g>
<g >
<title>core::alloc::Layout::size (6 samples, 0.01%)</title><rect x="862.7" y="1237" width="0.1" height="15.0" fill="rgb(208,46,34)" rx="2" ry="2" />
<text  x="865.70" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (6 samples, 0.01%)</title><rect x="1033.7" y="1285" width="0.1" height="15.0" fill="rgb(218,29,37)" rx="2" ry="2" />
<text  x="1036.68" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::state::State::lifecycle (6 samples, 0.01%)</title><rect x="1068.1" y="1045" width="0.1" height="15.0" fill="rgb(254,218,5)" rx="2" ry="2" />
<text  x="1071.10" y="1055.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default::_$u7b$$u7b$closure$u7d$$u7d$::ha80fbdab9b554b03 (28 samples, 0.05%)</title><rect x="1035.9" y="1589" width="0.6" height="15.0" fill="rgb(230,213,16)" rx="2" ry="2" />
<text  x="1038.89" y="1599.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="1034.0" y="1237" width="0.2" height="15.0" fill="rgb(252,113,8)" rx="2" ry="2" />
<text  x="1037.02" y="1247.5" ></text>
</g>
<g >
<title>_rjem_mallocx (27 samples, 0.05%)</title><rect x="990.0" y="1605" width="0.5" height="15.0" fill="rgb(233,51,22)" rx="2" ry="2" />
<text  x="992.97" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (15 samples, 0.03%)</title><rect x="1050.5" y="357" width="0.3" height="15.0" fill="rgb(242,84,30)" rx="2" ry="2" />
<text  x="1053.47" y="367.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (216 samples, 0.39%)</title><rect x="1044.8" y="1381" width="4.6" height="15.0" fill="rgb(237,163,51)" rx="2" ry="2" />
<text  x="1047.80" y="1391.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (15 samples, 0.03%)</title><rect x="188.6" y="1301" width="0.4" height="15.0" fill="rgb(239,115,50)" rx="2" ry="2" />
<text  x="191.64" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.01%)</title><rect x="989.7" y="997" width="0.1" height="15.0" fill="rgb(225,119,31)" rx="2" ry="2" />
<text  x="992.69" y="1007.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNotInner&lt;T&gt;&gt;::serialize (16 samples, 0.03%)</title><rect x="1045.2" y="1157" width="0.4" height="15.0" fill="rgb(241,77,39)" rx="2" ry="2" />
<text  x="1048.22" y="1167.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (14 samples, 0.03%)</title><rect x="264.7" y="1285" width="0.3" height="15.0" fill="rgb(225,52,45)" rx="2" ry="2" />
<text  x="267.71" y="1295.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (26 samples, 0.05%)</title><rect x="1028.4" y="869" width="0.6" height="15.0" fill="rgb(234,172,1)" rx="2" ry="2" />
<text  x="1031.42" y="879.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (31 samples, 0.06%)</title><rect x="875.8" y="1269" width="0.7" height="15.0" fill="rgb(206,144,32)" rx="2" ry="2" />
<text  x="878.83" y="1279.5" ></text>
</g>
<g >
<title>futex_wait (6 samples, 0.01%)</title><rect x="985.2" y="1125" width="0.1" height="15.0" fill="rgb(205,152,31)" rx="2" ry="2" />
<text  x="988.17" y="1135.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (6,082 samples, 10.94%)</title><rect x="1060.7" y="1093" width="129.0" height="15.0" fill="rgb(234,132,18)" rx="2" ry="2" />
<text  x="1063.65" y="1103.5" >tokio_threadpool..</text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (6 samples, 0.01%)</title><rect x="1033.8" y="1045" width="0.1" height="15.0" fill="rgb(224,82,18)" rx="2" ry="2" />
<text  x="1036.81" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (23 samples, 0.04%)</title><rect x="841.6" y="1125" width="0.5" height="15.0" fill="rgb(213,188,37)" rx="2" ry="2" />
<text  x="844.57" y="1135.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::DropNotifyService&lt;Svc&gt; as tower_service::Service&lt;Request&gt;&gt;::call (27 samples, 0.05%)</title><rect x="1028.4" y="1333" width="0.6" height="15.0" fill="rgb(238,103,18)" rx="2" ry="2" />
<text  x="1031.40" y="1343.5" ></text>
</g>
<g >
<title>noria::table::_::&lt;impl serde::ser::Serialize for noria::table::Input&gt;::serialize (6 samples, 0.01%)</title><rect x="1027.4" y="1141" width="0.2" height="15.0" fill="rgb(248,164,0)" rx="2" ry="2" />
<text  x="1030.44" y="1151.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (31 samples, 0.06%)</title><rect x="1059.1" y="1589" width="0.6" height="15.0" fill="rgb(218,40,31)" rx="2" ry="2" />
<text  x="1062.06" y="1599.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (6 samples, 0.01%)</title><rect x="1033.8" y="1157" width="0.1" height="15.0" fill="rgb(213,46,1)" rx="2" ry="2" />
<text  x="1036.81" y="1167.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (9 samples, 0.02%)</title><rect x="1057.9" y="1173" width="0.2" height="15.0" fill="rgb(231,55,48)" rx="2" ry="2" />
<text  x="1060.89" y="1183.5" ></text>
</g>
<g >
<title>tsd_tsdn (117 samples, 0.21%)</title><rect x="177.5" y="1573" width="2.5" height="15.0" fill="rgb(207,133,26)" rx="2" ry="2" />
<text  x="180.48" y="1583.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (9 samples, 0.02%)</title><rect x="1025.4" y="837" width="0.2" height="15.0" fill="rgb(227,212,47)" rx="2" ry="2" />
<text  x="1028.43" y="847.5" ></text>
</g>
<g >
<title>&lt;tracing_core::dispatcher::DefaultGuard as core::ops::drop::Drop&gt;::drop (18 samples, 0.03%)</title><rect x="200.2" y="1301" width="0.4" height="15.0" fill="rgb(234,21,32)" rx="2" ry="2" />
<text  x="203.21" y="1311.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (22 samples, 0.04%)</title><rect x="1032.8" y="1173" width="0.4" height="15.0" fill="rgb(209,101,52)" rx="2" ry="2" />
<text  x="1035.77" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (6 samples, 0.01%)</title><rect x="1020.8" y="1493" width="0.2" height="15.0" fill="rgb(225,208,20)" rx="2" ry="2" />
<text  x="1023.84" y="1503.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (19 samples, 0.03%)</title><rect x="1045.8" y="1013" width="0.4" height="15.0" fill="rgb(205,13,54)" rx="2" ry="2" />
<text  x="1048.80" y="1023.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (12 samples, 0.02%)</title><rect x="997.4" y="1013" width="0.2" height="15.0" fill="rgb(238,81,14)" rx="2" ry="2" />
<text  x="1000.35" y="1023.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (8 samples, 0.01%)</title><rect x="523.4" y="1237" width="0.2" height="15.0" fill="rgb(207,155,10)" rx="2" ry="2" />
<text  x="526.39" y="1247.5" ></text>
</g>
<g >
<title>ip_output (6 samples, 0.01%)</title><rect x="1131.4" y="213" width="0.1" height="15.0" fill="rgb(225,27,41)" rx="2" ry="2" />
<text  x="1134.37" y="223.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (50 samples, 0.09%)</title><rect x="192.8" y="1317" width="1.1" height="15.0" fill="rgb(239,219,1)" rx="2" ry="2" />
<text  x="195.84" y="1327.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (13 samples, 0.02%)</title><rect x="1044.9" y="1077" width="0.3" height="15.0" fill="rgb(219,221,41)" rx="2" ry="2" />
<text  x="1047.93" y="1087.5" ></text>
</g>
<g >
<title>core::mem::drop (8 samples, 0.01%)</title><rect x="1142.5" y="965" width="0.2" height="15.0" fill="rgb(247,142,48)" rx="2" ry="2" />
<text  x="1145.49" y="975.5" ></text>
</g>
<g >
<title>net_rx_action (21 samples, 0.04%)</title><rect x="1042.0" y="437" width="0.5" height="15.0" fill="rgb(249,120,17)" rx="2" ry="2" />
<text  x="1045.02" y="447.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (9 samples, 0.02%)</title><rect x="997.2" y="1173" width="0.2" height="15.0" fill="rgb(205,104,10)" rx="2" ry="2" />
<text  x="1000.16" y="1183.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::h21cd600e9f97af32 (33 samples, 0.06%)</title><rect x="1030.5" y="1397" width="0.7" height="15.0" fill="rgb(224,39,6)" rx="2" ry="2" />
<text  x="1033.48" y="1407.5" ></text>
</g>
<g >
<title>alloc::rc::RcBoxPtr::strong (97 samples, 0.17%)</title><rect x="810.1" y="1109" width="2.1" height="15.0" fill="rgb(241,175,40)" rx="2" ry="2" />
<text  x="813.14" y="1119.5" ></text>
</g>
<g >
<title>std::sys_common::condvar::Condvar::new (17 samples, 0.03%)</title><rect x="231.6" y="1317" width="0.4" height="15.0" fill="rgb(225,4,42)" rx="2" ry="2" />
<text  x="234.63" y="1327.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (27 samples, 0.05%)</title><rect x="1030.5" y="1029" width="0.5" height="15.0" fill="rgb(235,226,45)" rx="2" ry="2" />
<text  x="1033.48" y="1039.5" ></text>
</g>
<g >
<title>core::num::wrapping::&lt;impl core::ops::bit::BitXorAssign for core::num::Wrapping&lt;u32&gt;&gt;::bitxor_assign (11 samples, 0.02%)</title><rect x="1142.7" y="981" width="0.2" height="15.0" fill="rgb(226,211,16)" rx="2" ry="2" />
<text  x="1145.66" y="991.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (33 samples, 0.06%)</title><rect x="1030.5" y="1301" width="0.7" height="15.0" fill="rgb(216,142,31)" rx="2" ry="2" />
<text  x="1033.48" y="1311.5" ></text>
</g>
<g >
<title>futex_wait_cancelable (15 samples, 0.03%)</title><rect x="982.1" y="1093" width="0.3" height="15.0" fill="rgb(223,42,39)" rx="2" ry="2" />
<text  x="985.10" y="1103.5" ></text>
</g>
<g >
<title>alloc::str::join_generic_copy::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hb8fc3afbeaebb653 (5 samples, 0.01%)</title><rect x="198.0" y="1157" width="0.1" height="15.0" fill="rgb(246,2,30)" rx="2" ry="2" />
<text  x="201.02" y="1167.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::rand_usize::RNG::__getit (26 samples, 0.05%)</title><rect x="1140.9" y="997" width="0.6" height="15.0" fill="rgb(208,19,28)" rx="2" ry="2" />
<text  x="1143.90" y="1007.5" ></text>
</g>
<g >
<title>time::sys::inner::time_to_local_tm (11 samples, 0.02%)</title><rect x="196.7" y="1301" width="0.2" height="15.0" fill="rgb(221,197,37)" rx="2" ry="2" />
<text  x="199.68" y="1311.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (14 samples, 0.03%)</title><rect x="180.4" y="1477" width="0.3" height="15.0" fill="rgb(211,45,35)" rx="2" ry="2" />
<text  x="183.43" y="1487.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.01%)</title><rect x="1122.4" y="965" width="0.1" height="15.0" fill="rgb(245,199,44)" rx="2" ry="2" />
<text  x="1125.38" y="975.5" ></text>
</g>
<g >
<title>mio_extras::timer::Timer&lt;T&gt;::poll (12 samples, 0.02%)</title><rect x="994.3" y="1317" width="0.2" height="15.0" fill="rgb(224,137,14)" rx="2" ry="2" />
<text  x="997.26" y="1327.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::write (10 samples, 0.02%)</title><rect x="984.2" y="1125" width="0.2" height="15.0" fill="rgb(245,122,6)" rx="2" ry="2" />
<text  x="987.22" y="1135.5" ></text>
</g>
<g >
<title>_$LT$noria..controller..Controller$LT$A$GT$$u20$as$u20$tower_service..Service$LT$noria..controller..ControllerRequest$GT$$GT$::call::_$u7b$$u7b$closure$u7d$$u7d$::h90ac19dc5a1b25c0 (7 samples, 0.01%)</title><rect x="1047.8" y="1301" width="0.2" height="15.0" fill="rgb(207,43,52)" rx="2" ry="2" />
<text  x="1050.81" y="1311.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (78 samples, 0.14%)</title><rect x="1049.7" y="1557" width="1.7" height="15.0" fill="rgb(205,138,25)" rx="2" ry="2" />
<text  x="1052.72" y="1567.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current::_$u7b$$u7b$closure$u7d$$u7d$::ha0f99f248e8a20fc (8 samples, 0.01%)</title><rect x="194.5" y="1477" width="0.2" height="15.0" fill="rgb(224,227,34)" rx="2" ry="2" />
<text  x="197.54" y="1487.5" ></text>
</g>
<g >
<title>futures::task_impl::current (13 samples, 0.02%)</title><rect x="1013.8" y="1493" width="0.3" height="15.0" fill="rgb(212,193,24)" rx="2" ry="2" />
<text  x="1016.80" y="1503.5" ></text>
</g>
<g >
<title>tokio_io::async_read::AsyncRead::poll_read (6 samples, 0.01%)</title><rect x="1052.7" y="1237" width="0.1" height="15.0" fill="rgb(224,29,53)" rx="2" ry="2" />
<text  x="1055.71" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (9 samples, 0.02%)</title><rect x="1026.0" y="981" width="0.2" height="15.0" fill="rgb(236,10,19)" rx="2" ry="2" />
<text  x="1028.98" y="991.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;T&gt; as core::default::Default&gt;::default (26 samples, 0.05%)</title><rect x="491.1" y="1253" width="0.5" height="15.0" fill="rgb(244,61,16)" rx="2" ry="2" />
<text  x="494.07" y="1263.5" ></text>
</g>
<g >
<title>bincode::de::Deserializer&lt;R,O&gt;::deserialize_literal_u32 (6 samples, 0.01%)</title><rect x="1058.1" y="981" width="0.2" height="15.0" fill="rgb(213,140,22)" rx="2" ry="2" />
<text  x="1061.13" y="991.5" ></text>
</g>
<g >
<title>std::panicking::try (15 samples, 0.03%)</title><rect x="1034.9" y="1365" width="0.3" height="15.0" fill="rgb(219,103,18)" rx="2" ry="2" />
<text  x="1037.87" y="1375.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (14 samples, 0.03%)</title><rect x="1034.6" y="1493" width="0.3" height="15.0" fill="rgb(248,209,44)" rx="2" ry="2" />
<text  x="1037.57" y="1503.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default (12 samples, 0.02%)</title><rect x="1033.7" y="1541" width="0.2" height="15.0" fill="rgb(227,164,16)" rx="2" ry="2" />
<text  x="1036.68" y="1551.5" ></text>
</g>
<g >
<title>_$LT$tokio_sync..oneshot..Inner$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::_$u7b$$u7b$closure$u7d$$u7d$::hf9d2ea9b63d43e7b (6 samples, 0.01%)</title><rect x="182.5" y="1365" width="0.2" height="15.0" fill="rgb(248,3,30)" rx="2" ry="2" />
<text  x="185.53" y="1375.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (8 samples, 0.01%)</title><rect x="194.5" y="1397" width="0.2" height="15.0" fill="rgb(231,121,35)" rx="2" ry="2" />
<text  x="197.54" y="1407.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_and_swap (8 samples, 0.01%)</title><rect x="1149.4" y="997" width="0.1" height="15.0" fill="rgb(208,22,1)" rx="2" ry="2" />
<text  x="1152.37" y="1007.5" ></text>
</g>
<g >
<title>futex_wake (10 samples, 0.02%)</title><rect x="1043.8" y="693" width="0.2" height="15.0" fill="rgb(245,43,26)" rx="2" ry="2" />
<text  x="1046.82" y="703.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_ptr (8 samples, 0.01%)</title><rect x="654.3" y="1125" width="0.2" height="15.0" fill="rgb(247,102,33)" rx="2" ry="2" />
<text  x="657.31" y="1135.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Events::get (15 samples, 0.03%)</title><rect x="1074.6" y="933" width="0.3" height="15.0" fill="rgb(228,212,41)" rx="2" ry="2" />
<text  x="1077.57" y="943.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (5 samples, 0.01%)</title><rect x="983.6" y="1093" width="0.2" height="15.0" fill="rgb(214,28,29)" rx="2" ry="2" />
<text  x="986.65" y="1103.5" ></text>
</g>
<g >
<title>std::panicking::try (8 samples, 0.01%)</title><rect x="990.9" y="1509" width="0.2" height="15.0" fill="rgb(214,9,40)" rx="2" ry="2" />
<text  x="993.92" y="1519.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (60 samples, 0.11%)</title><rect x="1044.9" y="1269" width="1.3" height="15.0" fill="rgb(237,141,49)" rx="2" ry="2" />
<text  x="1047.93" y="1279.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h198a18699515a310 (36,502 samples, 65.64%)</title><rect x="202.5" y="1525" width="774.6" height="15.0" fill="rgb(205,127,26)" rx="2" ry="2" />
<text  x="205.54" y="1535.5" >core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h198a18699515a310</text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::from_inner (13 samples, 0.02%)</title><rect x="226.3" y="1317" width="0.3" height="15.0" fill="rgb(250,119,54)" rx="2" ry="2" />
<text  x="229.35" y="1327.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (24 samples, 0.04%)</title><rect x="1046.6" y="1173" width="0.5" height="15.0" fill="rgb(234,50,42)" rx="2" ry="2" />
<text  x="1049.60" y="1183.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::h21cd600e9f97af32 (12 samples, 0.02%)</title><rect x="1015.2" y="1445" width="0.2" height="15.0" fill="rgb(225,17,38)" rx="2" ry="2" />
<text  x="1018.18" y="1455.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (32 samples, 0.06%)</title><rect x="1037.1" y="1333" width="0.7" height="15.0" fill="rgb(250,156,38)" rx="2" ry="2" />
<text  x="1040.14" y="1343.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (11 samples, 0.02%)</title><rect x="1036.9" y="1237" width="0.2" height="15.0" fill="rgb(209,18,38)" rx="2" ry="2" />
<text  x="1039.91" y="1247.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (32 samples, 0.06%)</title><rect x="659.6" y="1253" width="0.7" height="15.0" fill="rgb(210,49,0)" rx="2" ry="2" />
<text  x="662.59" y="1263.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h3d3457b86cb67885 (7 samples, 0.01%)</title><rect x="1030.3" y="1589" width="0.2" height="15.0" fill="rgb(219,41,42)" rx="2" ry="2" />
<text  x="1033.33" y="1599.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (20 samples, 0.04%)</title><rect x="1059.3" y="1397" width="0.4" height="15.0" fill="rgb(238,86,21)" rx="2" ry="2" />
<text  x="1062.29" y="1407.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (36 samples, 0.06%)</title><rect x="1032.5" y="1333" width="0.7" height="15.0" fill="rgb(243,129,18)" rx="2" ry="2" />
<text  x="1035.47" y="1343.5" ></text>
</g>
<g >
<title>do_syscall_64 (9 samples, 0.02%)</title><rect x="1134.2" y="549" width="0.1" height="15.0" fill="rgb(226,47,37)" rx="2" ry="2" />
<text  x="1137.15" y="559.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::get_default::_$u7b$$u7b$closure$u7d$$u7d$::hf93adb842fd7e7c1 (7 samples, 0.01%)</title><rect x="184.4" y="1413" width="0.1" height="15.0" fill="rgb(232,91,50)" rx="2" ry="2" />
<text  x="187.36" y="1423.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (193 samples, 0.35%)</title><rect x="985.8" y="1493" width="4.1" height="15.0" fill="rgb(209,78,17)" rx="2" ry="2" />
<text  x="988.77" y="1503.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="201.4" y="1237" width="0.1" height="15.0" fill="rgb(222,29,51)" rx="2" ry="2" />
<text  x="204.39" y="1247.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (5 samples, 0.01%)</title><rect x="1049.6" y="1077" width="0.1" height="15.0" fill="rgb(221,51,49)" rx="2" ry="2" />
<text  x="1052.55" y="1087.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (33 samples, 0.06%)</title><rect x="1030.5" y="1365" width="0.7" height="15.0" fill="rgb(216,209,29)" rx="2" ry="2" />
<text  x="1033.48" y="1375.5" ></text>
</g>
<g >
<title>ip_output (29 samples, 0.05%)</title><rect x="1050.3" y="613" width="0.6" height="15.0" fill="rgb(210,6,15)" rx="2" ry="2" />
<text  x="1053.32" y="623.5" ></text>
</g>
<g >
<title>process_backlog (5 samples, 0.01%)</title><rect x="1131.4" y="85" width="0.1" height="15.0" fill="rgb(235,79,1)" rx="2" ry="2" />
<text  x="1134.37" y="95.5" ></text>
</g>
<g >
<title>&lt;core::cell::RefMut&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (19 samples, 0.03%)</title><rect x="572.0" y="1157" width="0.4" height="15.0" fill="rgb(245,214,36)" rx="2" ry="2" />
<text  x="575.00" y="1167.5" ></text>
</g>
<g >
<title>std::panicking::try (6,084 samples, 10.94%)</title><rect x="1060.6" y="1477" width="129.1" height="15.0" fill="rgb(228,52,53)" rx="2" ry="2" />
<text  x="1063.61" y="1487.5" >std::panicking::..</text>
</g>
<g >
<title>gen::read (5 samples, 0.01%)</title><rect x="192.5" y="1461" width="0.1" height="15.0" fill="rgb(238,92,7)" rx="2" ry="2" />
<text  x="195.48" y="1471.5" ></text>
</g>
<g >
<title>jemallocator::layout_to_flags (10 samples, 0.02%)</title><rect x="234.9" y="1253" width="0.3" height="15.0" fill="rgb(232,1,12)" rx="2" ry="2" />
<text  x="237.94" y="1263.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::wrapping_add (6 samples, 0.01%)</title><rect x="1182.1" y="885" width="0.2" height="15.0" fill="rgb(244,81,38)" rx="2" ry="2" />
<text  x="1185.13" y="895.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (22 samples, 0.04%)</title><rect x="189.4" y="1493" width="0.5" height="15.0" fill="rgb(221,222,14)" rx="2" ry="2" />
<text  x="192.38" y="1503.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (7 samples, 0.01%)</title><rect x="1049.4" y="1237" width="0.1" height="15.0" fill="rgb(214,63,35)" rx="2" ry="2" />
<text  x="1052.38" y="1247.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (9 samples, 0.02%)</title><rect x="1037.5" y="853" width="0.1" height="15.0" fill="rgb(234,99,44)" rx="2" ry="2" />
<text  x="1040.46" y="863.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (6 samples, 0.01%)</title><rect x="1014.2" y="1061" width="0.1" height="15.0" fill="rgb(229,102,44)" rx="2" ry="2" />
<text  x="1017.20" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (5 samples, 0.01%)</title><rect x="182.6" y="1317" width="0.1" height="15.0" fill="rgb(232,137,34)" rx="2" ry="2" />
<text  x="185.55" y="1327.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (6 samples, 0.01%)</title><rect x="1033.8" y="1173" width="0.1" height="15.0" fill="rgb(252,216,2)" rx="2" ry="2" />
<text  x="1036.81" y="1183.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNot&lt;T&gt;&gt;::serialize (6 samples, 0.01%)</title><rect x="1027.4" y="1205" width="0.2" height="15.0" fill="rgb(223,9,15)" rx="2" ry="2" />
<text  x="1030.44" y="1215.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (45 samples, 0.08%)</title><rect x="462.8" y="1205" width="0.9" height="15.0" fill="rgb(223,108,25)" rx="2" ry="2" />
<text  x="465.77" y="1215.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (20 samples, 0.04%)</title><rect x="1038.0" y="1157" width="0.4" height="15.0" fill="rgb(236,46,7)" rx="2" ry="2" />
<text  x="1040.99" y="1167.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::wakeup (26 samples, 0.05%)</title><rect x="1028.4" y="917" width="0.6" height="15.0" fill="rgb(238,86,6)" rx="2" ry="2" />
<text  x="1031.42" y="927.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::new (287 samples, 0.52%)</title><rect x="413.1" y="1333" width="6.1" height="15.0" fill="rgb(211,41,35)" rx="2" ry="2" />
<text  x="416.14" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.01%)</title><rect x="984.1" y="1125" width="0.1" height="15.0" fill="rgb(216,88,35)" rx="2" ry="2" />
<text  x="987.09" y="1135.5" ></text>
</g>
<g >
<title>std::panicking::try (8 samples, 0.01%)</title><rect x="1025.6" y="981" width="0.2" height="15.0" fill="rgb(239,97,48)" rx="2" ry="2" />
<text  x="1028.62" y="991.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (9 samples, 0.02%)</title><rect x="1049.5" y="1365" width="0.2" height="15.0" fill="rgb(209,8,52)" rx="2" ry="2" />
<text  x="1052.53" y="1375.5" ></text>
</g>
<g >
<title>tsd_fetch (139 samples, 0.25%)</title><rect x="84.2" y="1557" width="2.9" height="15.0" fill="rgb(232,181,2)" rx="2" ry="2" />
<text  x="87.16" y="1567.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (7 samples, 0.01%)</title><rect x="1108.7" y="357" width="0.1" height="15.0" fill="rgb(229,140,52)" rx="2" ry="2" />
<text  x="1111.69" y="367.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (8 samples, 0.01%)</title><rect x="195.4" y="1285" width="0.2" height="15.0" fill="rgb(207,220,13)" rx="2" ry="2" />
<text  x="198.43" y="1295.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNot&lt;T&gt;&gt;::serialize (13 samples, 0.02%)</title><rect x="1044.9" y="1173" width="0.3" height="15.0" fill="rgb(232,159,17)" rx="2" ry="2" />
<text  x="1047.93" y="1183.5" ></text>
</g>
<g >
<title>core::alloc::Layout::size (9 samples, 0.02%)</title><rect x="849.5" y="1077" width="0.2" height="15.0" fill="rgb(233,47,50)" rx="2" ry="2" />
<text  x="852.54" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (15 samples, 0.03%)</title><rect x="273.3" y="1253" width="0.4" height="15.0" fill="rgb(250,143,36)" rx="2" ry="2" />
<text  x="276.35" y="1263.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::decompose_data (7 samples, 0.01%)</title><rect x="1187.7" y="837" width="0.1" height="15.0" fill="rgb(234,64,18)" rx="2" ry="2" />
<text  x="1190.67" y="847.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (5 samples, 0.01%)</title><rect x="1043.5" y="885" width="0.1" height="15.0" fill="rgb(228,101,45)" rx="2" ry="2" />
<text  x="1046.48" y="895.5" ></text>
</g>
<g >
<title>core::fmt::write (35 samples, 0.06%)</title><rect x="998.8" y="949" width="0.7" height="15.0" fill="rgb(226,80,18)" rx="2" ry="2" />
<text  x="1001.78" y="959.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (17 samples, 0.03%)</title><rect x="1188.6" y="853" width="0.4" height="15.0" fill="rgb(224,228,35)" rx="2" ry="2" />
<text  x="1191.62" y="863.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (5 samples, 0.01%)</title><rect x="1040.5" y="869" width="0.1" height="15.0" fill="rgb(243,109,2)" rx="2" ry="2" />
<text  x="1043.47" y="879.5" ></text>
</g>
<g >
<title>core::mem::drop (12 samples, 0.02%)</title><rect x="258.7" y="1285" width="0.3" height="15.0" fill="rgb(245,104,46)" rx="2" ry="2" />
<text  x="261.71" y="1295.5" ></text>
</g>
<g >
<title>core::mem::swap (194 samples, 0.35%)</title><rect x="591.1" y="1061" width="4.1" height="15.0" fill="rgb(215,73,6)" rx="2" ry="2" />
<text  x="594.12" y="1071.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get_mut (1,934 samples, 3.48%)</title><rect x="511.0" y="1301" width="41.0" height="15.0" fill="rgb(208,54,1)" rx="2" ry="2" />
<text  x="513.98" y="1311.5" >all..</text>
</g>
<g >
<title>std::panic::catch_unwind (12 samples, 0.02%)</title><rect x="995.3" y="1541" width="0.3" height="15.0" fill="rgb(223,228,53)" rx="2" ry="2" />
<text  x="998.32" y="1551.5" ></text>
</g>
<g >
<title>zookeeper::zookeeper::ZooKeeper::request (29 samples, 0.05%)</title><rect x="1004.1" y="1493" width="0.6" height="15.0" fill="rgb(240,28,19)" rx="2" ry="2" />
<text  x="1007.10" y="1503.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for core::result::Result&lt;T,E&gt;&gt;::deserialize::ResultVisitor&lt;T,E&gt; as serde::de::Visitor&gt;::visit_enum (9 samples, 0.02%)</title><rect x="1055.2" y="917" width="0.2" height="15.0" fill="rgb(239,40,34)" rx="2" ry="2" />
<text  x="1058.18" y="927.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (11 samples, 0.02%)</title><rect x="1059.1" y="1429" width="0.2" height="15.0" fill="rgb(251,71,41)" rx="2" ry="2" />
<text  x="1062.06" y="1439.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (11 samples, 0.02%)</title><rect x="1059.1" y="1237" width="0.2" height="15.0" fill="rgb(205,53,21)" rx="2" ry="2" />
<text  x="1062.06" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (5 samples, 0.01%)</title><rect x="997.0" y="1333" width="0.1" height="15.0" fill="rgb(233,37,14)" rx="2" ry="2" />
<text  x="999.95" y="1343.5" ></text>
</g>
<g >
<title>vfs_write (23 samples, 0.04%)</title><rect x="185.3" y="901" width="0.5" height="15.0" fill="rgb(228,58,45)" rx="2" ry="2" />
<text  x="188.31" y="911.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (16 samples, 0.03%)</title><rect x="996.8" y="1445" width="0.4" height="15.0" fill="rgb(210,216,28)" rx="2" ry="2" />
<text  x="999.82" y="1455.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (36 samples, 0.06%)</title><rect x="664.5" y="1205" width="0.8" height="15.0" fill="rgb(227,200,19)" rx="2" ry="2" />
<text  x="667.54" y="1215.5" ></text>
</g>
<g >
<title>__pthread_cond_destroy (40 samples, 0.07%)</title><rect x="908.0" y="1269" width="0.9" height="15.0" fill="rgb(248,136,23)" rx="2" ry="2" />
<text  x="911.00" y="1279.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNot&lt;T&gt;&gt;::serialize (60 samples, 0.11%)</title><rect x="998.7" y="1445" width="1.3" height="15.0" fill="rgb(243,73,25)" rx="2" ry="2" />
<text  x="1001.71" y="1455.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (32 samples, 0.06%)</title><rect x="1037.1" y="1429" width="0.7" height="15.0" fill="rgb(213,115,8)" rx="2" ry="2" />
<text  x="1040.14" y="1439.5" ></text>
</g>
<g >
<title>tokio_timer::timer::atomic_stack::AtomicStack::take (6 samples, 0.01%)</title><rect x="1127.4" y="997" width="0.2" height="15.0" fill="rgb(250,158,4)" rx="2" ry="2" />
<text  x="1130.43" y="1007.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (22 samples, 0.04%)</title><rect x="1032.8" y="1109" width="0.4" height="15.0" fill="rgb(237,171,21)" rx="2" ry="2" />
<text  x="1035.77" y="1119.5" ></text>
</g>
<g >
<title>[gen] (5 samples, 0.01%)</title><rect x="972.5" y="1253" width="0.2" height="15.0" fill="rgb(237,120,2)" rx="2" ry="2" />
<text  x="975.55" y="1263.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc (118 samples, 0.21%)</title><rect x="729.0" y="1253" width="2.5" height="15.0" fill="rgb(221,151,23)" rx="2" ry="2" />
<text  x="732.02" y="1263.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::worker::Worker&lt;T,Request&gt; as futures::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="1022.6" y="1509" width="0.3" height="15.0" fill="rgb(229,173,20)" rx="2" ry="2" />
<text  x="1025.65" y="1519.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (19 samples, 0.03%)</title><rect x="1052.6" y="1509" width="0.4" height="15.0" fill="rgb(243,58,1)" rx="2" ry="2" />
<text  x="1055.61" y="1519.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (13 samples, 0.02%)</title><rect x="983.9" y="1205" width="0.3" height="15.0" fill="rgb(233,159,32)" rx="2" ry="2" />
<text  x="986.94" y="1215.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (15 samples, 0.03%)</title><rect x="810.5" y="1077" width="0.3" height="15.0" fill="rgb(238,128,38)" rx="2" ry="2" />
<text  x="813.50" y="1087.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (100 samples, 0.18%)</title><rect x="558.4" y="1237" width="2.1" height="15.0" fill="rgb(232,58,41)" rx="2" ry="2" />
<text  x="561.40" y="1247.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (20 samples, 0.04%)</title><rect x="1186.9" y="837" width="0.4" height="15.0" fill="rgb(253,196,0)" rx="2" ry="2" />
<text  x="1189.92" y="847.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (8 samples, 0.01%)</title><rect x="281.3" y="1253" width="0.2" height="15.0" fill="rgb(242,124,25)" rx="2" ry="2" />
<text  x="284.28" y="1263.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::spawn_thread::_$u7b$$u7b$closure$u7d$$u7d$::ha7200d58e6efae3b (12 samples, 0.02%)</title><rect x="1029.9" y="1397" width="0.3" height="15.0" fill="rgb(233,164,36)" rx="2" ry="2" />
<text  x="1032.95" y="1407.5" ></text>
</g>
<g >
<title>&lt;&amp;T as core::fmt::Display&gt;::fmt (33 samples, 0.06%)</title><rect x="998.0" y="1077" width="0.7" height="15.0" fill="rgb(243,132,38)" rx="2" ry="2" />
<text  x="1001.01" y="1087.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::write (5 samples, 0.01%)</title><rect x="983.6" y="1109" width="0.2" height="15.0" fill="rgb(252,113,34)" rx="2" ry="2" />
<text  x="986.65" y="1119.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (47 samples, 0.08%)</title><rect x="640.8" y="1237" width="1.0" height="15.0" fill="rgb(205,167,20)" rx="2" ry="2" />
<text  x="643.84" y="1247.5" ></text>
</g>
<g >
<title>__GI___clone (6,096 samples, 10.96%)</title><rect x="1060.4" y="1605" width="129.3" height="15.0" fill="rgb(235,226,22)" rx="2" ry="2" />
<text  x="1063.35" y="1615.5" >__GI___clone</text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (24 samples, 0.04%)</title><rect x="1026.9" y="901" width="0.5" height="15.0" fill="rgb(224,179,1)" rx="2" ry="2" />
<text  x="1029.93" y="911.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (60 samples, 0.11%)</title><rect x="998.7" y="1317" width="1.3" height="15.0" fill="rgb(241,140,31)" rx="2" ry="2" />
<text  x="1001.71" y="1327.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (33 samples, 0.06%)</title><rect x="1030.5" y="1525" width="0.7" height="15.0" fill="rgb(254,46,36)" rx="2" ry="2" />
<text  x="1033.48" y="1535.5" ></text>
</g>
<g >
<title>ip_local_out (36 samples, 0.06%)</title><rect x="1041.8" y="565" width="0.8" height="15.0" fill="rgb(226,65,9)" rx="2" ry="2" />
<text  x="1044.81" y="575.5" ></text>
</g>
<g >
<title>&lt;rand::StdRng as rand::Rng&gt;::next_u64 (612 samples, 1.10%)</title><rect x="573.5" y="1141" width="13.0" height="15.0" fill="rgb(243,8,35)" rx="2" ry="2" />
<text  x="576.49" y="1151.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (8 samples, 0.01%)</title><rect x="1059.7" y="1397" width="0.2" height="15.0" fill="rgb(215,173,40)" rx="2" ry="2" />
<text  x="1062.72" y="1407.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.01%)</title><rect x="1022.2" y="1109" width="0.1" height="15.0" fill="rgb(230,149,40)" rx="2" ry="2" />
<text  x="1025.20" y="1119.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (126 samples, 0.23%)</title><rect x="1038.4" y="1045" width="2.7" height="15.0" fill="rgb(227,133,23)" rx="2" ry="2" />
<text  x="1041.41" y="1055.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::wakeup (22 samples, 0.04%)</title><rect x="1014.5" y="981" width="0.4" height="15.0" fill="rgb(216,179,49)" rx="2" ry="2" />
<text  x="1017.46" y="991.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNot&lt;T&gt;&gt;::serialize (11 samples, 0.02%)</title><rect x="1053.4" y="1157" width="0.3" height="15.0" fill="rgb(219,123,14)" rx="2" ry="2" />
<text  x="1056.44" y="1167.5" ></text>
</g>
<g >
<title>tokio_reactor::poll_evented::PollEvented&lt;E&gt;::poll_read_ready (39 samples, 0.07%)</title><rect x="1054.3" y="1157" width="0.9" height="15.0" fill="rgb(244,168,6)" rx="2" ry="2" />
<text  x="1057.33" y="1167.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.01%)</title><rect x="1022.2" y="1205" width="0.1" height="15.0" fill="rgb(235,66,2)" rx="2" ry="2" />
<text  x="1025.20" y="1215.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (9 samples, 0.02%)</title><rect x="1172.4" y="917" width="0.2" height="15.0" fill="rgb(214,183,22)" rx="2" ry="2" />
<text  x="1175.41" y="927.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfb347edd97d33f3d (12 samples, 0.02%)</title><rect x="1015.2" y="1365" width="0.2" height="15.0" fill="rgb(215,102,10)" rx="2" ry="2" />
<text  x="1018.18" y="1375.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (30 samples, 0.05%)</title><rect x="515.1" y="1237" width="0.6" height="15.0" fill="rgb(231,33,41)" rx="2" ry="2" />
<text  x="518.07" y="1247.5" ></text>
</g>
<g >
<title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as futures::future::Future&gt;::poll (26 samples, 0.05%)</title><rect x="996.3" y="1589" width="0.5" height="15.0" fill="rgb(243,205,35)" rx="2" ry="2" />
<text  x="999.27" y="1599.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::wrappers::ClientResponseFut&lt;T,E&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="194.1" y="1269" width="0.1" height="15.0" fill="rgb(230,90,35)" rx="2" ry="2" />
<text  x="197.07" y="1279.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::worker::Worker&lt;T,Request&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1015.2" y="901" width="0.1" height="15.0" fill="rgb(221,91,25)" rx="2" ry="2" />
<text  x="1018.22" y="911.5" ></text>
</g>
<g >
<title>sys_write (5 samples, 0.01%)</title><rect x="984.3" y="1045" width="0.1" height="15.0" fill="rgb(239,172,48)" rx="2" ry="2" />
<text  x="987.33" y="1055.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default (6 samples, 0.01%)</title><rect x="1030.2" y="1493" width="0.1" height="15.0" fill="rgb(231,165,19)" rx="2" ry="2" />
<text  x="1033.20" y="1503.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (9 samples, 0.02%)</title><rect x="1051.4" y="1045" width="0.2" height="15.0" fill="rgb(225,27,39)" rx="2" ry="2" />
<text  x="1054.38" y="1055.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (60 samples, 0.11%)</title><rect x="998.7" y="1173" width="1.3" height="15.0" fill="rgb(235,82,16)" rx="2" ry="2" />
<text  x="1001.71" y="1183.5" ></text>
</g>
<g >
<title>bincode::internal::deserialize_seed (24 samples, 0.04%)</title><rect x="1046.6" y="1221" width="0.5" height="15.0" fill="rgb(216,16,45)" rx="2" ry="2" />
<text  x="1049.60" y="1231.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="1049.4" y="1125" width="0.1" height="15.0" fill="rgb(212,121,52)" rx="2" ry="2" />
<text  x="1052.38" y="1135.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (5 samples, 0.01%)</title><rect x="1150.3" y="789" width="0.1" height="15.0" fill="rgb(249,117,12)" rx="2" ry="2" />
<text  x="1153.26" y="799.5" ></text>
</g>
<g >
<title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (33 samples, 0.06%)</title><rect x="998.0" y="1045" width="0.7" height="15.0" fill="rgb(211,107,26)" rx="2" ry="2" />
<text  x="1001.01" y="1055.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (19 samples, 0.03%)</title><rect x="1025.8" y="1541" width="0.4" height="15.0" fill="rgb(235,216,41)" rx="2" ry="2" />
<text  x="1028.79" y="1551.5" ></text>
</g>
<g >
<title>&lt; (5 samples, 0.01%)</title><rect x="186.4" y="1333" width="0.1" height="15.0" fill="rgb(209,167,12)" rx="2" ry="2" />
<text  x="189.37" y="1343.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (9 samples, 0.02%)</title><rect x="1051.4" y="1141" width="0.2" height="15.0" fill="rgb(230,215,13)" rx="2" ry="2" />
<text  x="1054.38" y="1151.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (17 samples, 0.03%)</title><rect x="1025.4" y="1349" width="0.4" height="15.0" fill="rgb(246,203,26)" rx="2" ry="2" />
<text  x="1028.43" y="1359.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (6 samples, 0.01%)</title><rect x="1030.2" y="1301" width="0.1" height="15.0" fill="rgb(205,74,5)" rx="2" ry="2" />
<text  x="1033.20" y="1311.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfb347edd97d33f3d (10 samples, 0.02%)</title><rect x="1051.4" y="1461" width="0.2" height="15.0" fill="rgb(230,185,32)" rx="2" ry="2" />
<text  x="1054.38" y="1471.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::chan::Tx&lt;T,S&gt;::try_send (15 samples, 0.03%)</title><rect x="183.9" y="1445" width="0.3" height="15.0" fill="rgb(244,169,23)" rx="2" ry="2" />
<text  x="186.89" y="1455.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_borrowed_str (82 samples, 0.15%)</title><rect x="1000.7" y="661" width="1.7" height="15.0" fill="rgb(254,205,7)" rx="2" ry="2" />
<text  x="1003.66" y="671.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (5 samples, 0.01%)</title><rect x="1009.2" y="1461" width="0.1" height="15.0" fill="rgb(237,198,17)" rx="2" ry="2" />
<text  x="1012.19" y="1471.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (37 samples, 0.07%)</title><rect x="614.7" y="1205" width="0.7" height="15.0" fill="rgb(239,30,11)" rx="2" ry="2" />
<text  x="617.65" y="1215.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::into_key_slice (410 samples, 0.74%)</title><rect x="317.3" y="1253" width="8.7" height="15.0" fill="rgb(239,95,9)" rx="2" ry="2" />
<text  x="320.31" y="1263.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::new_edge (45 samples, 0.08%)</title><rect x="961.0" y="1269" width="0.9" height="15.0" fill="rgb(225,120,25)" rx="2" ry="2" />
<text  x="963.99" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::clone_id (5 samples, 0.01%)</title><rect x="1056.0" y="1173" width="0.1" height="15.0" fill="rgb(237,179,28)" rx="2" ry="2" />
<text  x="1058.96" y="1183.5" ></text>
</g>
<g >
<title>process_backlog (20 samples, 0.04%)</title><rect x="1039.0" y="421" width="0.5" height="15.0" fill="rgb(240,186,30)" rx="2" ry="2" />
<text  x="1042.03" y="431.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (9 samples, 0.02%)</title><rect x="997.2" y="1205" width="0.2" height="15.0" fill="rgb(252,139,32)" rx="2" ry="2" />
<text  x="1000.16" y="1215.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (7 samples, 0.01%)</title><rect x="1002.8" y="501" width="0.2" height="15.0" fill="rgb(236,143,47)" rx="2" ry="2" />
<text  x="1005.83" y="511.5" ></text>
</g>
<g >
<title>tsd_tcachep_get (19 samples, 0.03%)</title><rect x="73.6" y="1525" width="0.4" height="15.0" fill="rgb(230,169,14)" rx="2" ry="2" />
<text  x="76.55" y="1535.5" ></text>
</g>
<g >
<title>std::sync::mutex::MutexGuard$LT$T$GT$::new::_$u7b$$u7b$closure$u7d$$u7d$::hadeee613def4cb6e (24 samples, 0.04%)</title><rect x="458.3" y="1205" width="0.5" height="15.0" fill="rgb(206,25,13)" rx="2" ry="2" />
<text  x="461.31" y="1215.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (13 samples, 0.02%)</title><rect x="1054.0" y="1093" width="0.3" height="15.0" fill="rgb(206,126,17)" rx="2" ry="2" />
<text  x="1057.01" y="1103.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::chan::Tx&lt;T,S&gt;::try_send (8 samples, 0.01%)</title><rect x="11.1" y="1461" width="0.2" height="15.0" fill="rgb(250,218,27)" rx="2" ry="2" />
<text  x="14.10" y="1471.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::de::Deserialize for noria::Tagged&lt;T&gt;&gt;::deserialize (7 samples, 0.01%)</title><rect x="1058.1" y="1141" width="0.2" height="15.0" fill="rgb(222,147,0)" rx="2" ry="2" />
<text  x="1061.10" y="1151.5" ></text>
</g>
<g >
<title>core::ptr::write (5 samples, 0.01%)</title><rect x="1085.6" y="917" width="0.1" height="15.0" fill="rgb(227,194,33)" rx="2" ry="2" />
<text  x="1088.60" y="927.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::tcp::TcpStream as std::io::Write&gt;::write (47 samples, 0.08%)</title><rect x="1050.1" y="901" width="1.0" height="15.0" fill="rgb(236,73,41)" rx="2" ry="2" />
<text  x="1053.06" y="911.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (8 samples, 0.01%)</title><rect x="1059.7" y="1525" width="0.2" height="15.0" fill="rgb(208,208,50)" rx="2" ry="2" />
<text  x="1062.72" y="1535.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (58 samples, 0.10%)</title><rect x="1117.4" y="965" width="1.3" height="15.0" fill="rgb(210,46,47)" rx="2" ry="2" />
<text  x="1120.43" y="975.5" ></text>
</g>
<g >
<title>&lt;std::io::stdio::Maybe&lt;W&gt; as std::io::Write&gt;::write (9 samples, 0.02%)</title><rect x="989.6" y="1093" width="0.2" height="15.0" fill="rgb(228,216,9)" rx="2" ry="2" />
<text  x="992.63" y="1103.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (27 samples, 0.05%)</title><rect x="935.6" y="1301" width="0.6" height="15.0" fill="rgb(208,187,27)" rx="2" ry="2" />
<text  x="938.61" y="1311.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (5 samples, 0.01%)</title><rect x="993.5" y="1269" width="0.1" height="15.0" fill="rgb(213,12,54)" rx="2" ry="2" />
<text  x="996.47" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (6 samples, 0.01%)</title><rect x="1026.7" y="805" width="0.1" height="15.0" fill="rgb(212,51,38)" rx="2" ry="2" />
<text  x="1029.72" y="815.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (62 samples, 0.11%)</title><rect x="1050.1" y="1029" width="1.3" height="15.0" fill="rgb(239,120,8)" rx="2" ry="2" />
<text  x="1053.06" y="1039.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (22 samples, 0.04%)</title><rect x="389.2" y="1253" width="0.5" height="15.0" fill="rgb(243,74,18)" rx="2" ry="2" />
<text  x="392.20" y="1263.5" ></text>
</g>
<g >
<title>serde::de::SeqAccess::next_element (18 samples, 0.03%)</title><rect x="1002.7" y="661" width="0.3" height="15.0" fill="rgb(250,71,48)" rx="2" ry="2" />
<text  x="1005.66" y="671.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (16 samples, 0.03%)</title><rect x="954.0" y="1253" width="0.3" height="15.0" fill="rgb(227,63,0)" rx="2" ry="2" />
<text  x="956.96" y="1263.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::Client&lt;T,E&gt; as tower_service::Service&lt;&lt;T as futures::sink::Sink&gt;::SinkItem&gt;&gt;::call (5 samples, 0.01%)</title><rect x="1051.5" y="933" width="0.1" height="15.0" fill="rgb(226,77,51)" rx="2" ry="2" />
<text  x="1054.46" y="943.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (63 samples, 0.11%)</title><rect x="1151.3" y="581" width="1.3" height="15.0" fill="rgb(205,197,20)" rx="2" ry="2" />
<text  x="1154.28" y="591.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (8 samples, 0.01%)</title><rect x="1025.6" y="917" width="0.2" height="15.0" fill="rgb(209,165,10)" rx="2" ry="2" />
<text  x="1028.62" y="927.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::tcp::TcpStream as std::io::Read&gt;::read (17 samples, 0.03%)</title><rect x="1031.3" y="917" width="0.4" height="15.0" fill="rgb(224,163,26)" rx="2" ry="2" />
<text  x="1034.30" y="927.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (12 samples, 0.02%)</title><rect x="1022.2" y="1461" width="0.2" height="15.0" fill="rgb(253,114,5)" rx="2" ry="2" />
<text  x="1025.18" y="1471.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (32 samples, 0.06%)</title><rect x="1037.1" y="1349" width="0.7" height="15.0" fill="rgb(213,91,6)" rx="2" ry="2" />
<text  x="1040.14" y="1359.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (6 samples, 0.01%)</title><rect x="1033.8" y="1269" width="0.1" height="15.0" fill="rgb(213,198,22)" rx="2" ry="2" />
<text  x="1036.81" y="1279.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (11 samples, 0.02%)</title><rect x="207.3" y="1269" width="0.2" height="15.0" fill="rgb(215,174,6)" rx="2" ry="2" />
<text  x="210.31" y="1279.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (7 samples, 0.01%)</title><rect x="1129.0" y="1013" width="0.1" height="15.0" fill="rgb(207,150,48)" rx="2" ry="2" />
<text  x="1132.00" y="1023.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (5 samples, 0.01%)</title><rect x="668.4" y="1141" width="0.1" height="15.0" fill="rgb(233,7,13)" rx="2" ry="2" />
<text  x="671.44" y="1151.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (9 samples, 0.02%)</title><rect x="1053.2" y="1173" width="0.2" height="15.0" fill="rgb(248,36,36)" rx="2" ry="2" />
<text  x="1056.24" y="1183.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::into_slices_mut (256 samples, 0.46%)</title><rect x="513.1" y="1269" width="5.4" height="15.0" fill="rgb(251,176,4)" rx="2" ry="2" />
<text  x="516.10" y="1279.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNotInner&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1023.8" y="1333" width="0.1" height="15.0" fill="rgb(224,136,21)" rx="2" ry="2" />
<text  x="1026.81" y="1343.5" ></text>
</g>
<g >
<title>&lt;async_bincode::reader::AsyncBincodeReader&lt;R,T&gt; as futures::stream::Stream&gt;::poll (14 samples, 0.03%)</title><rect x="1032.2" y="1029" width="0.3" height="15.0" fill="rgb(226,86,14)" rx="2" ry="2" />
<text  x="1035.15" y="1039.5" ></text>
</g>
<g >
<title>chrono::format::parse::parse_internal (62 samples, 0.11%)</title><rect x="1000.7" y="581" width="1.3" height="15.0" fill="rgb(221,25,37)" rx="2" ry="2" />
<text  x="1003.73" y="591.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default (10 samples, 0.02%)</title><rect x="1026.0" y="1397" width="0.2" height="15.0" fill="rgb(246,139,47)" rx="2" ry="2" />
<text  x="1028.98" y="1407.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (8 samples, 0.01%)</title><rect x="1036.5" y="1253" width="0.2" height="15.0" fill="rgb(240,193,14)" rx="2" ry="2" />
<text  x="1039.48" y="1263.5" ></text>
</g>
<g >
<title>&lt;tokio_tcp::stream::TcpStream as std::io::Read&gt;::read (19 samples, 0.03%)</title><rect x="1046.2" y="1221" width="0.4" height="15.0" fill="rgb(248,28,37)" rx="2" ry="2" />
<text  x="1049.20" y="1231.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (14 samples, 0.03%)</title><rect x="996.5" y="1477" width="0.3" height="15.0" fill="rgb(236,42,29)" rx="2" ry="2" />
<text  x="999.53" y="1487.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.01%)</title><rect x="198.3" y="1285" width="0.2" height="15.0" fill="rgb(221,147,18)" rx="2" ry="2" />
<text  x="201.32" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::park (1,642 samples, 2.95%)</title><rect x="1086.1" y="1061" width="34.9" height="15.0" fill="rgb(222,141,49)" rx="2" ry="2" />
<text  x="1089.13" y="1071.5" >to..</text>
</g>
<g >
<title>futures::task_impl::std::set (8 samples, 0.01%)</title><rect x="1059.7" y="1301" width="0.2" height="15.0" fill="rgb(245,100,22)" rx="2" ry="2" />
<text  x="1062.72" y="1311.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (7 samples, 0.01%)</title><rect x="1049.4" y="1189" width="0.1" height="15.0" fill="rgb(247,165,13)" rx="2" ry="2" />
<text  x="1052.38" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (35 samples, 0.06%)</title><rect x="1051.9" y="1365" width="0.7" height="15.0" fill="rgb(243,155,2)" rx="2" ry="2" />
<text  x="1054.87" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (49 samples, 0.09%)</title><rect x="1041.7" y="773" width="1.0" height="15.0" fill="rgb(239,56,48)" rx="2" ry="2" />
<text  x="1044.70" y="783.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (25 samples, 0.04%)</title><rect x="1026.9" y="1109" width="0.5" height="15.0" fill="rgb(236,190,53)" rx="2" ry="2" />
<text  x="1029.91" y="1119.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (10 samples, 0.02%)</title><rect x="999.6" y="917" width="0.2" height="15.0" fill="rgb(243,50,5)" rx="2" ry="2" />
<text  x="1002.60" y="927.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (6 samples, 0.01%)</title><rect x="1033.8" y="1141" width="0.1" height="15.0" fill="rgb(215,116,51)" rx="2" ry="2" />
<text  x="1036.81" y="1151.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (310 samples, 0.56%)</title><rect x="555.2" y="1285" width="6.6" height="15.0" fill="rgb(236,148,1)" rx="2" ry="2" />
<text  x="558.22" y="1295.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (6 samples, 0.01%)</title><rect x="1031.0" y="1045" width="0.2" height="15.0" fill="rgb(210,185,40)" rx="2" ry="2" />
<text  x="1034.05" y="1055.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (29 samples, 0.05%)</title><rect x="1031.2" y="1157" width="0.6" height="15.0" fill="rgb(219,141,27)" rx="2" ry="2" />
<text  x="1034.18" y="1167.5" ></text>
</g>
<g >
<title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::read_head (12 samples, 0.02%)</title><rect x="1025.1" y="1557" width="0.3" height="15.0" fill="rgb(211,114,21)" rx="2" ry="2" />
<text  x="1028.11" y="1567.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (144 samples, 0.26%)</title><rect x="1000.0" y="917" width="3.0" height="15.0" fill="rgb(228,139,11)" rx="2" ry="2" />
<text  x="1002.99" y="927.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts_mut (15 samples, 0.03%)</title><rect x="436.5" y="1269" width="0.3" height="15.0" fill="rgb(249,82,25)" rx="2" ry="2" />
<text  x="439.50" y="1279.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::add (85 samples, 0.15%)</title><rect x="339.1" y="1269" width="1.8" height="15.0" fill="rgb(218,92,0)" rx="2" ry="2" />
<text  x="342.13" y="1279.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (6 samples, 0.01%)</title><rect x="1033.8" y="1237" width="0.1" height="15.0" fill="rgb(238,111,22)" rx="2" ry="2" />
<text  x="1036.81" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (17 samples, 0.03%)</title><rect x="1044.4" y="1589" width="0.4" height="15.0" fill="rgb(217,153,50)" rx="2" ry="2" />
<text  x="1047.44" y="1599.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::TableOperation&gt;::serialize (8 samples, 0.01%)</title><rect x="1027.6" y="1061" width="0.1" height="15.0" fill="rgb(247,208,28)" rx="2" ry="2" />
<text  x="1030.57" y="1071.5" ></text>
</g>
<g >
<title>&lt;mio::poll::Iter as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.08%)</title><rect x="1087.9" y="965" width="1.0" height="15.0" fill="rgb(237,152,51)" rx="2" ry="2" />
<text  x="1090.94" y="975.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (14 samples, 0.03%)</title><rect x="1032.5" y="1141" width="0.3" height="15.0" fill="rgb(217,116,37)" rx="2" ry="2" />
<text  x="1035.47" y="1151.5" ></text>
</g>
<g >
<title>futures::task_impl::with_notify::_$u7b$$u7b$closure$u7d$$u7d$::h7713750779010cf8 (28 samples, 0.05%)</title><rect x="1008.4" y="1477" width="0.6" height="15.0" fill="rgb(205,176,42)" rx="2" ry="2" />
<text  x="1011.37" y="1487.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (9 samples, 0.02%)</title><rect x="997.2" y="1093" width="0.2" height="15.0" fill="rgb(240,111,24)" rx="2" ry="2" />
<text  x="1000.16" y="1103.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (29 samples, 0.05%)</title><rect x="1153.2" y="645" width="0.6" height="15.0" fill="rgb(243,183,36)" rx="2" ry="2" />
<text  x="1156.16" y="655.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (86 samples, 0.15%)</title><rect x="923.5" y="1301" width="1.8" height="15.0" fill="rgb(238,204,19)" rx="2" ry="2" />
<text  x="926.49" y="1311.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (48 samples, 0.09%)</title><rect x="1014.2" y="1413" width="1.0" height="15.0" fill="rgb(244,170,0)" rx="2" ry="2" />
<text  x="1017.16" y="1423.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (8 samples, 0.01%)</title><rect x="1034.7" y="1253" width="0.2" height="15.0" fill="rgb(251,93,28)" rx="2" ry="2" />
<text  x="1037.70" y="1263.5" ></text>
</g>
<g >
<title>__libc_write (8 samples, 0.01%)</title><rect x="983.8" y="1045" width="0.1" height="15.0" fill="rgb(240,116,37)" rx="2" ry="2" />
<text  x="986.75" y="1055.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::io::Io as std::io::Write&gt;::write (5 samples, 0.01%)</title><rect x="1024.8" y="1077" width="0.1" height="15.0" fill="rgb(239,94,35)" rx="2" ry="2" />
<text  x="1027.79" y="1087.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.01%)</title><rect x="1027.4" y="1061" width="0.2" height="15.0" fill="rgb(237,64,21)" rx="2" ry="2" />
<text  x="1030.44" y="1071.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (11 samples, 0.02%)</title><rect x="1034.0" y="1493" width="0.2" height="15.0" fill="rgb(216,85,50)" rx="2" ry="2" />
<text  x="1036.96" y="1503.5" ></text>
</g>
<g >
<title>slab::Slab&lt;T&gt;::remove (5 samples, 0.01%)</title><rect x="1043.1" y="917" width="0.1" height="15.0" fill="rgb(228,130,54)" rx="2" ry="2" />
<text  x="1046.08" y="927.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (34 samples, 0.06%)</title><rect x="1022.2" y="1589" width="0.7" height="15.0" fill="rgb(208,200,19)" rx="2" ry="2" />
<text  x="1025.18" y="1599.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::ha5a36fc5828d1332 (44 samples, 0.08%)</title><rect x="187.5" y="1397" width="1.0" height="15.0" fill="rgb(216,134,13)" rx="2" ry="2" />
<text  x="190.54" y="1407.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run (33 samples, 0.06%)</title><rect x="1030.5" y="1445" width="0.7" height="15.0" fill="rgb(254,41,50)" rx="2" ry="2" />
<text  x="1033.48" y="1455.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (13 samples, 0.02%)</title><rect x="721.1" y="1253" width="0.2" height="15.0" fill="rgb(239,65,22)" rx="2" ry="2" />
<text  x="724.06" y="1263.5" ></text>
</g>
<g >
<title>_rjem_je_tcache_event_hard (8 samples, 0.01%)</title><rect x="60.9" y="1461" width="0.2" height="15.0" fill="rgb(233,17,20)" rx="2" ry="2" />
<text  x="63.90" y="1471.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h1e333f0842b39e4b (77 samples, 0.14%)</title><rect x="1107.9" y="789" width="1.7" height="15.0" fill="rgb(250,6,12)" rx="2" ry="2" />
<text  x="1110.93" y="799.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 0.03%)</title><rect x="1045.2" y="1173" width="0.4" height="15.0" fill="rgb(211,217,30)" rx="2" ry="2" />
<text  x="1048.22" y="1183.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::worker::Worker&lt;T,Request&gt; as futures::future::Future&gt;::poll (164 samples, 0.29%)</title><rect x="1131.8" y="773" width="3.4" height="15.0" fill="rgb(241,157,44)" rx="2" ry="2" />
<text  x="1134.75" y="783.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current (6 samples, 0.01%)</title><rect x="996.3" y="1237" width="0.1" height="15.0" fill="rgb(220,146,20)" rx="2" ry="2" />
<text  x="999.27" y="1247.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (20 samples, 0.04%)</title><rect x="736.6" y="1237" width="0.4" height="15.0" fill="rgb(230,110,38)" rx="2" ry="2" />
<text  x="739.55" y="1247.5" ></text>
</g>
<g >
<title>core::alloc::Layout::size (7 samples, 0.01%)</title><rect x="234.8" y="1253" width="0.1" height="15.0" fill="rgb(246,16,36)" rx="2" ry="2" />
<text  x="237.79" y="1263.5" ></text>
</g>
<g >
<title>&lt;jemallocator::Jemalloc as core::alloc::GlobalAlloc&gt;::alloc (42 samples, 0.08%)</title><rect x="234.3" y="1269" width="0.9" height="15.0" fill="rgb(227,194,41)" rx="2" ry="2" />
<text  x="237.26" y="1279.5" ></text>
</g>
<g >
<title>tokio_reactor::sharded_rwlock::RwLock&lt;T&gt;::read (6 samples, 0.01%)</title><rect x="1057.5" y="1109" width="0.1" height="15.0" fill="rgb(221,94,12)" rx="2" ry="2" />
<text  x="1060.47" y="1119.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::h21cd600e9f97af32 (78 samples, 0.14%)</title><rect x="1049.7" y="1589" width="1.7" height="15.0" fill="rgb(215,106,44)" rx="2" ry="2" />
<text  x="1052.72" y="1599.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (8 samples, 0.01%)</title><rect x="718.2" y="1237" width="0.2" height="15.0" fill="rgb(235,44,37)" rx="2" ry="2" />
<text  x="721.20" y="1247.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (27 samples, 0.05%)</title><rect x="1030.5" y="1045" width="0.5" height="15.0" fill="rgb(214,188,22)" rx="2" ry="2" />
<text  x="1033.48" y="1055.5" ></text>
</g>
<g >
<title>&lt;mio::event_imp::Ready as core::ops::bit::BitOr&lt;T&gt;&gt;::bitor (7 samples, 0.01%)</title><rect x="1088.4" y="901" width="0.1" height="15.0" fill="rgb(233,219,17)" rx="2" ry="2" />
<text  x="1091.36" y="911.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::hedee26c57df783a5 (5 samples, 0.01%)</title><rect x="992.8" y="1589" width="0.1" height="15.0" fill="rgb(249,182,10)" rx="2" ry="2" />
<text  x="995.81" y="1599.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (8 samples, 0.01%)</title><rect x="1015.2" y="1029" width="0.1" height="15.0" fill="rgb(241,97,37)" rx="2" ry="2" />
<text  x="1018.18" y="1039.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (10 samples, 0.02%)</title><rect x="995.3" y="1013" width="0.2" height="15.0" fill="rgb(218,63,16)" rx="2" ry="2" />
<text  x="998.32" y="1023.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (16 samples, 0.03%)</title><rect x="1049.4" y="1541" width="0.3" height="15.0" fill="rgb(242,112,23)" rx="2" ry="2" />
<text  x="1052.38" y="1551.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (6 samples, 0.01%)</title><rect x="960.5" y="1237" width="0.1" height="15.0" fill="rgb(224,111,50)" rx="2" ry="2" />
<text  x="963.52" y="1247.5" ></text>
</g>
<g >
<title>__libc_write (22 samples, 0.04%)</title><rect x="1014.5" y="885" width="0.4" height="15.0" fill="rgb(225,81,1)" rx="2" ry="2" />
<text  x="1017.46" y="895.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (8 samples, 0.01%)</title><rect x="1033.2" y="1189" width="0.2" height="15.0" fill="rgb(212,7,29)" rx="2" ry="2" />
<text  x="1036.24" y="1199.5" ></text>
</g>
<g >
<title>mio_extras::channel::Receiver&lt;T&gt;::try_recv (6 samples, 0.01%)</title><rect x="994.0" y="1317" width="0.1" height="15.0" fill="rgb(213,178,40)" rx="2" ry="2" />
<text  x="996.98" y="1327.5" ></text>
</g>
<g >
<title>__rg_alloc (174 samples, 0.31%)</title><rect x="261.0" y="1285" width="3.7" height="15.0" fill="rgb(219,31,52)" rx="2" ry="2" />
<text  x="264.02" y="1295.5" ></text>
</g>
<g >
<title>core::mem::forget (96 samples, 0.17%)</title><rect x="399.7" y="1285" width="2.1" height="15.0" fill="rgb(211,120,33)" rx="2" ry="2" />
<text  x="402.75" y="1295.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::notify (5 samples, 0.01%)</title><rect x="11.1" y="1349" width="0.1" height="15.0" fill="rgb(220,164,2)" rx="2" ry="2" />
<text  x="14.10" y="1359.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="1142.2" y="885" width="0.2" height="15.0" fill="rgb(242,32,1)" rx="2" ry="2" />
<text  x="1145.24" y="895.5" ></text>
</g>
<g >
<title>mio::sys::unix::awakener::pipe::Awakener::wakeup (26 samples, 0.05%)</title><rect x="1028.4" y="901" width="0.6" height="15.0" fill="rgb(251,73,50)" rx="2" ry="2" />
<text  x="1031.42" y="911.5" ></text>
</g>
<g >
<title>&lt;chrono::naive::datetime::NaiveDateTime as core::fmt::Debug&gt;::fmt (19 samples, 0.03%)</title><rect x="997.6" y="1013" width="0.4" height="15.0" fill="rgb(207,63,34)" rx="2" ry="2" />
<text  x="1000.61" y="1023.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current (18 samples, 0.03%)</title><rect x="180.0" y="1333" width="0.4" height="15.0" fill="rgb(249,0,45)" rx="2" ry="2" />
<text  x="183.03" y="1343.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h3d3457b86cb67885 (17 samples, 0.03%)</title><rect x="1025.4" y="1413" width="0.4" height="15.0" fill="rgb(244,3,34)" rx="2" ry="2" />
<text  x="1028.43" y="1423.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (51 samples, 0.09%)</title><rect x="977.9" y="1317" width="1.1" height="15.0" fill="rgb(249,44,26)" rx="2" ry="2" />
<text  x="980.88" y="1327.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (11 samples, 0.02%)</title><rect x="1035.9" y="1349" width="0.2" height="15.0" fill="rgb(209,157,22)" rx="2" ry="2" />
<text  x="1038.89" y="1359.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::CurrentTask::clear (13 samples, 0.02%)</title><rect x="1148.9" y="981" width="0.3" height="15.0" fill="rgb(254,188,45)" rx="2" ry="2" />
<text  x="1151.88" y="991.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (31 samples, 0.06%)</title><rect x="826.0" y="1013" width="0.6" height="15.0" fill="rgb(254,206,43)" rx="2" ry="2" />
<text  x="828.99" y="1023.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (6 samples, 0.01%)</title><rect x="1031.0" y="933" width="0.2" height="15.0" fill="rgb(212,171,18)" rx="2" ry="2" />
<text  x="1034.05" y="943.5" ></text>
</g>
<g >
<title>&lt;tokio_sync::oneshot::Receiver&lt;T&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="1007.8" y="1413" width="0.2" height="15.0" fill="rgb(225,18,23)" rx="2" ry="2" />
<text  x="1010.84" y="1423.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple (7 samples, 0.01%)</title><rect x="1022.5" y="1013" width="0.1" height="15.0" fill="rgb(205,196,54)" rx="2" ry="2" />
<text  x="1025.48" y="1023.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (13 samples, 0.02%)</title><rect x="826.8" y="997" width="0.3" height="15.0" fill="rgb(220,181,18)" rx="2" ry="2" />
<text  x="829.82" y="1007.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.01%)</title><rect x="1053.3" y="1061" width="0.1" height="15.0" fill="rgb(241,178,48)" rx="2" ry="2" />
<text  x="1056.33" y="1071.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (30 samples, 0.05%)</title><rect x="191.8" y="1333" width="0.7" height="15.0" fill="rgb(239,80,23)" rx="2" ry="2" />
<text  x="194.85" y="1343.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (17 samples, 0.03%)</title><rect x="1036.1" y="1285" width="0.4" height="15.0" fill="rgb(223,112,29)" rx="2" ry="2" />
<text  x="1039.12" y="1295.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (25 samples, 0.04%)</title><rect x="503.0" y="1189" width="0.5" height="15.0" fill="rgb(254,39,13)" rx="2" ry="2" />
<text  x="506.00" y="1199.5" ></text>
</g>
<g >
<title>do_iter_write (12 samples, 0.02%)</title><rect x="1131.3" y="421" width="0.2" height="15.0" fill="rgb(253,28,12)" rx="2" ry="2" />
<text  x="1134.29" y="431.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (17 samples, 0.03%)</title><rect x="1036.1" y="1397" width="0.4" height="15.0" fill="rgb(218,25,16)" rx="2" ry="2" />
<text  x="1039.12" y="1407.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::notify (33 samples, 0.06%)</title><rect x="10.4" y="1381" width="0.7" height="15.0" fill="rgb(239,186,32)" rx="2" ry="2" />
<text  x="13.40" y="1391.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (5 samples, 0.01%)</title><rect x="1003.8" y="1413" width="0.1" height="15.0" fill="rgb(225,109,9)" rx="2" ry="2" />
<text  x="1006.83" y="1423.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::keys (497 samples, 0.89%)</title><rect x="315.5" y="1269" width="10.5" height="15.0" fill="rgb(252,51,10)" rx="2" ry="2" />
<text  x="318.47" y="1279.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.01%)</title><rect x="192.5" y="1333" width="0.1" height="15.0" fill="rgb(248,130,41)" rx="2" ry="2" />
<text  x="195.48" y="1343.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::stream::Stream&gt;::poll (9 samples, 0.02%)</title><rect x="1052.7" y="1285" width="0.2" height="15.0" fill="rgb(242,40,46)" rx="2" ry="2" />
<text  x="1055.71" y="1295.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (28 samples, 0.05%)</title><rect x="1037.8" y="1509" width="0.6" height="15.0" fill="rgb(210,20,7)" rx="2" ry="2" />
<text  x="1040.82" y="1519.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (22 samples, 0.04%)</title><rect x="1032.8" y="1301" width="0.4" height="15.0" fill="rgb(238,75,13)" rx="2" ry="2" />
<text  x="1035.77" y="1311.5" ></text>
</g>
<g >
<title>tsd_reentrancy_levelp_get (33 samples, 0.06%)</title><rect x="79.6" y="1525" width="0.7" height="15.0" fill="rgb(230,87,37)" rx="2" ry="2" />
<text  x="82.60" y="1535.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::worker::Worker&lt;T,Request&gt; as futures::future::Future&gt;::poll (74 samples, 0.13%)</title><rect x="1047.8" y="1349" width="1.6" height="15.0" fill="rgb(239,108,14)" rx="2" ry="2" />
<text  x="1050.81" y="1359.5" ></text>
</g>
<g >
<title>mio::poll::AtomicState::compare_and_swap (6 samples, 0.01%)</title><rect x="1076.1" y="885" width="0.2" height="15.0" fill="rgb(233,40,26)" rx="2" ry="2" />
<text  x="1079.14" y="895.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (6 samples, 0.01%)</title><rect x="1135.5" y="933" width="0.2" height="15.0" fill="rgb(227,136,46)" rx="2" ry="2" />
<text  x="1138.53" y="943.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (61 samples, 0.11%)</title><rect x="1031.2" y="1413" width="1.3" height="15.0" fill="rgb(238,65,44)" rx="2" ry="2" />
<text  x="1034.18" y="1423.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (28 samples, 0.05%)</title><rect x="1035.9" y="1461" width="0.6" height="15.0" fill="rgb(244,96,54)" rx="2" ry="2" />
<text  x="1038.89" y="1471.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (12 samples, 0.02%)</title><rect x="995.3" y="1493" width="0.3" height="15.0" fill="rgb(214,81,21)" rx="2" ry="2" />
<text  x="998.32" y="1503.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (34 samples, 0.06%)</title><rect x="470.0" y="1221" width="0.7" height="15.0" fill="rgb(214,102,54)" rx="2" ry="2" />
<text  x="472.96" y="1231.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (55 samples, 0.10%)</title><rect x="654.5" y="1205" width="1.1" height="15.0" fill="rgb(217,16,13)" rx="2" ry="2" />
<text  x="657.48" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::with (55 samples, 0.10%)</title><rect x="1007.8" y="1493" width="1.2" height="15.0" fill="rgb(239,216,36)" rx="2" ry="2" />
<text  x="1010.79" y="1503.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (113 samples, 0.20%)</title><rect x="926.0" y="1301" width="2.4" height="15.0" fill="rgb(245,33,22)" rx="2" ry="2" />
<text  x="928.95" y="1311.5" ></text>
</g>
<g >
<title>chan::UserData&lt;T&gt;::len (69 samples, 0.12%)</title><rect x="471.0" y="1237" width="1.5" height="15.0" fill="rgb(233,70,14)" rx="2" ry="2" />
<text  x="474.04" y="1247.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::de::Deserialize for noria::data::DataType&gt;::deserialize (144 samples, 0.26%)</title><rect x="1000.0" y="805" width="3.0" height="15.0" fill="rgb(235,62,29)" rx="2" ry="2" />
<text  x="1002.99" y="815.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (43 samples, 0.08%)</title><rect x="1036.9" y="1557" width="0.9" height="15.0" fill="rgb(221,49,32)" rx="2" ry="2" />
<text  x="1039.91" y="1567.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (6 samples, 0.01%)</title><rect x="1027.4" y="933" width="0.2" height="15.0" fill="rgb(221,9,38)" rx="2" ry="2" />
<text  x="1030.44" y="943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.01%)</title><rect x="1040.5" y="757" width="0.1" height="15.0" fill="rgb(246,120,51)" rx="2" ry="2" />
<text  x="1043.47" y="767.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::poll_evented::PollEvented&lt;E&gt; as std::io::Write&gt;::write (21 samples, 0.04%)</title><rect x="1057.1" y="1189" width="0.5" height="15.0" fill="rgb(244,53,37)" rx="2" ry="2" />
<text  x="1060.15" y="1199.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::clone_id (5 samples, 0.01%)</title><rect x="1060.2" y="1077" width="0.1" height="15.0" fill="rgb(226,143,0)" rx="2" ry="2" />
<text  x="1063.23" y="1087.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.01%)</title><rect x="1022.2" y="1365" width="0.1" height="15.0" fill="rgb(251,215,23)" rx="2" ry="2" />
<text  x="1025.20" y="1375.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current (30 samples, 0.05%)</title><rect x="191.8" y="1365" width="0.7" height="15.0" fill="rgb(233,199,34)" rx="2" ry="2" />
<text  x="194.85" y="1375.5" ></text>
</g>
<g >
<title>&lt;noria::view::View as tower_service::Service&lt; (8 samples, 0.01%)</title><rect x="189.2" y="1253" width="0.2" height="15.0" fill="rgb(226,40,8)" rx="2" ry="2" />
<text  x="192.21" y="1263.5" ></text>
</g>
<g >
<title>noria::table::Table::quick_n_dirty::_$u7b$$u7b$closure$u7d$$u7d$::h3f374431d27411e4 (21 samples, 0.04%)</title><rect x="186.6" y="1397" width="0.4" height="15.0" fill="rgb(221,78,31)" rx="2" ry="2" />
<text  x="189.60" y="1407.5" ></text>
</g>
<g >
<title>chan::select::Select::new (5 samples, 0.01%)</title><rect x="991.1" y="1589" width="0.1" height="15.0" fill="rgb(232,223,17)" rx="2" ry="2" />
<text  x="994.14" y="1599.5" ></text>
</g>
<g >
<title>noria::view::_::&lt;impl serde::de::Deserialize for noria::view::ReadReply&gt;::deserialize (144 samples, 0.26%)</title><rect x="1000.0" y="1333" width="3.0" height="15.0" fill="rgb(227,228,37)" rx="2" ry="2" />
<text  x="1002.99" y="1343.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (14 samples, 0.03%)</title><rect x="1049.7" y="1125" width="0.3" height="15.0" fill="rgb(211,157,8)" rx="2" ry="2" />
<text  x="1052.72" y="1135.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default::_$u7b$$u7b$closure$u7d$$u7d$::ha80fbdab9b554b03 (12 samples, 0.02%)</title><rect x="1033.7" y="1493" width="0.2" height="15.0" fill="rgb(205,55,29)" rx="2" ry="2" />
<text  x="1036.68" y="1503.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (21 samples, 0.04%)</title><rect x="1056.3" y="1157" width="0.4" height="15.0" fill="rgb(237,205,5)" rx="2" ry="2" />
<text  x="1059.26" y="1167.5" ></text>
</g>
<g >
<title>do_syscall_64 (54 samples, 0.10%)</title><rect x="1038.6" y="757" width="1.1" height="15.0" fill="rgb(206,60,42)" rx="2" ry="2" />
<text  x="1041.56" y="767.5" ></text>
</g>
<g >
<title>tokio_timer::wheel::level::Level&lt;T&gt;::next_occupied_slot (17 samples, 0.03%)</title><rect x="1118.7" y="949" width="0.4" height="15.0" fill="rgb(253,186,1)" rx="2" ry="2" />
<text  x="1121.70" y="959.5" ></text>
</g>
<g >
<title>finish_task_switch (16 samples, 0.03%)</title><rect x="1065.5" y="981" width="0.3" height="15.0" fill="rgb(226,193,5)" rx="2" ry="2" />
<text  x="1068.47" y="991.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (22 samples, 0.04%)</title><rect x="1059.9" y="1429" width="0.5" height="15.0" fill="rgb(238,220,27)" rx="2" ry="2" />
<text  x="1062.89" y="1439.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (14 samples, 0.03%)</title><rect x="1032.5" y="1189" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1035.47" y="1199.5" ></text>
</g>
<g >
<title>ip_local_deliver (20 samples, 0.04%)</title><rect x="1042.0" y="341" width="0.5" height="15.0" fill="rgb(220,25,36)" rx="2" ry="2" />
<text  x="1045.04" y="351.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::hfb931195fd733b29 (33 samples, 0.06%)</title><rect x="1030.5" y="1589" width="0.7" height="15.0" fill="rgb(230,90,15)" rx="2" ry="2" />
<text  x="1033.48" y="1599.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (13 samples, 0.02%)</title><rect x="1054.0" y="1141" width="0.3" height="15.0" fill="rgb(249,177,10)" rx="2" ry="2" />
<text  x="1057.01" y="1151.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (46 samples, 0.08%)</title><rect x="1029.0" y="1237" width="0.9" height="15.0" fill="rgb(228,60,10)" rx="2" ry="2" />
<text  x="1031.97" y="1247.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::into_key_slice (391 samples, 0.70%)</title><rect x="756.7" y="1157" width="8.3" height="15.0" fill="rgb(221,11,0)" rx="2" ry="2" />
<text  x="759.71" y="1167.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfb347edd97d33f3d (12 samples, 0.02%)</title><rect x="1033.7" y="1477" width="0.2" height="15.0" fill="rgb(224,148,24)" rx="2" ry="2" />
<text  x="1036.68" y="1487.5" ></text>
</g>
<g >
<title>log::max_level (5 samples, 0.01%)</title><rect x="1130.3" y="997" width="0.1" height="15.0" fill="rgb(215,184,40)" rx="2" ry="2" />
<text  x="1133.33" y="1007.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (5 samples, 0.01%)</title><rect x="1023.8" y="1093" width="0.1" height="15.0" fill="rgb(228,98,31)" rx="2" ry="2" />
<text  x="1026.81" y="1103.5" ></text>
</g>
<g >
<title>&lt;T as alloc::string::ToString&gt;::to_string (33 samples, 0.06%)</title><rect x="998.0" y="1125" width="0.7" height="15.0" fill="rgb(215,147,31)" rx="2" ry="2" />
<text  x="1001.01" y="1135.5" ></text>
</g>
<g >
<title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (9 samples, 0.02%)</title><rect x="989.6" y="1109" width="0.2" height="15.0" fill="rgb(210,210,8)" rx="2" ry="2" />
<text  x="992.63" y="1119.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (13 samples, 0.02%)</title><rect x="1051.6" y="1541" width="0.3" height="15.0" fill="rgb(254,25,43)" rx="2" ry="2" />
<text  x="1054.59" y="1551.5" ></text>
</g>
<g >
<title>tokio_io::async_read::AsyncRead::poll_read (5 samples, 0.01%)</title><rect x="1038.2" y="1045" width="0.1" height="15.0" fill="rgb(254,112,4)" rx="2" ry="2" />
<text  x="1041.24" y="1055.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (144 samples, 0.26%)</title><rect x="1000.0" y="1349" width="3.0" height="15.0" fill="rgb(249,156,20)" rx="2" ry="2" />
<text  x="1002.99" y="1359.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessNode::enqueue_with_wakeup (28 samples, 0.05%)</title><rect x="1108.4" y="645" width="0.6" height="15.0" fill="rgb(228,129,9)" rx="2" ry="2" />
<text  x="1111.37" y="655.5" ></text>
</g>
<g >
<title>tokio_io::async_write::AsyncWrite::poll_write (48 samples, 0.09%)</title><rect x="1050.1" y="965" width="1.0" height="15.0" fill="rgb(232,105,0)" rx="2" ry="2" />
<text  x="1053.06" y="975.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.01%)</title><rect x="991.8" y="1509" width="0.1" height="15.0" fill="rgb(252,95,39)" rx="2" ry="2" />
<text  x="994.77" y="1519.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (44 samples, 0.08%)</title><rect x="774.6" y="1141" width="0.9" height="15.0" fill="rgb(229,148,45)" rx="2" ry="2" />
<text  x="777.56" y="1151.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (10 samples, 0.02%)</title><rect x="10.0" y="1477" width="0.2" height="15.0" fill="rgb(224,29,42)" rx="2" ry="2" />
<text  x="13.00" y="1487.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (104 samples, 0.19%)</title><rect x="1150.4" y="725" width="2.2" height="15.0" fill="rgb(237,228,5)" rx="2" ry="2" />
<text  x="1153.43" y="735.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,177 samples, 3.91%)</title><rect x="885.1" y="1333" width="46.2" height="15.0" fill="rgb(217,99,9)" rx="2" ry="2" />
<text  x="888.13" y="1343.5" >&lt;all..</text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::he0977de3e88b310a (6 samples, 0.01%)</title><rect x="188.5" y="1557" width="0.1" height="15.0" fill="rgb(251,54,29)" rx="2" ry="2" />
<text  x="191.47" y="1567.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (126 samples, 0.23%)</title><rect x="1038.4" y="1061" width="2.7" height="15.0" fill="rgb(248,185,9)" rx="2" ry="2" />
<text  x="1041.41" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (6 samples, 0.01%)</title><rect x="515.6" y="1221" width="0.1" height="15.0" fill="rgb(227,103,20)" rx="2" ry="2" />
<text  x="518.58" y="1231.5" ></text>
</g>
<g >
<title>crossbeam_epoch::default::pin::_$u7b$$u7b$closure$u7d$$u7d$::h154c0e75eaa3b342 (791 samples, 1.42%)</title><rect x="1172.9" y="949" width="16.8" height="15.0" fill="rgb(242,126,6)" rx="2" ry="2" />
<text  x="1175.92" y="959.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Sender&lt;T&gt;::poll_close (28 samples, 0.05%)</title><rect x="1013.5" y="1557" width="0.6" height="15.0" fill="rgb(233,40,29)" rx="2" ry="2" />
<text  x="1016.48" y="1567.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::signal_work (30 samples, 0.05%)</title><rect x="1073.0" y="1045" width="0.6" height="15.0" fill="rgb(213,77,42)" rx="2" ry="2" />
<text  x="1075.96" y="1055.5" ></text>
</g>
<g >
<title>core::fmt::write (26 samples, 0.05%)</title><rect x="983.9" y="1237" width="0.6" height="15.0" fill="rgb(207,155,19)" rx="2" ry="2" />
<text  x="986.94" y="1247.5" ></text>
</g>
<g >
<title>std::io::stdio::print_to::_$u7b$$u7b$closure$u7d$$u7d$::h282203b319a7a41e (10 samples, 0.02%)</title><rect x="989.6" y="1269" width="0.2" height="15.0" fill="rgb(236,1,44)" rx="2" ry="2" />
<text  x="992.61" y="1279.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::stream::Stream&gt;::poll (7 samples, 0.01%)</title><rect x="1060.0" y="1205" width="0.1" height="15.0" fill="rgb(213,90,22)" rx="2" ry="2" />
<text  x="1062.99" y="1215.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::keys_mut (360 samples, 0.65%)</title><rect x="348.1" y="1285" width="7.6" height="15.0" fill="rgb(238,156,34)" rx="2" ry="2" />
<text  x="351.08" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (11 samples, 0.02%)</title><rect x="1036.9" y="1429" width="0.2" height="15.0" fill="rgb(227,211,7)" rx="2" ry="2" />
<text  x="1039.91" y="1439.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (12 samples, 0.02%)</title><rect x="191.8" y="1269" width="0.3" height="15.0" fill="rgb(250,195,14)" rx="2" ry="2" />
<text  x="194.85" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::he0977de3e88b310a (15 samples, 0.03%)</title><rect x="194.7" y="1365" width="0.3" height="15.0" fill="rgb(205,103,47)" rx="2" ry="2" />
<text  x="197.71" y="1375.5" ></text>
</g>
<g >
<title>tcp_write_xmit (9 samples, 0.02%)</title><rect x="1131.3" y="277" width="0.2" height="15.0" fill="rgb(217,223,33)" rx="2" ry="2" />
<text  x="1134.31" y="287.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (222 samples, 0.40%)</title><rect x="1149.6" y="965" width="4.7" height="15.0" fill="rgb(234,113,51)" rx="2" ry="2" />
<text  x="1152.62" y="975.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (348 samples, 0.63%)</title><rect x="195.2" y="1445" width="7.3" height="15.0" fill="rgb(210,19,7)" rx="2" ry="2" />
<text  x="198.16" y="1455.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfb347edd97d33f3d (20 samples, 0.04%)</title><rect x="1036.5" y="1525" width="0.4" height="15.0" fill="rgb(220,103,49)" rx="2" ry="2" />
<text  x="1039.48" y="1535.5" ></text>
</g>
<g >
<title>new_sync_write (8 samples, 0.01%)</title><rect x="10.8" y="901" width="0.1" height="15.0" fill="rgb(239,36,41)" rx="2" ry="2" />
<text  x="13.76" y="911.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default::_$u7b$$u7b$closure$u7d$$u7d$::ha80fbdab9b554b03 (61 samples, 0.11%)</title><rect x="1031.2" y="1573" width="1.3" height="15.0" fill="rgb(225,111,8)" rx="2" ry="2" />
<text  x="1034.18" y="1583.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_str (86 samples, 0.15%)</title><rect x="1000.6" y="693" width="1.8" height="15.0" fill="rgb(249,173,19)" rx="2" ry="2" />
<text  x="1003.62" y="703.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="1023.5" y="1493" width="0.2" height="15.0" fill="rgb(211,167,26)" rx="2" ry="2" />
<text  x="1026.54" y="1503.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 0.03%)</title><rect x="1023.0" y="1349" width="0.3" height="15.0" fill="rgb(250,2,9)" rx="2" ry="2" />
<text  x="1025.97" y="1359.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::bounded::Sender&lt;T&gt;::try_send (5 samples, 0.01%)</title><rect x="989.0" y="1253" width="0.1" height="15.0" fill="rgb(236,59,37)" rx="2" ry="2" />
<text  x="992.02" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (93 samples, 0.17%)</title><rect x="1057.1" y="1349" width="2.0" height="15.0" fill="rgb(223,159,0)" rx="2" ry="2" />
<text  x="1060.09" y="1359.5" ></text>
</g>
<g >
<title>&lt;tokio_timer::clock::clock::Clock as tokio_timer::timer::now::Now&gt;::now (5 samples, 0.01%)</title><rect x="1126.2" y="997" width="0.1" height="15.0" fill="rgb(210,117,30)" rx="2" ry="2" />
<text  x="1129.22" y="1007.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (36 samples, 0.06%)</title><rect x="1032.5" y="1429" width="0.7" height="15.0" fill="rgb(243,187,3)" rx="2" ry="2" />
<text  x="1035.47" y="1439.5" ></text>
</g>
<g >
<title>tokio_reactor::registration::Inner::poll_ready (18 samples, 0.03%)</title><rect x="1054.8" y="1109" width="0.4" height="15.0" fill="rgb(239,33,21)" rx="2" ry="2" />
<text  x="1057.77" y="1119.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (23 samples, 0.04%)</title><rect x="192.8" y="1269" width="0.5" height="15.0" fill="rgb(218,169,27)" rx="2" ry="2" />
<text  x="195.84" y="1279.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.02%)</title><rect x="1090.2" y="901" width="0.2" height="15.0" fill="rgb(241,142,45)" rx="2" ry="2" />
<text  x="1093.19" y="911.5" ></text>
</g>
<g >
<title>std::sync::mpsc::Receiver&lt;T&gt;::recv (6 samples, 0.01%)</title><rect x="1004.4" y="1477" width="0.1" height="15.0" fill="rgb(245,183,53)" rx="2" ry="2" />
<text  x="1007.38" y="1487.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (11 samples, 0.02%)</title><rect x="977.1" y="1429" width="0.2" height="15.0" fill="rgb(246,43,34)" rx="2" ry="2" />
<text  x="980.07" y="1439.5" ></text>
</g>
<g >
<title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (143 samples, 0.26%)</title><rect x="864.0" y="1301" width="3.0" height="15.0" fill="rgb(221,2,19)" rx="2" ry="2" />
<text  x="867.02" y="1311.5" ></text>
</g>
<g >
<title>inet_sendmsg (43 samples, 0.08%)</title><rect x="1050.1" y="757" width="0.9" height="15.0" fill="rgb(226,69,41)" rx="2" ry="2" />
<text  x="1053.08" y="767.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (17 samples, 0.03%)</title><rect x="1025.4" y="1493" width="0.4" height="15.0" fill="rgb(230,160,45)" rx="2" ry="2" />
<text  x="1028.43" y="1503.5" ></text>
</g>
<g >
<title>futures::task_impl::std::tls_slot (5 samples, 0.01%)</title><rect x="192.0" y="1221" width="0.1" height="15.0" fill="rgb(220,67,42)" rx="2" ry="2" />
<text  x="194.97" y="1231.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (17 samples, 0.03%)</title><rect x="1025.4" y="1205" width="0.4" height="15.0" fill="rgb(208,155,33)" rx="2" ry="2" />
<text  x="1028.43" y="1215.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (48 samples, 0.09%)</title><rect x="1034.9" y="1541" width="1.0" height="15.0" fill="rgb(248,218,9)" rx="2" ry="2" />
<text  x="1037.87" y="1551.5" ></text>
</g>
<g >
<title>futures::future::Future::wait (30 samples, 0.05%)</title><rect x="191.8" y="1397" width="0.7" height="15.0" fill="rgb(205,157,34)" rx="2" ry="2" />
<text  x="194.85" y="1407.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (9 samples, 0.02%)</title><rect x="1026.0" y="997" width="0.2" height="15.0" fill="rgb(210,36,4)" rx="2" ry="2" />
<text  x="1028.98" y="1007.5" ></text>
</g>
<g >
<title>noria::controller::SyncControllerHandle&lt;A,E&gt;::run (9 samples, 0.02%)</title><rect x="986.2" y="1301" width="0.2" height="15.0" fill="rgb(219,60,4)" rx="2" ry="2" />
<text  x="989.17" y="1311.5" ></text>
</g>
<g >
<title>__rust_probestack (10 samples, 0.02%)</title><rect x="1189.7" y="1605" width="0.2" height="15.0" fill="rgb(222,46,20)" rx="2" ry="2" />
<text  x="1192.70" y="1615.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (10 samples, 0.02%)</title><rect x="989.6" y="1189" width="0.2" height="15.0" fill="rgb(244,182,25)" rx="2" ry="2" />
<text  x="992.61" y="1199.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (93 samples, 0.17%)</title><rect x="1057.1" y="1573" width="2.0" height="15.0" fill="rgb(227,208,23)" rx="2" ry="2" />
<text  x="1060.09" y="1583.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner&lt;T&gt;::complete (47 samples, 0.08%)</title><rect x="1134.0" y="741" width="1.0" height="15.0" fill="rgb(240,144,25)" rx="2" ry="2" />
<text  x="1137.02" y="751.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (6 samples, 0.01%)</title><rect x="1027.4" y="1029" width="0.2" height="15.0" fill="rgb(236,142,11)" rx="2" ry="2" />
<text  x="1030.44" y="1039.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (6 samples, 0.01%)</title><rect x="1003.3" y="1397" width="0.1" height="15.0" fill="rgb(220,123,21)" rx="2" ry="2" />
<text  x="1006.30" y="1407.5" ></text>
</g>
<g >
<title>chrono::offset::local::Local::now (22 samples, 0.04%)</title><rect x="978.1" y="1221" width="0.4" height="15.0" fill="rgb(213,196,27)" rx="2" ry="2" />
<text  x="981.07" y="1231.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::BoxedNode&lt;K,V&gt;::from_ptr (85 samples, 0.15%)</title><rect x="205.7" y="1301" width="1.8" height="15.0" fill="rgb(253,170,24)" rx="2" ry="2" />
<text  x="208.74" y="1311.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::is_null (31 samples, 0.06%)</title><rect x="689.2" y="1189" width="0.6" height="15.0" fill="rgb(220,153,5)" rx="2" ry="2" />
<text  x="692.15" y="1199.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (8 samples, 0.01%)</title><rect x="1036.5" y="1333" width="0.2" height="15.0" fill="rgb(248,13,8)" rx="2" ry="2" />
<text  x="1039.48" y="1343.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (105 samples, 0.19%)</title><rect x="464.2" y="1253" width="2.2" height="15.0" fill="rgb(239,157,31)" rx="2" ry="2" />
<text  x="467.17" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (11 samples, 0.02%)</title><rect x="1034.0" y="1349" width="0.2" height="15.0" fill="rgb(240,64,39)" rx="2" ry="2" />
<text  x="1036.96" y="1359.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (21 samples, 0.04%)</title><rect x="1056.3" y="1077" width="0.4" height="15.0" fill="rgb(253,103,27)" rx="2" ry="2" />
<text  x="1059.26" y="1087.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (109 samples, 0.20%)</title><rect x="986.4" y="1237" width="2.3" height="15.0" fill="rgb(246,175,45)" rx="2" ry="2" />
<text  x="989.43" y="1247.5" ></text>
</g>
<g >
<title>arena_bin_nonfull_slab_get (5 samples, 0.01%)</title><rect x="1016.2" y="1429" width="0.1" height="15.0" fill="rgb(214,19,34)" rx="2" ry="2" />
<text  x="1019.20" y="1439.5" ></text>
</g>
<g >
<title>&lt;tokio_sync::task::atomic_task::CurrentTask as tokio_sync::task::atomic_task::Register&gt;::register (25 samples, 0.04%)</title><rect x="1012.5" y="1429" width="0.5" height="15.0" fill="rgb(209,193,29)" rx="2" ry="2" />
<text  x="1015.48" y="1439.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (40 samples, 0.07%)</title><rect x="705.2" y="1285" width="0.8" height="15.0" fill="rgb(207,96,41)" rx="2" ry="2" />
<text  x="708.17" y="1295.5" ></text>
</g>
<g >
<title>std::sync::mpsc::Sender&lt;T&gt;::send (26 samples, 0.05%)</title><rect x="202.0" y="1349" width="0.5" height="15.0" fill="rgb(238,14,7)" rx="2" ry="2" />
<text  x="204.99" y="1359.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (17 samples, 0.03%)</title><rect x="852.0" y="1109" width="0.3" height="15.0" fill="rgb(250,216,13)" rx="2" ry="2" />
<text  x="854.98" y="1119.5" ></text>
</g>
<g >
<title>sock_recvmsg (9 samples, 0.02%)</title><rect x="1035.6" y="821" width="0.2" height="15.0" fill="rgb(221,3,14)" rx="2" ry="2" />
<text  x="1038.59" y="831.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (8 samples, 0.01%)</title><rect x="1033.2" y="1109" width="0.2" height="15.0" fill="rgb(229,125,15)" rx="2" ry="2" />
<text  x="1036.24" y="1119.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.01%)</title><rect x="1058.1" y="1045" width="0.2" height="15.0" fill="rgb(253,57,31)" rx="2" ry="2" />
<text  x="1061.10" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::read (44 samples, 0.08%)</title><rect x="559.5" y="1173" width="0.9" height="15.0" fill="rgb(236,54,0)" rx="2" ry="2" />
<text  x="562.50" y="1183.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::io::Io as std::io::Read&gt;::read (149 samples, 0.27%)</title><rect x="1094.4" y="901" width="3.1" height="15.0" fill="rgb(210,182,10)" rx="2" ry="2" />
<text  x="1097.37" y="911.5" ></text>
</g>
<g >
<title>mio::poll::SetReadiness::set_readiness (34 samples, 0.06%)</title><rect x="1108.3" y="677" width="0.7" height="15.0" fill="rgb(216,180,17)" rx="2" ry="2" />
<text  x="1111.31" y="687.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (10 samples, 0.02%)</title><rect x="1082.5" y="917" width="0.2" height="15.0" fill="rgb(206,5,24)" rx="2" ry="2" />
<text  x="1085.53" y="927.5" ></text>
</g>
<g >
<title>tokio_tower::mediator::Sender&lt;T&gt;::poll_ready (6 samples, 0.01%)</title><rect x="1008.0" y="1365" width="0.1" height="15.0" fill="rgb(223,132,44)" rx="2" ry="2" />
<text  x="1011.01" y="1375.5" ></text>
</g>
<g >
<title>chan::Receiver&lt;T&gt;::recv_op (381 samples, 0.69%)</title><rect x="466.4" y="1269" width="8.1" height="15.0" fill="rgb(231,229,54)" rx="2" ry="2" />
<text  x="469.40" y="1279.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (14 samples, 0.03%)</title><rect x="1049.7" y="1173" width="0.3" height="15.0" fill="rgb(218,215,36)" rx="2" ry="2" />
<text  x="1052.72" y="1183.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (25 samples, 0.04%)</title><rect x="1026.9" y="1157" width="0.5" height="15.0" fill="rgb(224,92,9)" rx="2" ry="2" />
<text  x="1029.91" y="1167.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::new (15 samples, 0.03%)</title><rect x="243.2" y="1301" width="0.3" height="15.0" fill="rgb(209,105,6)" rx="2" ry="2" />
<text  x="246.19" y="1311.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (20 samples, 0.04%)</title><rect x="1050.4" y="565" width="0.4" height="15.0" fill="rgb(209,39,5)" rx="2" ry="2" />
<text  x="1053.38" y="575.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (20 samples, 0.04%)</title><rect x="1036.5" y="1413" width="0.4" height="15.0" fill="rgb(208,38,18)" rx="2" ry="2" />
<text  x="1039.48" y="1423.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.01%)</title><rect x="983.1" y="1285" width="0.2" height="15.0" fill="rgb(228,35,5)" rx="2" ry="2" />
<text  x="986.14" y="1295.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (11 samples, 0.02%)</title><rect x="1059.1" y="1397" width="0.2" height="15.0" fill="rgb(207,118,54)" rx="2" ry="2" />
<text  x="1062.06" y="1407.5" ></text>
</g>
<g >
<title>&lt;crossbeam_epoch::epoch::Epoch as core::cmp::PartialEq&gt;::eq (5 samples, 0.01%)</title><rect x="1175.2" y="901" width="0.1" height="15.0" fill="rgb(228,223,11)" rx="2" ry="2" />
<text  x="1178.23" y="911.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_mut (36 samples, 0.06%)</title><rect x="552.0" y="1301" width="0.8" height="15.0" fill="rgb(218,19,2)" rx="2" ry="2" />
<text  x="555.01" y="1311.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (11 samples, 0.02%)</title><rect x="234.6" y="1253" width="0.2" height="15.0" fill="rgb(229,100,1)" rx="2" ry="2" />
<text  x="237.56" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (19 samples, 0.03%)</title><rect x="1014.5" y="853" width="0.4" height="15.0" fill="rgb(219,189,10)" rx="2" ry="2" />
<text  x="1017.52" y="863.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (11 samples, 0.02%)</title><rect x="1045.6" y="1093" width="0.2" height="15.0" fill="rgb(226,157,23)" rx="2" ry="2" />
<text  x="1048.56" y="1103.5" ></text>
</g>
<g >
<title>tokio_sync::task::atomic_task::AtomicTask::register (8 samples, 0.01%)</title><rect x="1046.3" y="1109" width="0.2" height="15.0" fill="rgb(232,30,4)" rx="2" ry="2" />
<text  x="1049.28" y="1119.5" ></text>
</g>
<g >
<title>httparse::parse_headers_iter (8 samples, 0.01%)</title><rect x="1025.1" y="1493" width="0.2" height="15.0" fill="rgb(215,31,21)" rx="2" ry="2" />
<text  x="1028.13" y="1503.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (8 samples, 0.01%)</title><rect x="1025.6" y="885" width="0.2" height="15.0" fill="rgb(207,102,20)" rx="2" ry="2" />
<text  x="1028.62" y="895.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current (15 samples, 0.03%)</title><rect x="188.6" y="1493" width="0.4" height="15.0" fill="rgb(222,131,33)" rx="2" ry="2" />
<text  x="191.64" y="1503.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,HandleType&gt;::reborrow (96 samples, 0.17%)</title><rect x="746.7" y="1189" width="2.0" height="15.0" fill="rgb(230,132,33)" rx="2" ry="2" />
<text  x="749.68" y="1199.5" ></text>
</g>
<g >
<title>mio::poll::AtomicState::compare_and_swap (5 samples, 0.01%)</title><rect x="1143.8" y="933" width="0.1" height="15.0" fill="rgb(241,1,23)" rx="2" ry="2" />
<text  x="1146.76" y="943.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run (12 samples, 0.02%)</title><rect x="1029.9" y="1381" width="0.3" height="15.0" fill="rgb(233,62,16)" rx="2" ry="2" />
<text  x="1032.95" y="1391.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::h21cd600e9f97af32 (46 samples, 0.08%)</title><rect x="1029.0" y="1429" width="0.9" height="15.0" fill="rgb(226,191,15)" rx="2" ry="2" />
<text  x="1031.97" y="1439.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current (17 samples, 0.03%)</title><rect x="189.0" y="1541" width="0.4" height="15.0" fill="rgb(246,131,6)" rx="2" ry="2" />
<text  x="192.02" y="1551.5" ></text>
</g>
<g >
<title>try_to_wake_up (10 samples, 0.02%)</title><rect x="1043.8" y="661" width="0.2" height="15.0" fill="rgb(239,218,50)" rx="2" ry="2" />
<text  x="1046.82" y="671.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (17 samples, 0.03%)</title><rect x="1031.3" y="869" width="0.4" height="15.0" fill="rgb(218,153,49)" rx="2" ry="2" />
<text  x="1034.30" y="879.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="1021.9" y="1557" width="0.2" height="15.0" fill="rgb(248,229,5)" rx="2" ry="2" />
<text  x="1024.95" y="1567.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (213 samples, 0.38%)</title><rect x="1149.8" y="885" width="4.5" height="15.0" fill="rgb(208,128,19)" rx="2" ry="2" />
<text  x="1152.77" y="895.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (7 samples, 0.01%)</title><rect x="1034.2" y="1349" width="0.1" height="15.0" fill="rgb(220,103,37)" rx="2" ry="2" />
<text  x="1037.19" y="1359.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (6 samples, 0.01%)</title><rect x="1024.8" y="1397" width="0.1" height="15.0" fill="rgb(220,175,11)" rx="2" ry="2" />
<text  x="1027.79" y="1407.5" ></text>
</g>
<g >
<title>std::panicking::try (27 samples, 0.05%)</title><rect x="1030.5" y="1061" width="0.5" height="15.0" fill="rgb(228,50,49)" rx="2" ry="2" />
<text  x="1033.48" y="1071.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (30 samples, 0.05%)</title><rect x="1059.7" y="1541" width="0.7" height="15.0" fill="rgb(210,90,20)" rx="2" ry="2" />
<text  x="1062.72" y="1551.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h248546646748d6c4 (23 samples, 0.04%)</title><rect x="186.6" y="1413" width="0.4" height="15.0" fill="rgb(239,72,10)" rx="2" ry="2" />
<text  x="189.56" y="1423.5" ></text>
</g>
<g >
<title>tokio_reactor::registration::Registration::poll_ready (12 samples, 0.02%)</title><rect x="1046.2" y="1141" width="0.3" height="15.0" fill="rgb(239,57,44)" rx="2" ry="2" />
<text  x="1049.20" y="1151.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_bytes (15 samples, 0.03%)</title><rect x="1013.1" y="1461" width="0.4" height="15.0" fill="rgb(238,155,47)" rx="2" ry="2" />
<text  x="1016.14" y="1471.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (21 samples, 0.04%)</title><rect x="1026.2" y="1525" width="0.4" height="15.0" fill="rgb(249,155,7)" rx="2" ry="2" />
<text  x="1029.19" y="1535.5" ></text>
</g>
<g >
<title>gen::read::_$u7b$$u7b$closure$u7d$$u7d$::h969152bd2f20c1e0 (13 samples, 0.02%)</title><rect x="978.6" y="1253" width="0.2" height="15.0" fill="rgb(248,5,40)" rx="2" ry="2" />
<text  x="981.55" y="1263.5" ></text>
</g>
<g >
<title>start_thread (113 samples, 0.20%)</title><rect x="992.9" y="1589" width="2.4" height="15.0" fill="rgb(219,115,45)" rx="2" ry="2" />
<text  x="995.92" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.04%)</title><rect x="1024.0" y="997" width="0.5" height="15.0" fill="rgb(251,224,17)" rx="2" ry="2" />
<text  x="1027.03" y="1007.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (9 samples, 0.02%)</title><rect x="1025.8" y="1493" width="0.2" height="15.0" fill="rgb(253,140,34)" rx="2" ry="2" />
<text  x="1028.79" y="1503.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default::_$u7b$$u7b$closure$u7d$$u7d$::ha80fbdab9b554b03 (46 samples, 0.08%)</title><rect x="1029.0" y="1365" width="0.9" height="15.0" fill="rgb(240,147,9)" rx="2" ry="2" />
<text  x="1031.97" y="1375.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::drop_id (5 samples, 0.01%)</title><rect x="1007.3" y="1429" width="0.1" height="15.0" fill="rgb(210,143,52)" rx="2" ry="2" />
<text  x="1010.26" y="1439.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (17 samples, 0.03%)</title><rect x="1044.4" y="1477" width="0.4" height="15.0" fill="rgb(247,49,44)" rx="2" ry="2" />
<text  x="1047.44" y="1487.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (10 samples, 0.02%)</title><rect x="1026.0" y="1317" width="0.2" height="15.0" fill="rgb(209,202,53)" rx="2" ry="2" />
<text  x="1028.98" y="1327.5" ></text>
</g>
<g >
<title>std::panicking::try (50 samples, 0.09%)</title><rect x="192.8" y="1557" width="1.1" height="15.0" fill="rgb(234,215,33)" rx="2" ry="2" />
<text  x="195.84" y="1567.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (48 samples, 0.09%)</title><rect x="1034.9" y="1557" width="1.0" height="15.0" fill="rgb(208,157,50)" rx="2" ry="2" />
<text  x="1037.87" y="1567.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (46 samples, 0.08%)</title><rect x="1029.0" y="1317" width="0.9" height="15.0" fill="rgb(240,154,6)" rx="2" ry="2" />
<text  x="1031.97" y="1327.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.01%)</title><rect x="1026.3" y="1269" width="0.2" height="15.0" fill="rgb(231,10,4)" rx="2" ry="2" />
<text  x="1029.30" y="1279.5" ></text>
</g>
<g >
<title>tokio_timer::atomic::imp::AtomicU64::store (9 samples, 0.02%)</title><rect x="1081.1" y="981" width="0.2" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="1084.08" y="991.5" ></text>
</g>
<g >
<title>tokio_reactor::poll_evented::PollEvented&lt;E&gt;::poll_write_ready (8 samples, 0.01%)</title><rect x="1051.9" y="1141" width="0.2" height="15.0" fill="rgb(208,4,13)" rx="2" ry="2" />
<text  x="1054.89" y="1151.5" ></text>
</g>
<g >
<title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (56 samples, 0.10%)</title><rect x="720.2" y="1269" width="1.1" height="15.0" fill="rgb(237,124,38)" rx="2" ry="2" />
<text  x="723.15" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (17 samples, 0.03%)</title><rect x="1044.4" y="1509" width="0.4" height="15.0" fill="rgb(210,38,48)" rx="2" ry="2" />
<text  x="1047.44" y="1519.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts_mut (102 samples, 0.18%)</title><rect x="516.4" y="1253" width="2.1" height="15.0" fill="rgb(219,39,15)" rx="2" ry="2" />
<text  x="519.37" y="1263.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 0.03%)</title><rect x="1045.2" y="1045" width="0.4" height="15.0" fill="rgb(215,141,42)" rx="2" ry="2" />
<text  x="1048.22" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts_mut (62 samples, 0.11%)</title><rect x="517.2" y="1237" width="1.3" height="15.0" fill="rgb(244,107,41)" rx="2" ry="2" />
<text  x="520.21" y="1247.5" ></text>
</g>
<g >
<title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (5 samples, 0.01%)</title><rect x="1025.0" y="1493" width="0.1" height="15.0" fill="rgb(206,181,10)" rx="2" ry="2" />
<text  x="1027.96" y="1503.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_enum (144 samples, 0.26%)</title><rect x="1000.0" y="1221" width="3.0" height="15.0" fill="rgb(233,168,32)" rx="2" ry="2" />
<text  x="1002.99" y="1231.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current (8 samples, 0.01%)</title><rect x="193.9" y="1349" width="0.2" height="15.0" fill="rgb(245,28,19)" rx="2" ry="2" />
<text  x="196.90" y="1359.5" ></text>
</g>
<g >
<title>std::io::Write::write_fmt (10 samples, 0.02%)</title><rect x="989.6" y="1237" width="0.2" height="15.0" fill="rgb(239,74,6)" rx="2" ry="2" />
<text  x="992.61" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (13 samples, 0.02%)</title><rect x="1035.5" y="869" width="0.3" height="15.0" fill="rgb(218,92,44)" rx="2" ry="2" />
<text  x="1038.53" y="879.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (11 samples, 0.02%)</title><rect x="1034.3" y="1269" width="0.3" height="15.0" fill="rgb(216,172,17)" rx="2" ry="2" />
<text  x="1037.34" y="1279.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (2,864 samples, 5.15%)</title><rect x="792.1" y="1189" width="60.7" height="15.0" fill="rgb(215,118,15)" rx="2" ry="2" />
<text  x="795.06" y="1199.5" >core::..</text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::notify (22 samples, 0.04%)</title><rect x="1024.0" y="1253" width="0.5" height="15.0" fill="rgb(235,199,6)" rx="2" ry="2" />
<text  x="1027.01" y="1263.5" ></text>
</g>
<g >
<title>&lt;tower_util::ready::Ready&lt;T,Request&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="192.5" y="1125" width="0.1" height="15.0" fill="rgb(219,96,34)" rx="2" ry="2" />
<text  x="195.48" y="1135.5" ></text>
</g>
<g >
<title>ip_rcv_finish (20 samples, 0.04%)</title><rect x="1042.0" y="357" width="0.5" height="15.0" fill="rgb(234,213,6)" rx="2" ry="2" />
<text  x="1045.04" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,168 samples, 5.70%)</title><rect x="632.6" y="1301" width="67.3" height="15.0" fill="rgb(231,92,12)" rx="2" ry="2" />
<text  x="635.65" y="1311.5" >&lt;alloc:..</text>
</g>
<g >
<title>core::sync::atomic::atomic_load (10 samples, 0.02%)</title><rect x="1091.2" y="869" width="0.2" height="15.0" fill="rgb(254,36,31)" rx="2" ry="2" />
<text  x="1094.23" y="879.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (12 samples, 0.02%)</title><rect x="1110.4" y="837" width="0.2" height="15.0" fill="rgb(206,83,10)" rx="2" ry="2" />
<text  x="1113.39" y="847.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (5 samples, 0.01%)</title><rect x="1026.2" y="1125" width="0.1" height="15.0" fill="rgb(232,135,8)" rx="2" ry="2" />
<text  x="1029.19" y="1135.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="1019.3" y="1461" width="0.1" height="15.0" fill="rgb(251,167,54)" rx="2" ry="2" />
<text  x="1022.27" y="1471.5" ></text>
</g>
<g >
<title>__GI___clone (113 samples, 0.20%)</title><rect x="992.9" y="1605" width="2.4" height="15.0" fill="rgb(215,105,27)" rx="2" ry="2" />
<text  x="995.92" y="1615.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_ptr (7 samples, 0.01%)</title><rect x="1081.9" y="917" width="0.2" height="15.0" fill="rgb(236,23,43)" rx="2" ry="2" />
<text  x="1084.91" y="927.5" ></text>
</g>
<g >
<title>_extract_crng (9 samples, 0.02%)</title><rect x="189.9" y="1381" width="0.2" height="15.0" fill="rgb(227,106,17)" rx="2" ry="2" />
<text  x="192.87" y="1391.5" ></text>
</g>
<g >
<title>&lt;futures::future::then::Then&lt;A,B,F&gt; as futures::future::Future&gt;::poll (22 samples, 0.04%)</title><rect x="189.4" y="1285" width="0.5" height="15.0" fill="rgb(207,135,36)" rx="2" ry="2" />
<text  x="192.38" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (8 samples, 0.01%)</title><rect x="1037.8" y="1221" width="0.2" height="15.0" fill="rgb(228,215,15)" rx="2" ry="2" />
<text  x="1040.82" y="1231.5" ></text>
</g>
<g >
<title>__rg_alloc (129 samples, 0.23%)</title><rect x="388.2" y="1285" width="2.7" height="15.0" fill="rgb(220,196,25)" rx="2" ry="2" />
<text  x="391.20" y="1295.5" ></text>
</g>
<g >
<title>std::panicking::try (11 samples, 0.02%)</title><rect x="1034.3" y="1429" width="0.3" height="15.0" fill="rgb(231,165,5)" rx="2" ry="2" />
<text  x="1037.34" y="1439.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="997.4" y="949" width="0.2" height="15.0" fill="rgb(239,105,44)" rx="2" ry="2" />
<text  x="1000.35" y="959.5" ></text>
</g>
<g >
<title>std::time::Instant::now (5 samples, 0.01%)</title><rect x="1080.4" y="901" width="0.1" height="15.0" fill="rgb(242,81,14)" rx="2" ry="2" />
<text  x="1083.36" y="911.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit (47 samples, 0.08%)</title><rect x="1048.0" y="1141" width="1.0" height="15.0" fill="rgb(206,61,34)" rx="2" ry="2" />
<text  x="1050.96" y="1151.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default::_$u7b$$u7b$closure$u7d$$u7d$::ha80fbdab9b554b03 (6,082 samples, 10.94%)</title><rect x="1060.7" y="1253" width="129.0" height="15.0" fill="rgb(227,10,45)" rx="2" ry="2" />
<text  x="1063.65" y="1263.5" >tokio_executor::..</text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (12 samples, 0.02%)</title><rect x="1047.6" y="1237" width="0.2" height="15.0" fill="rgb(213,174,52)" rx="2" ry="2" />
<text  x="1050.56" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (220 samples, 0.40%)</title><rect x="1130.7" y="869" width="4.7" height="15.0" fill="rgb(209,166,10)" rx="2" ry="2" />
<text  x="1133.74" y="879.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (12 samples, 0.02%)</title><rect x="1029.9" y="1093" width="0.3" height="15.0" fill="rgb(221,225,20)" rx="2" ry="2" />
<text  x="1032.95" y="1103.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (25 samples, 0.04%)</title><rect x="214.3" y="1285" width="0.5" height="15.0" fill="rgb(224,115,14)" rx="2" ry="2" />
<text  x="217.25" y="1295.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.01%)</title><rect x="192.7" y="1509" width="0.1" height="15.0" fill="rgb(235,82,27)" rx="2" ry="2" />
<text  x="195.69" y="1519.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::write (28 samples, 0.05%)</title><rect x="185.2" y="997" width="0.6" height="15.0" fill="rgb(205,173,50)" rx="2" ry="2" />
<text  x="188.23" y="1007.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (8 samples, 0.01%)</title><rect x="11.1" y="1573" width="0.2" height="15.0" fill="rgb(206,228,51)" rx="2" ry="2" />
<text  x="14.10" y="1583.5" ></text>
</g>
<g >
<title>futures::task_impl::std::&lt;impl futures::task_impl::Spawn&lt;F&gt;&gt;::wait_future (5 samples, 0.01%)</title><rect x="989.3" y="1253" width="0.1" height="15.0" fill="rgb(242,100,42)" rx="2" ry="2" />
<text  x="992.29" y="1263.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.01%)</title><rect x="982.6" y="1205" width="0.1" height="15.0" fill="rgb(237,86,21)" rx="2" ry="2" />
<text  x="985.59" y="1215.5" ></text>
</g>
<g >
<title>&lt;bytes::bytes::Bytes as core::iter::traits::collect::Extend&lt;u8&gt;&gt;::extend (5 samples, 0.01%)</title><rect x="1041.1" y="661" width="0.1" height="15.0" fill="rgb(207,48,5)" rx="2" ry="2" />
<text  x="1044.11" y="671.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::clone_id (8 samples, 0.01%)</title><rect x="1007.5" y="1381" width="0.2" height="15.0" fill="rgb(221,219,38)" rx="2" ry="2" />
<text  x="1010.54" y="1391.5" ></text>
</g>
<g >
<title>arena_ralloc_move_helper (9 samples, 0.02%)</title><rect x="1017.8" y="1541" width="0.2" height="15.0" fill="rgb(251,47,45)" rx="2" ry="2" />
<text  x="1020.83" y="1551.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::as_mut_ptr (21 samples, 0.04%)</title><rect x="502.6" y="1189" width="0.4" height="15.0" fill="rgb(211,189,46)" rx="2" ry="2" />
<text  x="505.55" y="1199.5" ></text>
</g>
<g >
<title>tcache_small_bin_get (50 samples, 0.09%)</title><rect x="153.7" y="1509" width="1.1" height="15.0" fill="rgb(220,20,35)" rx="2" ry="2" />
<text  x="156.74" y="1519.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (119 samples, 0.21%)</title><rect x="1107.1" y="933" width="2.5" height="15.0" fill="rgb(211,30,42)" rx="2" ry="2" />
<text  x="1110.10" y="943.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::bounded::Sender&lt;T&gt;::try_send (56 samples, 0.10%)</title><rect x="184.8" y="1477" width="1.2" height="15.0" fill="rgb(223,195,19)" rx="2" ry="2" />
<text  x="187.80" y="1487.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (37 samples, 0.07%)</title><rect x="186.3" y="1573" width="0.7" height="15.0" fill="rgb(232,156,16)" rx="2" ry="2" />
<text  x="189.26" y="1583.5" ></text>
</g>
<g >
<title>core::intrinsics::copy (200 samples, 0.36%)</title><rect x="366.4" y="1269" width="4.2" height="15.0" fill="rgb(213,100,50)" rx="2" ry="2" />
<text  x="369.37" y="1279.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (7 samples, 0.01%)</title><rect x="999.6" y="853" width="0.2" height="15.0" fill="rgb(213,111,4)" rx="2" ry="2" />
<text  x="1002.62" y="863.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (33 samples, 0.06%)</title><rect x="1030.5" y="1285" width="0.7" height="15.0" fill="rgb(230,88,19)" rx="2" ry="2" />
<text  x="1033.48" y="1295.5" ></text>
</g>
<g >
<title>__fget (7 samples, 0.01%)</title><rect x="1079.9" y="789" width="0.1" height="15.0" fill="rgb(218,213,29)" rx="2" ry="2" />
<text  x="1082.90" y="799.5" ></text>
</g>
<g >
<title>mio::poll::RegistrationInner::set_readiness (23 samples, 0.04%)</title><rect x="10.5" y="1157" width="0.5" height="15.0" fill="rgb(213,119,18)" rx="2" ry="2" />
<text  x="13.51" y="1167.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (14 samples, 0.03%)</title><rect x="1023.0" y="917" width="0.3" height="15.0" fill="rgb(208,71,25)" rx="2" ry="2" />
<text  x="1026.03" y="927.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (17 samples, 0.03%)</title><rect x="1134.1" y="677" width="0.3" height="15.0" fill="rgb(227,101,3)" rx="2" ry="2" />
<text  x="1137.09" y="687.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (15 samples, 0.03%)</title><rect x="503.2" y="1173" width="0.3" height="15.0" fill="rgb(237,126,23)" rx="2" ry="2" />
<text  x="506.21" y="1183.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (11 samples, 0.02%)</title><rect x="1034.3" y="1445" width="0.3" height="15.0" fill="rgb(205,189,4)" rx="2" ry="2" />
<text  x="1037.34" y="1455.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::PoolDiscoverer&lt;MS,Target,Request&gt; as tower_discover::Discover&gt;::poll (23 samples, 0.04%)</title><rect x="1003.5" y="1541" width="0.5" height="15.0" fill="rgb(214,81,52)" rx="2" ry="2" />
<text  x="1006.53" y="1551.5" ></text>
</g>
<g >
<title>futures::future::loop_fn::loop_fn (7 samples, 0.01%)</title><rect x="1047.8" y="1317" width="0.2" height="15.0" fill="rgb(223,93,40)" rx="2" ry="2" />
<text  x="1050.81" y="1327.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::set_default (7 samples, 0.01%)</title><rect x="201.1" y="1317" width="0.1" height="15.0" fill="rgb(220,69,51)" rx="2" ry="2" />
<text  x="204.05" y="1327.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h248546646748d6c4 (19 samples, 0.03%)</title><rect x="180.0" y="1573" width="0.4" height="15.0" fill="rgb(210,87,40)" rx="2" ry="2" />
<text  x="183.03" y="1583.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (13 samples, 0.02%)</title><rect x="1044.9" y="965" width="0.3" height="15.0" fill="rgb(231,25,7)" rx="2" ry="2" />
<text  x="1047.93" y="975.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::min (5 samples, 0.01%)</title><rect x="994.3" y="1269" width="0.1" height="15.0" fill="rgb(219,195,5)" rx="2" ry="2" />
<text  x="997.30" y="1279.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (33 samples, 0.06%)</title><rect x="620.4" y="1189" width="0.7" height="15.0" fill="rgb(228,222,20)" rx="2" ry="2" />
<text  x="623.36" y="1199.5" ></text>
</g>
<g >
<title>sock_sendmsg (45 samples, 0.08%)</title><rect x="1050.1" y="773" width="0.9" height="15.0" fill="rgb(227,192,0)" rx="2" ry="2" />
<text  x="1053.08" y="783.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::offset (38 samples, 0.07%)</title><rect x="520.4" y="1221" width="0.8" height="15.0" fill="rgb(219,35,42)" rx="2" ry="2" />
<text  x="523.36" y="1231.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::offset (48 samples, 0.09%)</title><rect x="379.0" y="1221" width="1.0" height="15.0" fill="rgb(250,169,23)" rx="2" ry="2" />
<text  x="382.00" y="1231.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (29 samples, 0.05%)</title><rect x="1031.9" y="1077" width="0.6" height="15.0" fill="rgb(253,91,8)" rx="2" ry="2" />
<text  x="1034.86" y="1087.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (11 samples, 0.02%)</title><rect x="1034.3" y="1493" width="0.3" height="15.0" fill="rgb(221,35,51)" rx="2" ry="2" />
<text  x="1037.34" y="1503.5" ></text>
</g>
<g >
<title>bincode::internal::serialized_size (18 samples, 0.03%)</title><rect x="1053.9" y="1205" width="0.4" height="15.0" fill="rgb(238,74,0)" rx="2" ry="2" />
<text  x="1056.90" y="1215.5" ></text>
</g>
<g >
<title>&lt;tokio_sync::mpsc::bounded::Receiver&lt;T&gt; as futures::stream::Stream&gt;::poll (108 samples, 0.19%)</title><rect x="1010.8" y="1557" width="2.3" height="15.0" fill="rgb(210,150,7)" rx="2" ry="2" />
<text  x="1013.83" y="1567.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit (15 samples, 0.03%)</title><rect x="1028.1" y="1221" width="0.3" height="15.0" fill="rgb(221,210,16)" rx="2" ry="2" />
<text  x="1031.06" y="1231.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (158 samples, 0.28%)</title><rect x="233.1" y="1317" width="3.4" height="15.0" fill="rgb(240,187,13)" rx="2" ry="2" />
<text  x="236.14" y="1327.5" ></text>
</g>
<g >
<title>&lt;usize as core::iter::range::Step&gt;::add_usize (12 samples, 0.02%)</title><rect x="1082.3" y="933" width="0.2" height="15.0" fill="rgb(231,218,14)" rx="2" ry="2" />
<text  x="1085.27" y="943.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (9 samples, 0.02%)</title><rect x="1092.7" y="885" width="0.2" height="15.0" fill="rgb(252,163,14)" rx="2" ry="2" />
<text  x="1095.69" y="895.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.02%)</title><rect x="1057.7" y="1157" width="0.2" height="15.0" fill="rgb(226,196,31)" rx="2" ry="2" />
<text  x="1060.68" y="1167.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (6 samples, 0.01%)</title><rect x="1033.7" y="1157" width="0.1" height="15.0" fill="rgb(206,224,15)" rx="2" ry="2" />
<text  x="1036.68" y="1167.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::and_then (5 samples, 0.01%)</title><rect x="1004.3" y="1461" width="0.1" height="15.0" fill="rgb(224,182,42)" rx="2" ry="2" />
<text  x="1007.25" y="1471.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (17 samples, 0.03%)</title><rect x="1124.8" y="901" width="0.3" height="15.0" fill="rgb(247,121,5)" rx="2" ry="2" />
<text  x="1127.77" y="911.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_mut (29 samples, 0.05%)</title><rect x="201.3" y="1333" width="0.6" height="15.0" fill="rgb(215,102,47)" rx="2" ry="2" />
<text  x="204.33" y="1343.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (6 samples, 0.01%)</title><rect x="1033.8" y="1253" width="0.1" height="15.0" fill="rgb(228,57,36)" rx="2" ry="2" />
<text  x="1036.81" y="1263.5" ></text>
</g>
<g >
<title>tokio_tower::mediator::Sender&lt;T&gt;::try_send (17 samples, 0.03%)</title><rect x="1040.7" y="901" width="0.4" height="15.0" fill="rgb(227,110,17)" rx="2" ry="2" />
<text  x="1043.70" y="911.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (44 samples, 0.08%)</title><rect x="334.7" y="1285" width="0.9" height="15.0" fill="rgb(221,211,53)" rx="2" ry="2" />
<text  x="337.71" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::CurrentTask::set (14 samples, 0.03%)</title><rect x="1135.4" y="1013" width="0.3" height="15.0" fill="rgb(220,162,28)" rx="2" ry="2" />
<text  x="1138.43" y="1023.5" ></text>
</g>
<g >
<title>bincode::internal::serialized_size (14 samples, 0.03%)</title><rect x="1044.9" y="1221" width="0.3" height="15.0" fill="rgb(237,100,7)" rx="2" ry="2" />
<text  x="1047.93" y="1231.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::chan::Rx$LT$T$C$S$GT$::recv::_$u7b$$u7b$closure$u7d$$u7d$::h02832e8795bf303a (5 samples, 0.01%)</title><rect x="1003.6" y="1477" width="0.1" height="15.0" fill="rgb(235,78,36)" rx="2" ry="2" />
<text  x="1006.64" y="1487.5" ></text>
</g>
<g >
<title>core::num::wrapping::&lt;impl core::ops::arith::Add for core::num::Wrapping&lt;usize&gt;&gt;::add (15 samples, 0.03%)</title><rect x="1181.9" y="901" width="0.4" height="15.0" fill="rgb(206,166,47)" rx="2" ry="2" />
<text  x="1184.94" y="911.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (7 samples, 0.01%)</title><rect x="1028.7" y="661" width="0.1" height="15.0" fill="rgb(251,63,32)" rx="2" ry="2" />
<text  x="1031.69" y="671.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (30 samples, 0.05%)</title><rect x="1059.7" y="1573" width="0.7" height="15.0" fill="rgb(238,190,37)" rx="2" ry="2" />
<text  x="1062.72" y="1583.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (51 samples, 0.09%)</title><rect x="977.9" y="1349" width="1.1" height="15.0" fill="rgb(253,193,50)" rx="2" ry="2" />
<text  x="980.88" y="1359.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::new (44 samples, 0.08%)</title><rect x="417.3" y="1301" width="1.0" height="15.0" fill="rgb(249,158,7)" rx="2" ry="2" />
<text  x="420.32" y="1311.5" ></text>
</g>
<g >
<title>tokio_timer::wheel::level::Level&lt;T&gt;::next_occupied_slot (6 samples, 0.01%)</title><rect x="1085.8" y="949" width="0.1" height="15.0" fill="rgb(225,102,37)" rx="2" ry="2" />
<text  x="1088.79" y="959.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (46 samples, 0.08%)</title><rect x="1029.0" y="1333" width="0.9" height="15.0" fill="rgb(240,129,39)" rx="2" ry="2" />
<text  x="1031.97" y="1343.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (83 samples, 0.15%)</title><rect x="1144.5" y="805" width="1.8" height="15.0" fill="rgb(206,101,11)" rx="2" ry="2" />
<text  x="1147.51" y="815.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::clone_id (5 samples, 0.01%)</title><rect x="1012.9" y="1301" width="0.1" height="15.0" fill="rgb(224,182,43)" rx="2" ry="2" />
<text  x="1015.87" y="1311.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (6 samples, 0.01%)</title><rect x="1035.2" y="1093" width="0.2" height="15.0" fill="rgb(237,48,15)" rx="2" ry="2" />
<text  x="1038.23" y="1103.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (20 samples, 0.04%)</title><rect x="1036.5" y="1509" width="0.4" height="15.0" fill="rgb(214,9,41)" rx="2" ry="2" />
<text  x="1039.48" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (49 samples, 0.09%)</title><rect x="1041.7" y="757" width="1.0" height="15.0" fill="rgb(207,172,23)" rx="2" ry="2" />
<text  x="1044.70" y="767.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="1034.7" y="1173" width="0.2" height="15.0" fill="rgb(224,165,14)" rx="2" ry="2" />
<text  x="1037.70" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (6 samples, 0.01%)</title><rect x="641.3" y="1189" width="0.1" height="15.0" fill="rgb(250,207,8)" rx="2" ry="2" />
<text  x="644.28" y="1199.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (5 samples, 0.01%)</title><rect x="1123.0" y="917" width="0.1" height="15.0" fill="rgb(220,50,34)" rx="2" ry="2" />
<text  x="1125.97" y="927.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (22 samples, 0.04%)</title><rect x="1059.9" y="1365" width="0.5" height="15.0" fill="rgb(210,125,9)" rx="2" ry="2" />
<text  x="1062.89" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.01%)</title><rect x="983.5" y="1061" width="0.1" height="15.0" fill="rgb(207,113,49)" rx="2" ry="2" />
<text  x="986.52" y="1071.5" ></text>
</g>
<g >
<title>core::fmt::write (60 samples, 0.11%)</title><rect x="998.7" y="1093" width="1.3" height="15.0" fill="rgb(210,24,39)" rx="2" ry="2" />
<text  x="1001.71" y="1103.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::h21cd600e9f97af32 (6,082 samples, 10.94%)</title><rect x="1060.7" y="1317" width="129.0" height="15.0" fill="rgb(214,149,32)" rx="2" ry="2" />
<text  x="1063.65" y="1327.5" >tokio_threadpool..</text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (56 samples, 0.10%)</title><rect x="184.8" y="1285" width="1.2" height="15.0" fill="rgb(238,79,21)" rx="2" ry="2" />
<text  x="187.80" y="1295.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (5 samples, 0.01%)</title><rect x="1114.5" y="997" width="0.1" height="15.0" fill="rgb(212,105,4)" rx="2" ry="2" />
<text  x="1117.50" y="1007.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNot&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1026.2" y="1237" width="0.1" height="15.0" fill="rgb(232,23,44)" rx="2" ry="2" />
<text  x="1029.19" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::register (13 samples, 0.02%)</title><rect x="1055.8" y="1269" width="0.3" height="15.0" fill="rgb(232,17,16)" rx="2" ry="2" />
<text  x="1058.79" y="1279.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (85 samples, 0.15%)</title><rect x="1107.8" y="821" width="1.8" height="15.0" fill="rgb(219,170,21)" rx="2" ry="2" />
<text  x="1110.76" y="831.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.01%)</title><rect x="1152.3" y="501" width="0.1" height="15.0" fill="rgb(252,42,8)" rx="2" ry="2" />
<text  x="1155.32" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="1051.4" y="1013" width="0.2" height="15.0" fill="rgb(246,25,36)" rx="2" ry="2" />
<text  x="1054.38" y="1023.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (7 samples, 0.01%)</title><rect x="1020.2" y="1365" width="0.2" height="15.0" fill="rgb(234,175,37)" rx="2" ry="2" />
<text  x="1023.23" y="1375.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::stream::Stream&gt;::poll (12 samples, 0.02%)</title><rect x="1040.1" y="949" width="0.2" height="15.0" fill="rgb(252,226,20)" rx="2" ry="2" />
<text  x="1043.09" y="959.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (14 samples, 0.03%)</title><rect x="923.2" y="1285" width="0.3" height="15.0" fill="rgb(217,127,6)" rx="2" ry="2" />
<text  x="926.19" y="1295.5" ></text>
</g>
<g >
<title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as futures::future::Future&gt;::poll (34 samples, 0.06%)</title><rect x="1131.0" y="709" width="0.8" height="15.0" fill="rgb(246,28,44)" rx="2" ry="2" />
<text  x="1134.03" y="719.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default::_$u7b$$u7b$closure$u7d$$u7d$::ha80fbdab9b554b03 (7 samples, 0.01%)</title><rect x="1030.3" y="1429" width="0.2" height="15.0" fill="rgb(242,64,51)" rx="2" ry="2" />
<text  x="1033.33" y="1439.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (8 samples, 0.01%)</title><rect x="1036.5" y="1109" width="0.2" height="15.0" fill="rgb(229,6,31)" rx="2" ry="2" />
<text  x="1039.48" y="1119.5" ></text>
</g>
<g >
<title>&lt;mio::sys::unix::tcp::TcpStream as mio::event_imp::Evented&gt;::reregister (5 samples, 0.01%)</title><rect x="994.1" y="1269" width="0.1" height="15.0" fill="rgb(209,69,54)" rx="2" ry="2" />
<text  x="997.11" y="1279.5" ></text>
</g>
<g >
<title>&lt;futures::future::then::Then&lt;A,B,F&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1025.6" y="757" width="0.1" height="15.0" fill="rgb(236,31,39)" rx="2" ry="2" />
<text  x="1028.62" y="767.5" ></text>
</g>
<g >
<title>tokio_sync::task::atomic_task::AtomicTask::register (23 samples, 0.04%)</title><rect x="1003.0" y="1477" width="0.5" height="15.0" fill="rgb(235,56,42)" rx="2" ry="2" />
<text  x="1006.04" y="1487.5" ></text>
</g>
<g >
<title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (13 samples, 0.02%)</title><rect x="502.7" y="1173" width="0.3" height="15.0" fill="rgb(240,210,13)" rx="2" ry="2" />
<text  x="505.72" y="1183.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (5 samples, 0.01%)</title><rect x="192.7" y="1269" width="0.1" height="15.0" fill="rgb(209,115,40)" rx="2" ry="2" />
<text  x="195.69" y="1279.5" ></text>
</g>
<g >
<title>tcache_dalloc_small (816 samples, 1.47%)</title><rect x="137.5" y="1525" width="17.3" height="15.0" fill="rgb(214,37,19)" rx="2" ry="2" />
<text  x="140.48" y="1535.5" ></text>
</g>
<g >
<title>tokio_reactor::sharded_rwlock::REGISTRATION::__getit (5 samples, 0.01%)</title><rect x="1110.0" y="901" width="0.2" height="15.0" fill="rgb(239,126,11)" rx="2" ry="2" />
<text  x="1113.05" y="911.5" ></text>
</g>
<g >
<title>futures::task_impl::std::&lt;impl futures::task_impl::Spawn&lt;F&gt;&gt;::wait_future (5 samples, 0.01%)</title><rect x="986.3" y="1269" width="0.1" height="15.0" fill="rgb(218,151,49)" rx="2" ry="2" />
<text  x="989.26" y="1279.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::Client&lt;T,E&gt; as tower_service::Service&lt;&lt;T as futures::sink::Sink&gt;::SinkItem&gt;&gt;::call (27 samples, 0.05%)</title><rect x="1028.4" y="1317" width="0.6" height="15.0" fill="rgb(242,18,37)" rx="2" ry="2" />
<text  x="1031.40" y="1327.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (49 samples, 0.09%)</title><rect x="383.0" y="1301" width="1.0" height="15.0" fill="rgb(214,136,33)" rx="2" ry="2" />
<text  x="385.98" y="1311.5" ></text>
</g>
<g >
<title>static_opts_init (691 samples, 1.24%)</title><rect x="87.1" y="1573" width="14.7" height="15.0" fill="rgb(225,92,43)" rx="2" ry="2" />
<text  x="90.11" y="1583.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (6 samples, 0.01%)</title><rect x="1030.2" y="1317" width="0.1" height="15.0" fill="rgb(234,124,4)" rx="2" ry="2" />
<text  x="1033.20" y="1327.5" ></text>
</g>
<g >
<title>__ip_local_out (6 samples, 0.01%)</title><rect x="1041.8" y="549" width="0.1" height="15.0" fill="rgb(205,106,4)" rx="2" ry="2" />
<text  x="1044.81" y="559.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (284 samples, 0.51%)</title><rect x="1038.4" y="1349" width="6.0" height="15.0" fill="rgb(228,190,45)" rx="2" ry="2" />
<text  x="1041.41" y="1359.5" ></text>
</g>
<g >
<title>_rjem_je_tcache_bin_flush_small (7 samples, 0.01%)</title><rect x="1060.5" y="1477" width="0.1" height="15.0" fill="rgb(225,34,4)" rx="2" ry="2" />
<text  x="1063.46" y="1487.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (104 samples, 0.19%)</title><rect x="1150.4" y="709" width="2.2" height="15.0" fill="rgb(208,37,5)" rx="2" ry="2" />
<text  x="1153.43" y="719.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (144 samples, 0.26%)</title><rect x="1000.0" y="821" width="3.0" height="15.0" fill="rgb(239,27,51)" rx="2" ry="2" />
<text  x="1002.99" y="831.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="1134.6" y="565" width="0.1" height="15.0" fill="rgb(229,119,17)" rx="2" ry="2" />
<text  x="1137.56" y="575.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (13 samples, 0.02%)</title><rect x="1026.6" y="1189" width="0.3" height="15.0" fill="rgb(247,138,32)" rx="2" ry="2" />
<text  x="1029.64" y="1199.5" ></text>
</g>
<g >
<title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::hbddfa5d49dab5e1e (8 samples, 0.01%)</title><rect x="990.9" y="1445" width="0.2" height="15.0" fill="rgb(246,201,20)" rx="2" ry="2" />
<text  x="993.92" y="1455.5" ></text>
</g>
<g >
<title>core::mem::size_of (14 samples, 0.03%)</title><rect x="690.4" y="1205" width="0.3" height="15.0" fill="rgb(211,51,2)" rx="2" ry="2" />
<text  x="693.40" y="1215.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (15 samples, 0.03%)</title><rect x="188.6" y="1477" width="0.4" height="15.0" fill="rgb(215,156,17)" rx="2" ry="2" />
<text  x="191.64" y="1487.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (13 samples, 0.02%)</title><rect x="1136.3" y="981" width="0.2" height="15.0" fill="rgb(227,97,47)" rx="2" ry="2" />
<text  x="1139.25" y="991.5" ></text>
</g>
<g >
<title>&lt;noria::view::_::&lt;impl serde::de::Deserialize for noria::view::ReadReply&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (24 samples, 0.04%)</title><rect x="1046.6" y="1045" width="0.5" height="15.0" fill="rgb(254,40,37)" rx="2" ry="2" />
<text  x="1049.60" y="1055.5" ></text>
</g>
<g >
<title>&lt;&amp;mut alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (179 samples, 0.32%)</title><rect x="434.4" y="1301" width="3.8" height="15.0" fill="rgb(250,32,13)" rx="2" ry="2" />
<text  x="437.38" y="1311.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.01%)</title><rect x="1134.6" y="517" width="0.1" height="15.0" fill="rgb(208,50,38)" rx="2" ry="2" />
<text  x="1137.60" y="527.5" ></text>
</g>
<g >
<title>&lt;jemallocator::Jemalloc as core::alloc::GlobalAlloc&gt;::alloc (48 samples, 0.09%)</title><rect x="276.7" y="1221" width="1.0" height="15.0" fill="rgb(250,55,4)" rx="2" ry="2" />
<text  x="279.72" y="1231.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (38 samples, 0.07%)</title><rect x="1026.6" y="1221" width="0.8" height="15.0" fill="rgb(213,17,46)" rx="2" ry="2" />
<text  x="1029.64" y="1231.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (17 samples, 0.03%)</title><rect x="637.5" y="1253" width="0.3" height="15.0" fill="rgb(219,81,7)" rx="2" ry="2" />
<text  x="640.48" y="1263.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (13 samples, 0.02%)</title><rect x="988.5" y="1141" width="0.2" height="15.0" fill="rgb(251,218,2)" rx="2" ry="2" />
<text  x="991.46" y="1151.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (13 samples, 0.02%)</title><rect x="194.1" y="1525" width="0.2" height="15.0" fill="rgb(234,224,31)" rx="2" ry="2" />
<text  x="197.07" y="1535.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (6 samples, 0.01%)</title><rect x="1103.3" y="885" width="0.2" height="15.0" fill="rgb(241,178,43)" rx="2" ry="2" />
<text  x="1106.34" y="895.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="592.3" y="1013" width="0.2" height="15.0" fill="rgb(245,224,35)" rx="2" ry="2" />
<text  x="595.33" y="1023.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current (22 samples, 0.04%)</title><rect x="1024.0" y="1349" width="0.5" height="15.0" fill="rgb(244,142,53)" rx="2" ry="2" />
<text  x="1027.01" y="1359.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current::_$u7b$$u7b$closure$u7d$$u7d$::ha0f99f248e8a20fc (30 samples, 0.05%)</title><rect x="191.8" y="1317" width="0.7" height="15.0" fill="rgb(205,14,1)" rx="2" ry="2" />
<text  x="194.85" y="1327.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (21 samples, 0.04%)</title><rect x="997.2" y="1253" width="0.4" height="15.0" fill="rgb(214,63,29)" rx="2" ry="2" />
<text  x="1000.16" y="1263.5" ></text>
</g>
<g >
<title>&lt;chan::ChannelId as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="656.9" y="1173" width="0.2" height="15.0" fill="rgb(211,176,47)" rx="2" ry="2" />
<text  x="659.92" y="1183.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::fmt_u64 (14 samples, 0.03%)</title><rect x="983.6" y="1189" width="0.3" height="15.0" fill="rgb(229,57,12)" rx="2" ry="2" />
<text  x="986.65" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (6 samples, 0.01%)</title><rect x="1033.7" y="1125" width="0.1" height="15.0" fill="rgb(206,128,22)" rx="2" ry="2" />
<text  x="1036.68" y="1135.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner&lt;T&gt;::consume_value (9 samples, 0.02%)</title><rect x="181.5" y="1413" width="0.2" height="15.0" fill="rgb(222,18,36)" rx="2" ry="2" />
<text  x="184.53" y="1423.5" ></text>
</g>
<g >
<title>std::sys_common::thread::start_thread (12 samples, 0.02%)</title><rect x="1029.9" y="1573" width="0.3" height="15.0" fill="rgb(247,152,23)" rx="2" ry="2" />
<text  x="1032.95" y="1583.5" ></text>
</g>
<g >
<title>__libc_start_main (9 samples, 0.02%)</title><rect x="990.9" y="1589" width="0.2" height="15.0" fill="rgb(243,109,20)" rx="2" ry="2" />
<text  x="993.90" y="1599.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.02%)</title><rect x="1051.4" y="1573" width="0.2" height="15.0" fill="rgb(227,29,18)" rx="2" ry="2" />
<text  x="1054.38" y="1583.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (9 samples, 0.02%)</title><rect x="1055.2" y="885" width="0.2" height="15.0" fill="rgb(250,147,48)" rx="2" ry="2" />
<text  x="1058.18" y="895.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (12 samples, 0.02%)</title><rect x="1029.9" y="1029" width="0.3" height="15.0" fill="rgb(224,28,52)" rx="2" ry="2" />
<text  x="1032.95" y="1039.5" ></text>
</g>
<g >
<title>try_to_wake_up (6 samples, 0.01%)</title><rect x="1134.2" y="469" width="0.1" height="15.0" fill="rgb(218,188,35)" rx="2" ry="2" />
<text  x="1137.22" y="479.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (7 samples, 0.01%)</title><rect x="647.1" y="1141" width="0.1" height="15.0" fill="rgb(231,175,3)" rx="2" ry="2" />
<text  x="650.07" y="1151.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (18 samples, 0.03%)</title><rect x="595.6" y="1125" width="0.4" height="15.0" fill="rgb(214,184,11)" rx="2" ry="2" />
<text  x="598.64" y="1135.5" ></text>
</g>
<g >
<title>&lt;usize as core::ops::arith::AddAssign&gt;::add_assign (5 samples, 0.01%)</title><rect x="987.9" y="1141" width="0.1" height="15.0" fill="rgb(238,104,45)" rx="2" ry="2" />
<text  x="990.91" y="1151.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h3169cfffdbef5731 (7 samples, 0.01%)</title><rect x="194.4" y="1461" width="0.1" height="15.0" fill="rgb(243,124,33)" rx="2" ry="2" />
<text  x="197.39" y="1471.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit (5 samples, 0.01%)</title><rect x="997.0" y="1269" width="0.1" height="15.0" fill="rgb(215,10,12)" rx="2" ry="2" />
<text  x="999.95" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::std::&lt;impl futures::task_impl::Spawn&lt;F&gt;&gt;::wait_future (15 samples, 0.03%)</title><rect x="194.7" y="1541" width="0.3" height="15.0" fill="rgb(227,71,11)" rx="2" ry="2" />
<text  x="197.71" y="1551.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (21 samples, 0.04%)</title><rect x="1042.0" y="453" width="0.5" height="15.0" fill="rgb(209,215,29)" rx="2" ry="2" />
<text  x="1045.02" y="463.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new (25 samples, 0.04%)</title><rect x="733.1" y="1237" width="0.5" height="15.0" fill="rgb(249,199,16)" rx="2" ry="2" />
<text  x="736.10" y="1247.5" ></text>
</g>
<g >
<title>jemallocator::layout_to_flags (20 samples, 0.04%)</title><rect x="686.0" y="1157" width="0.5" height="15.0" fill="rgb(211,76,9)" rx="2" ry="2" />
<text  x="689.03" y="1167.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (21 samples, 0.04%)</title><rect x="1026.2" y="1445" width="0.4" height="15.0" fill="rgb(249,220,40)" rx="2" ry="2" />
<text  x="1029.19" y="1455.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (158 samples, 0.28%)</title><rect x="1041.1" y="1045" width="3.3" height="15.0" fill="rgb(215,152,52)" rx="2" ry="2" />
<text  x="1044.09" y="1055.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (5 samples, 0.01%)</title><rect x="1021.0" y="1413" width="0.1" height="15.0" fill="rgb(252,159,12)" rx="2" ry="2" />
<text  x="1024.01" y="1423.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::clone_id (8 samples, 0.01%)</title><rect x="1007.5" y="1413" width="0.2" height="15.0" fill="rgb(210,35,47)" rx="2" ry="2" />
<text  x="1010.54" y="1423.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (16 samples, 0.03%)</title><rect x="1049.4" y="1557" width="0.3" height="15.0" fill="rgb(232,29,40)" rx="2" ry="2" />
<text  x="1052.38" y="1567.5" ></text>
</g>
<g >
<title>tracing::span::Span::current (13 samples, 0.02%)</title><rect x="188.2" y="1333" width="0.3" height="15.0" fill="rgb(216,138,39)" rx="2" ry="2" />
<text  x="191.20" y="1343.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (9 samples, 0.02%)</title><rect x="1025.4" y="1029" width="0.2" height="15.0" fill="rgb(248,21,25)" rx="2" ry="2" />
<text  x="1028.43" y="1039.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.01%)</title><rect x="1152.4" y="485" width="0.1" height="15.0" fill="rgb(208,125,10)" rx="2" ry="2" />
<text  x="1155.44" y="495.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (46 samples, 0.08%)</title><rect x="1029.0" y="1301" width="0.9" height="15.0" fill="rgb(240,76,6)" rx="2" ry="2" />
<text  x="1031.97" y="1311.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.03%)</title><rect x="1009.1" y="1509" width="0.3" height="15.0" fill="rgb(243,36,3)" rx="2" ry="2" />
<text  x="1012.07" y="1519.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (16 samples, 0.03%)</title><rect x="1049.4" y="1461" width="0.3" height="15.0" fill="rgb(207,219,36)" rx="2" ry="2" />
<text  x="1052.38" y="1471.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (7 samples, 0.01%)</title><rect x="1049.4" y="1221" width="0.1" height="15.0" fill="rgb(205,49,31)" rx="2" ry="2" />
<text  x="1052.38" y="1231.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (12 samples, 0.02%)</title><rect x="995.3" y="1205" width="0.3" height="15.0" fill="rgb(233,25,51)" rx="2" ry="2" />
<text  x="998.32" y="1215.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (71 samples, 0.13%)</title><rect x="324.5" y="1221" width="1.5" height="15.0" fill="rgb(221,46,5)" rx="2" ry="2" />
<text  x="327.51" y="1231.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (216 samples, 0.39%)</title><rect x="1044.8" y="1541" width="4.6" height="15.0" fill="rgb(248,113,49)" rx="2" ry="2" />
<text  x="1047.80" y="1551.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (10 samples, 0.02%)</title><rect x="10.0" y="1493" width="0.2" height="15.0" fill="rgb(216,141,21)" rx="2" ry="2" />
<text  x="13.00" y="1503.5" ></text>
</g>
<g >
<title>&lt;futures::future::then::Then&lt;A,B,F&gt; as futures::future::Future&gt;::poll (23 samples, 0.04%)</title><rect x="187.0" y="1429" width="0.5" height="15.0" fill="rgb(239,28,17)" rx="2" ry="2" />
<text  x="190.05" y="1439.5" ></text>
</g>
<g >
<title>std::sys::unix::condvar::Condvar::wait (19 samples, 0.03%)</title><rect x="982.0" y="1141" width="0.4" height="15.0" fill="rgb(218,196,24)" rx="2" ry="2" />
<text  x="985.01" y="1151.5" ></text>
</g>
<g >
<title>core::mem::replace (8 samples, 0.01%)</title><rect x="1003.8" y="1493" width="0.1" height="15.0" fill="rgb(205,37,54)" rx="2" ry="2" />
<text  x="1006.76" y="1503.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::as_mut_ptr (18 samples, 0.03%)</title><rect x="973.7" y="1269" width="0.3" height="15.0" fill="rgb(209,224,30)" rx="2" ry="2" />
<text  x="976.65" y="1279.5" ></text>
</g>
<g >
<title>jemallocator::layout_to_flags (11 samples, 0.02%)</title><rect x="730.1" y="1189" width="0.2" height="15.0" fill="rgb(234,91,12)" rx="2" ry="2" />
<text  x="733.06" y="1199.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::fmt_u64 (13 samples, 0.02%)</title><rect x="984.2" y="1189" width="0.3" height="15.0" fill="rgb(247,106,43)" rx="2" ry="2" />
<text  x="987.22" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (8 samples, 0.01%)</title><rect x="1059.7" y="1317" width="0.2" height="15.0" fill="rgb(245,0,44)" rx="2" ry="2" />
<text  x="1062.72" y="1327.5" ></text>
</g>
<g >
<title>&lt;crossbeam_utils::cache_padded::CachePadded&lt;T&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.01%)</title><rect x="1157.6" y="1013" width="0.1" height="15.0" fill="rgb(216,81,31)" rx="2" ry="2" />
<text  x="1160.56" y="1023.5" ></text>
</g>
<g >
<title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::maybe_notify (5 samples, 0.01%)</title><rect x="1031.0" y="677" width="0.2" height="15.0" fill="rgb(245,65,52)" rx="2" ry="2" />
<text  x="1034.05" y="687.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (21 samples, 0.04%)</title><rect x="1033.2" y="1493" width="0.5" height="15.0" fill="rgb(248,111,38)" rx="2" ry="2" />
<text  x="1036.24" y="1503.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.01%)</title><rect x="998.3" y="821" width="0.1" height="15.0" fill="rgb(247,198,19)" rx="2" ry="2" />
<text  x="1001.27" y="831.5" ></text>
</g>
<g >
<title>noria::controller::ControllerHandle&lt;A&gt;::rpc (112 samples, 0.20%)</title><rect x="986.4" y="1285" width="2.3" height="15.0" fill="rgb(253,135,25)" rx="2" ry="2" />
<text  x="989.36" y="1295.5" ></text>
</g>
<g >
<title>mio::poll::Poll::reregister (5 samples, 0.01%)</title><rect x="994.9" y="1301" width="0.1" height="15.0" fill="rgb(232,194,6)" rx="2" ry="2" />
<text  x="997.85" y="1311.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (64 samples, 0.12%)</title><rect x="1050.0" y="1125" width="1.4" height="15.0" fill="rgb(220,26,43)" rx="2" ry="2" />
<text  x="1053.02" y="1135.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (21 samples, 0.04%)</title><rect x="997.2" y="1445" width="0.4" height="15.0" fill="rgb(220,97,10)" rx="2" ry="2" />
<text  x="1000.16" y="1455.5" ></text>
</g>
<g >
<title>alloc::rc::RcBoxPtr::dec_strong (243 samples, 0.44%)</title><rect x="555.6" y="1269" width="5.1" height="15.0" fill="rgb(242,108,35)" rx="2" ry="2" />
<text  x="558.58" y="1279.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (35 samples, 0.06%)</title><rect x="1051.9" y="1413" width="0.7" height="15.0" fill="rgb(231,22,15)" rx="2" ry="2" />
<text  x="1054.87" y="1423.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="1041.1" y="917" width="0.2" height="15.0" fill="rgb(220,177,18)" rx="2" ry="2" />
<text  x="1044.09" y="927.5" ></text>
</g>
<g >
<title>bincode::internal::deserialize (11 samples, 0.02%)</title><rect x="1055.2" y="1205" width="0.2" height="15.0" fill="rgb(216,187,43)" rx="2" ry="2" />
<text  x="1058.15" y="1215.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="1049.7" y="1045" width="0.2" height="15.0" fill="rgb(211,71,34)" rx="2" ry="2" />
<text  x="1052.72" y="1055.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (8 samples, 0.01%)</title><rect x="998.3" y="917" width="0.1" height="15.0" fill="rgb(210,153,13)" rx="2" ry="2" />
<text  x="1001.27" y="927.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (17 samples, 0.03%)</title><rect x="485.6" y="1189" width="0.4" height="15.0" fill="rgb(222,123,46)" rx="2" ry="2" />
<text  x="488.62" y="1199.5" ></text>
</g>
<g >
<title>&lt;noria::view::_::&lt;impl serde::de::Deserialize for noria::view::ReadReply&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (144 samples, 0.26%)</title><rect x="1000.0" y="1301" width="3.0" height="15.0" fill="rgb(227,147,39)" rx="2" ry="2" />
<text  x="1002.99" y="1311.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (12 samples, 0.02%)</title><rect x="1029.9" y="1061" width="0.3" height="15.0" fill="rgb(248,227,43)" rx="2" ry="2" />
<text  x="1032.95" y="1071.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfb347edd97d33f3d (10 samples, 0.02%)</title><rect x="1026.0" y="1333" width="0.2" height="15.0" fill="rgb(214,17,36)" rx="2" ry="2" />
<text  x="1028.98" y="1343.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 0.04%)</title><rect x="1053.4" y="1173" width="0.5" height="15.0" fill="rgb(246,15,37)" rx="2" ry="2" />
<text  x="1056.44" y="1183.5" ></text>
</g>
<g >
<title>serde::ser::impls::_$LT$impl$u20$serde..ser..Serialize$u20$for$u20$$u5b$T$u3b$$u20$_$u5d$$GT$::serialize::he70076c4b09e12fc (14 samples, 0.03%)</title><rect x="1023.0" y="1045" width="0.3" height="15.0" fill="rgb(246,71,8)" rx="2" ry="2" />
<text  x="1026.03" y="1055.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (11 samples, 0.02%)</title><rect x="1035.6" y="837" width="0.2" height="15.0" fill="rgb(217,34,7)" rx="2" ry="2" />
<text  x="1038.57" y="847.5" ></text>
</g>
<g >
<title>futures::sync::mpsc::Sender&lt;T&gt;::queue_push_and_signal (6 samples, 0.01%)</title><rect x="1024.8" y="1493" width="0.1" height="15.0" fill="rgb(223,92,35)" rx="2" ry="2" />
<text  x="1027.79" y="1503.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (8 samples, 0.01%)</title><rect x="1033.2" y="1349" width="0.2" height="15.0" fill="rgb(235,160,22)" rx="2" ry="2" />
<text  x="1036.24" y="1359.5" ></text>
</g>
<g >
<title>gen::main::_$u7b$$u7b$closure$u7d$$u7d$::hde85e8366ff24cf1 (348 samples, 0.63%)</title><rect x="195.2" y="1381" width="7.3" height="15.0" fill="rgb(208,165,5)" rx="2" ry="2" />
<text  x="198.16" y="1391.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::bounded::Sender&lt;T&gt;::try_send (7 samples, 0.01%)</title><rect x="985.9" y="1253" width="0.1" height="15.0" fill="rgb(244,199,35)" rx="2" ry="2" />
<text  x="988.90" y="1263.5" ></text>
</g>
<g >
<title>tokio_sync::task::atomic_task::AtomicTask::notify (8 samples, 0.01%)</title><rect x="11.1" y="1445" width="0.2" height="15.0" fill="rgb(228,208,43)" rx="2" ry="2" />
<text  x="14.10" y="1455.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (7 samples, 0.01%)</title><rect x="1019.3" y="1493" width="0.1" height="15.0" fill="rgb(227,173,54)" rx="2" ry="2" />
<text  x="1022.27" y="1503.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::first_leaf_edge (101 samples, 0.18%)</title><rect x="947.0" y="1285" width="2.1" height="15.0" fill="rgb(218,7,22)" rx="2" ry="2" />
<text  x="950.00" y="1295.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (10 samples, 0.02%)</title><rect x="1048.5" y="645" width="0.2" height="15.0" fill="rgb(231,92,36)" rx="2" ry="2" />
<text  x="1051.47" y="655.5" ></text>
</g>
<g >
<title>core::mem::size_of (8 samples, 0.01%)</title><rect x="323.3" y="1237" width="0.2" height="15.0" fill="rgb(236,29,48)" rx="2" ry="2" />
<text  x="326.34" y="1247.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (27 samples, 0.05%)</title><rect x="1028.4" y="1205" width="0.6" height="15.0" fill="rgb(221,47,6)" rx="2" ry="2" />
<text  x="1031.40" y="1215.5" ></text>
</g>
<g >
<title>_rjem_je_tcache_alloc_small_hard (7 samples, 0.01%)</title><rect x="1016.2" y="1477" width="0.1" height="15.0" fill="rgb(252,40,0)" rx="2" ry="2" />
<text  x="1019.20" y="1487.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::wrappers::ClientResponseFutInner&lt;T,E&gt; as futures::future::Future&gt;::poll (20 samples, 0.04%)</title><rect x="187.0" y="1285" width="0.5" height="15.0" fill="rgb(252,227,6)" rx="2" ry="2" />
<text  x="190.05" y="1295.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeHeader&lt;K,V&gt;::is_shared_root (44 samples, 0.08%)</title><rect x="271.3" y="1269" width="0.9" height="15.0" fill="rgb(251,1,2)" rx="2" ry="2" />
<text  x="274.27" y="1279.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (6 samples, 0.01%)</title><rect x="251.0" y="1253" width="0.1" height="15.0" fill="rgb(239,166,48)" rx="2" ry="2" />
<text  x="254.00" y="1263.5" ></text>
</g>
<g >
<title>std::panicking::try (5 samples, 0.01%)</title><rect x="992.8" y="1557" width="0.1" height="15.0" fill="rgb(248,59,16)" rx="2" ry="2" />
<text  x="995.81" y="1567.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (158 samples, 0.28%)</title><rect x="1041.1" y="1157" width="3.3" height="15.0" fill="rgb(224,197,9)" rx="2" ry="2" />
<text  x="1044.09" y="1167.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (223 samples, 0.40%)</title><rect x="1130.7" y="901" width="4.7" height="15.0" fill="rgb(205,42,40)" rx="2" ry="2" />
<text  x="1133.67" y="911.5" ></text>
</g>
<g >
<title>&lt;tokio_tcp::stream::TcpStream as std::io::Read&gt;::read (5 samples, 0.01%)</title><rect x="1038.2" y="1013" width="0.1" height="15.0" fill="rgb(248,128,36)" rx="2" ry="2" />
<text  x="1041.24" y="1023.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::poll_complete (62 samples, 0.11%)</title><rect x="1041.4" y="933" width="1.3" height="15.0" fill="rgb(254,44,5)" rx="2" ry="2" />
<text  x="1044.43" y="943.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (8 samples, 0.01%)</title><rect x="1059.7" y="1333" width="0.2" height="15.0" fill="rgb(231,175,32)" rx="2" ry="2" />
<text  x="1062.72" y="1343.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::Mutex::raw_unlock (146 samples, 0.26%)</title><rect x="482.9" y="1221" width="3.1" height="15.0" fill="rgb(210,71,41)" rx="2" ry="2" />
<text  x="485.88" y="1231.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.01%)</title><rect x="1053.8" y="1013" width="0.1" height="15.0" fill="rgb(248,136,14)" rx="2" ry="2" />
<text  x="1056.78" y="1023.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (17 samples, 0.03%)</title><rect x="1023.0" y="1109" width="0.3" height="15.0" fill="rgb(232,95,41)" rx="2" ry="2" />
<text  x="1025.97" y="1119.5" ></text>
</g>
<g >
<title>mio::sys::unix::awakener::pipe::Awakener::wakeup (22 samples, 0.04%)</title><rect x="1014.5" y="965" width="0.4" height="15.0" fill="rgb(231,91,38)" rx="2" ry="2" />
<text  x="1017.46" y="975.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8cd3856201f3e5fd (36,502 samples, 65.64%)</title><rect x="202.5" y="1413" width="774.6" height="15.0" fill="rgb(210,184,28)" rx="2" ry="2" />
<text  x="205.54" y="1423.5" >std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8cd3856..</text>
</g>
<g >
<title>futures::task_impl::Task::notify (47 samples, 0.08%)</title><rect x="1048.0" y="1237" width="1.0" height="15.0" fill="rgb(211,173,6)" rx="2" ry="2" />
<text  x="1050.96" y="1247.5" ></text>
</g>
<g >
<title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (26 samples, 0.05%)</title><rect x="676.7" y="1237" width="0.5" height="15.0" fill="rgb(245,18,43)" rx="2" ry="2" />
<text  x="679.70" y="1247.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (14 samples, 0.03%)</title><rect x="1034.6" y="1589" width="0.3" height="15.0" fill="rgb(218,77,5)" rx="2" ry="2" />
<text  x="1037.57" y="1599.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (13 samples, 0.02%)</title><rect x="1051.6" y="1445" width="0.3" height="15.0" fill="rgb(248,68,35)" rx="2" ry="2" />
<text  x="1054.59" y="1455.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="992.8" y="1573" width="0.1" height="15.0" fill="rgb(212,184,13)" rx="2" ry="2" />
<text  x="995.81" y="1583.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run (10 samples, 0.02%)</title><rect x="1051.4" y="1589" width="0.2" height="15.0" fill="rgb(229,13,32)" rx="2" ry="2" />
<text  x="1054.38" y="1599.5" ></text>
</g>
<g >
<title>rand::os::imp::getrandom (9 samples, 0.02%)</title><rect x="189.9" y="1493" width="0.2" height="15.0" fill="rgb(225,59,37)" rx="2" ry="2" />
<text  x="192.87" y="1503.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::enqueue_node (5 samples, 0.01%)</title><rect x="1092.1" y="901" width="0.1" height="15.0" fill="rgb(250,152,6)" rx="2" ry="2" />
<text  x="1095.14" y="911.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner&lt;T&gt;::poll_recv (6 samples, 0.01%)</title><rect x="1007.9" y="1397" width="0.1" height="15.0" fill="rgb(245,180,23)" rx="2" ry="2" />
<text  x="1010.88" y="1407.5" ></text>
</g>
<g >
<title>noria::view::SyncView::lookup (193 samples, 0.35%)</title><rect x="979.2" y="1349" width="4.1" height="15.0" fill="rgb(242,185,44)" rx="2" ry="2" />
<text  x="982.17" y="1359.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::wakeup (5 samples, 0.01%)</title><rect x="1024.8" y="1109" width="0.1" height="15.0" fill="rgb(250,89,49)" rx="2" ry="2" />
<text  x="1027.79" y="1119.5" ></text>
</g>
<g >
<title>__netif_receive_skb (21 samples, 0.04%)</title><rect x="1042.0" y="405" width="0.5" height="15.0" fill="rgb(225,156,37)" rx="2" ry="2" />
<text  x="1045.02" y="415.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (17 samples, 0.03%)</title><rect x="189.0" y="1333" width="0.4" height="15.0" fill="rgb(213,208,44)" rx="2" ry="2" />
<text  x="192.02" y="1343.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (14 samples, 0.03%)</title><rect x="1034.6" y="1557" width="0.3" height="15.0" fill="rgb(247,148,29)" rx="2" ry="2" />
<text  x="1037.57" y="1567.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (32 samples, 0.06%)</title><rect x="1031.8" y="1349" width="0.7" height="15.0" fill="rgb(240,219,9)" rx="2" ry="2" />
<text  x="1034.79" y="1359.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::hd16273aabd937917 (8 samples, 0.01%)</title><rect x="194.5" y="1365" width="0.2" height="15.0" fill="rgb(235,25,48)" rx="2" ry="2" />
<text  x="197.54" y="1375.5" ></text>
</g>
<g >
<title>ip_output (30 samples, 0.05%)</title><rect x="1038.9" y="549" width="0.7" height="15.0" fill="rgb(247,203,43)" rx="2" ry="2" />
<text  x="1041.94" y="559.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (20 samples, 0.04%)</title><rect x="1059.3" y="1333" width="0.4" height="15.0" fill="rgb(235,208,25)" rx="2" ry="2" />
<text  x="1062.29" y="1343.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (7 samples, 0.01%)</title><rect x="1036.2" y="1045" width="0.1" height="15.0" fill="rgb(242,162,12)" rx="2" ry="2" />
<text  x="1039.16" y="1055.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::VacantEntry&lt;K,V&gt;::insert (2,510 samples, 4.51%)</title><rect x="330.8" y="1333" width="53.2" height="15.0" fill="rgb(225,224,7)" rx="2" ry="2" />
<text  x="333.76" y="1343.5" >alloc..</text>
</g>
<g >
<title>ip_local_out (7 samples, 0.01%)</title><rect x="1131.4" y="229" width="0.1" height="15.0" fill="rgb(226,58,10)" rx="2" ry="2" />
<text  x="1134.35" y="239.5" ></text>
</g>
<g >
<title>alloc::sync::data_offset (5 samples, 0.01%)</title><rect x="1107.4" y="837" width="0.1" height="15.0" fill="rgb(225,56,31)" rx="2" ry="2" />
<text  x="1110.40" y="847.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (9 samples, 0.02%)</title><rect x="1051.4" y="1061" width="0.2" height="15.0" fill="rgb(219,216,13)" rx="2" ry="2" />
<text  x="1054.38" y="1071.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::service::Buffer&lt;T,Request&gt; as tower_service::Service&lt;Request&gt;&gt;::call (56 samples, 0.10%)</title><rect x="184.8" y="1493" width="1.2" height="15.0" fill="rgb(225,188,19)" rx="2" ry="2" />
<text  x="187.80" y="1503.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (14 samples, 0.03%)</title><rect x="1032.5" y="1317" width="0.3" height="15.0" fill="rgb(211,212,27)" rx="2" ry="2" />
<text  x="1035.47" y="1327.5" ></text>
</g>
<g >
<title>gen::read (5 samples, 0.01%)</title><rect x="192.7" y="1477" width="0.1" height="15.0" fill="rgb(240,98,47)" rx="2" ry="2" />
<text  x="195.69" y="1487.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (33 samples, 0.06%)</title><rect x="1035.2" y="1429" width="0.7" height="15.0" fill="rgb(208,118,9)" rx="2" ry="2" />
<text  x="1038.19" y="1439.5" ></text>
</g>
<g >
<title>&lt;chrono::naive::datetime::serde::NaiveDateTimeVisitor as serde::de::Visitor&gt;::visit_str (82 samples, 0.15%)</title><rect x="1000.7" y="645" width="1.7" height="15.0" fill="rgb(236,48,1)" rx="2" ry="2" />
<text  x="1003.66" y="655.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_flush (10 samples, 0.02%)</title><rect x="1153.0" y="645" width="0.2" height="15.0" fill="rgb(241,162,16)" rx="2" ry="2" />
<text  x="1155.95" y="655.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (5,467 samples, 9.83%)</title><rect x="738.2" y="1253" width="116.0" height="15.0" fill="rgb(237,169,0)" rx="2" ry="2" />
<text  x="741.19" y="1263.5" >core::iter::tr..</text>
</g>
<g >
<title>core::mem::swap (80 samples, 0.14%)</title><rect x="558.8" y="1205" width="1.7" height="15.0" fill="rgb(216,128,24)" rx="2" ry="2" />
<text  x="561.82" y="1215.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (17 samples, 0.03%)</title><rect x="718.4" y="1285" width="0.3" height="15.0" fill="rgb(254,161,5)" rx="2" ry="2" />
<text  x="721.37" y="1295.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (11 samples, 0.02%)</title><rect x="730.4" y="1189" width="0.3" height="15.0" fill="rgb(238,186,51)" rx="2" ry="2" />
<text  x="733.42" y="1199.5" ></text>
</g>
<g >
<title>arccstr::ArcCStr::from_raw_cstr_no_nul (10 samples, 0.02%)</title><rect x="1000.4" y="629" width="0.2" height="15.0" fill="rgb(234,27,46)" rx="2" ry="2" />
<text  x="1003.41" y="639.5" ></text>
</g>
<g >
<title>mio::sys::unix::awakener::pipe::Awakener::wakeup (15 samples, 0.03%)</title><rect x="10.7" y="1077" width="0.3" height="15.0" fill="rgb(221,87,28)" rx="2" ry="2" />
<text  x="13.66" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.01%)</title><rect x="557.5" y="1221" width="0.1" height="15.0" fill="rgb(224,221,19)" rx="2" ry="2" />
<text  x="560.51" y="1231.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (6 samples, 0.01%)</title><rect x="578.5" y="1029" width="0.1" height="15.0" fill="rgb(215,182,13)" rx="2" ry="2" />
<text  x="581.49" y="1039.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (48 samples, 0.09%)</title><rect x="1051.6" y="1589" width="1.0" height="15.0" fill="rgb(212,151,17)" rx="2" ry="2" />
<text  x="1054.59" y="1599.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (12 samples, 0.02%)</title><rect x="1033.7" y="1349" width="0.2" height="15.0" fill="rgb(209,152,52)" rx="2" ry="2" />
<text  x="1036.68" y="1359.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::is_null (9 samples, 0.02%)</title><rect x="733.4" y="1221" width="0.2" height="15.0" fill="rgb(215,136,49)" rx="2" ry="2" />
<text  x="736.43" y="1231.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (11 samples, 0.02%)</title><rect x="977.1" y="1493" width="0.2" height="15.0" fill="rgb(236,138,30)" rx="2" ry="2" />
<text  x="980.07" y="1503.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h5b3a67a18c04d66c (5 samples, 0.01%)</title><rect x="192.5" y="1317" width="0.1" height="15.0" fill="rgb(231,58,48)" rx="2" ry="2" />
<text  x="195.48" y="1327.5" ></text>
</g>
<g >
<title>alloc::rc::RcBoxPtr::inc_strong (569 samples, 1.02%)</title><rect x="618.1" y="1221" width="12.1" height="15.0" fill="rgb(240,13,47)" rx="2" ry="2" />
<text  x="621.13" y="1231.5" ></text>
</g>
<g >
<title>iralloct (56 samples, 0.10%)</title><rect x="1017.0" y="1573" width="1.2" height="15.0" fill="rgb(252,144,36)" rx="2" ry="2" />
<text  x="1020.05" y="1583.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit::_$u7b$$u7b$closure$u7d$$u7d$::h83d517d17b1a75b2 (22 samples, 0.04%)</title><rect x="1024.0" y="1285" width="0.5" height="15.0" fill="rgb(210,152,1)" rx="2" ry="2" />
<text  x="1027.01" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (13 samples, 0.02%)</title><rect x="1051.6" y="1317" width="0.3" height="15.0" fill="rgb(222,65,24)" rx="2" ry="2" />
<text  x="1054.59" y="1327.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (20 samples, 0.04%)</title><rect x="1029.0" y="1045" width="0.4" height="15.0" fill="rgb(235,79,48)" rx="2" ry="2" />
<text  x="1031.97" y="1055.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::state::State::lifecycle (14 samples, 0.03%)</title><rect x="1067.2" y="1045" width="0.3" height="15.0" fill="rgb(216,98,36)" rx="2" ry="2" />
<text  x="1070.16" y="1055.5" ></text>
</g>
<g >
<title>gen::write (30 samples, 0.05%)</title><rect x="191.8" y="1461" width="0.7" height="15.0" fill="rgb(240,132,27)" rx="2" ry="2" />
<text  x="194.85" y="1471.5" ></text>
</g>
<g >
<title>core::cmp::min (10 samples, 0.02%)</title><rect x="1078.0" y="853" width="0.2" height="15.0" fill="rgb(235,0,14)" rx="2" ry="2" />
<text  x="1081.01" y="863.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (48 samples, 0.09%)</title><rect x="1147.1" y="1029" width="1.0" height="15.0" fill="rgb(220,25,31)" rx="2" ry="2" />
<text  x="1150.07" y="1039.5" ></text>
</g>
<g >
<title>std::panicking::try (32 samples, 0.06%)</title><rect x="1031.8" y="1301" width="0.7" height="15.0" fill="rgb(234,39,34)" rx="2" ry="2" />
<text  x="1034.79" y="1311.5" ></text>
</g>
<g >
<title>std::sync::mpsc::blocking::WaitToken::wait (24 samples, 0.04%)</title><rect x="984.8" y="1317" width="0.5" height="15.0" fill="rgb(212,224,15)" rx="2" ry="2" />
<text  x="987.79" y="1327.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (48 samples, 0.09%)</title><rect x="1051.6" y="1573" width="1.0" height="15.0" fill="rgb(220,6,10)" rx="2" ry="2" />
<text  x="1054.59" y="1583.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (14 samples, 0.03%)</title><rect x="1049.7" y="1221" width="0.3" height="15.0" fill="rgb(225,199,22)" rx="2" ry="2" />
<text  x="1052.72" y="1231.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (42 samples, 0.08%)</title><rect x="913.8" y="1205" width="0.9" height="15.0" fill="rgb(236,217,2)" rx="2" ry="2" />
<text  x="916.84" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h3169cfffdbef5731 (14 samples, 0.03%)</title><rect x="180.4" y="1413" width="0.3" height="15.0" fill="rgb(221,123,12)" rx="2" ry="2" />
<text  x="183.43" y="1423.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (9 samples, 0.02%)</title><rect x="1025.8" y="1429" width="0.2" height="15.0" fill="rgb(217,103,30)" rx="2" ry="2" />
<text  x="1028.79" y="1439.5" ></text>
</g>
<g >
<title>mio::poll::enqueue_with_wakeup (22 samples, 0.04%)</title><rect x="1024.0" y="1141" width="0.5" height="15.0" fill="rgb(210,85,38)" rx="2" ry="2" />
<text  x="1027.01" y="1151.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 0.02%)</title><rect x="1027.7" y="1077" width="0.3" height="15.0" fill="rgb(244,140,37)" rx="2" ry="2" />
<text  x="1030.74" y="1087.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (15 samples, 0.03%)</title><rect x="723.1" y="1269" width="0.3" height="15.0" fill="rgb(234,223,29)" rx="2" ry="2" />
<text  x="726.10" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (20 samples, 0.04%)</title><rect x="1038.0" y="1237" width="0.4" height="15.0" fill="rgb(230,127,10)" rx="2" ry="2" />
<text  x="1040.99" y="1247.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (6 samples, 0.01%)</title><rect x="998.3" y="805" width="0.1" height="15.0" fill="rgb(238,91,48)" rx="2" ry="2" />
<text  x="1001.27" y="815.5" ></text>
</g>
<g >
<title>tokio_reactor::HandlePriv::wakeup (46 samples, 0.08%)</title><rect x="184.9" y="1157" width="1.0" height="15.0" fill="rgb(252,145,11)" rx="2" ry="2" />
<text  x="187.93" y="1167.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.01%)</title><rect x="184.7" y="1461" width="0.1" height="15.0" fill="rgb(207,120,1)" rx="2" ry="2" />
<text  x="187.67" y="1471.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (65 samples, 0.12%)</title><rect x="834.6" y="1109" width="1.4" height="15.0" fill="rgb(232,162,0)" rx="2" ry="2" />
<text  x="837.65" y="1119.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="1167.9" y="917" width="0.1" height="15.0" fill="rgb(244,120,25)" rx="2" ry="2" />
<text  x="1170.93" y="927.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.01%)</title><rect x="197.8" y="1237" width="0.1" height="15.0" fill="rgb(211,101,0)" rx="2" ry="2" />
<text  x="200.81" y="1247.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (21 samples, 0.04%)</title><rect x="997.2" y="1333" width="0.4" height="15.0" fill="rgb(205,30,3)" rx="2" ry="2" />
<text  x="1000.16" y="1343.5" ></text>
</g>
<g >
<title>security_file_permission (15 samples, 0.03%)</title><rect x="1097.2" y="741" width="0.3" height="15.0" fill="rgb(231,133,3)" rx="2" ry="2" />
<text  x="1100.21" y="751.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::join (27 samples, 0.05%)</title><rect x="197.7" y="1285" width="0.6" height="15.0" fill="rgb(254,188,19)" rx="2" ry="2" />
<text  x="200.72" y="1295.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (5 samples, 0.01%)</title><rect x="1090.3" y="869" width="0.1" height="15.0" fill="rgb(224,42,8)" rx="2" ry="2" />
<text  x="1093.27" y="879.5" ></text>
</g>
<g >
<title>pthread_condattr_setclock (12 samples, 0.02%)</title><rect x="231.4" y="1285" width="0.2" height="15.0" fill="rgb(229,3,14)" rx="2" ry="2" />
<text  x="234.38" y="1295.5" ></text>
</g>
<g >
<title>&lt;noria::table::Table as tower_service::Service&lt;noria::data::TableOperation&gt;&gt;::call (8 samples, 0.01%)</title><rect x="11.1" y="1525" width="0.2" height="15.0" fill="rgb(217,171,45)" rx="2" ry="2" />
<text  x="14.10" y="1535.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_ptr (10 samples, 0.02%)</title><rect x="585.2" y="1061" width="0.2" height="15.0" fill="rgb(247,218,8)" rx="2" ry="2" />
<text  x="588.16" y="1071.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (10 samples, 0.02%)</title><rect x="995.3" y="997" width="0.2" height="15.0" fill="rgb(246,126,49)" rx="2" ry="2" />
<text  x="998.32" y="1007.5" ></text>
</g>
<g >
<title>futures::task_impl::current::_$u7b$$u7b$closure$u7d$$u7d$::hb88041a16b038a29 (5 samples, 0.01%)</title><rect x="1034.5" y="1125" width="0.1" height="15.0" fill="rgb(208,206,38)" rx="2" ry="2" />
<text  x="1037.47" y="1135.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (19 samples, 0.03%)</title><rect x="1052.6" y="1557" width="0.4" height="15.0" fill="rgb(223,110,2)" rx="2" ry="2" />
<text  x="1055.61" y="1567.5" ></text>
</g>
<g >
<title>imalloc (3,341 samples, 6.01%)</title><rect x="16.2" y="1573" width="70.9" height="15.0" fill="rgb(244,184,11)" rx="2" ry="2" />
<text  x="19.22" y="1583.5" >imalloc</text>
</g>
<g >
<title>&lt;&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple::Access&lt;R,O&gt; as serde::de::SeqAccess&gt;::next_element_seed (144 samples, 0.26%)</title><rect x="1000.0" y="837" width="3.0" height="15.0" fill="rgb(212,12,4)" rx="2" ry="2" />
<text  x="1002.99" y="847.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::write (15 samples, 0.03%)</title><rect x="10.7" y="1029" width="0.3" height="15.0" fill="rgb(209,26,14)" rx="2" ry="2" />
<text  x="13.66" y="1039.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="1143.6" y="949" width="0.1" height="15.0" fill="rgb(236,207,50)" rx="2" ry="2" />
<text  x="1146.59" y="959.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.01%)</title><rect x="984.3" y="1061" width="0.1" height="15.0" fill="rgb(216,205,25)" rx="2" ry="2" />
<text  x="987.33" y="1071.5" ></text>
</g>
<g >
<title>futures::task_impl::std::BorrowedUnpark::to_owned (10 samples, 0.02%)</title><rect x="1007.5" y="1445" width="0.3" height="15.0" fill="rgb(253,129,38)" rx="2" ry="2" />
<text  x="1010.54" y="1455.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (5 samples, 0.01%)</title><rect x="1053.3" y="1093" width="0.1" height="15.0" fill="rgb(235,91,32)" rx="2" ry="2" />
<text  x="1056.33" y="1103.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_and_swap (5 samples, 0.01%)</title><rect x="1143.4" y="1013" width="0.2" height="15.0" fill="rgb(252,67,19)" rx="2" ry="2" />
<text  x="1146.45" y="1023.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (10 samples, 0.02%)</title><rect x="293.2" y="1269" width="0.2" height="15.0" fill="rgb(230,170,9)" rx="2" ry="2" />
<text  x="296.21" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (20 samples, 0.04%)</title><rect x="1059.3" y="1301" width="0.4" height="15.0" fill="rgb(209,138,36)" rx="2" ry="2" />
<text  x="1062.29" y="1311.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.02%)</title><rect x="1051.4" y="1493" width="0.2" height="15.0" fill="rgb(208,26,40)" rx="2" ry="2" />
<text  x="1054.38" y="1503.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (8 samples, 0.01%)</title><rect x="193.9" y="1221" width="0.2" height="15.0" fill="rgb(254,7,2)" rx="2" ry="2" />
<text  x="196.90" y="1231.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (11 samples, 0.02%)</title><rect x="1034.0" y="1397" width="0.2" height="15.0" fill="rgb(215,124,9)" rx="2" ry="2" />
<text  x="1036.96" y="1407.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (32 samples, 0.06%)</title><rect x="1031.8" y="1205" width="0.7" height="15.0" fill="rgb(222,98,49)" rx="2" ry="2" />
<text  x="1034.79" y="1215.5" ></text>
</g>
<g >
<title>core::mem::drop (7 samples, 0.01%)</title><rect x="602.6" y="1109" width="0.1" height="15.0" fill="rgb(211,91,40)" rx="2" ry="2" />
<text  x="605.58" y="1119.5" ></text>
</g>
<g >
<title>tokio_sync::task::atomic_task::AtomicTask::do_register::_$u7b$$u7b$closure$u7d$$u7d$::h5cc89d43b8507865 (22 samples, 0.04%)</title><rect x="1003.1" y="1429" width="0.4" height="15.0" fill="rgb(237,219,52)" rx="2" ry="2" />
<text  x="1006.06" y="1439.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (132 samples, 0.24%)</title><rect x="410.3" y="1301" width="2.8" height="15.0" fill="rgb(218,225,29)" rx="2" ry="2" />
<text  x="413.34" y="1311.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (20 samples, 0.04%)</title><rect x="1038.0" y="1429" width="0.4" height="15.0" fill="rgb(216,5,40)" rx="2" ry="2" />
<text  x="1040.99" y="1439.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="180.4" y="1253" width="0.2" height="15.0" fill="rgb(235,104,48)" rx="2" ry="2" />
<text  x="183.43" y="1263.5" ></text>
</g>
<g >
<title>&lt;async_bincode::reader::AsyncBincodeReader&lt;R,T&gt; as futures::stream::Stream&gt;::poll (7 samples, 0.01%)</title><rect x="1051.1" y="981" width="0.2" height="15.0" fill="rgb(238,149,21)" rx="2" ry="2" />
<text  x="1054.14" y="991.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::Task as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="1055.8" y="1237" width="0.1" height="15.0" fill="rgb(226,74,36)" rx="2" ry="2" />
<text  x="1058.79" y="1247.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (7 samples, 0.01%)</title><rect x="1056.7" y="1477" width="0.2" height="15.0" fill="rgb(254,177,32)" rx="2" ry="2" />
<text  x="1059.70" y="1487.5" ></text>
</g>
<g >
<title>core::mem::swap (7 samples, 0.01%)</title><rect x="1003.8" y="1477" width="0.1" height="15.0" fill="rgb(254,66,21)" rx="2" ry="2" />
<text  x="1006.78" y="1487.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (12 samples, 0.02%)</title><rect x="1036.7" y="1189" width="0.2" height="15.0" fill="rgb(238,193,28)" rx="2" ry="2" />
<text  x="1039.65" y="1199.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::new_kv (25 samples, 0.04%)</title><rect x="344.5" y="1301" width="0.6" height="15.0" fill="rgb(218,117,43)" rx="2" ry="2" />
<text  x="347.54" y="1311.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (12 samples, 0.02%)</title><rect x="1120.3" y="949" width="0.3" height="15.0" fill="rgb(230,163,42)" rx="2" ry="2" />
<text  x="1123.30" y="959.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::poll_evented::PollEvented&lt;E&gt; as std::io::Read&gt;::read (17 samples, 0.03%)</title><rect x="1031.3" y="949" width="0.4" height="15.0" fill="rgb(243,54,9)" rx="2" ry="2" />
<text  x="1034.30" y="959.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (8 samples, 0.01%)</title><rect x="1059.7" y="1509" width="0.2" height="15.0" fill="rgb(243,57,15)" rx="2" ry="2" />
<text  x="1062.72" y="1519.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::poll_evented::PollEvented&lt;E&gt; as std::io::Write&gt;::write (48 samples, 0.09%)</title><rect x="1050.1" y="933" width="1.0" height="15.0" fill="rgb(242,175,13)" rx="2" ry="2" />
<text  x="1053.06" y="943.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (6 samples, 0.01%)</title><rect x="185.4" y="805" width="0.1" height="15.0" fill="rgb(209,201,54)" rx="2" ry="2" />
<text  x="188.39" y="815.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 0.02%)</title><rect x="1044.9" y="1157" width="0.3" height="15.0" fill="rgb(229,87,30)" rx="2" ry="2" />
<text  x="1047.93" y="1167.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (22 samples, 0.04%)</title><rect x="1059.9" y="1477" width="0.5" height="15.0" fill="rgb(216,220,19)" rx="2" ry="2" />
<text  x="1062.89" y="1487.5" ></text>
</g>
<g >
<title>&lt;futures::future::map::Map&lt;A,F&gt; as futures::future::Future&gt;::poll (67 samples, 0.12%)</title><rect x="187.0" y="1477" width="1.5" height="15.0" fill="rgb(205,14,15)" rx="2" ry="2" />
<text  x="190.05" y="1487.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (14 samples, 0.03%)</title><rect x="1032.5" y="1221" width="0.3" height="15.0" fill="rgb(210,181,35)" rx="2" ry="2" />
<text  x="1035.47" y="1231.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (63 samples, 0.11%)</title><rect x="674.8" y="1237" width="1.3" height="15.0" fill="rgb(223,56,34)" rx="2" ry="2" />
<text  x="677.79" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::spawn_thread::_$u7b$$u7b$closure$u7d$$u7d$::ha7200d58e6efae3b (33 samples, 0.06%)</title><rect x="1030.5" y="1461" width="0.7" height="15.0" fill="rgb(231,96,3)" rx="2" ry="2" />
<text  x="1033.48" y="1471.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ThreadNotify as futures::task_impl::Notify&gt;::notify (20 samples, 0.04%)</title><rect x="1134.5" y="613" width="0.4" height="15.0" fill="rgb(235,171,46)" rx="2" ry="2" />
<text  x="1137.49" y="623.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (22 samples, 0.04%)</title><rect x="1032.8" y="1157" width="0.4" height="15.0" fill="rgb(222,99,33)" rx="2" ry="2" />
<text  x="1035.77" y="1167.5" ></text>
</g>
<g >
<title>tokio_reactor::registration::Inner::poll_ready (20 samples, 0.04%)</title><rect x="1057.2" y="1125" width="0.4" height="15.0" fill="rgb(235,143,13)" rx="2" ry="2" />
<text  x="1060.17" y="1135.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::worker::state::Lifecycle as core::convert::From&lt;usize&gt;&gt;::from (6 samples, 0.01%)</title><rect x="1068.1" y="1029" width="0.1" height="15.0" fill="rgb(230,82,47)" rx="2" ry="2" />
<text  x="1071.10" y="1039.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (35 samples, 0.06%)</title><rect x="1051.9" y="1525" width="0.7" height="15.0" fill="rgb(238,216,18)" rx="2" ry="2" />
<text  x="1054.87" y="1535.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_layout (58 samples, 0.10%)</title><rect x="867.0" y="1301" width="1.3" height="15.0" fill="rgb(245,99,39)" rx="2" ry="2" />
<text  x="870.05" y="1311.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (6,082 samples, 10.94%)</title><rect x="1060.7" y="1189" width="129.0" height="15.0" fill="rgb(247,164,30)" rx="2" ry="2" />
<text  x="1063.65" y="1199.5" >tokio_reactor::w..</text>
</g>
<g >
<title>core::alloc::Layout::size (5 samples, 0.01%)</title><rect x="731.1" y="1221" width="0.1" height="15.0" fill="rgb(241,14,33)" rx="2" ry="2" />
<text  x="734.06" y="1231.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (20 samples, 0.04%)</title><rect x="1036.5" y="1573" width="0.4" height="15.0" fill="rgb(247,185,21)" rx="2" ry="2" />
<text  x="1039.48" y="1583.5" ></text>
</g>
<g >
<title>bytes::bytes::BytesMut::split_off (7 samples, 0.01%)</title><rect x="1032.2" y="997" width="0.1" height="15.0" fill="rgb(222,165,52)" rx="2" ry="2" />
<text  x="1035.15" y="1007.5" ></text>
</g>
<g >
<title>core::mem::replace (5 samples, 0.01%)</title><rect x="980.3" y="1093" width="0.1" height="15.0" fill="rgb(211,110,23)" rx="2" ry="2" />
<text  x="983.25" y="1103.5" ></text>
</g>
<g >
<title>core::ptr::read (12 samples, 0.02%)</title><rect x="1142.2" y="901" width="0.2" height="15.0" fill="rgb(212,84,42)" rx="2" ry="2" />
<text  x="1145.15" y="911.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (53 samples, 0.10%)</title><rect x="676.1" y="1269" width="1.1" height="15.0" fill="rgb(222,65,38)" rx="2" ry="2" />
<text  x="679.12" y="1279.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (24 samples, 0.04%)</title><rect x="212.5" y="1253" width="0.5" height="15.0" fill="rgb(246,24,9)" rx="2" ry="2" />
<text  x="215.47" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (216 samples, 0.39%)</title><rect x="1044.8" y="1461" width="4.6" height="15.0" fill="rgb(243,19,28)" rx="2" ry="2" />
<text  x="1047.80" y="1471.5" ></text>
</g>
<g >
<title>_$LT$tracing_core..dispatcher..DefaultGuard$u20$as$u20$core..ops..drop..Drop$GT$::drop::_$u7b$$u7b$closure$u7d$$u7d$::h145f658dd437d068 (7 samples, 0.01%)</title><rect x="979.6" y="1269" width="0.2" height="15.0" fill="rgb(228,90,44)" rx="2" ry="2" />
<text  x="982.64" y="1279.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="1059.7" y="1253" width="0.2" height="15.0" fill="rgb(209,41,0)" rx="2" ry="2" />
<text  x="1062.72" y="1263.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (64 samples, 0.12%)</title><rect x="1050.0" y="1205" width="1.4" height="15.0" fill="rgb(223,197,36)" rx="2" ry="2" />
<text  x="1053.02" y="1215.5" ></text>
</g>
<g >
<title>&lt; (8 samples, 0.01%)</title><rect x="1011.8" y="1493" width="0.2" height="15.0" fill="rgb(222,158,35)" rx="2" ry="2" />
<text  x="1014.85" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (9 samples, 0.02%)</title><rect x="985.1" y="1173" width="0.2" height="15.0" fill="rgb(221,138,2)" rx="2" ry="2" />
<text  x="988.11" y="1183.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold::ok::_$u7b$$u7b$closure$u7d$$u7d$::h9d4fea847df1d75b (43 samples, 0.08%)</title><rect x="977.9" y="1285" width="0.9" height="15.0" fill="rgb(215,147,44)" rx="2" ry="2" />
<text  x="980.92" y="1295.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.02%)</title><rect x="1057.9" y="1157" width="0.2" height="15.0" fill="rgb(245,42,12)" rx="2" ry="2" />
<text  x="1060.89" y="1167.5" ></text>
</g>
<g >
<title>tokio_io::async_write::AsyncWrite::poll_write (8 samples, 0.01%)</title><rect x="1051.9" y="1189" width="0.2" height="15.0" fill="rgb(213,125,15)" rx="2" ry="2" />
<text  x="1054.89" y="1199.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (7 samples, 0.01%)</title><rect x="1021.6" y="1445" width="0.1" height="15.0" fill="rgb(241,30,25)" rx="2" ry="2" />
<text  x="1024.56" y="1455.5" ></text>
</g>
<g >
<title>serde::de::SeqAccess::next_element (7 samples, 0.01%)</title><rect x="1058.1" y="1077" width="0.2" height="15.0" fill="rgb(250,181,33)" rx="2" ry="2" />
<text  x="1061.10" y="1087.5" ></text>
</g>
<g >
<title>&lt;bincode::config::int::FixintEncoding as bincode::config::int::IntEncoding&gt;::deserialize_u32 (6 samples, 0.01%)</title><rect x="1058.1" y="997" width="0.2" height="15.0" fill="rgb(225,133,8)" rx="2" ry="2" />
<text  x="1061.13" y="1007.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (174 samples, 0.31%)</title><rect x="1053.0" y="1573" width="3.7" height="15.0" fill="rgb(229,105,22)" rx="2" ry="2" />
<text  x="1056.01" y="1583.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNotInner&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1057.7" y="1109" width="0.1" height="15.0" fill="rgb(214,134,15)" rx="2" ry="2" />
<text  x="1060.68" y="1119.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h1f40d1645c07fcaa (50 samples, 0.09%)</title><rect x="192.8" y="1493" width="1.1" height="15.0" fill="rgb(205,159,15)" rx="2" ry="2" />
<text  x="195.84" y="1503.5" ></text>
</g>
<g >
<title>futures::stream::futures_unordered::Inner&lt;T&gt;::dequeue (12 samples, 0.02%)</title><rect x="1006.7" y="1509" width="0.3" height="15.0" fill="rgb(235,107,29)" rx="2" ry="2" />
<text  x="1009.73" y="1519.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (13 samples, 0.02%)</title><rect x="1027.7" y="997" width="0.3" height="15.0" fill="rgb(206,47,48)" rx="2" ry="2" />
<text  x="1030.74" y="1007.5" ></text>
</g>
<g >
<title>&lt;usize as core::iter::range::Step&gt;::add_usize (16 samples, 0.03%)</title><rect x="1084.9" y="949" width="0.4" height="15.0" fill="rgb(234,101,41)" rx="2" ry="2" />
<text  x="1087.92" y="959.5" ></text>
</g>
<g >
<title>std::panicking::try (9 samples, 0.02%)</title><rect x="1026.0" y="1077" width="0.2" height="15.0" fill="rgb(207,50,40)" rx="2" ry="2" />
<text  x="1028.98" y="1087.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (80 samples, 0.14%)</title><rect x="972.0" y="1269" width="1.7" height="15.0" fill="rgb(210,89,8)" rx="2" ry="2" />
<text  x="974.96" y="1279.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (14 samples, 0.03%)</title><rect x="699.9" y="1301" width="0.3" height="15.0" fill="rgb(236,215,30)" rx="2" ry="2" />
<text  x="702.91" y="1311.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (5 samples, 0.01%)</title><rect x="1042.5" y="485" width="0.1" height="15.0" fill="rgb(223,23,18)" rx="2" ry="2" />
<text  x="1045.47" y="495.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::register (7 samples, 0.01%)</title><rect x="1059.6" y="1157" width="0.1" height="15.0" fill="rgb(222,213,37)" rx="2" ry="2" />
<text  x="1062.57" y="1167.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h1e333f0842b39e4b (6 samples, 0.01%)</title><rect x="1024.8" y="1301" width="0.1" height="15.0" fill="rgb(207,152,21)" rx="2" ry="2" />
<text  x="1027.79" y="1311.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::Instant::now (5 samples, 0.01%)</title><rect x="1080.4" y="885" width="0.1" height="15.0" fill="rgb(228,129,31)" rx="2" ry="2" />
<text  x="1083.36" y="895.5" ></text>
</g>
<g >
<title>core::alloc::size_align (61 samples, 0.11%)</title><rect x="734.5" y="1237" width="1.3" height="15.0" fill="rgb(218,226,42)" rx="2" ry="2" />
<text  x="737.52" y="1247.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="1059.1" y="1205" width="0.1" height="15.0" fill="rgb(231,189,2)" rx="2" ry="2" />
<text  x="1062.06" y="1215.5" ></text>
</g>
<g >
<title>core::alloc::Layout::size (8 samples, 0.01%)</title><rect x="277.3" y="1205" width="0.2" height="15.0" fill="rgb(242,72,21)" rx="2" ry="2" />
<text  x="280.31" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (33 samples, 0.06%)</title><rect x="1035.2" y="1205" width="0.7" height="15.0" fill="rgb(251,130,32)" rx="2" ry="2" />
<text  x="1038.19" y="1215.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::get (6 samples, 0.01%)</title><rect x="391.4" y="1269" width="0.1" height="15.0" fill="rgb(249,58,0)" rx="2" ry="2" />
<text  x="394.39" y="1279.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (5 samples, 0.01%)</title><rect x="1022.3" y="1173" width="0.1" height="15.0" fill="rgb(221,153,36)" rx="2" ry="2" />
<text  x="1025.33" y="1183.5" ></text>
</g>
<g >
<title>rw_verify_area (16 samples, 0.03%)</title><rect x="1097.2" y="757" width="0.3" height="15.0" fill="rgb(249,133,4)" rx="2" ry="2" />
<text  x="1100.19" y="767.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (14 samples, 0.03%)</title><rect x="521.2" y="1237" width="0.3" height="15.0" fill="rgb(212,44,6)" rx="2" ry="2" />
<text  x="524.16" y="1247.5" ></text>
</g>
<g >
<title>&lt;async_bincode::reader::AsyncBincodeReader&lt;R,T&gt; as futures::stream::Stream&gt;::poll (9 samples, 0.02%)</title><rect x="1022.4" y="1445" width="0.2" height="15.0" fill="rgb(211,105,44)" rx="2" ry="2" />
<text  x="1025.43" y="1455.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (61 samples, 0.11%)</title><rect x="1031.2" y="1509" width="1.3" height="15.0" fill="rgb(209,159,9)" rx="2" ry="2" />
<text  x="1034.18" y="1519.5" ></text>
</g>
<g >
<title>tokio_timer::wheel::level::Level&lt;T&gt;::next_expiration (20 samples, 0.04%)</title><rect x="1118.7" y="965" width="0.4" height="15.0" fill="rgb(207,49,11)" rx="2" ry="2" />
<text  x="1121.66" y="975.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (178 samples, 0.32%)</title><rect x="337.4" y="1301" width="3.8" height="15.0" fill="rgb(211,156,23)" rx="2" ry="2" />
<text  x="340.45" y="1311.5" ></text>
</g>
<g >
<title>chan::Receiver&lt;T&gt;::inner (159 samples, 0.29%)</title><rect x="409.8" y="1317" width="3.3" height="15.0" fill="rgb(230,84,38)" rx="2" ry="2" />
<text  x="412.76" y="1327.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (6 samples, 0.01%)</title><rect x="978.7" y="1189" width="0.1" height="15.0" fill="rgb(211,96,43)" rx="2" ry="2" />
<text  x="981.70" y="1199.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (7 samples, 0.01%)</title><rect x="1050.5" y="277" width="0.2" height="15.0" fill="rgb(228,165,7)" rx="2" ry="2" />
<text  x="1053.53" y="287.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (27 samples, 0.05%)</title><rect x="1028.4" y="1253" width="0.6" height="15.0" fill="rgb(227,128,1)" rx="2" ry="2" />
<text  x="1031.40" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (17 samples, 0.03%)</title><rect x="1134.1" y="645" width="0.3" height="15.0" fill="rgb(251,179,24)" rx="2" ry="2" />
<text  x="1137.09" y="655.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (9 samples, 0.02%)</title><rect x="1042.3" y="197" width="0.2" height="15.0" fill="rgb(209,211,38)" rx="2" ry="2" />
<text  x="1045.27" y="207.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::cast (25 samples, 0.04%)</title><rect x="693.9" y="1221" width="0.6" height="15.0" fill="rgb(247,94,45)" rx="2" ry="2" />
<text  x="696.95" y="1231.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (5 samples, 0.01%)</title><rect x="1025.0" y="1589" width="0.1" height="15.0" fill="rgb(207,111,40)" rx="2" ry="2" />
<text  x="1027.96" y="1599.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (10 samples, 0.02%)</title><rect x="280.5" y="1237" width="0.2" height="15.0" fill="rgb(240,168,4)" rx="2" ry="2" />
<text  x="283.52" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit::_$u7b$$u7b$closure$u7d$$u7d$::h83d517d17b1a75b2 (27 samples, 0.05%)</title><rect x="1028.4" y="1093" width="0.6" height="15.0" fill="rgb(220,7,30)" rx="2" ry="2" />
<text  x="1031.40" y="1103.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (135 samples, 0.24%)</title><rect x="925.5" y="1317" width="2.9" height="15.0" fill="rgb(229,226,53)" rx="2" ry="2" />
<text  x="928.49" y="1327.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (6 samples, 0.01%)</title><rect x="998.5" y="933" width="0.1" height="15.0" fill="rgb(215,54,53)" rx="2" ry="2" />
<text  x="1001.48" y="943.5" ></text>
</g>
<g >
<title>sys_read (12 samples, 0.02%)</title><rect x="1111.7" y="789" width="0.3" height="15.0" fill="rgb(212,219,28)" rx="2" ry="2" />
<text  x="1114.70" y="799.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (49 samples, 0.09%)</title><rect x="767.3" y="1125" width="1.1" height="15.0" fill="rgb(246,217,6)" rx="2" ry="2" />
<text  x="770.32" y="1135.5" ></text>
</g>
<g >
<title>core::ptr::write (12 samples, 0.02%)</title><rect x="258.5" y="1221" width="0.2" height="15.0" fill="rgb(246,147,19)" rx="2" ry="2" />
<text  x="261.45" y="1231.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (8 samples, 0.01%)</title><rect x="855.6" y="1237" width="0.2" height="15.0" fill="rgb(239,117,30)" rx="2" ry="2" />
<text  x="858.61" y="1247.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (6 samples, 0.01%)</title><rect x="1014.2" y="1109" width="0.1" height="15.0" fill="rgb(231,66,21)" rx="2" ry="2" />
<text  x="1017.20" y="1119.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (14 samples, 0.03%)</title><rect x="1052.6" y="1317" width="0.3" height="15.0" fill="rgb(244,32,23)" rx="2" ry="2" />
<text  x="1055.63" y="1327.5" ></text>
</g>
<g >
<title>tokio_reactor::HandlePriv::wakeup (22 samples, 0.04%)</title><rect x="1024.0" y="1205" width="0.5" height="15.0" fill="rgb(244,171,2)" rx="2" ry="2" />
<text  x="1027.01" y="1215.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::InternalAsyncWriter&lt;S,T,D&gt; as std::io::Read&gt;::read (13 samples, 0.02%)</title><rect x="1037.4" y="1061" width="0.3" height="15.0" fill="rgb(231,38,11)" rx="2" ry="2" />
<text  x="1040.39" y="1071.5" ></text>
</g>
<g >
<title>&lt;futures::future::loop_fn::LoopFn&lt;A,F&gt; as futures::future::Future&gt;::poll (29 samples, 0.05%)</title><rect x="1150.4" y="629" width="0.6" height="15.0" fill="rgb(229,114,12)" rx="2" ry="2" />
<text  x="1153.43" y="639.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current (15 samples, 0.03%)</title><rect x="1028.1" y="1205" width="0.3" height="15.0" fill="rgb(218,47,30)" rx="2" ry="2" />
<text  x="1031.06" y="1215.5" ></text>
</g>
<g >
<title>bincode::config::legacy::Config::serialize_into (7 samples, 0.01%)</title><rect x="1044.4" y="1365" width="0.2" height="15.0" fill="rgb(205,129,29)" rx="2" ry="2" />
<text  x="1047.44" y="1375.5" ></text>
</g>
<g >
<title>_rjem_je_malloc_initialized (18 samples, 0.03%)</title><rect x="19.5" y="1557" width="0.3" height="15.0" fill="rgb(242,164,0)" rx="2" ry="2" />
<text  x="22.46" y="1567.5" ></text>
</g>
<g >
<title>mio::event_imp::Ready::is_writable (5 samples, 0.01%)</title><rect x="1093.3" y="869" width="0.1" height="15.0" fill="rgb(238,13,13)" rx="2" ry="2" />
<text  x="1096.33" y="879.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicIsize::load (15 samples, 0.03%)</title><rect x="1136.7" y="1013" width="0.3" height="15.0" fill="rgb(225,169,32)" rx="2" ry="2" />
<text  x="1139.66" y="1023.5" ></text>
</g>
<g >
<title>check_entry_exit_locking (36 samples, 0.06%)</title><rect x="109.0" y="1573" width="0.8" height="15.0" fill="rgb(239,201,36)" rx="2" ry="2" />
<text  x="112.03" y="1583.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (7 samples, 0.01%)</title><rect x="998.1" y="885" width="0.2" height="15.0" fill="rgb(208,208,3)" rx="2" ry="2" />
<text  x="1001.12" y="895.5" ></text>
</g>
<g >
<title>std::panicking::try (33 samples, 0.06%)</title><rect x="1030.5" y="1557" width="0.7" height="15.0" fill="rgb(236,1,21)" rx="2" ry="2" />
<text  x="1033.48" y="1567.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (15 samples, 0.03%)</title><rect x="1002.7" y="613" width="0.3" height="15.0" fill="rgb(231,41,46)" rx="2" ry="2" />
<text  x="1005.72" y="623.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (5 samples, 0.01%)</title><rect x="192.5" y="1157" width="0.1" height="15.0" fill="rgb(206,149,13)" rx="2" ry="2" />
<text  x="195.48" y="1167.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (9 samples, 0.02%)</title><rect x="1025.4" y="949" width="0.2" height="15.0" fill="rgb(228,91,0)" rx="2" ry="2" />
<text  x="1028.43" y="959.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::poll_evented::PollEvented&lt;E&gt; as std::io::Read&gt;::read (41 samples, 0.07%)</title><rect x="1054.3" y="1173" width="0.9" height="15.0" fill="rgb(232,58,10)" rx="2" ry="2" />
<text  x="1057.28" y="1183.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (22 samples, 0.04%)</title><rect x="1032.8" y="1221" width="0.4" height="15.0" fill="rgb(229,84,16)" rx="2" ry="2" />
<text  x="1035.77" y="1231.5" ></text>
</g>
<g >
<title>core::fmt::write (17 samples, 0.03%)</title><rect x="998.1" y="949" width="0.4" height="15.0" fill="rgb(248,73,10)" rx="2" ry="2" />
<text  x="1001.12" y="959.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Selector::select::_$u7b$$u7b$closure$u7d$$u7d$::hff705b83937d3782 (23 samples, 0.04%)</title><rect x="1078.0" y="869" width="0.5" height="15.0" fill="rgb(212,130,29)" rx="2" ry="2" />
<text  x="1080.99" y="879.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (9 samples, 0.02%)</title><rect x="1044.1" y="853" width="0.2" height="15.0" fill="rgb(241,63,19)" rx="2" ry="2" />
<text  x="1047.10" y="863.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (6 samples, 0.01%)</title><rect x="1182.3" y="901" width="0.1" height="15.0" fill="rgb(234,40,21)" rx="2" ry="2" />
<text  x="1185.26" y="911.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (15 samples, 0.03%)</title><rect x="669.9" y="1157" width="0.3" height="15.0" fill="rgb(210,11,33)" rx="2" ry="2" />
<text  x="672.93" y="1167.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::get (7 samples, 0.01%)</title><rect x="1071.4" y="1045" width="0.1" height="15.0" fill="rgb(253,110,48)" rx="2" ry="2" />
<text  x="1074.39" y="1055.5" ></text>
</g>
<g >
<title>alloc::rc::RcBoxPtr::strong (50 samples, 0.09%)</title><rect x="560.7" y="1269" width="1.1" height="15.0" fill="rgb(207,144,13)" rx="2" ry="2" />
<text  x="563.73" y="1279.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (33 samples, 0.06%)</title><rect x="1035.2" y="1317" width="0.7" height="15.0" fill="rgb(224,96,52)" rx="2" ry="2" />
<text  x="1038.19" y="1327.5" ></text>
</g>
<g >
<title>alloc::collections::btree::search::search_node (1,570 samples, 2.82%)</title><rect x="297.5" y="1301" width="33.3" height="15.0" fill="rgb(223,139,14)" rx="2" ry="2" />
<text  x="300.45" y="1311.5" >al..</text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (13 samples, 0.02%)</title><rect x="1045.3" y="965" width="0.2" height="15.0" fill="rgb(234,132,27)" rx="2" ry="2" />
<text  x="1048.27" y="975.5" ></text>
</g>
<g >
<title>hyper::client::Client&lt;C,B&gt;::retryably_send_request (5 samples, 0.01%)</title><rect x="1004.8" y="1509" width="0.1" height="15.0" fill="rgb(220,7,7)" rx="2" ry="2" />
<text  x="1007.78" y="1519.5" ></text>
</g>
<g >
<title>futex_wake (7 samples, 0.01%)</title><rect x="1134.2" y="501" width="0.1" height="15.0" fill="rgb(236,186,15)" rx="2" ry="2" />
<text  x="1137.19" y="511.5" ></text>
</g>
<g >
<title>futures::task_impl::with (5 samples, 0.01%)</title><rect x="1034.5" y="1141" width="0.1" height="15.0" fill="rgb(214,5,26)" rx="2" ry="2" />
<text  x="1037.47" y="1151.5" ></text>
</g>
<g >
<title>core::mem::replace (119 samples, 0.21%)</title><rect x="600.1" y="1093" width="2.5" height="15.0" fill="rgb(228,177,7)" rx="2" ry="2" />
<text  x="603.05" y="1103.5" ></text>
</g>
<g >
<title>std::sync::mpsc::sync::Packet&lt;T&gt;::send (5 samples, 0.01%)</title><rect x="992.8" y="1333" width="0.1" height="15.0" fill="rgb(223,153,45)" rx="2" ry="2" />
<text  x="995.81" y="1343.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (60 samples, 0.11%)</title><rect x="653.2" y="1157" width="1.3" height="15.0" fill="rgb(208,114,34)" rx="2" ry="2" />
<text  x="656.21" y="1167.5" ></text>
</g>
<g >
<title>core::mem::replace (687 samples, 1.24%)</title><rect x="491.6" y="1253" width="14.6" height="15.0" fill="rgb(242,36,6)" rx="2" ry="2" />
<text  x="494.62" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::std::_$LT$impl$u20$futures..task_impl..Spawn$LT$F$GT$$GT$::wait_future::_$u7b$$u7b$closure$u7d$$u7d$::hd0f6d5cc3fe9bd86 (13 samples, 0.02%)</title><rect x="194.1" y="1557" width="0.2" height="15.0" fill="rgb(246,59,37)" rx="2" ry="2" />
<text  x="197.07" y="1567.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (8 samples, 0.01%)</title><rect x="1149.4" y="981" width="0.1" height="15.0" fill="rgb(207,8,49)" rx="2" ry="2" />
<text  x="1152.37" y="991.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_exchange (6 samples, 0.01%)</title><rect x="1091.7" y="853" width="0.1" height="15.0" fill="rgb(206,203,44)" rx="2" ry="2" />
<text  x="1094.71" y="863.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (25 samples, 0.04%)</title><rect x="1140.9" y="981" width="0.6" height="15.0" fill="rgb(249,162,54)" rx="2" ry="2" />
<text  x="1143.92" y="991.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::worker::Worker&lt;T,Request&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1022.0" y="1541" width="0.1" height="15.0" fill="rgb(234,128,13)" rx="2" ry="2" />
<text  x="1024.99" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (9 samples, 0.02%)</title><rect x="1037.5" y="885" width="0.1" height="15.0" fill="rgb(223,185,49)" rx="2" ry="2" />
<text  x="1040.46" y="895.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (30 samples, 0.05%)</title><rect x="191.8" y="1493" width="0.7" height="15.0" fill="rgb(232,64,16)" rx="2" ry="2" />
<text  x="194.85" y="1503.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.01%)</title><rect x="1030.3" y="1525" width="0.2" height="15.0" fill="rgb(208,89,43)" rx="2" ry="2" />
<text  x="1033.33" y="1535.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::Pool&lt;MS,Target,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::poll_ready (10 samples, 0.02%)</title><rect x="1049.0" y="1333" width="0.2" height="15.0" fill="rgb(222,220,37)" rx="2" ry="2" />
<text  x="1051.96" y="1343.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll (130 samples, 0.23%)</title><rect x="1110.8" y="965" width="2.8" height="15.0" fill="rgb(236,7,5)" rx="2" ry="2" />
<text  x="1113.83" y="975.5" ></text>
</g>
<g >
<title>epoll_wait (6 samples, 0.01%)</title><rect x="993.8" y="1285" width="0.1" height="15.0" fill="rgb(242,190,50)" rx="2" ry="2" />
<text  x="996.77" y="1295.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (57 samples, 0.10%)</title><rect x="1038.5" y="805" width="1.2" height="15.0" fill="rgb(236,102,42)" rx="2" ry="2" />
<text  x="1041.50" y="815.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (9 samples, 0.02%)</title><rect x="1053.7" y="1109" width="0.2" height="15.0" fill="rgb(247,223,51)" rx="2" ry="2" />
<text  x="1056.69" y="1119.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (7 samples, 0.01%)</title><rect x="1049.4" y="1157" width="0.1" height="15.0" fill="rgb(224,191,17)" rx="2" ry="2" />
<text  x="1052.38" y="1167.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit (6 samples, 0.01%)</title><rect x="1055.7" y="1157" width="0.1" height="15.0" fill="rgb(223,155,34)" rx="2" ry="2" />
<text  x="1058.66" y="1167.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (8 samples, 0.01%)</title><rect x="1059.7" y="1429" width="0.2" height="15.0" fill="rgb(211,133,14)" rx="2" ry="2" />
<text  x="1062.72" y="1439.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (64 samples, 0.12%)</title><rect x="1050.0" y="1301" width="1.4" height="15.0" fill="rgb(245,108,34)" rx="2" ry="2" />
<text  x="1053.02" y="1311.5" ></text>
</g>
<g >
<title>&lt;futures::future::map::Map&lt;A,F&gt; as futures::future::Future&gt;::poll (14 samples, 0.03%)</title><rect x="180.4" y="1381" width="0.3" height="15.0" fill="rgb(207,124,23)" rx="2" ry="2" />
<text  x="183.43" y="1391.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (7 samples, 0.01%)</title><rect x="998.1" y="901" width="0.2" height="15.0" fill="rgb(214,67,1)" rx="2" ry="2" />
<text  x="1001.12" y="911.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (284 samples, 0.51%)</title><rect x="1038.4" y="1381" width="6.0" height="15.0" fill="rgb(253,127,27)" rx="2" ry="2" />
<text  x="1041.41" y="1391.5" ></text>
</g>
<g >
<title>alloc::collections::btree::search::search_linear (1,207 samples, 2.17%)</title><rect x="526.4" y="1253" width="25.6" height="15.0" fill="rgb(252,131,31)" rx="2" ry="2" />
<text  x="529.40" y="1263.5" >a..</text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (8 samples, 0.01%)</title><rect x="1015.2" y="1157" width="0.1" height="15.0" fill="rgb(209,32,5)" rx="2" ry="2" />
<text  x="1018.18" y="1167.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts_mut (68 samples, 0.12%)</title><rect x="336.0" y="1285" width="1.4" height="15.0" fill="rgb(235,30,4)" rx="2" ry="2" />
<text  x="339.01" y="1295.5" ></text>
</g>
<g >
<title>pipe_write (14 samples, 0.03%)</title><rect x="1108.6" y="389" width="0.3" height="15.0" fill="rgb(250,24,10)" rx="2" ry="2" />
<text  x="1111.65" y="399.5" ></text>
</g>
<g >
<title>futures::task_impl::std::_$LT$impl$u20$futures..task_impl..Spawn$LT$F$GT$$GT$::wait_future::_$u7b$$u7b$closure$u7d$$u7d$::h6e5f9dba7457629d (9 samples, 0.02%)</title><rect x="10.0" y="1253" width="0.2" height="15.0" fill="rgb(222,82,17)" rx="2" ry="2" />
<text  x="13.02" y="1263.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (20 samples, 0.04%)</title><rect x="646.8" y="1157" width="0.4" height="15.0" fill="rgb(245,34,17)" rx="2" ry="2" />
<text  x="649.80" y="1167.5" ></text>
</g>
<g >
<title>mio::poll::RegistrationInner::set_readiness (8 samples, 0.01%)</title><rect x="1073.1" y="949" width="0.2" height="15.0" fill="rgb(217,116,36)" rx="2" ry="2" />
<text  x="1076.13" y="959.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::from_error (12 samples, 0.02%)</title><rect x="309.7" y="1253" width="0.2" height="15.0" fill="rgb(254,50,4)" rx="2" ry="2" />
<text  x="312.65" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (8 samples, 0.01%)</title><rect x="1059.7" y="1269" width="0.2" height="15.0" fill="rgb(250,200,8)" rx="2" ry="2" />
<text  x="1062.72" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (7 samples, 0.01%)</title><rect x="1056.7" y="1381" width="0.2" height="15.0" fill="rgb(217,101,41)" rx="2" ry="2" />
<text  x="1059.70" y="1391.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (34 samples, 0.06%)</title><rect x="1022.2" y="1573" width="0.7" height="15.0" fill="rgb(227,228,20)" rx="2" ry="2" />
<text  x="1025.18" y="1583.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (7 samples, 0.01%)</title><rect x="1056.9" y="1461" width="0.2" height="15.0" fill="rgb(221,213,28)" rx="2" ry="2" />
<text  x="1059.94" y="1471.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::state::State::lifecycle (13 samples, 0.02%)</title><rect x="1121.0" y="1061" width="0.3" height="15.0" fill="rgb(238,10,34)" rx="2" ry="2" />
<text  x="1124.04" y="1071.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (93 samples, 0.17%)</title><rect x="1057.1" y="1445" width="2.0" height="15.0" fill="rgb(223,118,5)" rx="2" ry="2" />
<text  x="1060.09" y="1455.5" ></text>
</g>
<g >
<title>std::panicking::try (9 samples, 0.02%)</title><rect x="1025.4" y="981" width="0.2" height="15.0" fill="rgb(236,60,32)" rx="2" ry="2" />
<text  x="1028.43" y="991.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="1059.7" y="1461" width="0.2" height="15.0" fill="rgb(221,83,18)" rx="2" ry="2" />
<text  x="1062.72" y="1471.5" ></text>
</g>
<g >
<title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::le (7 samples, 0.01%)</title><rect x="1087.8" y="965" width="0.1" height="15.0" fill="rgb(247,155,24)" rx="2" ry="2" />
<text  x="1090.79" y="975.5" ></text>
</g>
<g >
<title>&lt;core::ptr::unique::Unique&lt;T&gt; as core::convert::From&lt;core::ptr::non_null::NonNull&lt;T&gt;&gt;&gt;::from (63 samples, 0.11%)</title><rect x="206.2" y="1285" width="1.3" height="15.0" fill="rgb(253,223,20)" rx="2" ry="2" />
<text  x="209.21" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::spawn_thread::_$u7b$$u7b$closure$u7d$$u7d$::ha7200d58e6efae3b (6,084 samples, 10.94%)</title><rect x="1060.6" y="1381" width="129.1" height="15.0" fill="rgb(254,132,37)" rx="2" ry="2" />
<text  x="1063.61" y="1391.5" >tokio_threadpool..</text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (14 samples, 0.03%)</title><rect x="180.4" y="1445" width="0.3" height="15.0" fill="rgb(236,83,6)" rx="2" ry="2" />
<text  x="183.43" y="1455.5" ></text>
</g>
<g >
<title>&lt;futures::future::map::Map&lt;A,F&gt; as futures::future::Future&gt;::poll (19 samples, 0.03%)</title><rect x="1020.6" y="1573" width="0.4" height="15.0" fill="rgb(231,145,35)" rx="2" ry="2" />
<text  x="1023.61" y="1583.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::DropNotifyService&lt;Svc&gt; as tower_service::Service&lt;Request&gt;&gt;::poll_ready (6 samples, 0.01%)</title><rect x="1008.0" y="1397" width="0.1" height="15.0" fill="rgb(231,174,35)" rx="2" ry="2" />
<text  x="1011.01" y="1407.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (32 samples, 0.06%)</title><rect x="1037.1" y="1461" width="0.7" height="15.0" fill="rgb(241,12,2)" rx="2" ry="2" />
<text  x="1040.14" y="1471.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (136 samples, 0.24%)</title><rect x="1053.2" y="1301" width="2.9" height="15.0" fill="rgb(216,132,14)" rx="2" ry="2" />
<text  x="1056.18" y="1311.5" ></text>
</g>
<g >
<title>start_thread (17 samples, 0.03%)</title><rect x="1025.4" y="1589" width="0.4" height="15.0" fill="rgb(226,144,32)" rx="2" ry="2" />
<text  x="1028.43" y="1599.5" ></text>
</g>
<g >
<title>noria::table::SyncTable::insert::_$u7b$$u7b$closure$u7d$$u7d$::hda9decbe4187d0e3 (9 samples, 0.02%)</title><rect x="10.0" y="1365" width="0.2" height="15.0" fill="rgb(226,19,19)" rx="2" ry="2" />
<text  x="13.02" y="1375.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (14 samples, 0.03%)</title><rect x="1030.5" y="837" width="0.3" height="15.0" fill="rgb(205,97,24)" rx="2" ry="2" />
<text  x="1033.48" y="847.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="825.4" y="1013" width="0.1" height="15.0" fill="rgb(221,197,29)" rx="2" ry="2" />
<text  x="828.35" y="1023.5" ></text>
</g>
<g >
<title>core::mem::swap (212 samples, 0.38%)</title><rect x="625.4" y="1157" width="4.5" height="15.0" fill="rgb(212,167,4)" rx="2" ry="2" />
<text  x="628.37" y="1167.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (11 samples, 0.02%)</title><rect x="649.6" y="1125" width="0.3" height="15.0" fill="rgb(223,125,0)" rx="2" ry="2" />
<text  x="652.64" y="1135.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (3,079 samples, 5.54%)</title><rect x="634.0" y="1285" width="65.3" height="15.0" fill="rgb(223,186,2)" rx="2" ry="2" />
<text  x="637.00" y="1295.5" >&lt;alloc:..</text>
</g>
<g >
<title>tokio_timer::wheel::Wheel&lt;T&gt;::poll_at (59 samples, 0.11%)</title><rect x="1119.4" y="1013" width="1.2" height="15.0" fill="rgb(221,172,28)" rx="2" ry="2" />
<text  x="1122.38" y="1023.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8fc35f1188267346 (32 samples, 0.06%)</title><rect x="1021.2" y="1541" width="0.7" height="15.0" fill="rgb(215,154,53)" rx="2" ry="2" />
<text  x="1024.20" y="1551.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (8 samples, 0.01%)</title><rect x="1044.4" y="1413" width="0.2" height="15.0" fill="rgb(225,125,43)" rx="2" ry="2" />
<text  x="1047.44" y="1423.5" ></text>
</g>
<g >
<title>crossbeam_epoch::internal::Local::collector (34 samples, 0.06%)</title><rect x="1189.0" y="885" width="0.7" height="15.0" fill="rgb(240,123,35)" rx="2" ry="2" />
<text  x="1191.98" y="895.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (33 samples, 0.06%)</title><rect x="1030.5" y="1477" width="0.7" height="15.0" fill="rgb(249,35,15)" rx="2" ry="2" />
<text  x="1033.48" y="1487.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="192.5" y="1173" width="0.1" height="15.0" fill="rgb(217,220,13)" rx="2" ry="2" />
<text  x="195.48" y="1183.5" ></text>
</g>
<g >
<title>noria::controller::ControllerHandle$LT$A$GT$::rpc::_$u7b$$u7b$closure$u7d$$u7d$::h775dd25fc79c6667 (5 samples, 0.01%)</title><rect x="1151.1" y="629" width="0.1" height="15.0" fill="rgb(209,104,49)" rx="2" ry="2" />
<text  x="1154.13" y="639.5" ></text>
</g>
<g >
<title>std::sync::mpsc::stream::Packet&lt;T&gt;::recv (49 samples, 0.09%)</title><rect x="984.7" y="1333" width="1.1" height="15.0" fill="rgb(251,3,1)" rx="2" ry="2" />
<text  x="987.73" y="1343.5" ></text>
</g>
<g >
<title>__vfs_write (14 samples, 0.03%)</title><rect x="1028.6" y="741" width="0.3" height="15.0" fill="rgb(240,175,27)" rx="2" ry="2" />
<text  x="1031.63" y="751.5" ></text>
</g>
<g >
<title>async_bincode::reader::AsyncBincodeReader&lt;R,T&gt;::fill (5 samples, 0.01%)</title><rect x="1033.5" y="997" width="0.1" height="15.0" fill="rgb(245,179,10)" rx="2" ry="2" />
<text  x="1036.51" y="1007.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h3169cfffdbef5731 (5 samples, 0.01%)</title><rect x="186.0" y="1541" width="0.1" height="15.0" fill="rgb(228,128,25)" rx="2" ry="2" />
<text  x="189.03" y="1551.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Root&lt;K,V&gt;::as_ref (102 samples, 0.18%)</title><rect x="429.5" y="1285" width="2.1" height="15.0" fill="rgb(230,206,2)" rx="2" ry="2" />
<text  x="432.47" y="1295.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (193 samples, 0.35%)</title><rect x="889.8" y="1285" width="4.1" height="15.0" fill="rgb(205,61,10)" rx="2" ry="2" />
<text  x="892.80" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (12 samples, 0.02%)</title><rect x="191.8" y="1253" width="0.3" height="15.0" fill="rgb(220,65,45)" rx="2" ry="2" />
<text  x="194.85" y="1263.5" ></text>
</g>
<g >
<title>futures::future::loop_fn::loop_fn (9 samples, 0.02%)</title><rect x="1056.1" y="1285" width="0.2" height="15.0" fill="rgb(235,191,48)" rx="2" ry="2" />
<text  x="1059.07" y="1295.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (7 samples, 0.01%)</title><rect x="1030.3" y="1365" width="0.2" height="15.0" fill="rgb(235,152,7)" rx="2" ry="2" />
<text  x="1033.33" y="1375.5" ></text>
</g>
<g >
<title>rand::Rng::gen_range (9 samples, 0.02%)</title><rect x="199.5" y="1237" width="0.2" height="15.0" fill="rgb(239,138,42)" rx="2" ry="2" />
<text  x="202.46" y="1247.5" ></text>
</g>
<g >
<title>gen::main::_$u7b$$u7b$closure$u7d$$u7d$::h1b0bcc4d72c3596b (36,502 samples, 65.64%)</title><rect x="202.5" y="1381" width="774.6" height="15.0" fill="rgb(228,220,36)" rx="2" ry="2" />
<text  x="205.54" y="1391.5" >gen::main::_$u7b$$u7b$closure$u7d$$u7d$::h1b0bcc4d72c3596b</text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (20 samples, 0.04%)</title><rect x="1036.5" y="1365" width="0.4" height="15.0" fill="rgb(244,227,11)" rx="2" ry="2" />
<text  x="1039.48" y="1375.5" ></text>
</g>
<g >
<title>SYSC_sendto (49 samples, 0.09%)</title><rect x="1041.7" y="725" width="1.0" height="15.0" fill="rgb(244,174,0)" rx="2" ry="2" />
<text  x="1044.70" y="735.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::BoxedNode&lt;K,V&gt;::as_ptr (80 samples, 0.14%)</title><rect x="719.6" y="1285" width="1.7" height="15.0" fill="rgb(221,168,38)" rx="2" ry="2" />
<text  x="722.64" y="1295.5" ></text>
</g>
<g >
<title>__fdget (8 samples, 0.01%)</title><rect x="1079.9" y="821" width="0.1" height="15.0" fill="rgb(218,203,50)" rx="2" ry="2" />
<text  x="1082.87" y="831.5" ></text>
</g>
<g >
<title>&lt;core::time::Duration as core::cmp::PartialEq&gt;::eq (5 samples, 0.01%)</title><rect x="1075.7" y="885" width="0.1" height="15.0" fill="rgb(211,140,4)" rx="2" ry="2" />
<text  x="1078.74" y="895.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (38 samples, 0.07%)</title><rect x="1026.6" y="1253" width="0.8" height="15.0" fill="rgb(242,111,7)" rx="2" ry="2" />
<text  x="1029.64" y="1263.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (13 samples, 0.02%)</title><rect x="1052.1" y="1189" width="0.2" height="15.0" fill="rgb(229,75,29)" rx="2" ry="2" />
<text  x="1055.06" y="1199.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (21 samples, 0.04%)</title><rect x="981.4" y="1109" width="0.4" height="15.0" fill="rgb(219,43,49)" rx="2" ry="2" />
<text  x="984.36" y="1119.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (12 samples, 0.02%)</title><rect x="1029.9" y="1077" width="0.3" height="15.0" fill="rgb(227,204,47)" rx="2" ry="2" />
<text  x="1032.95" y="1087.5" ></text>
</g>
<g >
<title>process_backlog (19 samples, 0.03%)</title><rect x="1050.4" y="485" width="0.4" height="15.0" fill="rgb(251,29,28)" rx="2" ry="2" />
<text  x="1053.38" y="495.5" ></text>
</g>
<g >
<title>httparse::Response::parse (8 samples, 0.01%)</title><rect x="1025.1" y="1509" width="0.2" height="15.0" fill="rgb(205,73,51)" rx="2" ry="2" />
<text  x="1028.13" y="1519.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (56 samples, 0.10%)</title><rect x="184.8" y="1365" width="1.2" height="15.0" fill="rgb(242,207,30)" rx="2" ry="2" />
<text  x="187.80" y="1375.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::stream::Stream&gt;::poll (8 samples, 0.01%)</title><rect x="1058.1" y="1253" width="0.2" height="15.0" fill="rgb(219,4,11)" rx="2" ry="2" />
<text  x="1061.08" y="1263.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="998.3" y="789" width="0.1" height="15.0" fill="rgb(213,54,15)" rx="2" ry="2" />
<text  x="1001.27" y="799.5" ></text>
</g>
<g >
<title>bytes::bytes::Inner::reserve (6 samples, 0.01%)</title><rect x="1038.1" y="1029" width="0.1" height="15.0" fill="rgb(225,205,41)" rx="2" ry="2" />
<text  x="1041.12" y="1039.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (9 samples, 0.02%)</title><rect x="181.3" y="1429" width="0.2" height="15.0" fill="rgb(231,209,1)" rx="2" ry="2" />
<text  x="184.34" y="1439.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::Thread::new::thread_start (113 samples, 0.20%)</title><rect x="992.9" y="1573" width="2.4" height="15.0" fill="rgb(226,163,6)" rx="2" ry="2" />
<text  x="995.92" y="1583.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (2,839 samples, 5.11%)</title><rect x="792.6" y="1157" width="60.2" height="15.0" fill="rgb(254,218,35)" rx="2" ry="2" />
<text  x="795.59" y="1167.5" >core::..</text>
</g>
<g >
<title>crossbeam_deque::Slot&lt;T&gt;::wait_write (5 samples, 0.01%)</title><rect x="1072.7" y="1029" width="0.1" height="15.0" fill="rgb(213,133,8)" rx="2" ry="2" />
<text  x="1075.72" y="1039.5" ></text>
</g>
<g >
<title>noria::view::SyncView::lookup::_$u7b$$u7b$closure$u7d$$u7d$::h339f90ccab48f6ba (17 samples, 0.03%)</title><rect x="189.0" y="1589" width="0.4" height="15.0" fill="rgb(235,67,22)" rx="2" ry="2" />
<text  x="192.02" y="1599.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::new (128 samples, 0.23%)</title><rect x="205.3" y="1333" width="2.7" height="15.0" fill="rgb(238,90,4)" rx="2" ry="2" />
<text  x="208.30" y="1343.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (12 samples, 0.02%)</title><rect x="1029.9" y="917" width="0.3" height="15.0" fill="rgb(243,114,20)" rx="2" ry="2" />
<text  x="1032.95" y="927.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (32 samples, 0.06%)</title><rect x="1031.8" y="1141" width="0.7" height="15.0" fill="rgb(208,60,20)" rx="2" ry="2" />
<text  x="1034.79" y="1151.5" ></text>
</g>
<g >
<title>core::mem::replace (61 samples, 0.11%)</title><rect x="1160.5" y="933" width="1.3" height="15.0" fill="rgb(253,125,11)" rx="2" ry="2" />
<text  x="1163.48" y="943.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (6 samples, 0.01%)</title><rect x="1027.4" y="1157" width="0.2" height="15.0" fill="rgb(209,72,35)" rx="2" ry="2" />
<text  x="1030.44" y="1167.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::swap_remove_index (18 samples, 0.03%)</title><rect x="1132.3" y="725" width="0.4" height="15.0" fill="rgb(226,12,15)" rx="2" ry="2" />
<text  x="1135.33" y="735.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (12 samples, 0.02%)</title><rect x="1029.9" y="933" width="0.3" height="15.0" fill="rgb(241,212,27)" rx="2" ry="2" />
<text  x="1032.95" y="943.5" ></text>
</g>
<g >
<title>new_sync_read (8 samples, 0.01%)</title><rect x="1111.7" y="741" width="0.2" height="15.0" fill="rgb(219,155,15)" rx="2" ry="2" />
<text  x="1114.74" y="751.5" ></text>
</g>
<g >
<title>zookeeper::io::ZkIo::ready_zk (38 samples, 0.07%)</title><rect x="994.5" y="1333" width="0.8" height="15.0" fill="rgb(242,154,24)" rx="2" ry="2" />
<text  x="997.51" y="1343.5" ></text>
</g>
<g >
<title>ip_rcv_finish (16 samples, 0.03%)</title><rect x="1050.4" y="421" width="0.4" height="15.0" fill="rgb(225,124,6)" rx="2" ry="2" />
<text  x="1053.44" y="431.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (33 samples, 0.06%)</title><rect x="998.0" y="1317" width="0.7" height="15.0" fill="rgb(245,38,0)" rx="2" ry="2" />
<text  x="1001.01" y="1327.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (23 samples, 0.04%)</title><rect x="1014.5" y="1301" width="0.4" height="15.0" fill="rgb(252,115,51)" rx="2" ry="2" />
<text  x="1017.46" y="1311.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (13 samples, 0.02%)</title><rect x="1033.4" y="1125" width="0.3" height="15.0" fill="rgb(229,9,45)" rx="2" ry="2" />
<text  x="1036.41" y="1135.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default::_$u7b$$u7b$closure$u7d$$u7d$::ha80fbdab9b554b03 (21 samples, 0.04%)</title><rect x="997.2" y="1413" width="0.4" height="15.0" fill="rgb(216,137,47)" rx="2" ry="2" />
<text  x="1000.16" y="1423.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (3,039 samples, 5.46%)</title><rect x="266.3" y="1333" width="64.5" height="15.0" fill="rgb(250,135,36)" rx="2" ry="2" />
<text  x="269.28" y="1343.5" >alloc::..</text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_bytes (11 samples, 0.02%)</title><rect x="1000.4" y="693" width="0.2" height="15.0" fill="rgb(224,44,14)" rx="2" ry="2" />
<text  x="1003.39" y="703.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (11 samples, 0.02%)</title><rect x="984.2" y="1157" width="0.3" height="15.0" fill="rgb(239,87,25)" rx="2" ry="2" />
<text  x="987.22" y="1167.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessNode::enqueue_with_wakeup (5 samples, 0.01%)</title><rect x="1024.8" y="1157" width="0.1" height="15.0" fill="rgb(251,25,29)" rx="2" ry="2" />
<text  x="1027.79" y="1167.5" ></text>
</g>
<g >
<title>gen::NoriaBackend::new (7 samples, 0.01%)</title><rect x="990.9" y="1413" width="0.2" height="15.0" fill="rgb(211,227,11)" rx="2" ry="2" />
<text  x="993.95" y="1423.5" ></text>
</g>
<g >
<title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (6 samples, 0.01%)</title><rect x="1087.3" y="965" width="0.1" height="15.0" fill="rgb(246,97,54)" rx="2" ry="2" />
<text  x="1090.32" y="975.5" ></text>
</g>
<g >
<title>gen::main::_$u7b$$u7b$closure$u7d$$u7d$::ha3f38d0bb5274a86 (5 samples, 0.01%)</title><rect x="192.7" y="1493" width="0.1" height="15.0" fill="rgb(217,151,25)" rx="2" ry="2" />
<text  x="195.69" y="1503.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (32 samples, 0.06%)</title><rect x="380.0" y="1237" width="0.7" height="15.0" fill="rgb(248,32,44)" rx="2" ry="2" />
<text  x="383.01" y="1247.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="1036.7" y="1061" width="0.2" height="15.0" fill="rgb(219,102,38)" rx="2" ry="2" />
<text  x="1039.65" y="1071.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::trailing_zeros (5 samples, 0.01%)</title><rect x="1187.7" y="805" width="0.1" height="15.0" fill="rgb(235,65,48)" rx="2" ry="2" />
<text  x="1190.71" y="815.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (54 samples, 0.10%)</title><rect x="1160.6" y="901" width="1.2" height="15.0" fill="rgb(211,39,43)" rx="2" ry="2" />
<text  x="1163.63" y="911.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfb347edd97d33f3d (28 samples, 0.05%)</title><rect x="1035.9" y="1573" width="0.6" height="15.0" fill="rgb(215,161,33)" rx="2" ry="2" />
<text  x="1038.89" y="1583.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.04%)</title><rect x="981.3" y="1157" width="0.5" height="15.0" fill="rgb(242,68,29)" rx="2" ry="2" />
<text  x="984.31" y="1167.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (17 samples, 0.03%)</title><rect x="1134.1" y="693" width="0.3" height="15.0" fill="rgb(234,80,17)" rx="2" ry="2" />
<text  x="1137.09" y="703.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (174 samples, 0.31%)</title><rect x="287.7" y="1269" width="3.7" height="15.0" fill="rgb(214,67,28)" rx="2" ry="2" />
<text  x="290.69" y="1279.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.01%)</title><rect x="1099.0" y="885" width="0.1" height="15.0" fill="rgb(208,175,48)" rx="2" ry="2" />
<text  x="1101.99" y="895.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (27 samples, 0.05%)</title><rect x="1028.4" y="1221" width="0.6" height="15.0" fill="rgb(222,196,45)" rx="2" ry="2" />
<text  x="1031.40" y="1231.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (137 samples, 0.25%)</title><rect x="499.6" y="1189" width="3.0" height="15.0" fill="rgb(239,128,39)" rx="2" ry="2" />
<text  x="502.65" y="1199.5" ></text>
</g>
<g >
<title>mio::poll::AtomicState::load (5 samples, 0.01%)</title><rect x="1076.3" y="885" width="0.1" height="15.0" fill="rgb(222,54,6)" rx="2" ry="2" />
<text  x="1079.27" y="895.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (9 samples, 0.02%)</title><rect x="1025.8" y="1477" width="0.2" height="15.0" fill="rgb(240,16,46)" rx="2" ry="2" />
<text  x="1028.79" y="1487.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (26 samples, 0.05%)</title><rect x="1029.4" y="997" width="0.5" height="15.0" fill="rgb(206,78,27)" rx="2" ry="2" />
<text  x="1032.39" y="1007.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (22 samples, 0.04%)</title><rect x="1053.4" y="1189" width="0.5" height="15.0" fill="rgb(225,29,52)" rx="2" ry="2" />
<text  x="1056.44" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (15 samples, 0.03%)</title><rect x="1034.9" y="1237" width="0.3" height="15.0" fill="rgb(211,192,1)" rx="2" ry="2" />
<text  x="1037.87" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (28 samples, 0.05%)</title><rect x="1037.8" y="1461" width="0.6" height="15.0" fill="rgb(215,173,2)" rx="2" ry="2" />
<text  x="1040.82" y="1471.5" ></text>
</g>
<g >
<title>&lt;usize as core::iter::range::Step&gt;::add_usize (32 samples, 0.06%)</title><rect x="1100.0" y="885" width="0.7" height="15.0" fill="rgb(238,163,29)" rx="2" ry="2" />
<text  x="1102.99" y="895.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (26 samples, 0.05%)</title><rect x="620.5" y="1173" width="0.6" height="15.0" fill="rgb(233,12,25)" rx="2" ry="2" />
<text  x="623.51" y="1183.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (48 samples, 0.09%)</title><rect x="1014.2" y="1461" width="1.0" height="15.0" fill="rgb(231,8,41)" rx="2" ry="2" />
<text  x="1017.16" y="1471.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple (24 samples, 0.04%)</title><rect x="1046.6" y="1157" width="0.5" height="15.0" fill="rgb(238,229,46)" rx="2" ry="2" />
<text  x="1049.60" y="1167.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (22 samples, 0.04%)</title><rect x="189.4" y="1429" width="0.5" height="15.0" fill="rgb(230,65,9)" rx="2" ry="2" />
<text  x="192.38" y="1439.5" ></text>
</g>
<g >
<title>tokio_tower::mediator::Receiver&lt;T&gt;::try_recv (8 samples, 0.01%)</title><rect x="1052.4" y="1237" width="0.2" height="15.0" fill="rgb(244,107,53)" rx="2" ry="2" />
<text  x="1055.44" y="1247.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (5 samples, 0.01%)</title><rect x="229.5" y="1253" width="0.1" height="15.0" fill="rgb(214,109,21)" rx="2" ry="2" />
<text  x="232.47" y="1263.5" ></text>
</g>
<g >
<title>byteorder::io::WriteBytesExt::write_u8 (5 samples, 0.01%)</title><rect x="1022.2" y="981" width="0.1" height="15.0" fill="rgb(212,66,54)" rx="2" ry="2" />
<text  x="1025.22" y="991.5" ></text>
</g>
<g >
<title>epoll_wait (23 samples, 0.04%)</title><rect x="1125.2" y="901" width="0.5" height="15.0" fill="rgb(234,146,21)" rx="2" ry="2" />
<text  x="1128.20" y="911.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,094 samples, 1.97%)</title><rect x="636.3" y="1269" width="23.2" height="15.0" fill="rgb(249,128,33)" rx="2" ry="2" />
<text  x="639.29" y="1279.5" >&lt;..</text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (7 samples, 0.01%)</title><rect x="249.0" y="1269" width="0.1" height="15.0" fill="rgb(220,1,53)" rx="2" ry="2" />
<text  x="251.97" y="1279.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (33 samples, 0.06%)</title><rect x="1030.5" y="1221" width="0.7" height="15.0" fill="rgb(251,21,43)" rx="2" ry="2" />
<text  x="1033.48" y="1231.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (40 samples, 0.07%)</title><rect x="585.6" y="1077" width="0.9" height="15.0" fill="rgb(211,224,28)" rx="2" ry="2" />
<text  x="588.60" y="1087.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::as_ptr (11 samples, 0.02%)</title><rect x="566.6" y="1253" width="0.2" height="15.0" fill="rgb(214,180,1)" rx="2" ry="2" />
<text  x="569.61" y="1263.5" ></text>
</g>
<g >
<title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (5 samples, 0.01%)</title><rect x="198.0" y="1141" width="0.1" height="15.0" fill="rgb(217,110,52)" rx="2" ry="2" />
<text  x="201.02" y="1151.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNotInner&lt;T&gt;&gt;::serialize (33 samples, 0.06%)</title><rect x="998.0" y="1413" width="0.7" height="15.0" fill="rgb(224,96,21)" rx="2" ry="2" />
<text  x="1001.01" y="1423.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::TableOperation&gt;::serialize (17 samples, 0.03%)</title><rect x="1023.0" y="1173" width="0.3" height="15.0" fill="rgb(213,101,51)" rx="2" ry="2" />
<text  x="1025.97" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (41 samples, 0.07%)</title><rect x="1138.9" y="1013" width="0.9" height="15.0" fill="rgb(219,12,50)" rx="2" ry="2" />
<text  x="1141.91" y="1023.5" ></text>
</g>
<g >
<title>core::sync::atomic::strongest_failure_ordering (15 samples, 0.03%)</title><rect x="1184.8" y="869" width="0.3" height="15.0" fill="rgb(213,219,33)" rx="2" ry="2" />
<text  x="1187.82" y="879.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (9 samples, 0.02%)</title><rect x="989.6" y="1045" width="0.2" height="15.0" fill="rgb(228,159,28)" rx="2" ry="2" />
<text  x="992.63" y="1055.5" ></text>
</g>
<g >
<title>&lt;chrono::naive::datetime::NaiveDateTime as core::fmt::Debug&gt;::fmt (57 samples, 0.10%)</title><rect x="998.7" y="1029" width="1.2" height="15.0" fill="rgb(254,50,13)" rx="2" ry="2" />
<text  x="1001.71" y="1039.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (8 samples, 0.01%)</title><rect x="1033.2" y="1173" width="0.2" height="15.0" fill="rgb(248,90,17)" rx="2" ry="2" />
<text  x="1036.24" y="1183.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (46 samples, 0.08%)</title><rect x="1029.0" y="1397" width="0.9" height="15.0" fill="rgb(247,77,5)" rx="2" ry="2" />
<text  x="1031.97" y="1407.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (5 samples, 0.01%)</title><rect x="199.9" y="1333" width="0.1" height="15.0" fill="rgb(221,59,10)" rx="2" ry="2" />
<text  x="202.89" y="1343.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for core::result::Result&lt;T,E&gt;&gt;::deserialize::ResultVisitor&lt;T,E&gt; as serde::de::Visitor&gt;::visit_enum (7 samples, 0.01%)</title><rect x="1022.5" y="1109" width="0.1" height="15.0" fill="rgb(226,100,13)" rx="2" ry="2" />
<text  x="1025.48" y="1119.5" ></text>
</g>
<g >
<title>std::panicking::panicking (11 samples, 0.02%)</title><rect x="488.4" y="1189" width="0.3" height="15.0" fill="rgb(251,207,46)" rx="2" ry="2" />
<text  x="491.44" y="1199.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (15 samples, 0.03%)</title><rect x="1032.9" y="1013" width="0.3" height="15.0" fill="rgb(207,4,2)" rx="2" ry="2" />
<text  x="1035.90" y="1023.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (8 samples, 0.01%)</title><rect x="194.5" y="1445" width="0.2" height="15.0" fill="rgb(233,12,35)" rx="2" ry="2" />
<text  x="197.54" y="1455.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (11 samples, 0.02%)</title><rect x="983.3" y="1157" width="0.2" height="15.0" fill="rgb(254,201,48)" rx="2" ry="2" />
<text  x="986.27" y="1167.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current (23 samples, 0.04%)</title><rect x="1014.5" y="1221" width="0.4" height="15.0" fill="rgb(206,97,13)" rx="2" ry="2" />
<text  x="1017.46" y="1231.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (32 samples, 0.06%)</title><rect x="1031.8" y="1381" width="0.7" height="15.0" fill="rgb(239,190,26)" rx="2" ry="2" />
<text  x="1034.79" y="1391.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::get (10 samples, 0.02%)</title><rect x="685.7" y="1141" width="0.2" height="15.0" fill="rgb(251,169,15)" rx="2" ry="2" />
<text  x="688.73" y="1151.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::Client&lt;T,E&gt; as tower_service::Service&lt;&lt;T as futures::sink::Sink&gt;::SinkItem&gt;&gt;::call (13 samples, 0.02%)</title><rect x="1131.9" y="709" width="0.3" height="15.0" fill="rgb(207,162,17)" rx="2" ry="2" />
<text  x="1134.92" y="719.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (18 samples, 0.03%)</title><rect x="1035.4" y="933" width="0.4" height="15.0" fill="rgb(209,210,47)" rx="2" ry="2" />
<text  x="1038.42" y="943.5" ></text>
</g>
<g >
<title>chan::Receiver&lt;T&gt;::inner (126 samples, 0.23%)</title><rect x="463.7" y="1269" width="2.7" height="15.0" fill="rgb(243,17,12)" rx="2" ry="2" />
<text  x="466.72" y="1279.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (9 samples, 0.02%)</title><rect x="1066.7" y="1045" width="0.2" height="15.0" fill="rgb(249,15,52)" rx="2" ry="2" />
<text  x="1069.70" y="1055.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (6 samples, 0.01%)</title><rect x="1025.6" y="741" width="0.1" height="15.0" fill="rgb(254,138,49)" rx="2" ry="2" />
<text  x="1028.62" y="751.5" ></text>
</g>
<g >
<title>tokio_sync::semaphore::Semaphore::add_permits_locked (5 samples, 0.01%)</title><rect x="1011.9" y="1461" width="0.1" height="15.0" fill="rgb(245,109,36)" rx="2" ry="2" />
<text  x="1014.91" y="1471.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h02a2ca3449e28e08 (5 samples, 0.01%)</title><rect x="986.3" y="1205" width="0.1" height="15.0" fill="rgb(232,115,7)" rx="2" ry="2" />
<text  x="989.26" y="1215.5" ></text>
</g>
<g >
<title>bincode::internal::serialized_size (19 samples, 0.03%)</title><rect x="997.6" y="1477" width="0.4" height="15.0" fill="rgb(205,156,46)" rx="2" ry="2" />
<text  x="1000.61" y="1487.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (6 samples, 0.01%)</title><rect x="996.3" y="1349" width="0.1" height="15.0" fill="rgb(234,58,44)" rx="2" ry="2" />
<text  x="999.27" y="1359.5" ></text>
</g>
<g >
<title>&lt;chrono::naive::time::NaiveTime as core::fmt::Debug&gt;::fmt (26 samples, 0.05%)</title><rect x="983.9" y="1269" width="0.6" height="15.0" fill="rgb(241,48,33)" rx="2" ry="2" />
<text  x="986.94" y="1279.5" ></text>
</g>
<g >
<title>mio::poll::RegistrationInner::set_readiness (22 samples, 0.04%)</title><rect x="1014.5" y="1045" width="0.4" height="15.0" fill="rgb(248,117,30)" rx="2" ry="2" />
<text  x="1017.46" y="1055.5" ></text>
</g>
<g >
<title>alloc::rc::RcBoxPtr::strong (78 samples, 0.14%)</title><rect x="883.5" y="1317" width="1.6" height="15.0" fill="rgb(241,174,14)" rx="2" ry="2" />
<text  x="886.47" y="1327.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (7 samples, 0.01%)</title><rect x="1055.6" y="1237" width="0.2" height="15.0" fill="rgb(233,223,42)" rx="2" ry="2" />
<text  x="1058.64" y="1247.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="1029.0" y="885" width="0.2" height="15.0" fill="rgb(238,9,54)" rx="2" ry="2" />
<text  x="1031.97" y="895.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (8 samples, 0.01%)</title><rect x="1025.6" y="901" width="0.2" height="15.0" fill="rgb(248,95,31)" rx="2" ry="2" />
<text  x="1028.62" y="911.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit (6 samples, 0.01%)</title><rect x="1024.8" y="1365" width="0.1" height="15.0" fill="rgb(226,26,44)" rx="2" ry="2" />
<text  x="1027.79" y="1375.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (41 samples, 0.07%)</title><rect x="428.2" y="1253" width="0.9" height="15.0" fill="rgb(242,21,34)" rx="2" ry="2" />
<text  x="431.18" y="1263.5" ></text>
</g>
<g >
<title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (9 samples, 0.02%)</title><rect x="199.5" y="1221" width="0.2" height="15.0" fill="rgb(206,119,47)" rx="2" ry="2" />
<text  x="202.46" y="1231.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::he0977de3e88b310a (5 samples, 0.01%)</title><rect x="192.7" y="1221" width="0.1" height="15.0" fill="rgb(244,71,6)" rx="2" ry="2" />
<text  x="195.69" y="1231.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::uninit (6 samples, 0.01%)</title><rect x="243.1" y="1285" width="0.1" height="15.0" fill="rgb(216,69,47)" rx="2" ry="2" />
<text  x="246.07" y="1295.5" ></text>
</g>
<g >
<title>rand::prng::isaac64::Isaac64Rng::isaac64 (569 samples, 1.02%)</title><rect x="574.4" y="1109" width="12.1" height="15.0" fill="rgb(243,162,12)" rx="2" ry="2" />
<text  x="577.40" y="1119.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (193 samples, 0.35%)</title><rect x="985.8" y="1429" width="4.1" height="15.0" fill="rgb(248,117,6)" rx="2" ry="2" />
<text  x="988.77" y="1439.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (45 samples, 0.08%)</title><rect x="1152.9" y="693" width="0.9" height="15.0" fill="rgb(249,200,44)" rx="2" ry="2" />
<text  x="1155.89" y="703.5" ></text>
</g>
<g >
<title>tokio_sync::loom::sync::CausalCell&lt;T&gt;::with (31 samples, 0.06%)</title><rect x="1043.6" y="917" width="0.7" height="15.0" fill="rgb(248,148,47)" rx="2" ry="2" />
<text  x="1046.63" y="927.5" ></text>
</g>
<g >
<title>serde_json::de::from_slice (12 samples, 0.02%)</title><rect x="1004.9" y="1525" width="0.3" height="15.0" fill="rgb(213,92,31)" rx="2" ry="2" />
<text  x="1007.91" y="1535.5" ></text>
</g>
<g >
<title>__vfs_write (16 samples, 0.03%)</title><rect x="1024.1" y="933" width="0.3" height="15.0" fill="rgb(227,123,28)" rx="2" ry="2" />
<text  x="1027.09" y="943.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (7 samples, 0.01%)</title><rect x="1019.3" y="1509" width="0.1" height="15.0" fill="rgb(224,81,46)" rx="2" ry="2" />
<text  x="1022.27" y="1519.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (7 samples, 0.01%)</title><rect x="1022.5" y="805" width="0.1" height="15.0" fill="rgb(233,7,50)" rx="2" ry="2" />
<text  x="1025.48" y="815.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="1179.9" y="789" width="0.2" height="15.0" fill="rgb(220,207,54)" rx="2" ry="2" />
<text  x="1182.94" y="799.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::Pool&lt;MS,Target,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (6 samples, 0.01%)</title><rect x="1015.2" y="885" width="0.1" height="15.0" fill="rgb(228,197,48)" rx="2" ry="2" />
<text  x="1018.22" y="895.5" ></text>
</g>
<g >
<title>&lt;noria::controller::Controller&lt;A&gt; as tower_service::Service&lt;noria::controller::ControllerRequest&gt;&gt;::call (9 samples, 0.02%)</title><rect x="1056.1" y="1301" width="0.2" height="15.0" fill="rgb(218,52,32)" rx="2" ry="2" />
<text  x="1059.07" y="1311.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (27 samples, 0.05%)</title><rect x="1027.4" y="1317" width="0.6" height="15.0" fill="rgb(249,176,50)" rx="2" ry="2" />
<text  x="1030.44" y="1327.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (90 samples, 0.16%)</title><rect x="933.7" y="1301" width="1.9" height="15.0" fill="rgb(224,137,49)" rx="2" ry="2" />
<text  x="936.70" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (71 samples, 0.13%)</title><rect x="1144.7" y="757" width="1.5" height="15.0" fill="rgb(240,174,38)" rx="2" ry="2" />
<text  x="1147.72" y="767.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (43 samples, 0.08%)</title><rect x="1036.9" y="1509" width="0.9" height="15.0" fill="rgb(224,157,27)" rx="2" ry="2" />
<text  x="1039.91" y="1519.5" ></text>
</g>
<g >
<title>futures::task_impl::std::&lt;impl futures::task_impl::Spawn&lt;F&gt;&gt;::wait_future (22 samples, 0.04%)</title><rect x="189.4" y="1525" width="0.5" height="15.0" fill="rgb(252,68,17)" rx="2" ry="2" />
<text  x="192.38" y="1535.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (12 samples, 0.02%)</title><rect x="1015.2" y="1253" width="0.2" height="15.0" fill="rgb(234,165,15)" rx="2" ry="2" />
<text  x="1018.18" y="1263.5" ></text>
</g>
<g >
<title>bincode::internal::deserialize_seed (11 samples, 0.02%)</title><rect x="1055.2" y="1189" width="0.2" height="15.0" fill="rgb(251,228,5)" rx="2" ry="2" />
<text  x="1058.15" y="1199.5" ></text>
</g>
<g >
<title>&lt;core::ptr::unique::Unique&lt;T&gt; as core::convert::From&lt;core::ptr::non_null::NonNull&lt;T&gt;&gt;&gt;::from (45 samples, 0.08%)</title><rect x="683.3" y="1205" width="1.0" height="15.0" fill="rgb(245,126,48)" rx="2" ry="2" />
<text  x="686.32" y="1215.5" ></text>
</g>
<g >
<title>noria::view::SyncView::lookup::_$u7b$$u7b$closure$u7d$$u7d$::h339f90ccab48f6ba (8 samples, 0.01%)</title><rect x="193.9" y="1397" width="0.2" height="15.0" fill="rgb(206,117,49)" rx="2" ry="2" />
<text  x="196.90" y="1407.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 0.02%)</title><rect x="10.0" y="1445" width="0.2" height="15.0" fill="rgb(211,129,6)" rx="2" ry="2" />
<text  x="13.00" y="1455.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (230 samples, 0.41%)</title><rect x="1130.5" y="933" width="4.9" height="15.0" fill="rgb(230,120,17)" rx="2" ry="2" />
<text  x="1133.52" y="943.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (67 samples, 0.12%)</title><rect x="187.0" y="1525" width="1.5" height="15.0" fill="rgb(220,136,7)" rx="2" ry="2" />
<text  x="190.05" y="1535.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::will_notify_current (8 samples, 0.01%)</title><rect x="1003.1" y="1365" width="0.2" height="15.0" fill="rgb(227,49,21)" rx="2" ry="2" />
<text  x="1006.13" y="1375.5" ></text>
</g>
<g >
<title>__GI___writev (13 samples, 0.02%)</title><rect x="1131.3" y="517" width="0.2" height="15.0" fill="rgb(252,125,53)" rx="2" ry="2" />
<text  x="1134.27" y="527.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="997.2" y="949" width="0.2" height="15.0" fill="rgb(210,60,28)" rx="2" ry="2" />
<text  x="1000.16" y="959.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (5 samples, 0.01%)</title><rect x="984.1" y="1029" width="0.1" height="15.0" fill="rgb(252,74,23)" rx="2" ry="2" />
<text  x="987.09" y="1039.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (102 samples, 0.18%)</title><rect x="993.2" y="1461" width="2.1" height="15.0" fill="rgb(220,117,20)" rx="2" ry="2" />
<text  x="996.15" y="1471.5" ></text>
</g>
<g >
<title>serde::de::SeqAccess::next_element (7 samples, 0.01%)</title><rect x="1022.5" y="981" width="0.1" height="15.0" fill="rgb(220,119,31)" rx="2" ry="2" />
<text  x="1025.48" y="991.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.01%)</title><rect x="1055.7" y="1109" width="0.1" height="15.0" fill="rgb(214,217,3)" rx="2" ry="2" />
<text  x="1058.66" y="1119.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::Pool&lt;MS,Target,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (5 samples, 0.01%)</title><rect x="1051.5" y="981" width="0.1" height="15.0" fill="rgb(218,0,38)" rx="2" ry="2" />
<text  x="1054.46" y="991.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (7 samples, 0.01%)</title><rect x="1049.4" y="1205" width="0.1" height="15.0" fill="rgb(239,110,35)" rx="2" ry="2" />
<text  x="1052.38" y="1215.5" ></text>
</g>
<g >
<title>gen::main (8 samples, 0.01%)</title><rect x="990.9" y="1429" width="0.2" height="15.0" fill="rgb(219,166,11)" rx="2" ry="2" />
<text  x="993.92" y="1439.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::push_internal (8 samples, 0.01%)</title><rect x="1109.4" y="741" width="0.2" height="15.0" fill="rgb(239,156,24)" rx="2" ry="2" />
<text  x="1112.39" y="751.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (17 samples, 0.03%)</title><rect x="1106.7" y="949" width="0.3" height="15.0" fill="rgb(216,216,24)" rx="2" ry="2" />
<text  x="1109.67" y="959.5" ></text>
</g>
<g >
<title>&lt;futures::future::map::Map&lt;A,F&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="188.5" y="1541" width="0.1" height="15.0" fill="rgb(220,192,1)" rx="2" ry="2" />
<text  x="191.47" y="1551.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *const T&gt;::is_null (28 samples, 0.05%)</title><rect x="313.9" y="1237" width="0.6" height="15.0" fill="rgb(229,194,46)" rx="2" ry="2" />
<text  x="316.94" y="1247.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::ok_or (76 samples, 0.14%)</title><rect x="539.2" y="1205" width="1.6" height="15.0" fill="rgb(227,184,8)" rx="2" ry="2" />
<text  x="542.18" y="1215.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.06%)</title><rect x="1079.5" y="869" width="0.7" height="15.0" fill="rgb(246,149,43)" rx="2" ry="2" />
<text  x="1082.53" y="879.5" ></text>
</g>
<g >
<title>core::mem::swap (219 samples, 0.39%)</title><rect x="813.2" y="1061" width="4.6" height="15.0" fill="rgb(208,99,24)" rx="2" ry="2" />
<text  x="816.15" y="1071.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNot&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1023.8" y="1365" width="0.1" height="15.0" fill="rgb(251,185,15)" rx="2" ry="2" />
<text  x="1026.81" y="1375.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.01%)</title><rect x="1026.2" y="1157" width="0.1" height="15.0" fill="rgb(222,36,35)" rx="2" ry="2" />
<text  x="1029.19" y="1167.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (14 samples, 0.03%)</title><rect x="760.8" y="1125" width="0.3" height="15.0" fill="rgb(211,27,33)" rx="2" ry="2" />
<text  x="763.76" y="1135.5" ></text>
</g>
<g >
<title>tcp_push (42 samples, 0.08%)</title><rect x="1050.1" y="709" width="0.9" height="15.0" fill="rgb(206,76,13)" rx="2" ry="2" />
<text  x="1053.10" y="719.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h3169cfffdbef5731 (15 samples, 0.03%)</title><rect x="194.7" y="1381" width="0.3" height="15.0" fill="rgb(238,174,22)" rx="2" ry="2" />
<text  x="197.71" y="1391.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.02%)</title><rect x="1055.2" y="869" width="0.2" height="15.0" fill="rgb(237,167,49)" rx="2" ry="2" />
<text  x="1058.18" y="879.5" ></text>
</g>
<g >
<title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (37 samples, 0.07%)</title><rect x="274.5" y="1253" width="0.8" height="15.0" fill="rgb(242,84,27)" rx="2" ry="2" />
<text  x="277.49" y="1263.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::stream::Stream&gt;::poll (9 samples, 0.02%)</title><rect x="1042.8" y="949" width="0.2" height="15.0" fill="rgb(216,29,18)" rx="2" ry="2" />
<text  x="1045.78" y="959.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (13 samples, 0.02%)</title><rect x="1033.4" y="1253" width="0.3" height="15.0" fill="rgb(230,198,18)" rx="2" ry="2" />
<text  x="1036.41" y="1263.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1023.8" y="1397" width="0.1" height="15.0" fill="rgb(247,53,18)" rx="2" ry="2" />
<text  x="1026.81" y="1407.5" ></text>
</g>
<g >
<title>&lt;tower_balance::p2c::service::Balance&lt;D,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (27 samples, 0.05%)</title><rect x="1028.4" y="1349" width="0.6" height="15.0" fill="rgb(245,193,0)" rx="2" ry="2" />
<text  x="1031.40" y="1359.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::poll_complete (48 samples, 0.09%)</title><rect x="1050.1" y="981" width="1.0" height="15.0" fill="rgb(207,22,39)" rx="2" ry="2" />
<text  x="1053.06" y="991.5" ></text>
</g>
<g >
<title>mio::sys::unix::awakener::pipe::Awakener::wakeup (5 samples, 0.01%)</title><rect x="1024.8" y="1093" width="0.1" height="15.0" fill="rgb(206,18,31)" rx="2" ry="2" />
<text  x="1027.79" y="1103.5" ></text>
</g>
<g >
<title>&lt;futures::sync::mpsc::UnboundedReceiver&lt;T&gt; as futures::stream::Stream&gt;::poll (14 samples, 0.03%)</title><rect x="996.5" y="1429" width="0.3" height="15.0" fill="rgb(252,136,54)" rx="2" ry="2" />
<text  x="999.53" y="1439.5" ></text>
</g>
<g >
<title>vfs_write (16 samples, 0.03%)</title><rect x="1108.6" y="437" width="0.4" height="15.0" fill="rgb(221,81,15)" rx="2" ry="2" />
<text  x="1111.63" y="447.5" ></text>
</g>
<g >
<title>do_futex (6 samples, 0.01%)</title><rect x="985.2" y="1141" width="0.1" height="15.0" fill="rgb(212,34,31)" rx="2" ry="2" />
<text  x="988.17" y="1151.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h1e333f0842b39e4b (15 samples, 0.03%)</title><rect x="1028.1" y="1157" width="0.3" height="15.0" fill="rgb(253,175,20)" rx="2" ry="2" />
<text  x="1031.06" y="1167.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (311 samples, 0.56%)</title><rect x="210.1" y="1317" width="6.6" height="15.0" fill="rgb(232,163,47)" rx="2" ry="2" />
<text  x="213.07" y="1327.5" ></text>
</g>
<g >
<title>wake_up_q (6 samples, 0.01%)</title><rect x="1134.2" y="485" width="0.1" height="15.0" fill="rgb(241,181,9)" rx="2" ry="2" />
<text  x="1137.22" y="495.5" ></text>
</g>
<g >
<title>crossbeam_epoch::internal::Global::try_advance (66 samples, 0.12%)</title><rect x="1186.6" y="885" width="1.4" height="15.0" fill="rgb(249,191,40)" rx="2" ry="2" />
<text  x="1189.65" y="895.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (309 samples, 0.56%)</title><rect x="1129.2" y="1045" width="6.6" height="15.0" fill="rgb(229,91,31)" rx="2" ry="2" />
<text  x="1132.21" y="1055.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="194.7" y="1221" width="0.1" height="15.0" fill="rgb(247,92,14)" rx="2" ry="2" />
<text  x="197.71" y="1231.5" ></text>
</g>
<g >
<title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::flush (10 samples, 0.02%)</title><rect x="1153.0" y="613" width="0.2" height="15.0" fill="rgb(235,83,48)" rx="2" ry="2" />
<text  x="1155.95" y="623.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (11 samples, 0.02%)</title><rect x="1035.9" y="1205" width="0.2" height="15.0" fill="rgb(245,206,50)" rx="2" ry="2" />
<text  x="1038.89" y="1215.5" ></text>
</g>
<g >
<title>bincode::ser::Serializer&lt;W,O&gt;::serialize_byte (14 samples, 0.03%)</title><rect x="1023.0" y="981" width="0.3" height="15.0" fill="rgb(252,47,52)" rx="2" ry="2" />
<text  x="1026.03" y="991.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (17 samples, 0.03%)</title><rect x="1023.0" y="1365" width="0.3" height="15.0" fill="rgb(215,24,20)" rx="2" ry="2" />
<text  x="1025.97" y="1375.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (34 samples, 0.06%)</title><rect x="1022.2" y="1557" width="0.7" height="15.0" fill="rgb(244,137,8)" rx="2" ry="2" />
<text  x="1025.18" y="1567.5" ></text>
</g>
<g >
<title>std::panicking::try (13 samples, 0.02%)</title><rect x="1051.6" y="1477" width="0.3" height="15.0" fill="rgb(250,101,6)" rx="2" ry="2" />
<text  x="1054.59" y="1487.5" ></text>
</g>
<g >
<title>zookeeper::io::ZkIo::reregister (5 samples, 0.01%)</title><rect x="994.9" y="1317" width="0.1" height="15.0" fill="rgb(217,143,14)" rx="2" ry="2" />
<text  x="997.85" y="1327.5" ></text>
</g>
<g >
<title>bincode::internal::serialized_size (5 samples, 0.01%)</title><rect x="1026.2" y="1285" width="0.1" height="15.0" fill="rgb(252,153,52)" rx="2" ry="2" />
<text  x="1029.19" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (36 samples, 0.06%)</title><rect x="1032.5" y="1349" width="0.7" height="15.0" fill="rgb(237,51,2)" rx="2" ry="2" />
<text  x="1035.47" y="1359.5" ></text>
</g>
<g >
<title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (99 samples, 0.18%)</title><rect x="396.1" y="1285" width="2.1" height="15.0" fill="rgb(244,211,29)" rx="2" ry="2" />
<text  x="399.08" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (15 samples, 0.03%)</title><rect x="188.6" y="1365" width="0.4" height="15.0" fill="rgb(235,54,47)" rx="2" ry="2" />
<text  x="191.64" y="1375.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::write_fmt (17 samples, 0.03%)</title><rect x="998.1" y="965" width="0.4" height="15.0" fill="rgb(232,165,40)" rx="2" ry="2" />
<text  x="1001.12" y="975.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (14 samples, 0.03%)</title><rect x="630.4" y="1301" width="0.3" height="15.0" fill="rgb(250,123,52)" rx="2" ry="2" />
<text  x="633.37" y="1311.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *const T&gt;::offset (36 samples, 0.06%)</title><rect x="328.8" y="1237" width="0.7" height="15.0" fill="rgb(206,210,33)" rx="2" ry="2" />
<text  x="331.77" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (12 samples, 0.02%)</title><rect x="191.8" y="1285" width="0.3" height="15.0" fill="rgb(251,102,2)" rx="2" ry="2" />
<text  x="194.85" y="1295.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (12,765 samples, 22.95%)</title><rect x="706.1" y="1349" width="270.9" height="15.0" fill="rgb(233,22,21)" rx="2" ry="2" />
<text  x="709.10" y="1359.5" >core::ptr::real_drop_in_place</text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (11 samples, 0.02%)</title><rect x="1036.9" y="1301" width="0.2" height="15.0" fill="rgb(246,194,22)" rx="2" ry="2" />
<text  x="1039.91" y="1311.5" ></text>
</g>
<g >
<title>core::mem::swap (164 samples, 0.29%)</title><rect x="1177.4" y="853" width="3.5" height="15.0" fill="rgb(231,118,28)" rx="2" ry="2" />
<text  x="1180.37" y="863.5" ></text>
</g>
<g >
<title>std::panicking::try (13 samples, 0.02%)</title><rect x="1026.6" y="1125" width="0.3" height="15.0" fill="rgb(249,36,3)" rx="2" ry="2" />
<text  x="1029.64" y="1135.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (207 samples, 0.37%)</title><rect x="1149.9" y="837" width="4.4" height="15.0" fill="rgb(207,6,47)" rx="2" ry="2" />
<text  x="1152.90" y="847.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (32 samples, 0.06%)</title><rect x="1037.1" y="1269" width="0.7" height="15.0" fill="rgb(210,159,29)" rx="2" ry="2" />
<text  x="1040.14" y="1279.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (7 samples, 0.01%)</title><rect x="1054.4" y="1093" width="0.2" height="15.0" fill="rgb(221,228,49)" rx="2" ry="2" />
<text  x="1057.43" y="1103.5" ></text>
</g>
<g >
<title>std::io::stdio::print_to (10 samples, 0.02%)</title><rect x="989.6" y="1301" width="0.2" height="15.0" fill="rgb(249,88,48)" rx="2" ry="2" />
<text  x="992.61" y="1311.5" ></text>
</g>
<g >
<title>std::sys::unix::condvar::Condvar::wait (17 samples, 0.03%)</title><rect x="984.9" y="1253" width="0.4" height="15.0" fill="rgb(219,9,51)" rx="2" ry="2" />
<text  x="987.94" y="1263.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (5 samples, 0.01%)</title><rect x="1123.7" y="885" width="0.1" height="15.0" fill="rgb(235,146,12)" rx="2" ry="2" />
<text  x="1126.71" y="895.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (44 samples, 0.08%)</title><rect x="809.2" y="1093" width="0.9" height="15.0" fill="rgb(250,65,0)" rx="2" ry="2" />
<text  x="812.21" y="1103.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (17 samples, 0.03%)</title><rect x="1023.0" y="1285" width="0.3" height="15.0" fill="rgb(248,64,54)" rx="2" ry="2" />
<text  x="1025.97" y="1295.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.02%)</title><rect x="1053.4" y="1141" width="0.3" height="15.0" fill="rgb(236,19,46)" rx="2" ry="2" />
<text  x="1056.44" y="1151.5" ></text>
</g>
<g >
<title>std::sys::unix::condvar::Condvar::new (17 samples, 0.03%)</title><rect x="231.6" y="1301" width="0.4" height="15.0" fill="rgb(253,148,44)" rx="2" ry="2" />
<text  x="234.63" y="1311.5" ></text>
</g>
<g >
<title>sock_poll (6 samples, 0.01%)</title><rect x="1104.9" y="773" width="0.1" height="15.0" fill="rgb(206,89,27)" rx="2" ry="2" />
<text  x="1107.87" y="783.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="1036.5" y="1061" width="0.1" height="15.0" fill="rgb(219,14,41)" rx="2" ry="2" />
<text  x="1039.48" y="1071.5" ></text>
</g>
<g >
<title>core::mem::swap (255 samples, 0.46%)</title><rect x="877.9" y="1253" width="5.4" height="15.0" fill="rgb(242,49,27)" rx="2" ry="2" />
<text  x="880.93" y="1263.5" ></text>
</g>
<g >
<title>core::option::Option&lt;&amp;T&gt;::cloned (68 samples, 0.12%)</title><rect x="655.6" y="1221" width="1.5" height="15.0" fill="rgb(251,157,20)" rx="2" ry="2" />
<text  x="658.65" y="1231.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (14 samples, 0.03%)</title><rect x="1034.6" y="1509" width="0.3" height="15.0" fill="rgb(242,177,37)" rx="2" ry="2" />
<text  x="1037.57" y="1519.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (20 samples, 0.04%)</title><rect x="1059.3" y="1365" width="0.4" height="15.0" fill="rgb(245,101,20)" rx="2" ry="2" />
<text  x="1062.29" y="1375.5" ></text>
</g>
<g >
<title>core::ptr::write (33 samples, 0.06%)</title><rect x="629.2" y="1125" width="0.7" height="15.0" fill="rgb(224,150,2)" rx="2" ry="2" />
<text  x="632.17" y="1135.5" ></text>
</g>
<g >
<title>crossbeam_deque::Worker&lt;T&gt;::push (8 samples, 0.01%)</title><rect x="1109.4" y="725" width="0.2" height="15.0" fill="rgb(211,80,25)" rx="2" ry="2" />
<text  x="1112.39" y="735.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::DataType&gt;::serialize (12 samples, 0.02%)</title><rect x="1045.9" y="933" width="0.3" height="15.0" fill="rgb(238,108,10)" rx="2" ry="2" />
<text  x="1048.90" y="943.5" ></text>
</g>
<g >
<title>tsd_witness_tsdp_get (45 samples, 0.08%)</title><rect x="70.8" y="1493" width="1.0" height="15.0" fill="rgb(230,200,54)" rx="2" ry="2" />
<text  x="73.81" y="1503.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (7 samples, 0.01%)</title><rect x="1034.2" y="1493" width="0.1" height="15.0" fill="rgb(227,38,13)" rx="2" ry="2" />
<text  x="1037.19" y="1503.5" ></text>
</g>
<g >
<title>&lt;T as fake::private::FakeBase&lt;U&gt;&gt;::_fake_with_rng (35 samples, 0.06%)</title><rect x="198.9" y="1269" width="0.8" height="15.0" fill="rgb(220,182,27)" rx="2" ry="2" />
<text  x="201.91" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (8 samples, 0.01%)</title><rect x="1036.5" y="1157" width="0.2" height="15.0" fill="rgb(208,64,33)" rx="2" ry="2" />
<text  x="1039.48" y="1167.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (11 samples, 0.02%)</title><rect x="822.8" y="1077" width="0.2" height="15.0" fill="rgb(206,59,26)" rx="2" ry="2" />
<text  x="825.79" y="1087.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (18 samples, 0.03%)</title><rect x="1034.2" y="1541" width="0.4" height="15.0" fill="rgb(215,27,19)" rx="2" ry="2" />
<text  x="1037.19" y="1551.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (5 samples, 0.01%)</title><rect x="996.8" y="1365" width="0.1" height="15.0" fill="rgb(210,133,49)" rx="2" ry="2" />
<text  x="999.82" y="1375.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll (797 samples, 1.43%)</title><rect x="1089.3" y="965" width="16.9" height="15.0" fill="rgb(237,82,43)" rx="2" ry="2" />
<text  x="1092.27" y="975.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::tcp::TcpStream as std::io::Write&gt;::write (58 samples, 0.10%)</title><rect x="1038.5" y="837" width="1.2" height="15.0" fill="rgb(205,164,46)" rx="2" ry="2" />
<text  x="1041.48" y="847.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (11 samples, 0.02%)</title><rect x="1045.6" y="1061" width="0.2" height="15.0" fill="rgb(244,9,27)" rx="2" ry="2" />
<text  x="1048.56" y="1071.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::into_unique (246 samples, 0.44%)</title><rect x="398.2" y="1301" width="5.2" height="15.0" fill="rgb(241,226,3)" rx="2" ry="2" />
<text  x="401.18" y="1311.5" ></text>
</g>
<g >
<title>tokio_sync::semaphore::Semaphore::add_permits (6 samples, 0.01%)</title><rect x="1011.9" y="1477" width="0.1" height="15.0" fill="rgb(232,86,25)" rx="2" ry="2" />
<text  x="1014.89" y="1487.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (174 samples, 0.31%)</title><rect x="1053.0" y="1365" width="3.7" height="15.0" fill="rgb(242,229,5)" rx="2" ry="2" />
<text  x="1056.01" y="1375.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (71 samples, 0.13%)</title><rect x="1183.3" y="869" width="1.5" height="15.0" fill="rgb(247,60,37)" rx="2" ry="2" />
<text  x="1186.32" y="879.5" ></text>
</g>
<g >
<title>core::ptr::read (40 samples, 0.07%)</title><rect x="671.0" y="1173" width="0.8" height="15.0" fill="rgb(250,227,44)" rx="2" ry="2" />
<text  x="673.97" y="1183.5" ></text>
</g>
<g >
<title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (6,982 samples, 12.56%)</title><rect x="711.3" y="1333" width="148.1" height="15.0" fill="rgb(217,29,30)" rx="2" ry="2" />
<text  x="714.26" y="1343.5" >&lt;alloc::collection..</text>
</g>
<g >
<title>tokio_tower::mediator::Receiver&lt;T&gt;::try_recv (7 samples, 0.01%)</title><rect x="1051.7" y="1237" width="0.1" height="15.0" fill="rgb(249,89,33)" rx="2" ry="2" />
<text  x="1054.70" y="1247.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::new_edge (41 samples, 0.07%)</title><rect x="299.0" y="1285" width="0.8" height="15.0" fill="rgb(226,103,30)" rx="2" ry="2" />
<text  x="301.98" y="1295.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (43 samples, 0.08%)</title><rect x="1036.9" y="1541" width="0.9" height="15.0" fill="rgb(220,135,44)" rx="2" ry="2" />
<text  x="1039.91" y="1551.5" ></text>
</g>
<g >
<title>core::mem::take (5 samples, 0.01%)</title><rect x="1056.0" y="1077" width="0.1" height="15.0" fill="rgb(241,229,47)" rx="2" ry="2" />
<text  x="1058.96" y="1087.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default::_$u7b$$u7b$closure$u7d$$u7d$::ha80fbdab9b554b03 (10 samples, 0.02%)</title><rect x="1026.0" y="1349" width="0.2" height="15.0" fill="rgb(224,98,0)" rx="2" ry="2" />
<text  x="1028.98" y="1359.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (11 samples, 0.02%)</title><rect x="1133.1" y="709" width="0.2" height="15.0" fill="rgb(216,152,47)" rx="2" ry="2" />
<text  x="1136.11" y="719.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (93 samples, 0.17%)</title><rect x="1057.1" y="1413" width="2.0" height="15.0" fill="rgb(246,127,41)" rx="2" ry="2" />
<text  x="1060.09" y="1423.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="1034.3" y="1237" width="0.3" height="15.0" fill="rgb(216,125,6)" rx="2" ry="2" />
<text  x="1037.34" y="1247.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::init (305 samples, 0.55%)</title><rect x="236.7" y="1301" width="6.5" height="15.0" fill="rgb(209,14,5)" rx="2" ry="2" />
<text  x="239.72" y="1311.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (7 samples, 0.01%)</title><rect x="194.4" y="1525" width="0.1" height="15.0" fill="rgb(219,110,13)" rx="2" ry="2" />
<text  x="197.39" y="1535.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default (12 samples, 0.02%)</title><rect x="1029.9" y="1317" width="0.3" height="15.0" fill="rgb(246,119,8)" rx="2" ry="2" />
<text  x="1032.95" y="1327.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (9 samples, 0.02%)</title><rect x="1051.4" y="1077" width="0.2" height="15.0" fill="rgb(241,57,54)" rx="2" ry="2" />
<text  x="1054.38" y="1087.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (10 samples, 0.02%)</title><rect x="1026.0" y="1301" width="0.2" height="15.0" fill="rgb(248,73,46)" rx="2" ry="2" />
<text  x="1028.98" y="1311.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (20 samples, 0.04%)</title><rect x="1029.0" y="1109" width="0.4" height="15.0" fill="rgb(221,138,17)" rx="2" ry="2" />
<text  x="1031.97" y="1119.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (28 samples, 0.05%)</title><rect x="884.0" y="1285" width="0.6" height="15.0" fill="rgb(231,136,47)" rx="2" ry="2" />
<text  x="887.00" y="1295.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (193 samples, 0.35%)</title><rect x="985.8" y="1397" width="4.1" height="15.0" fill="rgb(243,64,30)" rx="2" ry="2" />
<text  x="988.77" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="983.5" y="1077" width="0.1" height="15.0" fill="rgb(254,191,28)" rx="2" ry="2" />
<text  x="986.52" y="1087.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::notify (12 samples, 0.02%)</title><rect x="1047.6" y="1205" width="0.2" height="15.0" fill="rgb(242,67,9)" rx="2" ry="2" />
<text  x="1050.56" y="1215.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::fold1 (5 samples, 0.01%)</title><rect x="994.3" y="1237" width="0.1" height="15.0" fill="rgb(251,205,49)" rx="2" ry="2" />
<text  x="997.30" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (21 samples, 0.04%)</title><rect x="997.2" y="1381" width="0.4" height="15.0" fill="rgb(242,34,54)" rx="2" ry="2" />
<text  x="1000.16" y="1391.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (892 samples, 1.60%)</title><rect x="678.3" y="1269" width="18.9" height="15.0" fill="rgb(228,56,36)" rx="2" ry="2" />
<text  x="681.29" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (9 samples, 0.02%)</title><rect x="1049.5" y="1157" width="0.2" height="15.0" fill="rgb(228,58,47)" rx="2" ry="2" />
<text  x="1052.53" y="1167.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (22 samples, 0.04%)</title><rect x="1059.9" y="1461" width="0.5" height="15.0" fill="rgb(208,77,8)" rx="2" ry="2" />
<text  x="1062.89" y="1471.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (12 samples, 0.02%)</title><rect x="1033.7" y="1333" width="0.2" height="15.0" fill="rgb(249,201,18)" rx="2" ry="2" />
<text  x="1036.68" y="1343.5" ></text>
</g>
<g >
<title>noria::table::SyncTable::insert (50 samples, 0.09%)</title><rect x="192.8" y="1429" width="1.1" height="15.0" fill="rgb(226,112,27)" rx="2" ry="2" />
<text  x="195.84" y="1439.5" ></text>
</g>
<g >
<title>chrono::naive::datetime::serde::&lt;impl serde::ser::Serialize for chrono::naive::datetime::NaiveDateTime&gt;::serialize (5 samples, 0.01%)</title><rect x="1022.3" y="1061" width="0.1" height="15.0" fill="rgb(220,59,35)" rx="2" ry="2" />
<text  x="1025.33" y="1071.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::min_by (5 samples, 0.01%)</title><rect x="994.3" y="1253" width="0.1" height="15.0" fill="rgb(247,103,1)" rx="2" ry="2" />
<text  x="997.30" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.02%)</title><rect x="982.2" y="1061" width="0.2" height="15.0" fill="rgb(214,71,1)" rx="2" ry="2" />
<text  x="985.20" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (19 samples, 0.03%)</title><rect x="561.0" y="1237" width="0.4" height="15.0" fill="rgb(221,13,2)" rx="2" ry="2" />
<text  x="564.01" y="1247.5" ></text>
</g>
<g >
<title>core::mem::replace (256 samples, 0.46%)</title><rect x="253.3" y="1269" width="5.4" height="15.0" fill="rgb(243,58,8)" rx="2" ry="2" />
<text  x="256.27" y="1279.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="1037.8" y="1157" width="0.2" height="15.0" fill="rgb(215,92,11)" rx="2" ry="2" />
<text  x="1040.82" y="1167.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (377 samples, 0.68%)</title><rect x="588.0" y="1141" width="8.0" height="15.0" fill="rgb(248,213,51)" rx="2" ry="2" />
<text  x="591.02" y="1151.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default (17 samples, 0.03%)</title><rect x="1025.4" y="1301" width="0.4" height="15.0" fill="rgb(206,135,52)" rx="2" ry="2" />
<text  x="1028.43" y="1311.5" ></text>
</g>
<g >
<title>serde::de::VariantAccess::newtype_variant (9 samples, 0.02%)</title><rect x="1055.2" y="997" width="0.2" height="15.0" fill="rgb(208,18,24)" rx="2" ry="2" />
<text  x="1058.18" y="1007.5" ></text>
</g>
<g >
<title>std::panicking::try (20 samples, 0.04%)</title><rect x="1029.0" y="1093" width="0.4" height="15.0" fill="rgb(215,179,21)" rx="2" ry="2" />
<text  x="1031.97" y="1103.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::worker::state::Lifecycle as core::cmp::PartialEq&gt;::eq (5 samples, 0.01%)</title><rect x="1068.0" y="1045" width="0.1" height="15.0" fill="rgb(240,134,31)" rx="2" ry="2" />
<text  x="1070.99" y="1055.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (36 samples, 0.06%)</title><rect x="1038.8" y="597" width="0.8" height="15.0" fill="rgb(205,180,21)" rx="2" ry="2" />
<text  x="1041.82" y="607.5" ></text>
</g>
<g >
<title>jemallocator::layout_to_flags (27 samples, 0.05%)</title><rect x="804.2" y="1061" width="0.6" height="15.0" fill="rgb(205,187,54)" rx="2" ry="2" />
<text  x="807.18" y="1071.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessNode::enqueue_with_wakeup (5 samples, 0.01%)</title><rect x="1028.1" y="1013" width="0.1" height="15.0" fill="rgb(234,40,0)" rx="2" ry="2" />
<text  x="1031.14" y="1023.5" ></text>
</g>
<g >
<title>hyper::body::body::Sender::send_data (9 samples, 0.02%)</title><rect x="1153.3" y="629" width="0.2" height="15.0" fill="rgb(238,19,38)" rx="2" ry="2" />
<text  x="1156.33" y="639.5" ></text>
</g>
<g >
<title>new_sync_write (14 samples, 0.03%)</title><rect x="1108.6" y="405" width="0.3" height="15.0" fill="rgb(242,146,2)" rx="2" ry="2" />
<text  x="1111.65" y="415.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 0.03%)</title><rect x="1045.8" y="1205" width="0.4" height="15.0" fill="rgb(249,29,14)" rx="2" ry="2" />
<text  x="1048.80" y="1215.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_store (26 samples, 0.05%)</title><rect x="1162.1" y="933" width="0.6" height="15.0" fill="rgb(226,132,10)" rx="2" ry="2" />
<text  x="1165.14" y="943.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (21 samples, 0.04%)</title><rect x="189.4" y="1221" width="0.4" height="15.0" fill="rgb(217,199,3)" rx="2" ry="2" />
<text  x="192.38" y="1231.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (14 samples, 0.03%)</title><rect x="340.9" y="1269" width="0.3" height="15.0" fill="rgb(225,219,5)" rx="2" ry="2" />
<text  x="343.93" y="1279.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (10 samples, 0.02%)</title><rect x="1057.7" y="1173" width="0.2" height="15.0" fill="rgb(226,17,20)" rx="2" ry="2" />
<text  x="1060.68" y="1183.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (6 samples, 0.01%)</title><rect x="1058.1" y="1029" width="0.2" height="15.0" fill="rgb(205,101,5)" rx="2" ry="2" />
<text  x="1061.13" y="1039.5" ></text>
</g>
<g >
<title>std::sys_common::poison::Flag::get (128 samples, 0.23%)</title><rect x="451.6" y="1205" width="2.8" height="15.0" fill="rgb(244,54,3)" rx="2" ry="2" />
<text  x="454.65" y="1215.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (12 samples, 0.02%)</title><rect x="1047.6" y="1157" width="0.2" height="15.0" fill="rgb(246,114,22)" rx="2" ry="2" />
<text  x="1050.56" y="1167.5" ></text>
</g>
<g >
<title>&lt;futures::future::map::Map&lt;A,F&gt; as futures::future::Future&gt;::poll (15 samples, 0.03%)</title><rect x="194.7" y="1349" width="0.3" height="15.0" fill="rgb(247,185,53)" rx="2" ry="2" />
<text  x="197.71" y="1359.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10 samples, 0.02%)</title><rect x="858.6" y="1285" width="0.3" height="15.0" fill="rgb(206,153,11)" rx="2" ry="2" />
<text  x="861.65" y="1295.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (18 samples, 0.03%)</title><rect x="390.6" y="1253" width="0.3" height="15.0" fill="rgb(211,45,23)" rx="2" ry="2" />
<text  x="393.56" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (5 samples, 0.01%)</title><rect x="180.7" y="1477" width="0.1" height="15.0" fill="rgb(233,2,6)" rx="2" ry="2" />
<text  x="183.73" y="1487.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (43 samples, 0.08%)</title><rect x="1050.1" y="725" width="0.9" height="15.0" fill="rgb(206,138,46)" rx="2" ry="2" />
<text  x="1053.08" y="735.5" ></text>
</g>
<g >
<title>std::panicking::try (11 samples, 0.02%)</title><rect x="977.1" y="1477" width="0.2" height="15.0" fill="rgb(235,40,20)" rx="2" ry="2" />
<text  x="980.07" y="1487.5" ></text>
</g>
<g >
<title>indexmap::map::OrderMapCore&lt;K,V&gt;::swap_remove_found (17 samples, 0.03%)</title><rect x="1010.4" y="1477" width="0.4" height="15.0" fill="rgb(226,20,37)" rx="2" ry="2" />
<text  x="1013.40" y="1487.5" ></text>
</g>
<g >
<title>futures::task_impl::std::BorrowedEvents::to_owned (5 samples, 0.01%)</title><rect x="1012.7" y="1365" width="0.1" height="15.0" fill="rgb(234,71,54)" rx="2" ry="2" />
<text  x="1015.74" y="1375.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::consume_blocking_allocation (5 samples, 0.01%)</title><rect x="1129.8" y="965" width="0.1" height="15.0" fill="rgb(212,197,20)" rx="2" ry="2" />
<text  x="1132.80" y="975.5" ></text>
</g>
<g >
<title>bincode::config::legacy::Config::serialize_into (5 samples, 0.01%)</title><rect x="1035.0" y="1061" width="0.1" height="15.0" fill="rgb(229,150,21)" rx="2" ry="2" />
<text  x="1037.95" y="1071.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::Pool&lt;MS,Target,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (8 samples, 0.01%)</title><rect x="995.4" y="805" width="0.1" height="15.0" fill="rgb(226,26,6)" rx="2" ry="2" />
<text  x="998.36" y="815.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (45 samples, 0.08%)</title><rect x="773.3" y="1141" width="0.9" height="15.0" fill="rgb(225,90,11)" rx="2" ry="2" />
<text  x="776.26" y="1151.5" ></text>
</g>
<g >
<title>mio::poll::enqueue_with_wakeup (25 samples, 0.04%)</title><rect x="1048.2" y="917" width="0.5" height="15.0" fill="rgb(246,151,21)" rx="2" ry="2" />
<text  x="1051.22" y="927.5" ></text>
</g>
<g >
<title>futures::task_impl::spawn (7 samples, 0.01%)</title><rect x="200.7" y="1285" width="0.1" height="15.0" fill="rgb(233,179,24)" rx="2" ry="2" />
<text  x="203.65" y="1295.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *const T&gt;::as_ref (18 samples, 0.03%)</title><rect x="1159.0" y="981" width="0.4" height="15.0" fill="rgb(220,203,19)" rx="2" ry="2" />
<text  x="1162.00" y="991.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (22 samples, 0.04%)</title><rect x="189.4" y="1381" width="0.5" height="15.0" fill="rgb(217,217,46)" rx="2" ry="2" />
<text  x="192.38" y="1391.5" ></text>
</g>
<g >
<title>futures::sync::mpsc::Sender&lt;T&gt;::do_send (9 samples, 0.02%)</title><rect x="1153.3" y="597" width="0.2" height="15.0" fill="rgb(227,43,38)" rx="2" ry="2" />
<text  x="1156.33" y="607.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::notify (23 samples, 0.04%)</title><rect x="1014.5" y="1349" width="0.4" height="15.0" fill="rgb(251,121,36)" rx="2" ry="2" />
<text  x="1017.46" y="1359.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (9 samples, 0.02%)</title><rect x="1051.4" y="1173" width="0.2" height="15.0" fill="rgb(208,162,23)" rx="2" ry="2" />
<text  x="1054.38" y="1183.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (6 samples, 0.01%)</title><rect x="1151.9" y="469" width="0.2" height="15.0" fill="rgb(253,172,9)" rx="2" ry="2" />
<text  x="1154.93" y="479.5" ></text>
</g>
<g >
<title>core::mem::replace (176 samples, 0.32%)</title><rect x="1177.1" y="869" width="3.8" height="15.0" fill="rgb(213,89,2)" rx="2" ry="2" />
<text  x="1180.14" y="879.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (32 samples, 0.06%)</title><rect x="1031.8" y="1109" width="0.7" height="15.0" fill="rgb(216,101,33)" rx="2" ry="2" />
<text  x="1034.79" y="1119.5" ></text>
</g>
<g >
<title>byteorder::io::ReadBytesExt::read_u32 (6 samples, 0.01%)</title><rect x="1058.1" y="965" width="0.2" height="15.0" fill="rgb(219,87,17)" rx="2" ry="2" />
<text  x="1061.13" y="975.5" ></text>
</g>
<g >
<title>tokio_reactor::HandlePriv::wakeup (14 samples, 0.03%)</title><rect x="1073.1" y="981" width="0.3" height="15.0" fill="rgb(221,141,22)" rx="2" ry="2" />
<text  x="1076.08" y="991.5" ></text>
</g>
<g >
<title>tokio_sync::loom::sync::CausalCell&lt;T&gt;::with_mut (17 samples, 0.03%)</title><rect x="1110.3" y="933" width="0.3" height="15.0" fill="rgb(232,13,41)" rx="2" ry="2" />
<text  x="1113.28" y="943.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::park::boxed::BoxedPark&lt;T&gt; as tokio_executor::park::Park&gt;::park_timeout (580 samples, 1.04%)</title><rect x="1073.8" y="1029" width="12.3" height="15.0" fill="rgb(221,135,12)" rx="2" ry="2" />
<text  x="1076.78" y="1039.5" ></text>
</g>
<g >
<title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as futures::future::Future&gt;::poll (47 samples, 0.08%)</title><rect x="1152.8" y="757" width="1.0" height="15.0" fill="rgb(245,106,25)" rx="2" ry="2" />
<text  x="1155.85" y="767.5" ></text>
</g>
<g >
<title>futures::sync::oneshot::Inner&lt;T&gt;::recv (7 samples, 0.01%)</title><rect x="1020.7" y="1477" width="0.1" height="15.0" fill="rgb(206,36,9)" rx="2" ry="2" />
<text  x="1023.67" y="1487.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (11 samples, 0.02%)</title><rect x="1034.0" y="1429" width="0.2" height="15.0" fill="rgb(210,181,5)" rx="2" ry="2" />
<text  x="1036.96" y="1439.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::io::Io as std::io::Write&gt;::write (84 samples, 0.15%)</title><rect x="1144.5" y="853" width="1.8" height="15.0" fill="rgb(251,132,43)" rx="2" ry="2" />
<text  x="1147.49" y="863.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (118 samples, 0.21%)</title><rect x="1027.4" y="1541" width="2.5" height="15.0" fill="rgb(230,131,41)" rx="2" ry="2" />
<text  x="1030.44" y="1551.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (6 samples, 0.01%)</title><rect x="1035.2" y="1077" width="0.2" height="15.0" fill="rgb(248,117,47)" rx="2" ry="2" />
<text  x="1038.23" y="1087.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner&lt;T&gt;::poll_recv (17 samples, 0.03%)</title><rect x="181.5" y="1429" width="0.4" height="15.0" fill="rgb(205,118,14)" rx="2" ry="2" />
<text  x="184.53" y="1439.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts_mut (41 samples, 0.07%)</title><rect x="934.7" y="1285" width="0.9" height="15.0" fill="rgb(213,123,12)" rx="2" ry="2" />
<text  x="937.74" y="1295.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (6 samples, 0.01%)</title><rect x="1078.1" y="805" width="0.1" height="15.0" fill="rgb(224,45,43)" rx="2" ry="2" />
<text  x="1081.09" y="815.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (126 samples, 0.23%)</title><rect x="1038.4" y="1157" width="2.7" height="15.0" fill="rgb(229,154,15)" rx="2" ry="2" />
<text  x="1041.41" y="1167.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (6 samples, 0.01%)</title><rect x="1033.7" y="1045" width="0.1" height="15.0" fill="rgb(232,27,48)" rx="2" ry="2" />
<text  x="1036.68" y="1055.5" ></text>
</g>
<g >
<title>tokio_sync::loom::sync::CausalCell&lt;T&gt;::with_mut (5 samples, 0.01%)</title><rect x="1007.9" y="1365" width="0.1" height="15.0" fill="rgb(211,196,26)" rx="2" ry="2" />
<text  x="1010.90" y="1375.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (42 samples, 0.08%)</title><rect x="221.1" y="1269" width="0.9" height="15.0" fill="rgb(237,167,24)" rx="2" ry="2" />
<text  x="224.06" y="1279.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::from_raw (7 samples, 0.01%)</title><rect x="1107.4" y="853" width="0.1" height="15.0" fill="rgb(209,58,14)" rx="2" ry="2" />
<text  x="1110.37" y="863.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (9 samples, 0.02%)</title><rect x="1051.4" y="1285" width="0.2" height="15.0" fill="rgb(211,30,22)" rx="2" ry="2" />
<text  x="1054.38" y="1295.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (19 samples, 0.03%)</title><rect x="997.6" y="1413" width="0.4" height="15.0" fill="rgb(218,105,2)" rx="2" ry="2" />
<text  x="1000.61" y="1423.5" ></text>
</g>
<g >
<title>&lt;noria::controller::Controller&lt;A&gt; as tower_service::Service&lt;noria::controller::ControllerRequest&gt;&gt;::call (50 samples, 0.09%)</title><rect x="1004.1" y="1573" width="1.1" height="15.0" fill="rgb(253,125,23)" rx="2" ry="2" />
<text  x="1007.10" y="1583.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (14 samples, 0.03%)</title><rect x="1034.6" y="1541" width="0.3" height="15.0" fill="rgb(251,41,10)" rx="2" ry="2" />
<text  x="1037.57" y="1551.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::TableOperation&gt;::serialize (33 samples, 0.06%)</title><rect x="998.0" y="1285" width="0.7" height="15.0" fill="rgb(219,92,24)" rx="2" ry="2" />
<text  x="1001.01" y="1295.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (36,502 samples, 65.64%)</title><rect x="202.5" y="1429" width="774.6" height="15.0" fill="rgb(225,63,44)" rx="2" ry="2" />
<text  x="205.54" y="1439.5" >&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;</text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (204 samples, 0.37%)</title><rect x="1130.9" y="821" width="4.3" height="15.0" fill="rgb(211,28,21)" rx="2" ry="2" />
<text  x="1133.91" y="831.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (158 samples, 0.28%)</title><rect x="1041.1" y="997" width="3.3" height="15.0" fill="rgb(241,168,18)" rx="2" ry="2" />
<text  x="1044.09" y="1007.5" ></text>
</g>
<g >
<title>tower_buffer::worker::Worker&lt;T,Request&gt;::poll_next_msg (10 samples, 0.02%)</title><rect x="1049.2" y="1333" width="0.2" height="15.0" fill="rgb(222,135,5)" rx="2" ry="2" />
<text  x="1052.17" y="1343.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::get (25 samples, 0.04%)</title><rect x="1159.7" y="965" width="0.5" height="15.0" fill="rgb(208,193,45)" rx="2" ry="2" />
<text  x="1162.66" y="975.5" ></text>
</g>
<g >
<title>&lt;futures::future::then::Then&lt;A,B,F&gt; as futures::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="194.1" y="1397" width="0.2" height="15.0" fill="rgb(233,108,16)" rx="2" ry="2" />
<text  x="197.07" y="1407.5" ></text>
</g>
<g >
<title>chan::Receiver&lt;T&gt;::inner (70 samples, 0.13%)</title><rect x="704.5" y="1317" width="1.5" height="15.0" fill="rgb(236,132,52)" rx="2" ry="2" />
<text  x="707.53" y="1327.5" ></text>
</g>
<g >
<title>noria::table::SyncTable::insert::_$u7b$$u7b$closure$u7d$$u7d$::hda9decbe4187d0e3 (22 samples, 0.04%)</title><rect x="200.6" y="1317" width="0.5" height="15.0" fill="rgb(254,114,43)" rx="2" ry="2" />
<text  x="203.59" y="1327.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (12 samples, 0.02%)</title><rect x="1033.9" y="1573" width="0.3" height="15.0" fill="rgb(206,83,13)" rx="2" ry="2" />
<text  x="1036.94" y="1583.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::drop (5 samples, 0.01%)</title><rect x="182.4" y="1349" width="0.1" height="15.0" fill="rgb(222,212,1)" rx="2" ry="2" />
<text  x="185.42" y="1359.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (11 samples, 0.02%)</title><rect x="1034.0" y="1445" width="0.2" height="15.0" fill="rgb(214,54,10)" rx="2" ry="2" />
<text  x="1036.96" y="1455.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (60 samples, 0.11%)</title><rect x="998.7" y="1333" width="1.3" height="15.0" fill="rgb(232,200,13)" rx="2" ry="2" />
<text  x="1001.71" y="1343.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (6 samples, 0.01%)</title><rect x="1124.3" y="885" width="0.2" height="15.0" fill="rgb(218,168,21)" rx="2" ry="2" />
<text  x="1127.33" y="895.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::get (61 samples, 0.11%)</title><rect x="621.1" y="1189" width="1.3" height="15.0" fill="rgb(210,48,22)" rx="2" ry="2" />
<text  x="624.06" y="1199.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 0.02%)</title><rect x="1026.0" y="1493" width="0.2" height="15.0" fill="rgb(247,71,51)" rx="2" ry="2" />
<text  x="1028.98" y="1503.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::enqueue_node (7 samples, 0.01%)</title><rect x="1123.9" y="885" width="0.1" height="15.0" fill="rgb(251,118,36)" rx="2" ry="2" />
<text  x="1126.86" y="895.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::vals_mut (378 samples, 0.68%)</title><rect x="355.7" y="1285" width="8.0" height="15.0" fill="rgb(230,119,49)" rx="2" ry="2" />
<text  x="358.72" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h3169cfffdbef5731 (5 samples, 0.01%)</title><rect x="192.7" y="1237" width="0.1" height="15.0" fill="rgb(222,6,13)" rx="2" ry="2" />
<text  x="195.69" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit (18 samples, 0.03%)</title><rect x="180.0" y="1349" width="0.4" height="15.0" fill="rgb(205,210,30)" rx="2" ry="2" />
<text  x="183.03" y="1359.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (7 samples, 0.01%)</title><rect x="1149.2" y="997" width="0.1" height="15.0" fill="rgb(243,108,4)" rx="2" ry="2" />
<text  x="1152.17" y="1007.5" ></text>
</g>
<g >
<title>core::mem::replace (9 samples, 0.02%)</title><rect x="1154.5" y="965" width="0.2" height="15.0" fill="rgb(214,72,25)" rx="2" ry="2" />
<text  x="1157.54" y="975.5" ></text>
</g>
<g >
<title>zookeeper::io::ZkIo::send_response (5 samples, 0.01%)</title><rect x="992.8" y="1365" width="0.1" height="15.0" fill="rgb(216,119,28)" rx="2" ry="2" />
<text  x="995.81" y="1375.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 0.02%)</title><rect x="995.3" y="1445" width="0.3" height="15.0" fill="rgb(215,176,12)" rx="2" ry="2" />
<text  x="998.32" y="1455.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (19 samples, 0.03%)</title><rect x="1052.6" y="1445" width="0.4" height="15.0" fill="rgb(242,62,15)" rx="2" ry="2" />
<text  x="1055.61" y="1455.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (9 samples, 0.02%)</title><rect x="1049.5" y="1205" width="0.2" height="15.0" fill="rgb(237,222,15)" rx="2" ry="2" />
<text  x="1052.53" y="1215.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (32 samples, 0.06%)</title><rect x="1031.8" y="1285" width="0.7" height="15.0" fill="rgb(213,85,13)" rx="2" ry="2" />
<text  x="1034.79" y="1295.5" ></text>
</g>
<g >
<title>jemallocator::layout_to_flags (15 samples, 0.03%)</title><rect x="862.8" y="1237" width="0.3" height="15.0" fill="rgb(219,125,31)" rx="2" ry="2" />
<text  x="865.83" y="1247.5" ></text>
</g>
<g >
<title>alloc::collections::btree::search::search_tree (1,341 samples, 2.41%)</title><rect x="523.6" y="1285" width="28.4" height="15.0" fill="rgb(216,132,11)" rx="2" ry="2" />
<text  x="526.56" y="1295.5" >al..</text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (100 samples, 0.18%)</title><rect x="321.1" y="1237" width="2.1" height="15.0" fill="rgb(238,34,39)" rx="2" ry="2" />
<text  x="324.07" y="1247.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.01%)</title><rect x="193.4" y="1141" width="0.2" height="15.0" fill="rgb(233,209,44)" rx="2" ry="2" />
<text  x="196.44" y="1151.5" ></text>
</g>
<g >
<title>&lt;tokio_sync::mpsc::unbounded::UnboundedReceiver&lt;T&gt; as futures::stream::Stream&gt;::poll (23 samples, 0.04%)</title><rect x="1003.0" y="1541" width="0.5" height="15.0" fill="rgb(232,123,44)" rx="2" ry="2" />
<text  x="1006.04" y="1551.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::swap_remove (43 samples, 0.08%)</title><rect x="1009.9" y="1509" width="0.9" height="15.0" fill="rgb(216,18,7)" rx="2" ry="2" />
<text  x="1012.85" y="1519.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (11 samples, 0.02%)</title><rect x="1036.9" y="1365" width="0.2" height="15.0" fill="rgb(240,150,15)" rx="2" ry="2" />
<text  x="1039.91" y="1375.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (221 samples, 0.40%)</title><rect x="1149.6" y="949" width="4.7" height="15.0" fill="rgb(227,94,16)" rx="2" ry="2" />
<text  x="1152.64" y="959.5" ></text>
</g>
<g >
<title>noria::table::_::&lt;impl serde::ser::Serialize for noria::table::Input&gt;::serialize (60 samples, 0.11%)</title><rect x="998.7" y="1381" width="1.3" height="15.0" fill="rgb(210,6,8)" rx="2" ry="2" />
<text  x="1001.71" y="1391.5" ></text>
</g>
<g >
<title>bincode::internal::serialized_size (13 samples, 0.02%)</title><rect x="1027.7" y="1269" width="0.3" height="15.0" fill="rgb(224,207,43)" rx="2" ry="2" />
<text  x="1030.74" y="1279.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (12 samples, 0.02%)</title><rect x="1047.6" y="1221" width="0.2" height="15.0" fill="rgb(216,117,14)" rx="2" ry="2" />
<text  x="1050.56" y="1231.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (47 samples, 0.08%)</title><rect x="215.0" y="1301" width="1.0" height="15.0" fill="rgb(232,163,36)" rx="2" ry="2" />
<text  x="218.02" y="1311.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (15 samples, 0.03%)</title><rect x="194.7" y="1317" width="0.3" height="15.0" fill="rgb(230,96,11)" rx="2" ry="2" />
<text  x="197.71" y="1327.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="1026.7" y="901" width="0.1" height="15.0" fill="rgb(235,36,9)" rx="2" ry="2" />
<text  x="1029.66" y="911.5" ></text>
</g>
<g >
<title>core::mem::drop (8 samples, 0.01%)</title><rect x="991.8" y="1557" width="0.1" height="15.0" fill="rgb(238,226,52)" rx="2" ry="2" />
<text  x="994.77" y="1567.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (7 samples, 0.01%)</title><rect x="1050.5" y="309" width="0.2" height="15.0" fill="rgb(208,164,23)" rx="2" ry="2" />
<text  x="1053.53" y="319.5" ></text>
</g>
<g >
<title>&lt;crossbeam_epoch::epoch::Epoch as core::default::Default&gt;::default (7 samples, 0.01%)</title><rect x="1162.7" y="949" width="0.1" height="15.0" fill="rgb(238,95,48)" rx="2" ry="2" />
<text  x="1165.69" y="959.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.01%)</title><rect x="1022.5" y="1253" width="0.1" height="15.0" fill="rgb(224,139,33)" rx="2" ry="2" />
<text  x="1025.48" y="1263.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (44 samples, 0.08%)</title><rect x="1152.9" y="677" width="0.9" height="15.0" fill="rgb(238,11,38)" rx="2" ry="2" />
<text  x="1155.91" y="687.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (46 samples, 0.08%)</title><rect x="1029.0" y="1189" width="0.9" height="15.0" fill="rgb(231,30,9)" rx="2" ry="2" />
<text  x="1031.97" y="1199.5" ></text>
</g>
<g >
<title>noria::table::Table::quick_n_dirty::_$u7b$$u7b$closure$u7d$$u7d$::h3f374431d27411e4 (8 samples, 0.01%)</title><rect x="11.1" y="1541" width="0.2" height="15.0" fill="rgb(218,6,47)" rx="2" ry="2" />
<text  x="14.10" y="1551.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (6 samples, 0.01%)</title><rect x="1024.8" y="1461" width="0.1" height="15.0" fill="rgb(213,187,37)" rx="2" ry="2" />
<text  x="1027.79" y="1471.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.01%)</title><rect x="192.0" y="1205" width="0.1" height="15.0" fill="rgb(251,199,27)" rx="2" ry="2" />
<text  x="194.97" y="1215.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (7 samples, 0.01%)</title><rect x="1056.7" y="1525" width="0.2" height="15.0" fill="rgb(228,148,20)" rx="2" ry="2" />
<text  x="1059.70" y="1535.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (102 samples, 0.18%)</title><rect x="613.8" y="1221" width="2.2" height="15.0" fill="rgb(213,41,7)" rx="2" ry="2" />
<text  x="616.80" y="1231.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::stream::Stream&gt;::poll (43 samples, 0.08%)</title><rect x="1046.2" y="1301" width="0.9" height="15.0" fill="rgb(218,143,47)" rx="2" ry="2" />
<text  x="1049.20" y="1311.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::stream::Stream&gt;::poll (14 samples, 0.03%)</title><rect x="1032.2" y="1045" width="0.3" height="15.0" fill="rgb(213,35,15)" rx="2" ry="2" />
<text  x="1035.15" y="1055.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::get (30 samples, 0.05%)</title><rect x="1175.4" y="901" width="0.6" height="15.0" fill="rgb(254,119,8)" rx="2" ry="2" />
<text  x="1178.40" y="911.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (21 samples, 0.04%)</title><rect x="997.2" y="1493" width="0.4" height="15.0" fill="rgb(218,19,37)" rx="2" ry="2" />
<text  x="1000.16" y="1503.5" ></text>
</g>
<g >
<title>mio::net::tcp::TcpStream::write_bufs (13 samples, 0.02%)</title><rect x="1131.3" y="565" width="0.2" height="15.0" fill="rgb(219,155,22)" rx="2" ry="2" />
<text  x="1134.27" y="575.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (29 samples, 0.05%)</title><rect x="1031.2" y="1237" width="0.6" height="15.0" fill="rgb(208,43,28)" rx="2" ry="2" />
<text  x="1034.18" y="1247.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (16 samples, 0.03%)</title><rect x="559.8" y="1157" width="0.3" height="15.0" fill="rgb(246,195,38)" rx="2" ry="2" />
<text  x="562.78" y="1167.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h1e333f0842b39e4b (27 samples, 0.05%)</title><rect x="1028.4" y="1109" width="0.6" height="15.0" fill="rgb(209,75,2)" rx="2" ry="2" />
<text  x="1031.40" y="1119.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (5 samples, 0.01%)</title><rect x="191.8" y="1157" width="0.2" height="15.0" fill="rgb(221,179,24)" rx="2" ry="2" />
<text  x="194.85" y="1167.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (360 samples, 0.65%)</title><rect x="481.0" y="1237" width="7.7" height="15.0" fill="rgb(233,46,32)" rx="2" ry="2" />
<text  x="484.04" y="1247.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (23 samples, 0.04%)</title><rect x="1039.0" y="501" width="0.5" height="15.0" fill="rgb(205,214,47)" rx="2" ry="2" />
<text  x="1041.96" y="511.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::register_task (7 samples, 0.01%)</title><rect x="1055.8" y="1253" width="0.1" height="15.0" fill="rgb(233,227,52)" rx="2" ry="2" />
<text  x="1058.79" y="1263.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::write_fmt (33 samples, 0.06%)</title><rect x="998.0" y="1013" width="0.7" height="15.0" fill="rgb(237,87,28)" rx="2" ry="2" />
<text  x="1001.01" y="1023.5" ></text>
</g>
<g >
<title>&lt;noria::table::Table as tower_service::Service&lt;noria::table::Input&gt;&gt;::call (33 samples, 0.06%)</title><rect x="10.4" y="1541" width="0.7" height="15.0" fill="rgb(212,77,17)" rx="2" ry="2" />
<text  x="13.40" y="1551.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (5 samples, 0.01%)</title><rect x="1128.8" y="1045" width="0.1" height="15.0" fill="rgb(212,42,43)" rx="2" ry="2" />
<text  x="1131.80" y="1055.5" ></text>
</g>
<g >
<title>hyper::client::Client$LT$C$C$B$GT$::send_request::_$u7b$$u7b$closure$u7d$$u7d$::h293c74bdbc0b0cee (32 samples, 0.06%)</title><rect x="1021.2" y="1525" width="0.7" height="15.0" fill="rgb(213,37,41)" rx="2" ry="2" />
<text  x="1024.20" y="1535.5" ></text>
</g>
<g >
<title>crossbeam_epoch::epoch::AtomicEpoch::load (49 samples, 0.09%)</title><rect x="1185.1" y="901" width="1.1" height="15.0" fill="rgb(240,223,35)" rx="2" ry="2" />
<text  x="1188.14" y="911.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (5 samples, 0.01%)</title><rect x="11.1" y="1381" width="0.1" height="15.0" fill="rgb(247,195,38)" rx="2" ry="2" />
<text  x="14.10" y="1391.5" ></text>
</g>
<g >
<title>noria::view::SyncView::lookup::_$u7b$$u7b$closure$u7d$$u7d$::h339f90ccab48f6ba (15 samples, 0.03%)</title><rect x="194.7" y="1573" width="0.3" height="15.0" fill="rgb(228,199,32)" rx="2" ry="2" />
<text  x="197.71" y="1583.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (13 samples, 0.02%)</title><rect x="1033.4" y="1157" width="0.3" height="15.0" fill="rgb(232,197,40)" rx="2" ry="2" />
<text  x="1036.41" y="1167.5" ></text>
</g>
<g >
<title>core::alloc::Layout::size (12 samples, 0.02%)</title><rect x="803.9" y="1061" width="0.3" height="15.0" fill="rgb(244,75,32)" rx="2" ry="2" />
<text  x="806.92" y="1071.5" ></text>
</g>
<g >
<title>core::mem::swap (11 samples, 0.02%)</title><rect x="578.6" y="1061" width="0.3" height="15.0" fill="rgb(240,197,14)" rx="2" ry="2" />
<text  x="581.62" y="1071.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::poll_complete (21 samples, 0.04%)</title><rect x="1057.1" y="1253" width="0.5" height="15.0" fill="rgb(237,228,3)" rx="2" ry="2" />
<text  x="1060.15" y="1263.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="194.4" y="1301" width="0.1" height="15.0" fill="rgb(207,205,34)" rx="2" ry="2" />
<text  x="197.39" y="1311.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (33 samples, 0.06%)</title><rect x="1035.2" y="1445" width="0.7" height="15.0" fill="rgb(213,22,54)" rx="2" ry="2" />
<text  x="1038.19" y="1455.5" ></text>
</g>
<g >
<title>tcache_alloc_small (18 samples, 0.03%)</title><rect x="1016.2" y="1493" width="0.4" height="15.0" fill="rgb(246,88,19)" rx="2" ry="2" />
<text  x="1019.20" y="1503.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::TryFrom&lt;U&gt;&gt;::try_from (6 samples, 0.01%)</title><rect x="1112.4" y="869" width="0.1" height="15.0" fill="rgb(224,151,22)" rx="2" ry="2" />
<text  x="1115.40" y="879.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner$LT$T$GT$::set_tx_task::_$u7b$$u7b$closure$u7d$$u7d$::h64722360d023d1b0 (13 samples, 0.02%)</title><rect x="1013.8" y="1509" width="0.3" height="15.0" fill="rgb(249,59,11)" rx="2" ry="2" />
<text  x="1016.80" y="1519.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (144 samples, 0.26%)</title><rect x="1000.0" y="933" width="3.0" height="15.0" fill="rgb(234,119,36)" rx="2" ry="2" />
<text  x="1002.99" y="943.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::park (18 samples, 0.03%)</title><rect x="192.1" y="1285" width="0.4" height="15.0" fill="rgb(217,225,16)" rx="2" ry="2" />
<text  x="195.10" y="1295.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (26 samples, 0.05%)</title><rect x="1157.0" y="981" width="0.6" height="15.0" fill="rgb(227,76,35)" rx="2" ry="2" />
<text  x="1160.00" y="991.5" ></text>
</g>
<g >
<title>futures::future::Future::wait (13 samples, 0.02%)</title><rect x="200.6" y="1301" width="0.3" height="15.0" fill="rgb(219,6,12)" rx="2" ry="2" />
<text  x="203.61" y="1311.5" ></text>
</g>
<g >
<title>chan::select::Select::maybe_try_select (13 samples, 0.02%)</title><rect x="991.5" y="1573" width="0.3" height="15.0" fill="rgb(225,96,15)" rx="2" ry="2" />
<text  x="994.48" y="1583.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (20 samples, 0.04%)</title><rect x="826.7" y="1013" width="0.4" height="15.0" fill="rgb(254,215,11)" rx="2" ry="2" />
<text  x="829.67" y="1023.5" ></text>
</g>
<g >
<title>mio::poll::enqueue_with_wakeup (19 samples, 0.03%)</title><rect x="10.6" y="1125" width="0.4" height="15.0" fill="rgb(242,83,44)" rx="2" ry="2" />
<text  x="13.57" y="1135.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::worker::Worker&lt;T,Request&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1044.7" y="1461" width="0.1" height="15.0" fill="rgb(233,175,13)" rx="2" ry="2" />
<text  x="1047.67" y="1471.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (8 samples, 0.01%)</title><rect x="1037.8" y="1253" width="0.2" height="15.0" fill="rgb(229,205,2)" rx="2" ry="2" />
<text  x="1040.82" y="1263.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="999.6" y="837" width="0.2" height="15.0" fill="rgb(224,210,21)" rx="2" ry="2" />
<text  x="1002.65" y="847.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::as_mut_ptr (31 samples, 0.06%)</title><rect x="242.3" y="1285" width="0.7" height="15.0" fill="rgb(218,156,10)" rx="2" ry="2" />
<text  x="245.30" y="1295.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::worker::Worker&lt;T,Request&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="997.1" y="1429" width="0.1" height="15.0" fill="rgb(246,28,46)" rx="2" ry="2" />
<text  x="1000.06" y="1439.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::saturating_add (16 samples, 0.03%)</title><rect x="697.2" y="1269" width="0.4" height="15.0" fill="rgb(227,138,5)" rx="2" ry="2" />
<text  x="700.21" y="1279.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::service::Buffer&lt;T,Request&gt; as tower_service::Service&lt;Request&gt;&gt;::poll_ready (8 samples, 0.01%)</title><rect x="186.3" y="1381" width="0.2" height="15.0" fill="rgb(208,63,26)" rx="2" ry="2" />
<text  x="189.35" y="1391.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::remove (6 samples, 0.01%)</title><rect x="995.8" y="1509" width="0.1" height="15.0" fill="rgb(243,88,47)" rx="2" ry="2" />
<text  x="998.81" y="1519.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (33 samples, 0.06%)</title><rect x="1035.2" y="1333" width="0.7" height="15.0" fill="rgb(244,5,31)" rx="2" ry="2" />
<text  x="1038.19" y="1343.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (5 samples, 0.01%)</title><rect x="1022.3" y="1141" width="0.1" height="15.0" fill="rgb(221,1,4)" rx="2" ry="2" />
<text  x="1025.33" y="1151.5" ></text>
</g>
<g >
<title>mio::poll::AtomicState::load (8 samples, 0.01%)</title><rect x="1143.9" y="933" width="0.1" height="15.0" fill="rgb(253,141,29)" rx="2" ry="2" />
<text  x="1146.87" y="943.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (9 samples, 0.02%)</title><rect x="1025.4" y="805" width="0.2" height="15.0" fill="rgb(235,0,3)" rx="2" ry="2" />
<text  x="1028.43" y="815.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (32 samples, 0.06%)</title><rect x="1031.8" y="1189" width="0.7" height="15.0" fill="rgb(205,180,23)" rx="2" ry="2" />
<text  x="1034.79" y="1199.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::into_val_slice (318 samples, 0.57%)</title><rect x="765.0" y="1157" width="6.8" height="15.0" fill="rgb(211,1,7)" rx="2" ry="2" />
<text  x="768.01" y="1167.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (5 samples, 0.01%)</title><rect x="1129.0" y="997" width="0.1" height="15.0" fill="rgb(223,132,50)" rx="2" ry="2" />
<text  x="1132.04" y="1007.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (96 samples, 0.17%)</title><rect x="233.7" y="1301" width="2.0" height="15.0" fill="rgb(217,21,20)" rx="2" ry="2" />
<text  x="236.69" y="1311.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (9 samples, 0.02%)</title><rect x="1051.4" y="1189" width="0.2" height="15.0" fill="rgb(222,96,44)" rx="2" ry="2" />
<text  x="1054.38" y="1199.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (29 samples, 0.05%)</title><rect x="1150.4" y="597" width="0.6" height="15.0" fill="rgb(238,184,8)" rx="2" ry="2" />
<text  x="1153.43" y="607.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::TableOperation&gt;::serialize (5 samples, 0.01%)</title><rect x="1022.3" y="1189" width="0.1" height="15.0" fill="rgb(225,148,10)" rx="2" ry="2" />
<text  x="1025.33" y="1199.5" ></text>
</g>
<g >
<title>core::fmt::write (32 samples, 0.06%)</title><rect x="983.3" y="1237" width="0.6" height="15.0" fill="rgb(226,185,13)" rx="2" ry="2" />
<text  x="986.27" y="1247.5" ></text>
</g>
<g >
<title>__libc_write (22 samples, 0.04%)</title><rect x="1024.0" y="1013" width="0.5" height="15.0" fill="rgb(213,202,45)" rx="2" ry="2" />
<text  x="1027.01" y="1023.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="1033.2" y="1093" width="0.2" height="15.0" fill="rgb(243,90,45)" rx="2" ry="2" />
<text  x="1036.24" y="1103.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="189.0" y="1269" width="0.2" height="15.0" fill="rgb(214,84,1)" rx="2" ry="2" />
<text  x="192.02" y="1279.5" ></text>
</g>
<g >
<title>time::now (8 samples, 0.01%)</title><rect x="978.4" y="1205" width="0.1" height="15.0" fill="rgb(212,169,50)" rx="2" ry="2" />
<text  x="981.36" y="1215.5" ></text>
</g>
<g >
<title>alloc::str::join_generic_copy (27 samples, 0.05%)</title><rect x="197.7" y="1253" width="0.6" height="15.0" fill="rgb(214,47,20)" rx="2" ry="2" />
<text  x="200.72" y="1263.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="198.7" y="1221" width="0.2" height="15.0" fill="rgb(253,111,2)" rx="2" ry="2" />
<text  x="201.74" y="1231.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (7 samples, 0.01%)</title><rect x="1034.2" y="1365" width="0.1" height="15.0" fill="rgb(254,148,32)" rx="2" ry="2" />
<text  x="1037.19" y="1375.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (220 samples, 0.40%)</title><rect x="1130.7" y="885" width="4.7" height="15.0" fill="rgb(232,148,52)" rx="2" ry="2" />
<text  x="1133.74" y="895.5" ></text>
</g>
<g >
<title>std::panicking::try (399 samples, 0.72%)</title><rect x="977.3" y="1477" width="8.5" height="15.0" fill="rgb(253,131,0)" rx="2" ry="2" />
<text  x="980.30" y="1487.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (7 samples, 0.01%)</title><rect x="1056.7" y="1461" width="0.2" height="15.0" fill="rgb(225,186,49)" rx="2" ry="2" />
<text  x="1059.70" y="1471.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.01%)</title><rect x="1026.2" y="1093" width="0.1" height="15.0" fill="rgb(242,124,38)" rx="2" ry="2" />
<text  x="1029.19" y="1103.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (49 samples, 0.09%)</title><rect x="1053.2" y="1237" width="1.1" height="15.0" fill="rgb(216,164,33)" rx="2" ry="2" />
<text  x="1056.24" y="1247.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::get (44 samples, 0.08%)</title><rect x="822.1" y="1093" width="0.9" height="15.0" fill="rgb(237,21,2)" rx="2" ry="2" />
<text  x="825.09" y="1103.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (9 samples, 0.02%)</title><rect x="1025.8" y="1445" width="0.2" height="15.0" fill="rgb(249,188,13)" rx="2" ry="2" />
<text  x="1028.79" y="1455.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (11 samples, 0.02%)</title><rect x="1045.6" y="1013" width="0.2" height="15.0" fill="rgb(219,157,29)" rx="2" ry="2" />
<text  x="1048.56" y="1023.5" ></text>
</g>
<g >
<title>&lt;tokio_tcp::stream::TcpStream as std::io::Read&gt;::read (17 samples, 0.03%)</title><rect x="1031.3" y="965" width="0.4" height="15.0" fill="rgb(251,32,30)" rx="2" ry="2" />
<text  x="1034.30" y="975.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (5 samples, 0.01%)</title><rect x="1021.0" y="1477" width="0.1" height="15.0" fill="rgb(236,103,30)" rx="2" ry="2" />
<text  x="1024.01" y="1487.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (12 samples, 0.02%)</title><rect x="1036.7" y="1125" width="0.2" height="15.0" fill="rgb(231,38,22)" rx="2" ry="2" />
<text  x="1039.65" y="1135.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.02%)</title><rect x="200.4" y="1285" width="0.2" height="15.0" fill="rgb(249,4,44)" rx="2" ry="2" />
<text  x="203.38" y="1295.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (22 samples, 0.04%)</title><rect x="1024.0" y="1029" width="0.5" height="15.0" fill="rgb(230,5,53)" rx="2" ry="2" />
<text  x="1027.01" y="1039.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (64 samples, 0.12%)</title><rect x="750.2" y="1173" width="1.4" height="15.0" fill="rgb(242,64,42)" rx="2" ry="2" />
<text  x="753.20" y="1183.5" ></text>
</g>
<g >
<title>tokio_tower::mediator::Receiver&lt;T&gt;::try_recv (33 samples, 0.06%)</title><rect x="1047.1" y="1317" width="0.7" height="15.0" fill="rgb(218,141,28)" rx="2" ry="2" />
<text  x="1050.11" y="1327.5" ></text>
</g>
<g >
<title>__netif_receive_skb (19 samples, 0.03%)</title><rect x="1039.0" y="405" width="0.5" height="15.0" fill="rgb(205,140,14)" rx="2" ry="2" />
<text  x="1042.05" y="415.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::cast (55 samples, 0.10%)</title><rect x="735.8" y="1253" width="1.2" height="15.0" fill="rgb(245,0,53)" rx="2" ry="2" />
<text  x="738.81" y="1263.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (12 samples, 0.02%)</title><rect x="1005.5" y="1397" width="0.3" height="15.0" fill="rgb(251,221,45)" rx="2" ry="2" />
<text  x="1008.50" y="1407.5" ></text>
</g>
<g >
<title>core::mem::swap (642 samples, 1.15%)</title><rect x="492.6" y="1237" width="13.6" height="15.0" fill="rgb(220,200,52)" rx="2" ry="2" />
<text  x="495.58" y="1247.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::saturating_mul (5 samples, 0.01%)</title><rect x="1125.0" y="853" width="0.1" height="15.0" fill="rgb(241,74,0)" rx="2" ry="2" />
<text  x="1128.01" y="863.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (6 samples, 0.01%)</title><rect x="1033.7" y="1205" width="0.1" height="15.0" fill="rgb(242,223,48)" rx="2" ry="2" />
<text  x="1036.68" y="1215.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.02%)</title><rect x="192.3" y="1173" width="0.2" height="15.0" fill="rgb(227,131,39)" rx="2" ry="2" />
<text  x="195.27" y="1183.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (136 samples, 0.24%)</title><rect x="1044.9" y="1333" width="2.9" height="15.0" fill="rgb(232,119,9)" rx="2" ry="2" />
<text  x="1047.93" y="1343.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::dequeue_node (40 samples, 0.07%)</title><rect x="1076.4" y="885" width="0.8" height="15.0" fill="rgb(244,62,41)" rx="2" ry="2" />
<text  x="1079.37" y="895.5" ></text>
</g>
<g >
<title>core::alloc::Layout::size (6 samples, 0.01%)</title><rect x="863.8" y="1269" width="0.2" height="15.0" fill="rgb(225,212,38)" rx="2" ry="2" />
<text  x="866.82" y="1279.5" ></text>
</g>
<g >
<title>__rg_dealloc (114 samples, 0.20%)</title><rect x="848.5" y="1109" width="2.4" height="15.0" fill="rgb(217,124,31)" rx="2" ry="2" />
<text  x="851.50" y="1119.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts_mut (49 samples, 0.09%)</title><rect x="361.4" y="1237" width="1.0" height="15.0" fill="rgb(238,161,37)" rx="2" ry="2" />
<text  x="364.40" y="1247.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (6 samples, 0.01%)</title><rect x="1008.1" y="1397" width="0.2" height="15.0" fill="rgb(209,200,0)" rx="2" ry="2" />
<text  x="1011.13" y="1407.5" ></text>
</g>
<g >
<title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::read_head (5 samples, 0.01%)</title><rect x="1025.0" y="1525" width="0.1" height="15.0" fill="rgb(231,220,54)" rx="2" ry="2" />
<text  x="1027.96" y="1535.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (19 samples, 0.03%)</title><rect x="200.2" y="1317" width="0.4" height="15.0" fill="rgb(216,148,50)" rx="2" ry="2" />
<text  x="203.18" y="1327.5" ></text>
</g>
<g >
<title>&lt;usize as core::ops::arith::AddAssign&gt;::add_assign (31 samples, 0.06%)</title><rect x="542.7" y="1221" width="0.7" height="15.0" fill="rgb(238,13,24)" rx="2" ry="2" />
<text  x="545.74" y="1231.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (29 samples, 0.05%)</title><rect x="203.9" y="1349" width="0.6" height="15.0" fill="rgb(235,40,52)" rx="2" ry="2" />
<text  x="206.92" y="1359.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="1025.6" y="773" width="0.2" height="15.0" fill="rgb(245,60,52)" rx="2" ry="2" />
<text  x="1028.62" y="783.5" ></text>
</g>
<g >
<title>__ip_local_out (5 samples, 0.01%)</title><rect x="1038.8" y="549" width="0.1" height="15.0" fill="rgb(212,55,10)" rx="2" ry="2" />
<text  x="1041.84" y="559.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::Handle as tokio_executor::park::Unpark&gt;::unpark (15 samples, 0.03%)</title><rect x="1073.1" y="997" width="0.3" height="15.0" fill="rgb(212,56,38)" rx="2" ry="2" />
<text  x="1076.06" y="1007.5" ></text>
</g>
<g >
<title>&lt;futures::stream::concat::Concat2&lt;S&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1041.1" y="709" width="0.1" height="15.0" fill="rgb(230,111,46)" rx="2" ry="2" />
<text  x="1044.09" y="719.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::future::ResponseFuture&lt;T&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1025.6" y="661" width="0.1" height="15.0" fill="rgb(231,208,52)" rx="2" ry="2" />
<text  x="1028.62" y="671.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (19 samples, 0.03%)</title><rect x="1045.8" y="997" width="0.4" height="15.0" fill="rgb(207,137,11)" rx="2" ry="2" />
<text  x="1048.80" y="1007.5" ></text>
</g>
<g >
<title>tokio_timer::wheel::Wheel&lt;T&gt;::next_expiration (132 samples, 0.24%)</title><rect x="1116.3" y="981" width="2.8" height="15.0" fill="rgb(224,59,22)" rx="2" ry="2" />
<text  x="1119.29" y="991.5" ></text>
</g>
<g >
<title>futures::task_impl::std::BorrowedUnpark::to_owned (6 samples, 0.01%)</title><rect x="183.0" y="1365" width="0.1" height="15.0" fill="rgb(229,216,20)" rx="2" ry="2" />
<text  x="185.95" y="1375.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.02%)</title><rect x="1047.6" y="1141" width="0.2" height="15.0" fill="rgb(234,99,35)" rx="2" ry="2" />
<text  x="1050.56" y="1151.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::get (6 samples, 0.01%)</title><rect x="803.8" y="1045" width="0.1" height="15.0" fill="rgb(233,30,7)" rx="2" ry="2" />
<text  x="806.80" y="1055.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (28 samples, 0.05%)</title><rect x="185.2" y="981" width="0.6" height="15.0" fill="rgb(233,44,23)" rx="2" ry="2" />
<text  x="188.23" y="991.5" ></text>
</g>
<g >
<title>tokio_tower::mediator::Sender&lt;T&gt;::try_send (47 samples, 0.08%)</title><rect x="1048.0" y="1269" width="1.0" height="15.0" fill="rgb(225,28,52)" rx="2" ry="2" />
<text  x="1050.96" y="1279.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple (144 samples, 0.26%)</title><rect x="1000.0" y="885" width="3.0" height="15.0" fill="rgb(207,70,52)" rx="2" ry="2" />
<text  x="1002.99" y="895.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.01%)</title><rect x="1045.6" y="853" width="0.2" height="15.0" fill="rgb(244,190,3)" rx="2" ry="2" />
<text  x="1048.61" y="863.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (35 samples, 0.06%)</title><rect x="1147.4" y="1013" width="0.7" height="15.0" fill="rgb(250,52,19)" rx="2" ry="2" />
<text  x="1150.35" y="1023.5" ></text>
</g>
<g >
<title>rand::Rng::gen (1,537 samples, 2.76%)</title><rect x="570.1" y="1205" width="32.6" height="15.0" fill="rgb(228,95,40)" rx="2" ry="2" />
<text  x="573.11" y="1215.5" >ra..</text>
</g>
<g >
<title>__pthread_cond_signal (5 samples, 0.01%)</title><rect x="1044.1" y="789" width="0.1" height="15.0" fill="rgb(241,187,36)" rx="2" ry="2" />
<text  x="1047.12" y="799.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (7 samples, 0.01%)</title><rect x="1056.7" y="1349" width="0.2" height="15.0" fill="rgb(250,184,41)" rx="2" ry="2" />
<text  x="1059.70" y="1359.5" ></text>
</g>
<g >
<title>core::mem::replace (5 samples, 0.01%)</title><rect x="1056.0" y="1061" width="0.1" height="15.0" fill="rgb(243,24,5)" rx="2" ry="2" />
<text  x="1058.96" y="1071.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_once (5 samples, 0.01%)</title><rect x="1133.5" y="757" width="0.1" height="15.0" fill="rgb(222,79,54)" rx="2" ry="2" />
<text  x="1136.54" y="767.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (6 samples, 0.01%)</title><rect x="1049.7" y="997" width="0.2" height="15.0" fill="rgb(218,98,28)" rx="2" ry="2" />
<text  x="1052.74" y="1007.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::add (34 samples, 0.06%)</title><rect x="382.2" y="1253" width="0.7" height="15.0" fill="rgb(231,165,43)" rx="2" ry="2" />
<text  x="385.16" y="1263.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (8 samples, 0.01%)</title><rect x="1023.8" y="1461" width="0.1" height="15.0" fill="rgb(247,163,24)" rx="2" ry="2" />
<text  x="1026.77" y="1471.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="1026.6" y="917" width="0.2" height="15.0" fill="rgb(222,39,23)" rx="2" ry="2" />
<text  x="1029.64" y="927.5" ></text>
</g>
<g >
<title>async_bincode::reader::AsyncBincodeReader&lt;R,T&gt;::fill (8 samples, 0.01%)</title><rect x="1040.1" y="901" width="0.2" height="15.0" fill="rgb(251,147,39)" rx="2" ry="2" />
<text  x="1043.11" y="911.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (20 samples, 0.04%)</title><rect x="720.6" y="1253" width="0.5" height="15.0" fill="rgb(229,227,32)" rx="2" ry="2" />
<text  x="723.64" y="1263.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (32 samples, 0.06%)</title><rect x="1031.8" y="1093" width="0.7" height="15.0" fill="rgb(243,100,16)" rx="2" ry="2" />
<text  x="1034.79" y="1103.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (6,082 samples, 10.94%)</title><rect x="1060.7" y="1205" width="129.0" height="15.0" fill="rgb(233,125,10)" rx="2" ry="2" />
<text  x="1063.65" y="1215.5" >tokio::runtime::..</text>
</g>
<g >
<title>&lt;T as alloc::string::ToString&gt;::to_string (5 samples, 0.01%)</title><rect x="1022.3" y="1029" width="0.1" height="15.0" fill="rgb(246,57,19)" rx="2" ry="2" />
<text  x="1025.33" y="1039.5" ></text>
</g>
<g >
<title>std::panicking::try (118 samples, 0.21%)</title><rect x="1027.4" y="1589" width="2.5" height="15.0" fill="rgb(206,12,34)" rx="2" ry="2" />
<text  x="1030.44" y="1599.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (10 samples, 0.02%)</title><rect x="988.2" y="1141" width="0.2" height="15.0" fill="rgb(252,192,32)" rx="2" ry="2" />
<text  x="991.23" y="1151.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::decompose_data (8 samples, 0.01%)</title><rect x="1187.5" y="821" width="0.1" height="15.0" fill="rgb(232,109,15)" rx="2" ry="2" />
<text  x="1190.45" y="831.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="1019.8" y="1541" width="0.2" height="15.0" fill="rgb(227,164,49)" rx="2" ry="2" />
<text  x="1022.83" y="1551.5" ></text>
</g>
<g >
<title>std::time::Instant::now (10 samples, 0.02%)</title><rect x="1125.8" y="917" width="0.2" height="15.0" fill="rgb(222,3,44)" rx="2" ry="2" />
<text  x="1128.77" y="927.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (21 samples, 0.04%)</title><rect x="1026.2" y="1429" width="0.4" height="15.0" fill="rgb(251,17,30)" rx="2" ry="2" />
<text  x="1029.19" y="1439.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (17 samples, 0.03%)</title><rect x="1036.1" y="1365" width="0.4" height="15.0" fill="rgb(213,116,40)" rx="2" ry="2" />
<text  x="1039.12" y="1375.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (355 samples, 0.64%)</title><rect x="666.1" y="1205" width="7.5" height="15.0" fill="rgb(231,216,2)" rx="2" ry="2" />
<text  x="669.06" y="1215.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (55 samples, 0.10%)</title><rect x="704.9" y="1301" width="1.1" height="15.0" fill="rgb(211,188,5)" rx="2" ry="2" />
<text  x="707.85" y="1311.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="200.0" y="1317" width="0.1" height="15.0" fill="rgb(228,13,35)" rx="2" ry="2" />
<text  x="203.01" y="1327.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (22 samples, 0.04%)</title><rect x="182.2" y="1477" width="0.5" height="15.0" fill="rgb(233,147,4)" rx="2" ry="2" />
<text  x="185.21" y="1487.5" ></text>
</g>
<g >
<title>serde_json::de::from_trait (64 samples, 0.12%)</title><rect x="1151.3" y="597" width="1.3" height="15.0" fill="rgb(227,97,46)" rx="2" ry="2" />
<text  x="1154.25" y="607.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::write_fmt (35 samples, 0.06%)</title><rect x="998.8" y="965" width="0.7" height="15.0" fill="rgb(227,181,6)" rx="2" ry="2" />
<text  x="1001.78" y="975.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h1e333f0842b39e4b (22 samples, 0.04%)</title><rect x="1024.0" y="1301" width="0.5" height="15.0" fill="rgb(219,28,20)" rx="2" ry="2" />
<text  x="1027.01" y="1311.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (11 samples, 0.02%)</title><rect x="1034.3" y="1397" width="0.3" height="15.0" fill="rgb(217,32,29)" rx="2" ry="2" />
<text  x="1037.34" y="1407.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (18 samples, 0.03%)</title><rect x="1043.7" y="821" width="0.4" height="15.0" fill="rgb(215,88,52)" rx="2" ry="2" />
<text  x="1046.72" y="831.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::write_fmt (26 samples, 0.05%)</title><rect x="983.9" y="1253" width="0.6" height="15.0" fill="rgb(238,15,30)" rx="2" ry="2" />
<text  x="986.94" y="1263.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (174 samples, 0.31%)</title><rect x="1053.0" y="1333" width="3.7" height="15.0" fill="rgb(245,156,3)" rx="2" ry="2" />
<text  x="1056.01" y="1343.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::DataType&gt;::serialize (5 samples, 0.01%)</title><rect x="1053.8" y="997" width="0.1" height="15.0" fill="rgb(208,218,20)" rx="2" ry="2" />
<text  x="1056.78" y="1007.5" ></text>
</g>
<g >
<title>bincode::internal::deserialize (7 samples, 0.01%)</title><rect x="1022.5" y="1397" width="0.1" height="15.0" fill="rgb(217,105,16)" rx="2" ry="2" />
<text  x="1025.48" y="1407.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.01%)</title><rect x="1057.7" y="1061" width="0.1" height="15.0" fill="rgb(228,40,16)" rx="2" ry="2" />
<text  x="1060.68" y="1071.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.02%)</title><rect x="988.5" y="1093" width="0.2" height="15.0" fill="rgb(239,31,42)" rx="2" ry="2" />
<text  x="991.46" y="1103.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (13 samples, 0.02%)</title><rect x="277.7" y="1221" width="0.3" height="15.0" fill="rgb(236,182,3)" rx="2" ry="2" />
<text  x="280.74" y="1231.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::signal_work (29 samples, 0.05%)</title><rect x="10.5" y="1253" width="0.6" height="15.0" fill="rgb(221,60,2)" rx="2" ry="2" />
<text  x="13.49" y="1263.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.03%)</title><rect x="1028.1" y="1173" width="0.3" height="15.0" fill="rgb(244,156,45)" rx="2" ry="2" />
<text  x="1031.06" y="1183.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (60 samples, 0.11%)</title><rect x="1014.2" y="1557" width="1.2" height="15.0" fill="rgb(247,105,47)" rx="2" ry="2" />
<text  x="1017.16" y="1567.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (10 samples, 0.02%)</title><rect x="1048.5" y="629" width="0.2" height="15.0" fill="rgb(244,29,1)" rx="2" ry="2" />
<text  x="1051.47" y="639.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (48 samples, 0.09%)</title><rect x="1034.9" y="1573" width="1.0" height="15.0" fill="rgb(238,196,5)" rx="2" ry="2" />
<text  x="1037.87" y="1583.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (380 samples, 0.68%)</title><rect x="385.9" y="1317" width="8.1" height="15.0" fill="rgb(245,31,2)" rx="2" ry="2" />
<text  x="388.91" y="1327.5" ></text>
</g>
<g >
<title>process_backlog (21 samples, 0.04%)</title><rect x="1042.0" y="421" width="0.5" height="15.0" fill="rgb(226,193,18)" rx="2" ry="2" />
<text  x="1045.02" y="431.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (19 samples, 0.03%)</title><rect x="1052.6" y="1493" width="0.4" height="15.0" fill="rgb(245,189,46)" rx="2" ry="2" />
<text  x="1055.61" y="1503.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (6 samples, 0.01%)</title><rect x="1025.8" y="1301" width="0.1" height="15.0" fill="rgb(238,125,41)" rx="2" ry="2" />
<text  x="1028.79" y="1311.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (13 samples, 0.02%)</title><rect x="1026.6" y="1109" width="0.3" height="15.0" fill="rgb(209,35,3)" rx="2" ry="2" />
<text  x="1029.64" y="1119.5" ></text>
</g>
<g >
<title>&lt;futures::future::either::Either&lt;A,B&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="194.4" y="1349" width="0.1" height="15.0" fill="rgb(226,39,23)" rx="2" ry="2" />
<text  x="197.39" y="1359.5" ></text>
</g>
<g >
<title>imalloc_body (24 samples, 0.04%)</title><rect x="990.0" y="1573" width="0.5" height="15.0" fill="rgb(207,130,33)" rx="2" ry="2" />
<text  x="992.99" y="1583.5" ></text>
</g>
<g >
<title>hyper::client::dispatch::Sender&lt;T,U&gt;::try_send (6 samples, 0.01%)</title><rect x="1024.8" y="1541" width="0.1" height="15.0" fill="rgb(220,188,6)" rx="2" ry="2" />
<text  x="1027.79" y="1551.5" ></text>
</g>
<g >
<title>core::sync::atomic::compiler_fence (12 samples, 0.02%)</title><rect x="1182.4" y="901" width="0.2" height="15.0" fill="rgb(211,105,6)" rx="2" ry="2" />
<text  x="1185.38" y="911.5" ></text>
</g>
<g >
<title>std::sync::once::Once::is_completed (5 samples, 0.01%)</title><rect x="193.2" y="1189" width="0.1" height="15.0" fill="rgb(254,211,23)" rx="2" ry="2" />
<text  x="196.20" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (20 samples, 0.04%)</title><rect x="1029.0" y="949" width="0.4" height="15.0" fill="rgb(233,115,35)" rx="2" ry="2" />
<text  x="1031.97" y="959.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (39 samples, 0.07%)</title><rect x="805.7" y="1093" width="0.9" height="15.0" fill="rgb(223,220,50)" rx="2" ry="2" />
<text  x="808.73" y="1103.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 0.03%)</title><rect x="1045.2" y="1109" width="0.4" height="15.0" fill="rgb(250,80,11)" rx="2" ry="2" />
<text  x="1048.22" y="1119.5" ></text>
</g>
<g >
<title>crossbeam_deque::Worker&lt;T&gt;::pop (57 samples, 0.10%)</title><rect x="1135.8" y="1029" width="1.2" height="15.0" fill="rgb(246,96,27)" rx="2" ry="2" />
<text  x="1138.83" y="1039.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (5 samples, 0.01%)</title><rect x="198.0" y="1125" width="0.1" height="15.0" fill="rgb(234,43,38)" rx="2" ry="2" />
<text  x="201.02" y="1135.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (5 samples, 0.01%)</title><rect x="1069.9" y="1045" width="0.1" height="15.0" fill="rgb(231,122,23)" rx="2" ry="2" />
<text  x="1072.92" y="1055.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (14 samples, 0.03%)</title><rect x="1030.5" y="853" width="0.3" height="15.0" fill="rgb(228,222,25)" rx="2" ry="2" />
<text  x="1033.48" y="863.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (20 samples, 0.04%)</title><rect x="1042.0" y="309" width="0.5" height="15.0" fill="rgb(221,129,44)" rx="2" ry="2" />
<text  x="1045.04" y="319.5" ></text>
</g>
<g >
<title>&lt;tower_balance::p2c::service::Balance&lt;D,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (9 samples, 0.02%)</title><rect x="1025.4" y="741" width="0.2" height="15.0" fill="rgb(215,134,4)" rx="2" ry="2" />
<text  x="1028.43" y="751.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (7 samples, 0.01%)</title><rect x="1030.3" y="1285" width="0.2" height="15.0" fill="rgb(214,208,48)" rx="2" ry="2" />
<text  x="1033.33" y="1295.5" ></text>
</g>
<g >
<title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive (5 samples, 0.01%)</title><rect x="1031.0" y="693" width="0.2" height="15.0" fill="rgb(251,178,28)" rx="2" ry="2" />
<text  x="1034.05" y="703.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (6 samples, 0.01%)</title><rect x="1067.7" y="1013" width="0.2" height="15.0" fill="rgb(215,129,0)" rx="2" ry="2" />
<text  x="1070.74" y="1023.5" ></text>
</g>
<g >
<title>zookeeper::io::ZkIo::ready (66 samples, 0.12%)</title><rect x="993.9" y="1349" width="1.4" height="15.0" fill="rgb(239,5,30)" rx="2" ry="2" />
<text  x="996.92" y="1359.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (29 samples, 0.05%)</title><rect x="1031.2" y="1141" width="0.6" height="15.0" fill="rgb(221,161,12)" rx="2" ry="2" />
<text  x="1034.18" y="1151.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (5 samples, 0.01%)</title><rect x="186.0" y="1477" width="0.1" height="15.0" fill="rgb(227,216,1)" rx="2" ry="2" />
<text  x="189.03" y="1487.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (9 samples, 0.02%)</title><rect x="998.9" y="821" width="0.2" height="15.0" fill="rgb(234,31,34)" rx="2" ry="2" />
<text  x="1001.86" y="831.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::TableOperation&gt;::serialize (16 samples, 0.03%)</title><rect x="1045.2" y="1029" width="0.4" height="15.0" fill="rgb(238,45,17)" rx="2" ry="2" />
<text  x="1048.22" y="1039.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="194.1" y="1317" width="0.2" height="15.0" fill="rgb(211,204,54)" rx="2" ry="2" />
<text  x="197.07" y="1327.5" ></text>
</g>
<g >
<title>vfs_write (5 samples, 0.01%)</title><rect x="984.1" y="1077" width="0.1" height="15.0" fill="rgb(211,36,7)" rx="2" ry="2" />
<text  x="987.09" y="1087.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::stack::Stack::pop (12 samples, 0.02%)</title><rect x="1146.5" y="1029" width="0.3" height="15.0" fill="rgb(242,26,46)" rx="2" ry="2" />
<text  x="1149.54" y="1039.5" ></text>
</g>
<g >
<title>_rjem_mallocx (5 samples, 0.01%)</title><rect x="276.9" y="1205" width="0.1" height="15.0" fill="rgb(228,41,24)" rx="2" ry="2" />
<text  x="279.93" y="1215.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (35 samples, 0.06%)</title><rect x="1051.9" y="1541" width="0.7" height="15.0" fill="rgb(248,16,28)" rx="2" ry="2" />
<text  x="1054.87" y="1551.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1023.8" y="1173" width="0.1" height="15.0" fill="rgb(218,5,42)" rx="2" ry="2" />
<text  x="1026.81" y="1183.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::get (65 samples, 0.12%)</title><rect x="810.8" y="1093" width="1.4" height="15.0" fill="rgb(249,144,29)" rx="2" ry="2" />
<text  x="813.82" y="1103.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (75 samples, 0.13%)</title><rect x="472.9" y="1237" width="1.6" height="15.0" fill="rgb(230,220,33)" rx="2" ry="2" />
<text  x="475.89" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (21 samples, 0.04%)</title><rect x="1033.2" y="1381" width="0.5" height="15.0" fill="rgb(218,13,52)" rx="2" ry="2" />
<text  x="1036.24" y="1391.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (31 samples, 0.06%)</title><rect x="571.3" y="1125" width="0.7" height="15.0" fill="rgb(235,69,24)" rx="2" ry="2" />
<text  x="574.34" y="1135.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::h580292910721dddc (10 samples, 0.02%)</title><rect x="10.0" y="1557" width="0.2" height="15.0" fill="rgb(211,208,48)" rx="2" ry="2" />
<text  x="13.00" y="1567.5" ></text>
</g>
<g >
<title>core::ptr::read (5 samples, 0.01%)</title><rect x="1099.5" y="885" width="0.1" height="15.0" fill="rgb(247,14,16)" rx="2" ry="2" />
<text  x="1102.50" y="895.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (19 samples, 0.03%)</title><rect x="997.6" y="1221" width="0.4" height="15.0" fill="rgb(227,81,41)" rx="2" ry="2" />
<text  x="1000.61" y="1231.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.01%)</title><rect x="991.8" y="1493" width="0.1" height="15.0" fill="rgb(249,16,31)" rx="2" ry="2" />
<text  x="994.77" y="1503.5" ></text>
</g>
<g >
<title>noria::view::SyncView::lookup::_$u7b$$u7b$closure$u7d$$u7d$::h339f90ccab48f6ba (15 samples, 0.03%)</title><rect x="188.6" y="1541" width="0.4" height="15.0" fill="rgb(226,103,32)" rx="2" ry="2" />
<text  x="191.64" y="1551.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (27 samples, 0.05%)</title><rect x="1030.5" y="1093" width="0.5" height="15.0" fill="rgb(238,82,44)" rx="2" ry="2" />
<text  x="1033.48" y="1103.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (161 samples, 0.29%)</title><rect x="1150.4" y="773" width="3.4" height="15.0" fill="rgb(227,135,49)" rx="2" ry="2" />
<text  x="1153.43" y="783.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (284 samples, 0.51%)</title><rect x="1038.4" y="1541" width="6.0" height="15.0" fill="rgb(231,145,41)" rx="2" ry="2" />
<text  x="1041.41" y="1551.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (9 samples, 0.02%)</title><rect x="1026.0" y="1109" width="0.2" height="15.0" fill="rgb(216,191,50)" rx="2" ry="2" />
<text  x="1028.98" y="1119.5" ></text>
</g>
<g >
<title>tcache_alloc_small (16 samples, 0.03%)</title><rect x="990.0" y="1509" width="0.3" height="15.0" fill="rgb(212,47,54)" rx="2" ry="2" />
<text  x="992.99" y="1519.5" ></text>
</g>
<g >
<title>futures::future::Future::wait (5 samples, 0.01%)</title><rect x="192.7" y="1413" width="0.1" height="15.0" fill="rgb(252,33,42)" rx="2" ry="2" />
<text  x="195.69" y="1423.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (11 samples, 0.02%)</title><rect x="1035.9" y="1285" width="0.2" height="15.0" fill="rgb(223,115,28)" rx="2" ry="2" />
<text  x="1038.89" y="1295.5" ></text>
</g>
<g >
<title>hyper::client::Client$LT$C$C$B$GT$::send_request::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h9e1440cbeef7d56e (8 samples, 0.01%)</title><rect x="1020.4" y="1477" width="0.2" height="15.0" fill="rgb(245,129,21)" rx="2" ry="2" />
<text  x="1023.40" y="1487.5" ></text>
</g>
<g >
<title>indexmap::map::OrderMapCore&lt;K,V&gt;::swap_remove_found_impl (8 samples, 0.01%)</title><rect x="1132.5" y="693" width="0.2" height="15.0" fill="rgb(211,181,24)" rx="2" ry="2" />
<text  x="1135.54" y="703.5" ></text>
</g>
<g >
<title>tokio_timer::wheel::level::Level&lt;T&gt;::next_occupied_slot (5 samples, 0.01%)</title><rect x="1127.1" y="949" width="0.1" height="15.0" fill="rgb(245,12,49)" rx="2" ry="2" />
<text  x="1130.11" y="959.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (9 samples, 0.02%)</title><rect x="734.3" y="1221" width="0.2" height="15.0" fill="rgb(237,161,35)" rx="2" ry="2" />
<text  x="737.33" y="1231.5" ></text>
</g>
<g >
<title>&lt;tower_balance::p2c::service::Balance&lt;D,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (10 samples, 0.02%)</title><rect x="1029.2" y="853" width="0.2" height="15.0" fill="rgb(208,34,49)" rx="2" ry="2" />
<text  x="1032.18" y="863.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8 samples, 0.01%)</title><rect x="1046.9" y="789" width="0.2" height="15.0" fill="rgb(232,26,27)" rx="2" ry="2" />
<text  x="1049.92" y="799.5" ></text>
</g>
<g >
<title>std::panicking::try (6 samples, 0.01%)</title><rect x="1034.6" y="1397" width="0.1" height="15.0" fill="rgb(233,90,13)" rx="2" ry="2" />
<text  x="1037.57" y="1407.5" ></text>
</g>
<g >
<title>&lt;tokio_sync::oneshot::Inner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="180.5" y="1125" width="0.1" height="15.0" fill="rgb(252,59,46)" rx="2" ry="2" />
<text  x="183.45" y="1135.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (97 samples, 0.17%)</title><rect x="1019.8" y="1589" width="2.1" height="15.0" fill="rgb(247,27,49)" rx="2" ry="2" />
<text  x="1022.83" y="1599.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll1 (795 samples, 1.43%)</title><rect x="1089.3" y="949" width="16.9" height="15.0" fill="rgb(238,132,49)" rx="2" ry="2" />
<text  x="1092.32" y="959.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (480 samples, 0.86%)</title><rect x="644.3" y="1189" width="10.2" height="15.0" fill="rgb(228,161,46)" rx="2" ry="2" />
<text  x="647.29" y="1199.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (6 samples, 0.01%)</title><rect x="1022.2" y="1221" width="0.1" height="15.0" fill="rgb(238,161,50)" rx="2" ry="2" />
<text  x="1025.20" y="1231.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (6,195 samples, 11.14%)</title><rect x="724.3" y="1301" width="131.5" height="15.0" fill="rgb(231,23,53)" rx="2" ry="2" />
<text  x="727.33" y="1311.5" >core::ptr::real_..</text>
</g>
<g >
<title>bincode::config::legacy::Config::serialize_into (8 samples, 0.01%)</title><rect x="1014.2" y="1301" width="0.1" height="15.0" fill="rgb(244,26,54)" rx="2" ry="2" />
<text  x="1017.16" y="1311.5" ></text>
</g>
<g >
<title>core::mem::drop (6,199 samples, 11.15%)</title><rect x="724.2" y="1317" width="131.6" height="15.0" fill="rgb(249,158,46)" rx="2" ry="2" />
<text  x="727.25" y="1327.5" >core::mem::drop</text>
</g>
<g >
<title>alloc::alloc::alloc (140 samples, 0.25%)</title><rect x="684.7" y="1205" width="3.0" height="15.0" fill="rgb(248,6,22)" rx="2" ry="2" />
<text  x="687.69" y="1215.5" ></text>
</g>
<g >
<title>__rg_alloc (92 samples, 0.17%)</title><rect x="227.6" y="1285" width="2.0" height="15.0" fill="rgb(238,56,16)" rx="2" ry="2" />
<text  x="230.62" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (9 samples, 0.02%)</title><rect x="1026.0" y="933" width="0.2" height="15.0" fill="rgb(248,138,47)" rx="2" ry="2" />
<text  x="1028.98" y="943.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (18 samples, 0.03%)</title><rect x="1141.1" y="965" width="0.4" height="15.0" fill="rgb(214,122,32)" rx="2" ry="2" />
<text  x="1144.07" y="975.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (174 samples, 0.31%)</title><rect x="1053.0" y="1413" width="3.7" height="15.0" fill="rgb(243,50,50)" rx="2" ry="2" />
<text  x="1056.01" y="1423.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (6 samples, 0.01%)</title><rect x="194.1" y="1221" width="0.1" height="15.0" fill="rgb(242,208,41)" rx="2" ry="2" />
<text  x="197.12" y="1231.5" ></text>
</g>
<g >
<title>ip_finish_output2 (28 samples, 0.05%)</title><rect x="1050.3" y="581" width="0.6" height="15.0" fill="rgb(225,25,54)" rx="2" ry="2" />
<text  x="1053.34" y="591.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_enum (24 samples, 0.04%)</title><rect x="1046.6" y="965" width="0.5" height="15.0" fill="rgb(245,98,19)" rx="2" ry="2" />
<text  x="1049.60" y="975.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (35 samples, 0.06%)</title><rect x="1051.9" y="1381" width="0.7" height="15.0" fill="rgb(206,89,43)" rx="2" ry="2" />
<text  x="1054.87" y="1391.5" ></text>
</g>
<g >
<title>bincode::config::legacy::Config::serialize_into (7 samples, 0.01%)</title><rect x="1022.2" y="1413" width="0.1" height="15.0" fill="rgb(207,30,26)" rx="2" ry="2" />
<text  x="1025.18" y="1423.5" ></text>
</g>
<g >
<title>futures::task_impl::std::&lt;impl futures::task_impl::Spawn&lt;F&gt;&gt;::wait_future (17 samples, 0.03%)</title><rect x="189.0" y="1557" width="0.4" height="15.0" fill="rgb(208,49,15)" rx="2" ry="2" />
<text  x="192.02" y="1567.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (21 samples, 0.04%)</title><rect x="1033.2" y="1413" width="0.5" height="15.0" fill="rgb(234,165,37)" rx="2" ry="2" />
<text  x="1036.24" y="1423.5" ></text>
</g>
<g >
<title>tsd_reentrancy_levelp_get_unsafe (35 samples, 0.06%)</title><rect x="68.9" y="1477" width="0.8" height="15.0" fill="rgb(231,214,6)" rx="2" ry="2" />
<text  x="71.92" y="1487.5" ></text>
</g>
<g >
<title>__vfs_read (45 samples, 0.08%)</title><rect x="1096.2" y="757" width="1.0" height="15.0" fill="rgb(239,28,28)" rx="2" ry="2" />
<text  x="1099.21" y="767.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (5 samples, 0.01%)</title><rect x="1044.8" y="1269" width="0.1" height="15.0" fill="rgb(214,140,28)" rx="2" ry="2" />
<text  x="1047.82" y="1279.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (177 samples, 0.32%)</title><rect x="1166.0" y="981" width="3.8" height="15.0" fill="rgb(216,44,31)" rx="2" ry="2" />
<text  x="1169.02" y="991.5" ></text>
</g>
<g >
<title>tokio_sync::task::atomic_task::AtomicTask::take_task (23 samples, 0.04%)</title><rect x="1110.2" y="949" width="0.4" height="15.0" fill="rgb(228,115,35)" rx="2" ry="2" />
<text  x="1113.15" y="959.5" ></text>
</g>
<g >
<title>futures::task_impl::with (15 samples, 0.03%)</title><rect x="1058.7" y="1221" width="0.3" height="15.0" fill="rgb(224,47,26)" rx="2" ry="2" />
<text  x="1061.72" y="1231.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (13 samples, 0.02%)</title><rect x="1026.6" y="1157" width="0.3" height="15.0" fill="rgb(249,15,40)" rx="2" ry="2" />
<text  x="1029.64" y="1167.5" ></text>
</g>
<g >
<title>async_bincode::reader::AsyncBincodeReader&lt;R,T&gt;::fill (5 samples, 0.01%)</title><rect x="1052.3" y="1189" width="0.1" height="15.0" fill="rgb(220,102,26)" rx="2" ry="2" />
<text  x="1055.33" y="1199.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (6 samples, 0.01%)</title><rect x="982.6" y="1221" width="0.1" height="15.0" fill="rgb(219,78,48)" rx="2" ry="2" />
<text  x="985.59" y="1231.5" ></text>
</g>
<g >
<title>__vfs_write (5 samples, 0.01%)</title><rect x="984.1" y="1061" width="0.1" height="15.0" fill="rgb(254,198,5)" rx="2" ry="2" />
<text  x="987.09" y="1071.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (19 samples, 0.03%)</title><rect x="1052.6" y="1381" width="0.4" height="15.0" fill="rgb(246,75,42)" rx="2" ry="2" />
<text  x="1055.61" y="1391.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (6 samples, 0.01%)</title><rect x="1031.2" y="1045" width="0.1" height="15.0" fill="rgb(221,65,16)" rx="2" ry="2" />
<text  x="1034.18" y="1055.5" ></text>
</g>
<g >
<title>futures::task_impl::core::BorrowedUnpark::to_owned (10 samples, 0.02%)</title><rect x="1013.8" y="1429" width="0.3" height="15.0" fill="rgb(219,98,36)" rx="2" ry="2" />
<text  x="1016.84" y="1439.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (29 samples, 0.05%)</title><rect x="1031.2" y="1365" width="0.6" height="15.0" fill="rgb(211,165,49)" rx="2" ry="2" />
<text  x="1034.18" y="1375.5" ></text>
</g>
<g >
<title>rand::rand_impls::&lt;impl rand::Rand for u64&gt;::rand (1,537 samples, 2.76%)</title><rect x="570.1" y="1189" width="32.6" height="15.0" fill="rgb(227,153,46)" rx="2" ry="2" />
<text  x="573.11" y="1199.5" >ra..</text>
</g>
<g >
<title>arena_bin_nonfull_slab_get (5 samples, 0.01%)</title><rect x="1017.9" y="1445" width="0.1" height="15.0" fill="rgb(227,140,47)" rx="2" ry="2" />
<text  x="1020.89" y="1455.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="1035.9" y="1109" width="0.2" height="15.0" fill="rgb(250,145,13)" rx="2" ry="2" />
<text  x="1038.89" y="1119.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (5 samples, 0.01%)</title><rect x="1044.5" y="1077" width="0.1" height="15.0" fill="rgb(253,138,30)" rx="2" ry="2" />
<text  x="1047.48" y="1087.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (29 samples, 0.05%)</title><rect x="1031.2" y="1381" width="0.6" height="15.0" fill="rgb(226,10,32)" rx="2" ry="2" />
<text  x="1034.18" y="1391.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (7 samples, 0.01%)</title><rect x="194.4" y="1317" width="0.1" height="15.0" fill="rgb(244,42,45)" rx="2" ry="2" />
<text  x="197.39" y="1327.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::with_default (5 samples, 0.01%)</title><rect x="192.5" y="1429" width="0.1" height="15.0" fill="rgb(241,125,47)" rx="2" ry="2" />
<text  x="195.48" y="1439.5" ></text>
</g>
<g >
<title>futures::task_impl::std::tls_slot (6 samples, 0.01%)</title><rect x="1135.2" y="821" width="0.2" height="15.0" fill="rgb(228,36,47)" rx="2" ry="2" />
<text  x="1138.23" y="831.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::poll_complete (62 samples, 0.11%)</title><rect x="1038.5" y="949" width="1.3" height="15.0" fill="rgb(237,88,24)" rx="2" ry="2" />
<text  x="1041.48" y="959.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (10 samples, 0.02%)</title><rect x="1051.4" y="1445" width="0.2" height="15.0" fill="rgb(223,16,16)" rx="2" ry="2" />
<text  x="1054.38" y="1455.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (6 samples, 0.01%)</title><rect x="1031.0" y="1093" width="0.2" height="15.0" fill="rgb(238,145,2)" rx="2" ry="2" />
<text  x="1034.05" y="1103.5" ></text>
</g>
<g >
<title>futures::task_impl::core::BorrowedUnpark::to_owned (7 samples, 0.01%)</title><rect x="1013.6" y="1429" width="0.2" height="15.0" fill="rgb(238,184,25)" rx="2" ry="2" />
<text  x="1016.63" y="1439.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (9 samples, 0.02%)</title><rect x="1025.4" y="917" width="0.2" height="15.0" fill="rgb(254,63,51)" rx="2" ry="2" />
<text  x="1028.43" y="927.5" ></text>
</g>
<g >
<title>noria::view::View::multi_lookup::_$u7b$$u7b$closure$u7d$$u7d$::hfd25b5db07962f7a (8 samples, 0.01%)</title><rect x="189.2" y="1269" width="0.2" height="15.0" fill="rgb(214,23,36)" rx="2" ry="2" />
<text  x="192.21" y="1279.5" ></text>
</g>
<g >
<title>tokio_reactor::registration::Registration::take_write_ready (8 samples, 0.01%)</title><rect x="1051.9" y="1125" width="0.2" height="15.0" fill="rgb(225,104,26)" rx="2" ry="2" />
<text  x="1054.89" y="1135.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (5 samples, 0.01%)</title><rect x="1152.0" y="453" width="0.1" height="15.0" fill="rgb(222,96,41)" rx="2" ry="2" />
<text  x="1154.95" y="463.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.01%)</title><rect x="1023.8" y="1349" width="0.1" height="15.0" fill="rgb(225,135,8)" rx="2" ry="2" />
<text  x="1026.81" y="1359.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="190.9" y="1493" width="0.1" height="15.0" fill="rgb(234,41,30)" rx="2" ry="2" />
<text  x="193.93" y="1503.5" ></text>
</g>
<g >
<title>sz_index2size (98 samples, 0.18%)</title><rect x="75.2" y="1541" width="2.1" height="15.0" fill="rgb(251,28,45)" rx="2" ry="2" />
<text  x="78.21" y="1551.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.03%)</title><rect x="189.0" y="1509" width="0.4" height="15.0" fill="rgb(251,29,13)" rx="2" ry="2" />
<text  x="192.02" y="1519.5" ></text>
</g>
<g >
<title>gen::main::_$u7b$$u7b$closure$u7d$$u7d$::ha3f38d0bb5274a86 (8 samples, 0.01%)</title><rect x="193.9" y="1461" width="0.2" height="15.0" fill="rgb(219,129,19)" rx="2" ry="2" />
<text  x="196.90" y="1471.5" ></text>
</g>
<g >
<title>mio::poll::RegistrationInner::set_readiness (34 samples, 0.06%)</title><rect x="1108.3" y="661" width="0.7" height="15.0" fill="rgb(232,68,50)" rx="2" ry="2" />
<text  x="1111.31" y="671.5" ></text>
</g>
<g >
<title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="991.8" y="1573" width="0.1" height="15.0" fill="rgb(217,125,5)" rx="2" ry="2" />
<text  x="994.75" y="1583.5" ></text>
</g>
<g >
<title>&lt;noria::controller::_::&lt;impl serde::de::Deserialize for noria::controller::ControllerDescriptor&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (5 samples, 0.01%)</title><rect x="1005.0" y="1397" width="0.1" height="15.0" fill="rgb(252,224,25)" rx="2" ry="2" />
<text  x="1007.97" y="1407.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (20 samples, 0.04%)</title><rect x="1026.2" y="1413" width="0.4" height="15.0" fill="rgb(218,133,7)" rx="2" ry="2" />
<text  x="1029.19" y="1423.5" ></text>
</g>
<g >
<title>witness_assert_depth_to_rank (52 samples, 0.09%)</title><rect x="72.4" y="1509" width="1.2" height="15.0" fill="rgb(249,54,26)" rx="2" ry="2" />
<text  x="75.45" y="1519.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (19 samples, 0.03%)</title><rect x="1045.8" y="1045" width="0.4" height="15.0" fill="rgb(237,61,49)" rx="2" ry="2" />
<text  x="1048.80" y="1055.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="1036.5" y="1045" width="0.1" height="15.0" fill="rgb(226,163,27)" rx="2" ry="2" />
<text  x="1039.48" y="1055.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::TableOperation&gt;::serialize (5 samples, 0.01%)</title><rect x="1026.2" y="1077" width="0.1" height="15.0" fill="rgb(240,22,40)" rx="2" ry="2" />
<text  x="1029.19" y="1087.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (11 samples, 0.02%)</title><rect x="1034.0" y="1509" width="0.2" height="15.0" fill="rgb(245,184,15)" rx="2" ry="2" />
<text  x="1036.96" y="1519.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.01%)</title><rect x="180.5" y="1173" width="0.1" height="15.0" fill="rgb(216,182,46)" rx="2" ry="2" />
<text  x="183.45" y="1183.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (138 samples, 0.25%)</title><rect x="1094.6" y="853" width="2.9" height="15.0" fill="rgb(231,31,21)" rx="2" ry="2" />
<text  x="1097.60" y="863.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (315 samples, 0.57%)</title><rect x="647.8" y="1173" width="6.7" height="15.0" fill="rgb(245,191,9)" rx="2" ry="2" />
<text  x="650.80" y="1183.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (12 samples, 0.02%)</title><rect x="1025.1" y="1589" width="0.3" height="15.0" fill="rgb(228,54,38)" rx="2" ry="2" />
<text  x="1028.11" y="1599.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::worker::state::Lifecycle as core::convert::From&lt;usize&gt;&gt;::from (12 samples, 0.02%)</title><rect x="1068.3" y="1045" width="0.2" height="15.0" fill="rgb(214,115,17)" rx="2" ry="2" />
<text  x="1071.27" y="1055.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (25 samples, 0.04%)</title><rect x="1026.9" y="1045" width="0.5" height="15.0" fill="rgb(241,140,21)" rx="2" ry="2" />
<text  x="1029.91" y="1055.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::Task as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="1007.0" y="1477" width="0.1" height="15.0" fill="rgb(230,130,19)" rx="2" ry="2" />
<text  x="1010.03" y="1487.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::stream::Stream&gt;::poll (5 samples, 0.01%)</title><rect x="1033.5" y="1029" width="0.1" height="15.0" fill="rgb(229,137,29)" rx="2" ry="2" />
<text  x="1036.51" y="1039.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::is_none (43 samples, 0.08%)</title><rect x="419.2" y="1333" width="0.9" height="15.0" fill="rgb(248,128,50)" rx="2" ry="2" />
<text  x="422.23" y="1343.5" ></text>
</g>
<g >
<title>bincode::deserialize (144 samples, 0.26%)</title><rect x="1000.0" y="1525" width="3.0" height="15.0" fill="rgb(206,168,51)" rx="2" ry="2" />
<text  x="1002.99" y="1535.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::into_val_slice_mut (276 samples, 0.50%)</title><rect x="356.6" y="1269" width="5.8" height="15.0" fill="rgb(242,229,50)" rx="2" ry="2" />
<text  x="359.59" y="1279.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (5 samples, 0.01%)</title><rect x="1035.0" y="1125" width="0.1" height="15.0" fill="rgb(244,224,37)" rx="2" ry="2" />
<text  x="1037.95" y="1135.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::Clock::now (5 samples, 0.01%)</title><rect x="1126.2" y="981" width="0.1" height="15.0" fill="rgb(232,52,45)" rx="2" ry="2" />
<text  x="1129.22" y="991.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (190 samples, 0.34%)</title><rect x="211.0" y="1301" width="4.0" height="15.0" fill="rgb(250,116,41)" rx="2" ry="2" />
<text  x="213.98" y="1311.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::cloned (87 samples, 0.16%)</title><rect x="630.2" y="1317" width="1.9" height="15.0" fill="rgb(232,207,2)" rx="2" ry="2" />
<text  x="633.20" y="1327.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (12 samples, 0.02%)</title><rect x="1047.6" y="1285" width="0.2" height="15.0" fill="rgb(208,163,11)" rx="2" ry="2" />
<text  x="1050.56" y="1295.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (198 samples, 0.36%)</title><rect x="1158.6" y="1013" width="4.2" height="15.0" fill="rgb(213,8,32)" rx="2" ry="2" />
<text  x="1161.64" y="1023.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (93 samples, 0.17%)</title><rect x="1057.1" y="1365" width="2.0" height="15.0" fill="rgb(233,194,47)" rx="2" ry="2" />
<text  x="1060.09" y="1375.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (7 samples, 0.01%)</title><rect x="1027.6" y="997" width="0.1" height="15.0" fill="rgb(225,205,45)" rx="2" ry="2" />
<text  x="1030.59" y="1007.5" ></text>
</g>
<g >
<title>std::panicking::try (35 samples, 0.06%)</title><rect x="1051.9" y="1477" width="0.7" height="15.0" fill="rgb(207,192,24)" rx="2" ry="2" />
<text  x="1054.87" y="1487.5" ></text>
</g>
<g >
<title>core::fmt::Write::write_fmt (60 samples, 0.11%)</title><rect x="998.7" y="1109" width="1.3" height="15.0" fill="rgb(205,153,28)" rx="2" ry="2" />
<text  x="1001.71" y="1119.5" ></text>
</g>
<g >
<title>futures::task_impl::std::tls_slot (8 samples, 0.01%)</title><rect x="981.0" y="1125" width="0.2" height="15.0" fill="rgb(210,120,9)" rx="2" ry="2" />
<text  x="984.02" y="1135.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::write_fmt (15 samples, 0.03%)</title><rect x="999.6" y="965" width="0.3" height="15.0" fill="rgb(240,167,54)" rx="2" ry="2" />
<text  x="1002.60" y="975.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (158 samples, 0.28%)</title><rect x="1041.1" y="1205" width="3.3" height="15.0" fill="rgb(214,228,7)" rx="2" ry="2" />
<text  x="1044.09" y="1215.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.01%)</title><rect x="1022.3" y="1109" width="0.1" height="15.0" fill="rgb(247,123,24)" rx="2" ry="2" />
<text  x="1025.33" y="1119.5" ></text>
</g>
<g >
<title>core::fmt::write (10 samples, 0.02%)</title><rect x="997.7" y="933" width="0.2" height="15.0" fill="rgb(227,118,41)" rx="2" ry="2" />
<text  x="1000.69" y="943.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (12 samples, 0.02%)</title><rect x="1029.9" y="1125" width="0.3" height="15.0" fill="rgb(214,122,0)" rx="2" ry="2" />
<text  x="1032.95" y="1135.5" ></text>
</g>
<g >
<title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Add&lt;time::duration::Duration&gt;&gt;::add (9 samples, 0.02%)</title><rect x="978.1" y="1157" width="0.2" height="15.0" fill="rgb(250,14,49)" rx="2" ry="2" />
<text  x="981.11" y="1167.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::park::boxed::BoxedPark&lt;T&gt; as tokio_executor::park::Park&gt;::park (1,629 samples, 2.93%)</title><rect x="1086.2" y="1045" width="34.6" height="15.0" fill="rgb(251,142,2)" rx="2" ry="2" />
<text  x="1089.24" y="1055.5" >&lt;t..</text>
</g>
<g >
<title>bincode::config::legacy::Config::serialize_into (14 samples, 0.03%)</title><rect x="1027.4" y="1285" width="0.3" height="15.0" fill="rgb(208,57,3)" rx="2" ry="2" />
<text  x="1030.44" y="1295.5" ></text>
</g>
<g >
<title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1053.1" y="1301" width="0.1" height="15.0" fill="rgb(211,15,35)" rx="2" ry="2" />
<text  x="1056.05" y="1311.5" ></text>
</g>
<g >
<title>std::sys_common::condvar::Condvar::init (91 samples, 0.16%)</title><rect x="229.7" y="1317" width="1.9" height="15.0" fill="rgb(211,71,13)" rx="2" ry="2" />
<text  x="232.70" y="1327.5" ></text>
</g>
<g >
<title>mio::sys::unix::ready::UnixReady::is_priority (5 samples, 0.01%)</title><rect x="1093.4" y="869" width="0.1" height="15.0" fill="rgb(248,42,30)" rx="2" ry="2" />
<text  x="1096.43" y="879.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default::_$u7b$$u7b$closure$u7d$$u7d$::ha80fbdab9b554b03 (33 samples, 0.06%)</title><rect x="1030.5" y="1333" width="0.7" height="15.0" fill="rgb(240,186,14)" rx="2" ry="2" />
<text  x="1033.48" y="1343.5" ></text>
</g>
<g >
<title>crossbeam_epoch::internal::Local::is_pinned (45 samples, 0.08%)</title><rect x="1168.8" y="917" width="1.0" height="15.0" fill="rgb(243,21,37)" rx="2" ry="2" />
<text  x="1171.82" y="927.5" ></text>
</g>
<g >
<title>chan::Receiver&lt;T&gt;::inner (93 samples, 0.17%)</title><rect x="472.5" y="1253" width="2.0" height="15.0" fill="rgb(206,63,36)" rx="2" ry="2" />
<text  x="475.51" y="1263.5" ></text>
</g>
<g >
<title>core::ptr::swap (133 samples, 0.24%)</title><rect x="564.0" y="1269" width="2.8" height="15.0" fill="rgb(210,112,26)" rx="2" ry="2" />
<text  x="567.02" y="1279.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (8 samples, 0.01%)</title><rect x="1037.8" y="1429" width="0.2" height="15.0" fill="rgb(221,204,21)" rx="2" ry="2" />
<text  x="1040.82" y="1439.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (12 samples, 0.02%)</title><rect x="649.9" y="1125" width="0.2" height="15.0" fill="rgb(227,229,12)" rx="2" ry="2" />
<text  x="652.87" y="1135.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::pad_integral (14 samples, 0.03%)</title><rect x="983.6" y="1173" width="0.3" height="15.0" fill="rgb(251,210,27)" rx="2" ry="2" />
<text  x="986.65" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (49 samples, 0.09%)</title><rect x="894.6" y="1285" width="1.0" height="15.0" fill="rgb(224,150,51)" rx="2" ry="2" />
<text  x="897.59" y="1295.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (27 samples, 0.05%)</title><rect x="1030.5" y="1077" width="0.5" height="15.0" fill="rgb(225,38,39)" rx="2" ry="2" />
<text  x="1033.48" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (12 samples, 0.02%)</title><rect x="650.5" y="1109" width="0.2" height="15.0" fill="rgb(246,78,53)" rx="2" ry="2" />
<text  x="653.49" y="1119.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::io::Io as std::io::Write&gt;::write (22 samples, 0.04%)</title><rect x="1014.5" y="949" width="0.4" height="15.0" fill="rgb(220,27,37)" rx="2" ry="2" />
<text  x="1017.46" y="959.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (8 samples, 0.01%)</title><rect x="1025.6" y="965" width="0.2" height="15.0" fill="rgb(224,116,47)" rx="2" ry="2" />
<text  x="1028.62" y="975.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (7 samples, 0.01%)</title><rect x="1056.7" y="1397" width="0.2" height="15.0" fill="rgb(254,228,9)" rx="2" ry="2" />
<text  x="1059.70" y="1407.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (9 samples, 0.02%)</title><rect x="606.0" y="1253" width="0.2" height="15.0" fill="rgb(212,94,20)" rx="2" ry="2" />
<text  x="608.99" y="1263.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (17 samples, 0.03%)</title><rect x="1036.1" y="1253" width="0.4" height="15.0" fill="rgb(248,98,9)" rx="2" ry="2" />
<text  x="1039.12" y="1263.5" ></text>
</g>
<g >
<title>arena_bin_malloc_hard (5 samples, 0.01%)</title><rect x="1016.2" y="1445" width="0.1" height="15.0" fill="rgb(251,38,14)" rx="2" ry="2" />
<text  x="1019.20" y="1455.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current (5 samples, 0.01%)</title><rect x="986.3" y="1253" width="0.1" height="15.0" fill="rgb(253,141,37)" rx="2" ry="2" />
<text  x="989.26" y="1263.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::stream::Stream&gt;::poll (7 samples, 0.01%)</title><rect x="1060.0" y="1189" width="0.1" height="15.0" fill="rgb(231,200,46)" rx="2" ry="2" />
<text  x="1062.99" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (5 samples, 0.01%)</title><rect x="186.0" y="1573" width="0.1" height="15.0" fill="rgb(234,130,5)" rx="2" ry="2" />
<text  x="189.03" y="1583.5" ></text>
</g>
<g >
<title>__pthread_cond_wait (18 samples, 0.03%)</title><rect x="982.0" y="1125" width="0.4" height="15.0" fill="rgb(250,76,14)" rx="2" ry="2" />
<text  x="985.03" y="1135.5" ></text>
</g>
<g >
<title>tsd_fast (163 samples, 0.29%)</title><rect x="168.9" y="1573" width="3.4" height="15.0" fill="rgb(243,61,44)" rx="2" ry="2" />
<text  x="171.87" y="1583.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (9 samples, 0.02%)</title><rect x="652.1" y="1109" width="0.2" height="15.0" fill="rgb(249,80,54)" rx="2" ry="2" />
<text  x="655.10" y="1119.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h3d3457b86cb67885 (12 samples, 0.02%)</title><rect x="1029.9" y="1429" width="0.3" height="15.0" fill="rgb(236,139,43)" rx="2" ry="2" />
<text  x="1032.95" y="1439.5" ></text>
</g>
<g >
<title>new_sync_write (5 samples, 0.01%)</title><rect x="983.8" y="949" width="0.1" height="15.0" fill="rgb(207,167,9)" rx="2" ry="2" />
<text  x="986.82" y="959.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="1112.6" y="837" width="0.2" height="15.0" fill="rgb(235,29,36)" rx="2" ry="2" />
<text  x="1115.64" y="847.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::drop_id (5 samples, 0.01%)</title><rect x="1106.8" y="917" width="0.1" height="15.0" fill="rgb(235,27,47)" rx="2" ry="2" />
<text  x="1109.84" y="927.5" ></text>
</g>
<g >
<title>futures::task_impl::std::_$LT$impl$u20$futures..task_impl..Spawn$LT$F$GT$$GT$::wait_future::_$u7b$$u7b$closure$u7d$$u7d$::h6e5f9dba7457629d (37 samples, 0.07%)</title><rect x="186.3" y="1589" width="0.7" height="15.0" fill="rgb(248,57,38)" rx="2" ry="2" />
<text  x="189.26" y="1599.5" ></text>
</g>
<g >
<title>crossbeam_utils::atomic::atomic_cell::atomic_swap (21 samples, 0.04%)</title><rect x="1047.1" y="1285" width="0.5" height="15.0" fill="rgb(211,44,3)" rx="2" ry="2" />
<text  x="1050.11" y="1295.5" ></text>
</g>
<g >
<title>&lt;tower_balance::p2c::service::Balance&lt;D,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (5 samples, 0.01%)</title><rect x="1051.5" y="965" width="0.1" height="15.0" fill="rgb(220,123,7)" rx="2" ry="2" />
<text  x="1054.46" y="975.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_ptr (7 samples, 0.01%)</title><rect x="673.4" y="1157" width="0.2" height="15.0" fill="rgb(243,161,46)" rx="2" ry="2" />
<text  x="676.45" y="1167.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (5 samples, 0.01%)</title><rect x="1041.3" y="853" width="0.1" height="15.0" fill="rgb(211,76,45)" rx="2" ry="2" />
<text  x="1044.32" y="863.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h7139d8c7b0c70300 (12 samples, 0.02%)</title><rect x="1029.9" y="1541" width="0.3" height="15.0" fill="rgb(216,101,33)" rx="2" ry="2" />
<text  x="1032.95" y="1551.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (8 samples, 0.01%)</title><rect x="1125.8" y="869" width="0.2" height="15.0" fill="rgb(245,57,10)" rx="2" ry="2" />
<text  x="1128.81" y="879.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (8 samples, 0.01%)</title><rect x="1015.2" y="1013" width="0.1" height="15.0" fill="rgb(246,188,7)" rx="2" ry="2" />
<text  x="1018.18" y="1023.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (399 samples, 0.72%)</title><rect x="977.3" y="1445" width="8.5" height="15.0" fill="rgb(249,117,39)" rx="2" ry="2" />
<text  x="980.30" y="1455.5" ></text>
</g>
<g >
<title>__libc_write (28 samples, 0.05%)</title><rect x="185.2" y="965" width="0.6" height="15.0" fill="rgb(249,76,21)" rx="2" ry="2" />
<text  x="188.23" y="975.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current::_$u7b$$u7b$closure$u7d$$u7d$::ha0f99f248e8a20fc (9 samples, 0.02%)</title><rect x="10.0" y="1269" width="0.2" height="15.0" fill="rgb(218,59,28)" rx="2" ry="2" />
<text  x="13.02" y="1279.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (20 samples, 0.04%)</title><rect x="429.1" y="1269" width="0.4" height="15.0" fill="rgb(251,44,53)" rx="2" ry="2" />
<text  x="432.05" y="1279.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (6 samples, 0.01%)</title><rect x="999.6" y="821" width="0.2" height="15.0" fill="rgb(234,172,21)" rx="2" ry="2" />
<text  x="1002.65" y="831.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::CurrentTask::can_block (22 samples, 0.04%)</title><rect x="1129.5" y="981" width="0.5" height="15.0" fill="rgb(205,218,40)" rx="2" ry="2" />
<text  x="1132.51" y="991.5" ></text>
</g>
<g >
<title>hyper::client::Client$LT$C$C$B$GT$::send_request::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h5e9b950cab2f8b1a (13 samples, 0.02%)</title><rect x="1020.1" y="1493" width="0.3" height="15.0" fill="rgb(225,0,35)" rx="2" ry="2" />
<text  x="1023.10" y="1503.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (38 samples, 0.07%)</title><rect x="1026.6" y="1413" width="0.8" height="15.0" fill="rgb(230,33,22)" rx="2" ry="2" />
<text  x="1029.64" y="1423.5" ></text>
</g>
<g >
<title>tokio_reactor::registration::Inner::poll_ready (8 samples, 0.01%)</title><rect x="1051.9" y="1093" width="0.2" height="15.0" fill="rgb(223,88,35)" rx="2" ry="2" />
<text  x="1054.89" y="1103.5" ></text>
</g>
<g >
<title>&lt;futures::future::loop_fn::LoopFn&lt;A,F&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="1041.1" y="837" width="0.2" height="15.0" fill="rgb(250,224,4)" rx="2" ry="2" />
<text  x="1044.09" y="847.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::TableOperation&gt;::serialize (60 samples, 0.11%)</title><rect x="998.7" y="1285" width="1.3" height="15.0" fill="rgb(243,185,43)" rx="2" ry="2" />
<text  x="1001.71" y="1295.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (22 samples, 0.04%)</title><rect x="198.9" y="1237" width="0.5" height="15.0" fill="rgb(223,13,20)" rx="2" ry="2" />
<text  x="201.91" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (8 samples, 0.01%)</title><rect x="1037.8" y="1173" width="0.2" height="15.0" fill="rgb(209,121,52)" rx="2" ry="2" />
<text  x="1040.82" y="1183.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::wrappers::ClientResponseFutInner&lt;T,E&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="194.1" y="1253" width="0.1" height="15.0" fill="rgb(210,113,6)" rx="2" ry="2" />
<text  x="197.07" y="1263.5" ></text>
</g>
<g >
<title>&lt;async_bincode::reader::AsyncBincodeReader&lt;R,T&gt; as futures::stream::Stream&gt;::poll (5 samples, 0.01%)</title><rect x="1052.3" y="1205" width="0.1" height="15.0" fill="rgb(253,21,54)" rx="2" ry="2" />
<text  x="1055.33" y="1215.5" ></text>
</g>
<g >
<title>tower_buffer::worker::Worker&lt;T,Request&gt;::poll_next_msg (6 samples, 0.01%)</title><rect x="1022.0" y="1525" width="0.1" height="15.0" fill="rgb(220,94,39)" rx="2" ry="2" />
<text  x="1024.99" y="1535.5" ></text>
</g>
<g >
<title>core::iter::adapters::Enumerate&lt;I&gt;::new (42 samples, 0.08%)</title><rect x="326.3" y="1253" width="0.9" height="15.0" fill="rgb(216,161,52)" rx="2" ry="2" />
<text  x="329.31" y="1263.5" ></text>
</g>
<g >
<title>core::cell::BorrowRefMut::new (324 samples, 0.58%)</title><rect x="588.8" y="1125" width="6.8" height="15.0" fill="rgb(253,38,54)" rx="2" ry="2" />
<text  x="591.76" y="1135.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *const T&gt;::is_null (9 samples, 0.02%)</title><rect x="1159.2" y="965" width="0.2" height="15.0" fill="rgb(219,35,25)" rx="2" ry="2" />
<text  x="1162.19" y="975.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (8 samples, 0.01%)</title><rect x="980.8" y="1077" width="0.2" height="15.0" fill="rgb(244,160,41)" rx="2" ry="2" />
<text  x="983.82" y="1087.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (14 samples, 0.03%)</title><rect x="998.8" y="917" width="0.3" height="15.0" fill="rgb(209,39,11)" rx="2" ry="2" />
<text  x="1001.84" y="927.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (174 samples, 0.31%)</title><rect x="1053.0" y="1541" width="3.7" height="15.0" fill="rgb(211,104,3)" rx="2" ry="2" />
<text  x="1056.01" y="1551.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_and_swap (6 samples, 0.01%)</title><rect x="1123.0" y="933" width="0.1" height="15.0" fill="rgb(238,144,46)" rx="2" ry="2" />
<text  x="1125.97" y="943.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (5 samples, 0.01%)</title><rect x="1040.8" y="869" width="0.1" height="15.0" fill="rgb(247,165,48)" rx="2" ry="2" />
<text  x="1043.83" y="879.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_leaf (10 samples, 0.02%)</title><rect x="669.7" y="1157" width="0.2" height="15.0" fill="rgb(253,187,5)" rx="2" ry="2" />
<text  x="672.71" y="1167.5" ></text>
</g>
<g >
<title>crossbeam_epoch::default::with_handle (215 samples, 0.39%)</title><rect x="1165.2" y="997" width="4.6" height="15.0" fill="rgb(219,141,14)" rx="2" ry="2" />
<text  x="1168.22" y="1007.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (20 samples, 0.04%)</title><rect x="1029.0" y="1061" width="0.4" height="15.0" fill="rgb(251,136,17)" rx="2" ry="2" />
<text  x="1031.97" y="1071.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (284 samples, 0.51%)</title><rect x="1038.4" y="1477" width="6.0" height="15.0" fill="rgb(241,15,22)" rx="2" ry="2" />
<text  x="1041.41" y="1487.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run (12 samples, 0.02%)</title><rect x="995.3" y="1413" width="0.3" height="15.0" fill="rgb(206,55,50)" rx="2" ry="2" />
<text  x="998.32" y="1423.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (35 samples, 0.06%)</title><rect x="1051.9" y="1317" width="0.7" height="15.0" fill="rgb(216,97,25)" rx="2" ry="2" />
<text  x="1054.87" y="1327.5" ></text>
</g>
<g >
<title>__rg_dealloc (96 samples, 0.17%)</title><rect x="861.6" y="1269" width="2.0" height="15.0" fill="rgb(210,132,26)" rx="2" ry="2" />
<text  x="864.60" y="1279.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (6 samples, 0.01%)</title><rect x="1033.7" y="1269" width="0.1" height="15.0" fill="rgb(210,124,5)" rx="2" ry="2" />
<text  x="1036.68" y="1279.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (624 samples, 1.12%)</title><rect x="871.9" y="1333" width="13.2" height="15.0" fill="rgb(205,228,6)" rx="2" ry="2" />
<text  x="874.89" y="1343.5" ></text>
</g>
<g >
<title>core::mem::replace (12 samples, 0.02%)</title><rect x="1148.9" y="933" width="0.3" height="15.0" fill="rgb(242,46,52)" rx="2" ry="2" />
<text  x="1151.90" y="943.5" ></text>
</g>
<g >
<title>noria::table::_::&lt;impl serde::ser::Serialize for noria::table::Input&gt;::serialize (5 samples, 0.01%)</title><rect x="1053.9" y="1093" width="0.1" height="15.0" fill="rgb(219,190,21)" rx="2" ry="2" />
<text  x="1056.90" y="1103.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (24 samples, 0.04%)</title><rect x="1046.6" y="869" width="0.5" height="15.0" fill="rgb(227,107,11)" rx="2" ry="2" />
<text  x="1049.60" y="879.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::get (6 samples, 0.01%)</title><rect x="891.5" y="1221" width="0.1" height="15.0" fill="rgb(216,210,20)" rx="2" ry="2" />
<text  x="894.45" y="1231.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (12 samples, 0.02%)</title><rect x="360.0" y="1237" width="0.3" height="15.0" fill="rgb(217,107,41)" rx="2" ry="2" />
<text  x="363.03" y="1247.5" ></text>
</g>
<g >
<title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (2,255 samples, 4.05%)</title><rect x="742.1" y="1221" width="47.9" height="15.0" fill="rgb(213,154,14)" rx="2" ry="2" />
<text  x="745.13" y="1231.5" >&lt;&amp;mu..</text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (9 samples, 0.02%)</title><rect x="189.0" y="1253" width="0.2" height="15.0" fill="rgb(231,147,18)" rx="2" ry="2" />
<text  x="192.02" y="1263.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::io::Io as std::io::Write&gt;::write (22 samples, 0.04%)</title><rect x="1024.0" y="1077" width="0.5" height="15.0" fill="rgb(239,135,48)" rx="2" ry="2" />
<text  x="1027.01" y="1087.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for core::result::Result&lt;T,E&gt;&gt;::deserialize::ResultVisitor&lt;T,E&gt; as serde::de::Visitor&gt;::visit_enum (144 samples, 0.26%)</title><rect x="1000.0" y="1205" width="3.0" height="15.0" fill="rgb(210,50,31)" rx="2" ry="2" />
<text  x="1002.99" y="1215.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::enqueue_node_with_wakeup (25 samples, 0.04%)</title><rect x="1048.2" y="901" width="0.5" height="15.0" fill="rgb(254,197,25)" rx="2" ry="2" />
<text  x="1051.22" y="911.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfb347edd97d33f3d (12 samples, 0.02%)</title><rect x="1029.9" y="1253" width="0.3" height="15.0" fill="rgb(215,158,20)" rx="2" ry="2" />
<text  x="1032.95" y="1263.5" ></text>
</g>
<g >
<title>__pthread_cond_wait (18 samples, 0.03%)</title><rect x="192.1" y="1221" width="0.4" height="15.0" fill="rgb(240,203,7)" rx="2" ry="2" />
<text  x="195.10" y="1231.5" ></text>
</g>
<g >
<title>core::alloc::Layout::size (14 samples, 0.03%)</title><rect x="391.5" y="1285" width="0.3" height="15.0" fill="rgb(251,206,8)" rx="2" ry="2" />
<text  x="394.51" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (11 samples, 0.02%)</title><rect x="1034.0" y="1365" width="0.2" height="15.0" fill="rgb(238,174,42)" rx="2" ry="2" />
<text  x="1036.96" y="1375.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (7 samples, 0.01%)</title><rect x="185.4" y="837" width="0.1" height="15.0" fill="rgb(231,59,5)" rx="2" ry="2" />
<text  x="188.39" y="847.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_and_swap (6 samples, 0.01%)</title><rect x="1007.4" y="1477" width="0.1" height="15.0" fill="rgb(222,73,14)" rx="2" ry="2" />
<text  x="1010.37" y="1487.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (14 samples, 0.03%)</title><rect x="1049.7" y="1333" width="0.3" height="15.0" fill="rgb(249,48,20)" rx="2" ry="2" />
<text  x="1052.72" y="1343.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::io::Io as std::io::Write&gt;::write (29 samples, 0.05%)</title><rect x="185.2" y="1029" width="0.6" height="15.0" fill="rgb(219,6,6)" rx="2" ry="2" />
<text  x="188.20" y="1039.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (20 samples, 0.04%)</title><rect x="350.6" y="1237" width="0.4" height="15.0" fill="rgb(229,72,2)" rx="2" ry="2" />
<text  x="353.58" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (10 samples, 0.02%)</title><rect x="995.3" y="949" width="0.2" height="15.0" fill="rgb(237,223,19)" rx="2" ry="2" />
<text  x="998.32" y="959.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (5 samples, 0.01%)</title><rect x="180.5" y="1205" width="0.1" height="15.0" fill="rgb(219,0,30)" rx="2" ry="2" />
<text  x="183.45" y="1215.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (35 samples, 0.06%)</title><rect x="1051.9" y="1285" width="0.7" height="15.0" fill="rgb(209,7,34)" rx="2" ry="2" />
<text  x="1054.87" y="1295.5" ></text>
</g>
<g >
<title>tsd_tsdn (125 samples, 0.22%)</title><rect x="165.2" y="1557" width="2.6" height="15.0" fill="rgb(235,206,6)" rx="2" ry="2" />
<text  x="168.19" y="1567.5" ></text>
</g>
<g >
<title>core::ptr::write (12 samples, 0.02%)</title><rect x="1180.6" y="821" width="0.3" height="15.0" fill="rgb(227,168,6)" rx="2" ry="2" />
<text  x="1183.60" y="831.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (13 samples, 0.02%)</title><rect x="194.1" y="1509" width="0.2" height="15.0" fill="rgb(213,39,21)" rx="2" ry="2" />
<text  x="197.07" y="1519.5" ></text>
</g>
<g >
<title>serde::de::VariantAccess::newtype_variant (144 samples, 0.26%)</title><rect x="1000.0" y="1285" width="3.0" height="15.0" fill="rgb(253,202,5)" rx="2" ry="2" />
<text  x="1002.99" y="1295.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessState::effective_readiness (10 samples, 0.02%)</title><rect x="1092.2" y="901" width="0.3" height="15.0" fill="rgb(229,84,52)" rx="2" ry="2" />
<text  x="1095.24" y="911.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (21 samples, 0.04%)</title><rect x="547.2" y="1189" width="0.5" height="15.0" fill="rgb(217,220,34)" rx="2" ry="2" />
<text  x="550.24" y="1199.5" ></text>
</g>
<g >
<title>std::sys_common::condvar::Condvar::wait (17 samples, 0.03%)</title><rect x="984.9" y="1269" width="0.4" height="15.0" fill="rgb(226,36,36)" rx="2" ry="2" />
<text  x="987.94" y="1279.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default (284 samples, 0.51%)</title><rect x="1038.4" y="1509" width="6.0" height="15.0" fill="rgb(248,57,53)" rx="2" ry="2" />
<text  x="1041.41" y="1519.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (36 samples, 0.06%)</title><rect x="1032.5" y="1541" width="0.7" height="15.0" fill="rgb(225,99,0)" rx="2" ry="2" />
<text  x="1035.47" y="1551.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (29 samples, 0.05%)</title><rect x="422.7" y="1285" width="0.6" height="15.0" fill="rgb(246,199,50)" rx="2" ry="2" />
<text  x="425.66" y="1295.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (284 samples, 0.51%)</title><rect x="1038.4" y="1397" width="6.0" height="15.0" fill="rgb(228,26,25)" rx="2" ry="2" />
<text  x="1041.41" y="1407.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (144 samples, 0.26%)</title><rect x="1000.0" y="1173" width="3.0" height="15.0" fill="rgb(217,127,23)" rx="2" ry="2" />
<text  x="1002.99" y="1183.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::drop_id (5 samples, 0.01%)</title><rect x="1106.8" y="901" width="0.1" height="15.0" fill="rgb(205,14,37)" rx="2" ry="2" />
<text  x="1109.84" y="911.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_mut (16 samples, 0.03%)</title><rect x="841.2" y="1125" width="0.4" height="15.0" fill="rgb(251,72,11)" rx="2" ry="2" />
<text  x="844.23" y="1135.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (21 samples, 0.04%)</title><rect x="997.2" y="1285" width="0.4" height="15.0" fill="rgb(250,93,3)" rx="2" ry="2" />
<text  x="1000.16" y="1295.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (82 samples, 0.15%)</title><rect x="917.9" y="1253" width="1.7" height="15.0" fill="rgb(208,152,3)" rx="2" ry="2" />
<text  x="920.87" y="1263.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.01%)</title><rect x="193.9" y="1333" width="0.2" height="15.0" fill="rgb(240,167,53)" rx="2" ry="2" />
<text  x="196.90" y="1343.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (72 samples, 0.13%)</title><rect x="1027.4" y="1461" width="1.6" height="15.0" fill="rgb(238,111,50)" rx="2" ry="2" />
<text  x="1030.44" y="1471.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.02%)</title><rect x="999.2" y="821" width="0.2" height="15.0" fill="rgb(250,77,5)" rx="2" ry="2" />
<text  x="1002.18" y="831.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (47 samples, 0.08%)</title><rect x="1050.1" y="885" width="1.0" height="15.0" fill="rgb(207,214,19)" rx="2" ry="2" />
<text  x="1053.06" y="895.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (9 samples, 0.02%)</title><rect x="1025.4" y="933" width="0.2" height="15.0" fill="rgb(251,198,2)" rx="2" ry="2" />
<text  x="1028.43" y="943.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (216 samples, 0.39%)</title><rect x="1044.8" y="1493" width="4.6" height="15.0" fill="rgb(235,50,7)" rx="2" ry="2" />
<text  x="1047.80" y="1503.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (60 samples, 0.11%)</title><rect x="1044.9" y="1301" width="1.3" height="15.0" fill="rgb(224,219,11)" rx="2" ry="2" />
<text  x="1047.93" y="1311.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::hfb931195fd733b29 (17 samples, 0.03%)</title><rect x="1025.4" y="1509" width="0.4" height="15.0" fill="rgb(214,19,18)" rx="2" ry="2" />
<text  x="1028.43" y="1519.5" ></text>
</g>
<g >
<title>serde::de::VariantAccess::newtype_variant (7 samples, 0.01%)</title><rect x="1022.5" y="1189" width="0.1" height="15.0" fill="rgb(241,28,11)" rx="2" ry="2" />
<text  x="1025.48" y="1199.5" ></text>
</g>
<g >
<title>pipe_write (13 samples, 0.02%)</title><rect x="1014.6" y="773" width="0.3" height="15.0" fill="rgb(237,226,51)" rx="2" ry="2" />
<text  x="1017.63" y="783.5" ></text>
</g>
<g >
<title>bincode::config::legacy::Config::serialized_size (9 samples, 0.02%)</title><rect x="1057.9" y="1205" width="0.2" height="15.0" fill="rgb(235,96,28)" rx="2" ry="2" />
<text  x="1060.89" y="1215.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (19 samples, 0.03%)</title><rect x="997.6" y="1157" width="0.4" height="15.0" fill="rgb(238,23,27)" rx="2" ry="2" />
<text  x="1000.61" y="1167.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (6 samples, 0.01%)</title><rect x="1027.4" y="1109" width="0.2" height="15.0" fill="rgb(248,139,37)" rx="2" ry="2" />
<text  x="1030.44" y="1119.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (6 samples, 0.01%)</title><rect x="1100.5" y="853" width="0.2" height="15.0" fill="rgb(242,43,9)" rx="2" ry="2" />
<text  x="1103.54" y="863.5" ></text>
</g>
<g >
<title>core::ptr::read (171 samples, 0.31%)</title><rect x="855.8" y="1317" width="3.6" height="15.0" fill="rgb(254,40,49)" rx="2" ry="2" />
<text  x="858.78" y="1327.5" ></text>
</g>
<g >
<title>&lt;mio::sys::unix::eventedfd::EventedFd as mio::event_imp::Evented&gt;::reregister (5 samples, 0.01%)</title><rect x="994.1" y="1253" width="0.1" height="15.0" fill="rgb(218,117,51)" rx="2" ry="2" />
<text  x="997.11" y="1263.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (144 samples, 0.26%)</title><rect x="1000.0" y="1093" width="3.0" height="15.0" fill="rgb(226,148,9)" rx="2" ry="2" />
<text  x="1002.99" y="1103.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (784 samples, 1.41%)</title><rect x="447.1" y="1253" width="16.6" height="15.0" fill="rgb(229,4,29)" rx="2" ry="2" />
<text  x="450.09" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (25 samples, 0.04%)</title><rect x="1026.9" y="1013" width="0.5" height="15.0" fill="rgb(249,166,54)" rx="2" ry="2" />
<text  x="1029.91" y="1023.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (7 samples, 0.01%)</title><rect x="1055.6" y="1189" width="0.2" height="15.0" fill="rgb(236,58,8)" rx="2" ry="2" />
<text  x="1058.64" y="1199.5" ></text>
</g>
<g >
<title>tsd_tcachep_get (30 samples, 0.05%)</title><rect x="176.8" y="1573" width="0.7" height="15.0" fill="rgb(234,150,1)" rx="2" ry="2" />
<text  x="179.84" y="1583.5" ></text>
</g>
<g >
<title>std::time::Instant::now (5 samples, 0.01%)</title><rect x="1106.1" y="917" width="0.1" height="15.0" fill="rgb(238,17,32)" rx="2" ry="2" />
<text  x="1109.08" y="927.5" ></text>
</g>
<g >
<title>pipe_read (36 samples, 0.06%)</title><rect x="1096.4" y="725" width="0.7" height="15.0" fill="rgb(217,107,20)" rx="2" ry="2" />
<text  x="1099.36" y="735.5" ></text>
</g>
<g >
<title>core::core_arch::x86::avx2::_mm256_xor_si256 (5 samples, 0.01%)</title><rect x="191.5" y="1509" width="0.1" height="15.0" fill="rgb(228,116,6)" rx="2" ry="2" />
<text  x="194.51" y="1519.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="980.5" y="1077" width="0.2" height="15.0" fill="rgb(218,214,4)" rx="2" ry="2" />
<text  x="983.55" y="1087.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve (7 samples, 0.01%)</title><rect x="1020.2" y="1381" width="0.2" height="15.0" fill="rgb(222,87,53)" rx="2" ry="2" />
<text  x="1023.23" y="1391.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::worker::Worker::run_task2::Guard as core::ops::drop::Drop&gt;::drop (30 samples, 0.05%)</title><rect x="1129.4" y="997" width="0.7" height="15.0" fill="rgb(244,64,27)" rx="2" ry="2" />
<text  x="1132.44" y="1007.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (14 samples, 0.03%)</title><rect x="214.0" y="1253" width="0.3" height="15.0" fill="rgb(239,159,27)" rx="2" ry="2" />
<text  x="216.96" y="1263.5" ></text>
</g>
<g >
<title>std::panicking::try (6 samples, 0.01%)</title><rect x="1033.8" y="1221" width="0.1" height="15.0" fill="rgb(226,165,40)" rx="2" ry="2" />
<text  x="1036.81" y="1231.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (11 samples, 0.02%)</title><rect x="983.3" y="1205" width="0.2" height="15.0" fill="rgb(220,158,46)" rx="2" ry="2" />
<text  x="986.27" y="1215.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (8 samples, 0.01%)</title><rect x="1026.3" y="1285" width="0.2" height="15.0" fill="rgb(210,199,0)" rx="2" ry="2" />
<text  x="1029.30" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (22 samples, 0.04%)</title><rect x="1059.9" y="1301" width="0.5" height="15.0" fill="rgb(248,160,15)" rx="2" ry="2" />
<text  x="1062.89" y="1311.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="1034.0" y="1253" width="0.2" height="15.0" fill="rgb(234,43,26)" rx="2" ry="2" />
<text  x="1036.96" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (13 samples, 0.02%)</title><rect x="1051.6" y="1333" width="0.3" height="15.0" fill="rgb(212,67,10)" rx="2" ry="2" />
<text  x="1054.59" y="1343.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::as_leaf_mut (27 samples, 0.05%)</title><rect x="359.7" y="1253" width="0.6" height="15.0" fill="rgb(229,51,26)" rx="2" ry="2" />
<text  x="362.71" y="1263.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (126 samples, 0.23%)</title><rect x="1038.4" y="1125" width="2.7" height="15.0" fill="rgb(224,114,6)" rx="2" ry="2" />
<text  x="1041.41" y="1135.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (17 samples, 0.03%)</title><rect x="730.3" y="1205" width="0.4" height="15.0" fill="rgb(228,10,1)" rx="2" ry="2" />
<text  x="733.29" y="1215.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::is_null (25 samples, 0.04%)</title><rect x="393.4" y="1301" width="0.6" height="15.0" fill="rgb(225,116,4)" rx="2" ry="2" />
<text  x="396.45" y="1311.5" ></text>
</g>
<g >
<title>iallocztm (24 samples, 0.04%)</title><rect x="990.0" y="1541" width="0.5" height="15.0" fill="rgb(246,152,50)" rx="2" ry="2" />
<text  x="992.99" y="1551.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (21 samples, 0.04%)</title><rect x="1026.2" y="1493" width="0.4" height="15.0" fill="rgb(223,197,26)" rx="2" ry="2" />
<text  x="1029.19" y="1503.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (9 samples, 0.02%)</title><rect x="1053.7" y="1125" width="0.2" height="15.0" fill="rgb(248,153,34)" rx="2" ry="2" />
<text  x="1056.69" y="1135.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (15 samples, 0.03%)</title><rect x="188.6" y="1381" width="0.4" height="15.0" fill="rgb(239,92,31)" rx="2" ry="2" />
<text  x="191.64" y="1391.5" ></text>
</g>
<g >
<title>core::mem::swap (5 samples, 0.01%)</title><rect x="183.6" y="1525" width="0.1" height="15.0" fill="rgb(251,83,25)" rx="2" ry="2" />
<text  x="186.59" y="1535.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (102 samples, 0.18%)</title><rect x="993.2" y="1493" width="2.1" height="15.0" fill="rgb(237,215,28)" rx="2" ry="2" />
<text  x="996.15" y="1503.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::entry (20 samples, 0.04%)</title><rect x="1067.5" y="1061" width="0.4" height="15.0" fill="rgb(225,60,48)" rx="2" ry="2" />
<text  x="1070.46" y="1071.5" ></text>
</g>
<g >
<title>&lt;async_bincode::reader::AsyncBincodeReader&lt;R,T&gt; as futures::stream::Stream&gt;::poll (11 samples, 0.02%)</title><rect x="1038.1" y="1077" width="0.2" height="15.0" fill="rgb(224,29,4)" rx="2" ry="2" />
<text  x="1041.12" y="1087.5" ></text>
</g>
<g >
<title>noria::view::View::lookup::_$u7b$$u7b$closure$u7d$$u7d$::h7f81e2213d88cb18 (6 samples, 0.01%)</title><rect x="980.9" y="1061" width="0.1" height="15.0" fill="rgb(238,8,24)" rx="2" ry="2" />
<text  x="983.87" y="1071.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::hfe5b223513fc97dc (102 samples, 0.18%)</title><rect x="993.2" y="1525" width="2.1" height="15.0" fill="rgb(207,44,6)" rx="2" ry="2" />
<text  x="996.15" y="1535.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h1f40d1645c07fcaa (30 samples, 0.05%)</title><rect x="191.8" y="1509" width="0.7" height="15.0" fill="rgb(244,93,42)" rx="2" ry="2" />
<text  x="194.85" y="1519.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (6 samples, 0.01%)</title><rect x="1031.0" y="757" width="0.2" height="15.0" fill="rgb(207,17,5)" rx="2" ry="2" />
<text  x="1034.05" y="767.5" ></text>
</g>
<g >
<title>&lt;noria::_::&lt;impl serde::de::Deserialize for noria::Tagged&lt;T&gt;&gt;::deserialize::__Visitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (7 samples, 0.01%)</title><rect x="1022.5" y="1301" width="0.1" height="15.0" fill="rgb(244,56,28)" rx="2" ry="2" />
<text  x="1025.48" y="1311.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (20 samples, 0.04%)</title><rect x="1038.0" y="1333" width="0.4" height="15.0" fill="rgb(232,219,11)" rx="2" ry="2" />
<text  x="1040.99" y="1343.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::chan::Tx&lt;T,S&gt;::try_send (33 samples, 0.06%)</title><rect x="10.4" y="1493" width="0.7" height="15.0" fill="rgb(234,58,23)" rx="2" ry="2" />
<text  x="13.40" y="1503.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::future::ResponseFuture&lt;T&gt; as futures::future::Future&gt;::poll (32 samples, 0.06%)</title><rect x="1150.4" y="661" width="0.7" height="15.0" fill="rgb(215,226,18)" rx="2" ry="2" />
<text  x="1153.43" y="671.5" ></text>
</g>
<g >
<title>bincode::config::Options::deserialize (7 samples, 0.01%)</title><rect x="1022.5" y="1413" width="0.1" height="15.0" fill="rgb(241,153,24)" rx="2" ry="2" />
<text  x="1025.48" y="1423.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="1032.5" y="1013" width="0.2" height="15.0" fill="rgb(208,214,6)" rx="2" ry="2" />
<text  x="1035.49" y="1023.5" ></text>
</g>
<g >
<title>&lt;arccstr::ArcCStr as serde::de::Deserialize&gt;::deserialize (11 samples, 0.02%)</title><rect x="1000.4" y="709" width="0.2" height="15.0" fill="rgb(240,227,24)" rx="2" ry="2" />
<text  x="1003.39" y="719.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="1161.3" y="869" width="0.1" height="15.0" fill="rgb(230,124,46)" rx="2" ry="2" />
<text  x="1164.27" y="879.5" ></text>
</g>
<g >
<title>async_bincode::reader::AsyncBincodeReader&lt;R,T&gt;::fill (17 samples, 0.03%)</title><rect x="1031.3" y="1013" width="0.4" height="15.0" fill="rgb(249,226,54)" rx="2" ry="2" />
<text  x="1034.30" y="1023.5" ></text>
</g>
<g >
<title>chrono::offset::fixed::&lt;impl core::ops::arith::Sub&lt;chrono::offset::fixed::FixedOffset&gt; for chrono::naive::datetime::NaiveDateTime&gt;::sub (12 samples, 0.02%)</title><rect x="196.3" y="1317" width="0.3" height="15.0" fill="rgb(243,149,11)" rx="2" ry="2" />
<text  x="199.30" y="1327.5" ></text>
</g>
<g >
<title>noria::view::SyncView::lookup::_$u7b$$u7b$closure$u7d$$u7d$::h339f90ccab48f6ba (5 samples, 0.01%)</title><rect x="192.5" y="1413" width="0.1" height="15.0" fill="rgb(239,192,4)" rx="2" ry="2" />
<text  x="195.48" y="1423.5" ></text>
</g>
<g >
<title>&lt;usize as core::iter::range::Step&gt;::add_usize (14 samples, 0.03%)</title><rect x="1117.5" y="949" width="0.3" height="15.0" fill="rgb(212,164,40)" rx="2" ry="2" />
<text  x="1120.52" y="959.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (427 samples, 0.77%)</title><rect x="306.4" y="1269" width="9.1" height="15.0" fill="rgb(236,112,28)" rx="2" ry="2" />
<text  x="309.41" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (33 samples, 0.06%)</title><rect x="1035.2" y="1237" width="0.7" height="15.0" fill="rgb(253,119,32)" rx="2" ry="2" />
<text  x="1038.19" y="1247.5" ></text>
</g>
<g >
<title>crossbeam_epoch::collector::LocalHandle::is_pinned (55 samples, 0.10%)</title><rect x="1168.6" y="933" width="1.2" height="15.0" fill="rgb(250,91,34)" rx="2" ry="2" />
<text  x="1171.61" y="943.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::as_mut_ptr (12 samples, 0.02%)</title><rect x="628.5" y="1109" width="0.3" height="15.0" fill="rgb(237,54,25)" rx="2" ry="2" />
<text  x="631.51" y="1119.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (24 samples, 0.04%)</title><rect x="1112.3" y="901" width="0.5" height="15.0" fill="rgb(244,54,49)" rx="2" ry="2" />
<text  x="1115.30" y="911.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (6 samples, 0.01%)</title><rect x="670.1" y="1141" width="0.1" height="15.0" fill="rgb(205,49,15)" rx="2" ry="2" />
<text  x="673.12" y="1151.5" ></text>
</g>
<g >
<title>std::io::Write::write_fmt (65 samples, 0.12%)</title><rect x="983.3" y="1349" width="1.3" height="15.0" fill="rgb(245,35,26)" rx="2" ry="2" />
<text  x="986.27" y="1359.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.02%)</title><rect x="989.6" y="1285" width="0.2" height="15.0" fill="rgb(250,39,31)" rx="2" ry="2" />
<text  x="992.61" y="1295.5" ></text>
</g>
<g >
<title>noria::table::_::&lt;impl serde::ser::Serialize for noria::table::Input&gt;::serialize (5 samples, 0.01%)</title><rect x="1022.3" y="1285" width="0.1" height="15.0" fill="rgb(239,228,7)" rx="2" ry="2" />
<text  x="1025.33" y="1295.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (14 samples, 0.03%)</title><rect x="1044.9" y="1189" width="0.3" height="15.0" fill="rgb(222,109,14)" rx="2" ry="2" />
<text  x="1047.93" y="1199.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit::_$u7b$$u7b$closure$u7d$$u7d$::h83d517d17b1a75b2 (23 samples, 0.04%)</title><rect x="1014.5" y="1157" width="0.4" height="15.0" fill="rgb(211,213,54)" rx="2" ry="2" />
<text  x="1017.46" y="1167.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (7 samples, 0.01%)</title><rect x="1053.5" y="1061" width="0.1" height="15.0" fill="rgb(232,99,6)" rx="2" ry="2" />
<text  x="1056.48" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (5 samples, 0.01%)</title><rect x="183.6" y="1509" width="0.1" height="15.0" fill="rgb(206,31,12)" rx="2" ry="2" />
<text  x="186.59" y="1519.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (47 samples, 0.08%)</title><rect x="830.4" y="1093" width="1.0" height="15.0" fill="rgb(220,114,48)" rx="2" ry="2" />
<text  x="833.40" y="1103.5" ></text>
</g>
<g >
<title>&lt;tokio_sync::oneshot::Receiver&lt;T&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="180.5" y="1221" width="0.1" height="15.0" fill="rgb(207,3,48)" rx="2" ry="2" />
<text  x="183.45" y="1231.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (15 samples, 0.03%)</title><rect x="194.7" y="1509" width="0.3" height="15.0" fill="rgb(232,126,14)" rx="2" ry="2" />
<text  x="197.71" y="1519.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (26 samples, 0.05%)</title><rect x="1029.4" y="917" width="0.5" height="15.0" fill="rgb(234,72,27)" rx="2" ry="2" />
<text  x="1032.39" y="927.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.01%)</title><rect x="1057.7" y="1125" width="0.1" height="15.0" fill="rgb(229,70,20)" rx="2" ry="2" />
<text  x="1060.68" y="1135.5" ></text>
</g>
<g >
<title>vfs_write (6 samples, 0.01%)</title><rect x="983.8" y="981" width="0.1" height="15.0" fill="rgb(233,84,33)" rx="2" ry="2" />
<text  x="986.80" y="991.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="1154.2" y="757" width="0.1" height="15.0" fill="rgb(208,190,9)" rx="2" ry="2" />
<text  x="1157.16" y="767.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="1036.9" y="1189" width="0.2" height="15.0" fill="rgb(223,112,46)" rx="2" ry="2" />
<text  x="1039.91" y="1199.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (32 samples, 0.06%)</title><rect x="1031.8" y="1365" width="0.7" height="15.0" fill="rgb(205,15,44)" rx="2" ry="2" />
<text  x="1034.79" y="1375.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (14 samples, 0.03%)</title><rect x="998.8" y="885" width="0.3" height="15.0" fill="rgb(239,91,14)" rx="2" ry="2" />
<text  x="1001.84" y="895.5" ></text>
</g>
<g >
<title>__vfs_read (8 samples, 0.01%)</title><rect x="1111.7" y="757" width="0.2" height="15.0" fill="rgb(252,104,11)" rx="2" ry="2" />
<text  x="1114.74" y="767.5" ></text>
</g>
<g >
<title>futures::task_impl::std::&lt;impl futures::task_impl::Spawn&lt;F&gt;&gt;::wait_future (5 samples, 0.01%)</title><rect x="192.7" y="1397" width="0.1" height="15.0" fill="rgb(207,193,22)" rx="2" ry="2" />
<text  x="195.69" y="1407.5" ></text>
</g>
<g >
<title>noria::view::SyncView::lookup (15 samples, 0.03%)</title><rect x="188.6" y="1573" width="0.4" height="15.0" fill="rgb(227,185,13)" rx="2" ry="2" />
<text  x="191.64" y="1583.5" ></text>
</g>
<g >
<title>std::panicking::try (22 samples, 0.04%)</title><rect x="1059.9" y="1445" width="0.5" height="15.0" fill="rgb(221,109,52)" rx="2" ry="2" />
<text  x="1062.89" y="1455.5" ></text>
</g>
<g >
<title>fake::Fake::fake_with_rng (37 samples, 0.07%)</title><rect x="198.9" y="1285" width="0.8" height="15.0" fill="rgb(230,214,10)" rx="2" ry="2" />
<text  x="201.87" y="1295.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (174 samples, 0.31%)</title><rect x="1053.0" y="1493" width="3.7" height="15.0" fill="rgb(250,98,1)" rx="2" ry="2" />
<text  x="1056.01" y="1503.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (35 samples, 0.06%)</title><rect x="918.9" y="1237" width="0.7" height="15.0" fill="rgb(240,156,36)" rx="2" ry="2" />
<text  x="921.87" y="1247.5" ></text>
</g>
<g >
<title>wake_up_q (15 samples, 0.03%)</title><rect x="202.2" y="1189" width="0.3" height="15.0" fill="rgb(209,158,24)" rx="2" ry="2" />
<text  x="205.16" y="1199.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (38 samples, 0.07%)</title><rect x="213.4" y="1269" width="0.9" height="15.0" fill="rgb(253,217,42)" rx="2" ry="2" />
<text  x="216.45" y="1279.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner$LT$T$GT$::set_rx_task::_$u7b$$u7b$closure$u7d$$u7d$::h5a80a3d3477ade62 (7 samples, 0.01%)</title><rect x="181.7" y="1381" width="0.2" height="15.0" fill="rgb(207,113,52)" rx="2" ry="2" />
<text  x="184.72" y="1391.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (17 samples, 0.03%)</title><rect x="1036.1" y="1301" width="0.4" height="15.0" fill="rgb(250,164,7)" rx="2" ry="2" />
<text  x="1039.12" y="1311.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (30 samples, 0.05%)</title><rect x="686.5" y="1173" width="0.6" height="15.0" fill="rgb(210,13,20)" rx="2" ry="2" />
<text  x="689.46" y="1183.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::drop_id (5 samples, 0.01%)</title><rect x="182.4" y="1269" width="0.1" height="15.0" fill="rgb(206,147,39)" rx="2" ry="2" />
<text  x="185.42" y="1279.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicIsize::load (8 samples, 0.01%)</title><rect x="1164.8" y="997" width="0.1" height="15.0" fill="rgb(236,163,54)" rx="2" ry="2" />
<text  x="1167.77" y="1007.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (7 samples, 0.01%)</title><rect x="1034.2" y="1445" width="0.1" height="15.0" fill="rgb(237,176,11)" rx="2" ry="2" />
<text  x="1037.19" y="1455.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (8 samples, 0.01%)</title><rect x="1015.2" y="933" width="0.1" height="15.0" fill="rgb(241,30,49)" rx="2" ry="2" />
<text  x="1018.18" y="943.5" ></text>
</g>
<g >
<title>serde::de::SeqAccess::next_element (144 samples, 0.26%)</title><rect x="1000.0" y="853" width="3.0" height="15.0" fill="rgb(217,106,33)" rx="2" ry="2" />
<text  x="1002.99" y="863.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::clone_id (6 samples, 0.01%)</title><rect x="1013.7" y="1381" width="0.1" height="15.0" fill="rgb(239,166,7)" rx="2" ry="2" />
<text  x="1016.65" y="1391.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (5 samples, 0.01%)</title><rect x="980.3" y="1125" width="0.1" height="15.0" fill="rgb(223,145,48)" rx="2" ry="2" />
<text  x="983.25" y="1135.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::offset (62 samples, 0.11%)</title><rect x="372.8" y="1253" width="1.3" height="15.0" fill="rgb(250,133,25)" rx="2" ry="2" />
<text  x="375.82" y="1263.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (13 samples, 0.02%)</title><rect x="1020.1" y="1509" width="0.3" height="15.0" fill="rgb(206,22,48)" rx="2" ry="2" />
<text  x="1023.10" y="1519.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.01%)</title><rect x="921.5" y="1285" width="0.1" height="15.0" fill="rgb(233,4,38)" rx="2" ry="2" />
<text  x="924.54" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (12 samples, 0.02%)</title><rect x="1033.9" y="1557" width="0.3" height="15.0" fill="rgb(215,204,8)" rx="2" ry="2" />
<text  x="1036.94" y="1567.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::with_default (23 samples, 0.04%)</title><rect x="194.5" y="1589" width="0.5" height="15.0" fill="rgb(217,47,9)" rx="2" ry="2" />
<text  x="197.54" y="1599.5" ></text>
</g>
<g >
<title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (16 samples, 0.03%)</title><rect x="787.9" y="1157" width="0.4" height="15.0" fill="rgb(225,137,50)" rx="2" ry="2" />
<text  x="790.95" y="1167.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::new_edge (12 samples, 0.02%)</title><rect x="949.9" y="1253" width="0.3" height="15.0" fill="rgb(252,0,28)" rx="2" ry="2" />
<text  x="952.91" y="1263.5" ></text>
</g>
<g >
<title>mio::poll::RegistrationInner::set_readiness (5 samples, 0.01%)</title><rect x="1113.6" y="949" width="0.1" height="15.0" fill="rgb(223,13,0)" rx="2" ry="2" />
<text  x="1116.61" y="959.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.05%)</title><rect x="185.2" y="949" width="0.6" height="15.0" fill="rgb(225,117,14)" rx="2" ry="2" />
<text  x="188.25" y="959.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h5b3a67a18c04d66c (14 samples, 0.03%)</title><rect x="180.4" y="1509" width="0.3" height="15.0" fill="rgb(241,32,28)" rx="2" ry="2" />
<text  x="183.43" y="1519.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (15 samples, 0.03%)</title><rect x="1034.9" y="1253" width="0.3" height="15.0" fill="rgb(231,51,32)" rx="2" ry="2" />
<text  x="1037.87" y="1263.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (10 samples, 0.02%)</title><rect x="995.3" y="1109" width="0.2" height="15.0" fill="rgb(226,6,27)" rx="2" ry="2" />
<text  x="998.32" y="1119.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (5 samples, 0.01%)</title><rect x="1026.2" y="965" width="0.1" height="15.0" fill="rgb(238,128,54)" rx="2" ry="2" />
<text  x="1029.19" y="975.5" ></text>
</g>
<g >
<title>tcache_dalloc_small (11 samples, 0.02%)</title><rect x="990.6" y="1541" width="0.2" height="15.0" fill="rgb(220,50,13)" rx="2" ry="2" />
<text  x="993.56" y="1551.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (16 samples, 0.03%)</title><rect x="1045.2" y="1093" width="0.4" height="15.0" fill="rgb(225,30,10)" rx="2" ry="2" />
<text  x="1048.22" y="1103.5" ></text>
</g>
<g >
<title>noria::controller::SyncControllerHandle&lt;A,E&gt;::ready (6 samples, 0.01%)</title><rect x="989.3" y="1285" width="0.1" height="15.0" fill="rgb(219,130,8)" rx="2" ry="2" />
<text  x="992.27" y="1295.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_and_swap (5 samples, 0.01%)</title><rect x="1048.1" y="917" width="0.1" height="15.0" fill="rgb(249,56,22)" rx="2" ry="2" />
<text  x="1051.07" y="927.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (48 samples, 0.09%)</title><rect x="1014.2" y="1541" width="1.0" height="15.0" fill="rgb(215,41,10)" rx="2" ry="2" />
<text  x="1017.16" y="1551.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (23 samples, 0.04%)</title><rect x="1014.5" y="1333" width="0.4" height="15.0" fill="rgb(231,17,51)" rx="2" ry="2" />
<text  x="1017.46" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.02%)</title><rect x="189.9" y="1461" width="0.2" height="15.0" fill="rgb(207,227,39)" rx="2" ry="2" />
<text  x="192.87" y="1471.5" ></text>
</g>
<g >
<title>noria::view::_::&lt;impl serde::ser::Serialize for noria::view::ReadQuery&gt;::serialize (11 samples, 0.02%)</title><rect x="1045.6" y="1189" width="0.2" height="15.0" fill="rgb(214,58,47)" rx="2" ry="2" />
<text  x="1048.56" y="1199.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec (20 samples, 0.04%)</title><rect x="199.0" y="1173" width="0.4" height="15.0" fill="rgb(219,24,51)" rx="2" ry="2" />
<text  x="201.95" y="1183.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::len (10 samples, 0.02%)</title><rect x="563.3" y="1285" width="0.2" height="15.0" fill="rgb(246,164,47)" rx="2" ry="2" />
<text  x="566.32" y="1295.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::low_bits (7 samples, 0.01%)</title><rect x="1187.7" y="821" width="0.1" height="15.0" fill="rgb(219,26,2)" rx="2" ry="2" />
<text  x="1190.67" y="831.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (45 samples, 0.08%)</title><rect x="1145.0" y="645" width="1.0" height="15.0" fill="rgb(213,109,8)" rx="2" ry="2" />
<text  x="1148.04" y="655.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (21 samples, 0.04%)</title><rect x="1033.2" y="1525" width="0.5" height="15.0" fill="rgb(233,16,37)" rx="2" ry="2" />
<text  x="1036.24" y="1535.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.01%)</title><rect x="1091.7" y="837" width="0.1" height="15.0" fill="rgb(252,191,41)" rx="2" ry="2" />
<text  x="1094.74" y="847.5" ></text>
</g>
<g >
<title>std::panicking::try (102 samples, 0.18%)</title><rect x="993.2" y="1477" width="2.1" height="15.0" fill="rgb(217,84,20)" rx="2" ry="2" />
<text  x="996.15" y="1487.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_and_swap (9 samples, 0.02%)</title><rect x="1069.9" y="1061" width="0.1" height="15.0" fill="rgb(245,219,40)" rx="2" ry="2" />
<text  x="1072.86" y="1071.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (78 samples, 0.14%)</title><rect x="1049.7" y="1445" width="1.7" height="15.0" fill="rgb(240,131,21)" rx="2" ry="2" />
<text  x="1052.72" y="1455.5" ></text>
</g>
<g >
<title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::le (8 samples, 0.01%)</title><rect x="1069.6" y="1061" width="0.2" height="15.0" fill="rgb(216,18,0)" rx="2" ry="2" />
<text  x="1072.65" y="1071.5" ></text>
</g>
<g >
<title>alloc::rc::RcBoxPtr::inc_strong (557 samples, 1.00%)</title><rect x="247.1" y="1317" width="11.9" height="15.0" fill="rgb(235,223,10)" rx="2" ry="2" />
<text  x="250.14" y="1327.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.01%)</title><rect x="1135.2" y="789" width="0.2" height="15.0" fill="rgb(254,146,53)" rx="2" ry="2" />
<text  x="1138.23" y="799.5" ></text>
</g>
<g >
<title>&lt;futures::future::either::Either&lt;A,B&gt; as futures::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="194.1" y="1365" width="0.2" height="15.0" fill="rgb(246,208,8)" rx="2" ry="2" />
<text  x="197.07" y="1375.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (7 samples, 0.01%)</title><rect x="983.5" y="1205" width="0.1" height="15.0" fill="rgb(243,84,15)" rx="2" ry="2" />
<text  x="986.50" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (11 samples, 0.02%)</title><rect x="1036.9" y="1253" width="0.2" height="15.0" fill="rgb(230,44,1)" rx="2" ry="2" />
<text  x="1039.91" y="1263.5" ></text>
</g>
<g >
<title>&lt;tower_balance::p2c::service::Balance&lt;D,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::poll_ready (23 samples, 0.04%)</title><rect x="1003.0" y="1589" width="0.5" height="15.0" fill="rgb(208,170,53)" rx="2" ry="2" />
<text  x="1006.04" y="1599.5" ></text>
</g>
<g >
<title>&lt;chrono::naive::date::NaiveDate as core::fmt::Debug&gt;::fmt (37 samples, 0.07%)</title><rect x="998.7" y="981" width="0.8" height="15.0" fill="rgb(248,192,18)" rx="2" ry="2" />
<text  x="1001.73" y="991.5" ></text>
</g>
<g >
<title>&lt;rand::distributions::range::Range&lt;Sup&gt; as rand::distributions::IndependentSample&lt;Sup&gt;&gt;::ind_sample (1,658 samples, 2.98%)</title><rect x="567.5" y="1269" width="35.2" height="15.0" fill="rgb(209,141,43)" rx="2" ry="2" />
<text  x="570.55" y="1279.5" >&lt;r..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8&gt;&gt;::write_all (14 samples, 0.03%)</title><rect x="1023.0" y="933" width="0.3" height="15.0" fill="rgb(243,216,17)" rx="2" ry="2" />
<text  x="1026.03" y="943.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (33 samples, 0.06%)</title><rect x="998.0" y="1205" width="0.7" height="15.0" fill="rgb(217,222,13)" rx="2" ry="2" />
<text  x="1001.01" y="1215.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::Handle as tokio_executor::park::Unpark&gt;::unpark (27 samples, 0.05%)</title><rect x="10.5" y="1205" width="0.6" height="15.0" fill="rgb(253,10,39)" rx="2" ry="2" />
<text  x="13.49" y="1215.5" ></text>
</g>
<g >
<title>indexmap::map::OrderMapCore&lt;K,V&gt;::find_using_impl (12 samples, 0.02%)</title><rect x="1009.9" y="1445" width="0.3" height="15.0" fill="rgb(238,146,46)" rx="2" ry="2" />
<text  x="1012.92" y="1455.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="1034.2" y="1205" width="0.1" height="15.0" fill="rgb(207,135,49)" rx="2" ry="2" />
<text  x="1037.19" y="1215.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (9 samples, 0.02%)</title><rect x="1055.2" y="981" width="0.2" height="15.0" fill="rgb(232,4,53)" rx="2" ry="2" />
<text  x="1058.18" y="991.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (11 samples, 0.02%)</title><rect x="578.9" y="1077" width="0.2" height="15.0" fill="rgb(208,227,38)" rx="2" ry="2" />
<text  x="581.86" y="1087.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (10 samples, 0.02%)</title><rect x="1115.2" y="981" width="0.3" height="15.0" fill="rgb(237,140,38)" rx="2" ry="2" />
<text  x="1118.25" y="991.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (44 samples, 0.08%)</title><rect x="1023.7" y="1573" width="0.9" height="15.0" fill="rgb(242,4,24)" rx="2" ry="2" />
<text  x="1026.71" y="1583.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.01%)</title><rect x="1186.5" y="885" width="0.1" height="15.0" fill="rgb(208,72,18)" rx="2" ry="2" />
<text  x="1189.50" y="895.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (144 samples, 0.26%)</title><rect x="1000.0" y="1125" width="3.0" height="15.0" fill="rgb(232,141,15)" rx="2" ry="2" />
<text  x="1002.99" y="1135.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (24 samples, 0.04%)</title><rect x="222.0" y="1269" width="0.5" height="15.0" fill="rgb(222,223,0)" rx="2" ry="2" />
<text  x="224.95" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (17 samples, 0.03%)</title><rect x="1036.1" y="1221" width="0.4" height="15.0" fill="rgb(254,159,0)" rx="2" ry="2" />
<text  x="1039.12" y="1231.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.01%)</title><rect x="996.3" y="1221" width="0.1" height="15.0" fill="rgb(241,23,36)" rx="2" ry="2" />
<text  x="999.27" y="1231.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts (24 samples, 0.04%)</title><rect x="651.8" y="1125" width="0.5" height="15.0" fill="rgb(240,51,26)" rx="2" ry="2" />
<text  x="654.78" y="1135.5" ></text>
</g>
<g >
<title>&lt;T as alloc::string::ToString&gt;::to_string (60 samples, 0.11%)</title><rect x="998.7" y="1125" width="1.3" height="15.0" fill="rgb(224,224,5)" rx="2" ry="2" />
<text  x="1001.71" y="1135.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (10 samples, 0.02%)</title><rect x="995.3" y="1045" width="0.2" height="15.0" fill="rgb(233,63,18)" rx="2" ry="2" />
<text  x="998.32" y="1055.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="194.4" y="1413" width="0.1" height="15.0" fill="rgb(243,185,22)" rx="2" ry="2" />
<text  x="197.39" y="1423.5" ></text>
</g>
<g >
<title>futures::sync::oneshot::Sender&lt;T&gt;::send (6 samples, 0.01%)</title><rect x="996.3" y="1413" width="0.1" height="15.0" fill="rgb(228,225,51)" rx="2" ry="2" />
<text  x="999.27" y="1423.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (11 samples, 0.02%)</title><rect x="1034.3" y="1285" width="0.3" height="15.0" fill="rgb(241,94,24)" rx="2" ry="2" />
<text  x="1037.34" y="1295.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::DataType&gt;::serialize (17 samples, 0.03%)</title><rect x="1023.0" y="1077" width="0.3" height="15.0" fill="rgb(247,135,11)" rx="2" ry="2" />
<text  x="1025.97" y="1087.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeTuple&gt;::serialize_element (10 samples, 0.02%)</title><rect x="1045.6" y="981" width="0.2" height="15.0" fill="rgb(233,134,20)" rx="2" ry="2" />
<text  x="1048.58" y="991.5" ></text>
</g>
<g >
<title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (13 samples, 0.02%)</title><rect x="723.5" y="1269" width="0.2" height="15.0" fill="rgb(208,220,12)" rx="2" ry="2" />
<text  x="726.46" y="1279.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_char_escape (11 samples, 0.02%)</title><rect x="988.2" y="1157" width="0.2" height="15.0" fill="rgb(218,161,47)" rx="2" ry="2" />
<text  x="991.21" y="1167.5" ></text>
</g>
<g >
<title>&lt;T as zookeeper::try_io::TryWrite&gt;::try_write (5 samples, 0.01%)</title><rect x="995.2" y="1301" width="0.1" height="15.0" fill="rgb(217,48,18)" rx="2" ry="2" />
<text  x="998.21" y="1311.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (9 samples, 0.02%)</title><rect x="997.2" y="981" width="0.2" height="15.0" fill="rgb(250,5,54)" rx="2" ry="2" />
<text  x="1000.16" y="991.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h78b272fd5f571c5e (6 samples, 0.01%)</title><rect x="193.0" y="1205" width="0.1" height="15.0" fill="rgb(228,38,2)" rx="2" ry="2" />
<text  x="196.01" y="1215.5" ></text>
</g>
<g >
<title>core::mem::replace (6 samples, 0.01%)</title><rect x="1043.5" y="917" width="0.1" height="15.0" fill="rgb(207,58,7)" rx="2" ry="2" />
<text  x="1046.46" y="927.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current (22 samples, 0.04%)</title><rect x="189.4" y="1509" width="0.5" height="15.0" fill="rgb(214,217,52)" rx="2" ry="2" />
<text  x="192.38" y="1519.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNotInner&lt;T&gt;&gt;::serialize (17 samples, 0.03%)</title><rect x="1023.0" y="1301" width="0.3" height="15.0" fill="rgb(230,182,19)" rx="2" ry="2" />
<text  x="1025.97" y="1311.5" ></text>
</g>
<g >
<title>iralloct (17 samples, 0.03%)</title><rect x="101.8" y="1573" width="0.4" height="15.0" fill="rgb(238,199,48)" rx="2" ry="2" />
<text  x="104.81" y="1583.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::poll_evented::PollEvented&lt;E&gt; as std::io::Write&gt;::write (8 samples, 0.01%)</title><rect x="1051.9" y="1157" width="0.2" height="15.0" fill="rgb(209,145,19)" rx="2" ry="2" />
<text  x="1054.89" y="1167.5" ></text>
</g>
<g >
<title>tsd_assert_fast (11 samples, 0.02%)</title><rect x="81.7" y="1557" width="0.3" height="15.0" fill="rgb(232,171,22)" rx="2" ry="2" />
<text  x="84.74" y="1567.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::Dispatch::none (6 samples, 0.01%)</title><rect x="979.4" y="1333" width="0.1" height="15.0" fill="rgb(237,18,9)" rx="2" ry="2" />
<text  x="982.38" y="1343.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (13 samples, 0.02%)</title><rect x="1026.6" y="997" width="0.3" height="15.0" fill="rgb(213,45,30)" rx="2" ry="2" />
<text  x="1029.64" y="1007.5" ></text>
</g>
<g >
<title>do_futex (7 samples, 0.01%)</title><rect x="1134.2" y="517" width="0.1" height="15.0" fill="rgb(220,69,34)" rx="2" ry="2" />
<text  x="1137.19" y="527.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (6 samples, 0.01%)</title><rect x="1057.9" y="1093" width="0.1" height="15.0" fill="rgb(238,186,14)" rx="2" ry="2" />
<text  x="1060.89" y="1103.5" ></text>
</g>
<g >
<title>isalloc (7 samples, 0.01%)</title><rect x="1018.2" y="1573" width="0.2" height="15.0" fill="rgb(222,22,11)" rx="2" ry="2" />
<text  x="1021.23" y="1583.5" ></text>
</g>
<g >
<title>std::panicking::try (7 samples, 0.01%)</title><rect x="1056.7" y="1509" width="0.2" height="15.0" fill="rgb(219,109,22)" rx="2" ry="2" />
<text  x="1059.70" y="1519.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::get (20 samples, 0.04%)</title><rect x="598.6" y="1125" width="0.4" height="15.0" fill="rgb(226,37,2)" rx="2" ry="2" />
<text  x="601.57" y="1135.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (12 samples, 0.02%)</title><rect x="1029.9" y="869" width="0.3" height="15.0" fill="rgb(225,159,11)" rx="2" ry="2" />
<text  x="1032.95" y="879.5" ></text>
</g>
<g >
<title>&lt;futures::future::map::Map&lt;A,F&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="186.0" y="1509" width="0.1" height="15.0" fill="rgb(210,160,10)" rx="2" ry="2" />
<text  x="189.03" y="1519.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (13 samples, 0.02%)</title><rect x="1027.7" y="1013" width="0.3" height="15.0" fill="rgb(216,126,51)" rx="2" ry="2" />
<text  x="1030.74" y="1023.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.01%)</title><rect x="998.1" y="917" width="0.2" height="15.0" fill="rgb(239,129,25)" rx="2" ry="2" />
<text  x="1001.12" y="927.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (6 samples, 0.01%)</title><rect x="185.4" y="821" width="0.1" height="15.0" fill="rgb(244,41,16)" rx="2" ry="2" />
<text  x="188.39" y="831.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (64 samples, 0.12%)</title><rect x="1050.0" y="1237" width="1.4" height="15.0" fill="rgb(225,200,8)" rx="2" ry="2" />
<text  x="1053.02" y="1247.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (8 samples, 0.01%)</title><rect x="228.7" y="1253" width="0.2" height="15.0" fill="rgb(231,29,47)" rx="2" ry="2" />
<text  x="231.68" y="1263.5" ></text>
</g>
<g >
<title>time::sys::inner::time_to_local_tm (5 samples, 0.01%)</title><rect x="978.4" y="1173" width="0.1" height="15.0" fill="rgb(214,104,48)" rx="2" ry="2" />
<text  x="981.38" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (7 samples, 0.01%)</title><rect x="546.0" y="1189" width="0.2" height="15.0" fill="rgb(225,114,34)" rx="2" ry="2" />
<text  x="549.01" y="1199.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.01%)</title><rect x="619.9" y="1173" width="0.1" height="15.0" fill="rgb(247,203,30)" rx="2" ry="2" />
<text  x="622.89" y="1183.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (8 samples, 0.01%)</title><rect x="1027.6" y="1173" width="0.1" height="15.0" fill="rgb(253,98,32)" rx="2" ry="2" />
<text  x="1030.57" y="1183.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (11 samples, 0.02%)</title><rect x="1034.0" y="1541" width="0.2" height="15.0" fill="rgb(208,219,5)" rx="2" ry="2" />
<text  x="1036.96" y="1551.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::enqueue_node_with_wakeup (5 samples, 0.01%)</title><rect x="1024.8" y="1125" width="0.1" height="15.0" fill="rgb(247,208,10)" rx="2" ry="2" />
<text  x="1027.79" y="1135.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.01%)</title><rect x="194.5" y="1493" width="0.2" height="15.0" fill="rgb(250,89,48)" rx="2" ry="2" />
<text  x="197.54" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (6 samples, 0.01%)</title><rect x="1104.2" y="805" width="0.1" height="15.0" fill="rgb(236,98,23)" rx="2" ry="2" />
<text  x="1107.19" y="815.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1025.6" y="645" width="0.1" height="15.0" fill="rgb(221,83,25)" rx="2" ry="2" />
<text  x="1028.62" y="655.5" ></text>
</g>
<g >
<title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="1044.8" y="1285" width="0.1" height="15.0" fill="rgb(221,28,53)" rx="2" ry="2" />
<text  x="1047.82" y="1295.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::truncate (5 samples, 0.01%)</title><rect x="1041.5" y="885" width="0.1" height="15.0" fill="rgb(230,126,25)" rx="2" ry="2" />
<text  x="1044.49" y="895.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (9 samples, 0.02%)</title><rect x="1100.2" y="853" width="0.2" height="15.0" fill="rgb(211,152,2)" rx="2" ry="2" />
<text  x="1103.24" y="863.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (5 samples, 0.01%)</title><rect x="1053.3" y="1077" width="0.1" height="15.0" fill="rgb(238,76,13)" rx="2" ry="2" />
<text  x="1056.33" y="1087.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::h21cd600e9f97af32 (12 samples, 0.02%)</title><rect x="995.3" y="1365" width="0.3" height="15.0" fill="rgb(239,169,52)" rx="2" ry="2" />
<text  x="998.32" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.02%)</title><rect x="1131.3" y="485" width="0.2" height="15.0" fill="rgb(240,212,31)" rx="2" ry="2" />
<text  x="1134.29" y="495.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (60 samples, 0.11%)</title><rect x="998.7" y="1253" width="1.3" height="15.0" fill="rgb(252,11,50)" rx="2" ry="2" />
<text  x="1001.71" y="1263.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h1e333f0842b39e4b (33 samples, 0.06%)</title><rect x="10.4" y="1301" width="0.7" height="15.0" fill="rgb(222,144,32)" rx="2" ry="2" />
<text  x="13.40" y="1311.5" ></text>
</g>
<g >
<title>vfs_write (12 samples, 0.02%)</title><rect x="1048.5" y="725" width="0.2" height="15.0" fill="rgb(205,223,25)" rx="2" ry="2" />
<text  x="1051.47" y="735.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (20 samples, 0.04%)</title><rect x="1038.0" y="1141" width="0.4" height="15.0" fill="rgb(233,187,7)" rx="2" ry="2" />
<text  x="1040.99" y="1151.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (10 samples, 0.02%)</title><rect x="1051.4" y="1413" width="0.2" height="15.0" fill="rgb(212,45,5)" rx="2" ry="2" />
<text  x="1054.38" y="1423.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::new (159 samples, 0.29%)</title><rect x="403.9" y="1317" width="3.4" height="15.0" fill="rgb(229,69,48)" rx="2" ry="2" />
<text  x="406.89" y="1327.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (11 samples, 0.02%)</title><rect x="1045.6" y="1125" width="0.2" height="15.0" fill="rgb(234,130,52)" rx="2" ry="2" />
<text  x="1048.56" y="1135.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (5 samples, 0.01%)</title><rect x="1044.5" y="1253" width="0.1" height="15.0" fill="rgb(250,145,32)" rx="2" ry="2" />
<text  x="1047.48" y="1263.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="1036.7" y="1077" width="0.2" height="15.0" fill="rgb(251,197,45)" rx="2" ry="2" />
<text  x="1039.65" y="1087.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (35 samples, 0.06%)</title><rect x="1051.9" y="1429" width="0.7" height="15.0" fill="rgb(251,222,40)" rx="2" ry="2" />
<text  x="1054.87" y="1439.5" ></text>
</g>
<g >
<title>&lt;noria::view::_::&lt;impl serde::de::Deserialize for noria::view::ReadReply&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (10 samples, 0.02%)</title><rect x="1055.2" y="1013" width="0.2" height="15.0" fill="rgb(238,210,49)" rx="2" ry="2" />
<text  x="1058.15" y="1023.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (17 samples, 0.03%)</title><rect x="189.0" y="1461" width="0.4" height="15.0" fill="rgb(224,95,13)" rx="2" ry="2" />
<text  x="192.02" y="1471.5" ></text>
</g>
<g >
<title>core::mem::forget (24 samples, 0.04%)</title><rect x="223.4" y="1285" width="0.5" height="15.0" fill="rgb(213,170,52)" rx="2" ry="2" />
<text  x="226.36" y="1295.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (18 samples, 0.03%)</title><rect x="592.1" y="1029" width="0.4" height="15.0" fill="rgb(253,115,11)" rx="2" ry="2" />
<text  x="595.10" y="1039.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.01%)</title><rect x="1044.5" y="1317" width="0.1" height="15.0" fill="rgb(213,78,27)" rx="2" ry="2" />
<text  x="1047.48" y="1327.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::stream::Stream&gt;::poll (5 samples, 0.01%)</title><rect x="1052.3" y="1221" width="0.1" height="15.0" fill="rgb(223,190,0)" rx="2" ry="2" />
<text  x="1055.33" y="1231.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (5 samples, 0.01%)</title><rect x="1131.4" y="53" width="0.1" height="15.0" fill="rgb(233,177,10)" rx="2" ry="2" />
<text  x="1134.37" y="63.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::uninit (9 samples, 0.02%)</title><rect x="258.3" y="1205" width="0.2" height="15.0" fill="rgb(238,100,15)" rx="2" ry="2" />
<text  x="261.26" y="1215.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (6 samples, 0.01%)</title><rect x="954.5" y="1253" width="0.1" height="15.0" fill="rgb(205,215,51)" rx="2" ry="2" />
<text  x="957.51" y="1263.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple (11 samples, 0.02%)</title><rect x="1055.2" y="1125" width="0.2" height="15.0" fill="rgb(215,4,11)" rx="2" ry="2" />
<text  x="1058.15" y="1135.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="193.9" y="1573" width="0.2" height="15.0" fill="rgb(234,63,26)" rx="2" ry="2" />
<text  x="196.90" y="1583.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (12 samples, 0.02%)</title><rect x="669.0" y="1141" width="0.2" height="15.0" fill="rgb(246,154,11)" rx="2" ry="2" />
<text  x="671.97" y="1151.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::unpark (139 samples, 0.25%)</title><rect x="1143.6" y="1013" width="2.9" height="15.0" fill="rgb(247,115,28)" rx="2" ry="2" />
<text  x="1146.55" y="1023.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (23 samples, 0.04%)</title><rect x="187.0" y="1413" width="0.5" height="15.0" fill="rgb(247,122,10)" rx="2" ry="2" />
<text  x="190.05" y="1423.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (43 samples, 0.08%)</title><rect x="1036.9" y="1525" width="0.9" height="15.0" fill="rgb(245,89,14)" rx="2" ry="2" />
<text  x="1039.91" y="1535.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="1056.9" y="1285" width="0.2" height="15.0" fill="rgb(211,4,22)" rx="2" ry="2" />
<text  x="1059.94" y="1295.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="1025.8" y="1349" width="0.1" height="15.0" fill="rgb(212,17,32)" rx="2" ry="2" />
<text  x="1028.79" y="1359.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (27 samples, 0.05%)</title><rect x="1030.5" y="885" width="0.5" height="15.0" fill="rgb(231,179,3)" rx="2" ry="2" />
<text  x="1033.48" y="895.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (10 samples, 0.02%)</title><rect x="1014.2" y="1333" width="0.2" height="15.0" fill="rgb(209,61,45)" rx="2" ry="2" />
<text  x="1017.16" y="1343.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (7 samples, 0.01%)</title><rect x="1056.7" y="1333" width="0.2" height="15.0" fill="rgb(245,105,6)" rx="2" ry="2" />
<text  x="1059.70" y="1343.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::stream::Stream&gt;::poll (5 samples, 0.01%)</title><rect x="1052.3" y="1237" width="0.1" height="15.0" fill="rgb(242,101,53)" rx="2" ry="2" />
<text  x="1055.33" y="1247.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="1036.9" y="1173" width="0.2" height="15.0" fill="rgb(236,224,8)" rx="2" ry="2" />
<text  x="1039.91" y="1183.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::arith::Add&lt;&amp;str&gt;&gt;::add (19 samples, 0.03%)</title><rect x="197.3" y="1285" width="0.4" height="15.0" fill="rgb(227,188,32)" rx="2" ry="2" />
<text  x="200.28" y="1295.5" ></text>
</g>
<g >
<title>alloc::rc::RcBoxPtr::strong (126 samples, 0.23%)</title><rect x="249.1" y="1301" width="2.7" height="15.0" fill="rgb(236,123,51)" rx="2" ry="2" />
<text  x="252.11" y="1311.5" ></text>
</g>
<g >
<title>mio_extras::timer::Timer&lt;T&gt;::poll_to (10 samples, 0.02%)</title><rect x="994.3" y="1301" width="0.2" height="15.0" fill="rgb(214,2,5)" rx="2" ry="2" />
<text  x="997.28" y="1311.5" ></text>
</g>
<g >
<title>mio::sys::unix::cvt (5 samples, 0.01%)</title><rect x="1106.0" y="901" width="0.1" height="15.0" fill="rgb(242,196,54)" rx="2" ry="2" />
<text  x="1108.97" y="911.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (67 samples, 0.12%)</title><rect x="959.2" y="1269" width="1.4" height="15.0" fill="rgb(209,26,44)" rx="2" ry="2" />
<text  x="962.22" y="1279.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (24 samples, 0.04%)</title><rect x="1111.5" y="885" width="0.5" height="15.0" fill="rgb(233,214,6)" rx="2" ry="2" />
<text  x="1114.47" y="895.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h3169cfffdbef5731 (13 samples, 0.02%)</title><rect x="194.1" y="1477" width="0.2" height="15.0" fill="rgb(246,7,16)" rx="2" ry="2" />
<text  x="197.07" y="1487.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,082 samples, 10.94%)</title><rect x="1060.7" y="1269" width="129.0" height="15.0" fill="rgb(233,30,8)" rx="2" ry="2" />
<text  x="1063.65" y="1279.5" >std::thread::loc..</text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (36,502 samples, 65.64%)</title><rect x="202.5" y="1397" width="774.6" height="15.0" fill="rgb(243,59,52)" rx="2" ry="2" />
<text  x="205.54" y="1407.5" >std::sys_common::backtrace::__rust_begin_short_backtrace</text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (23 samples, 0.04%)</title><rect x="1057.6" y="1269" width="0.5" height="15.0" fill="rgb(210,227,26)" rx="2" ry="2" />
<text  x="1060.59" y="1279.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (27 samples, 0.05%)</title><rect x="701.5" y="1317" width="0.6" height="15.0" fill="rgb(216,18,51)" rx="2" ry="2" />
<text  x="704.54" y="1327.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (7 samples, 0.01%)</title><rect x="1143.9" y="917" width="0.1" height="15.0" fill="rgb(243,20,39)" rx="2" ry="2" />
<text  x="1146.89" y="927.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (12 samples, 0.02%)</title><rect x="1024.1" y="853" width="0.2" height="15.0" fill="rgb(222,117,30)" rx="2" ry="2" />
<text  x="1027.09" y="863.5" ></text>
</g>
<g >
<title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.09%)</title><rect x="1186.7" y="869" width="1.1" height="15.0" fill="rgb(226,215,41)" rx="2" ry="2" />
<text  x="1189.71" y="879.5" ></text>
</g>
<g >
<title>std::sys_common::thread::start_thread (37,453 samples, 67.35%)</title><rect x="195.2" y="1557" width="794.7" height="15.0" fill="rgb(241,37,7)" rx="2" ry="2" />
<text  x="198.16" y="1567.5" >std::sys_common::thread::start_thread</text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (185 samples, 0.33%)</title><rect x="823.5" y="1093" width="3.9" height="15.0" fill="rgb(245,5,15)" rx="2" ry="2" />
<text  x="826.49" y="1103.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.01%)</title><rect x="1097.5" y="901" width="0.2" height="15.0" fill="rgb(211,209,28)" rx="2" ry="2" />
<text  x="1100.55" y="911.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit (23 samples, 0.04%)</title><rect x="1014.5" y="1237" width="0.4" height="15.0" fill="rgb(215,3,31)" rx="2" ry="2" />
<text  x="1017.46" y="1247.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::Handle as tokio_executor::park::Unpark&gt;::unpark (41 samples, 0.07%)</title><rect x="1048.0" y="997" width="0.9" height="15.0" fill="rgb(248,61,14)" rx="2" ry="2" />
<text  x="1050.98" y="1007.5" ></text>
</g>
<g >
<title>tower_balance::p2c::service::Balance&lt;D,Req&gt;::push_unready (5 samples, 0.01%)</title><rect x="995.4" y="773" width="0.1" height="15.0" fill="rgb(243,78,54)" rx="2" ry="2" />
<text  x="998.42" y="783.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::Reactor as tokio_executor::park::Park&gt;::park (1,131 samples, 2.03%)</title><rect x="1086.6" y="1013" width="24.0" height="15.0" fill="rgb(212,115,10)" rx="2" ry="2" />
<text  x="1089.64" y="1023.5" >&lt;..</text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (93 samples, 0.17%)</title><rect x="1057.1" y="1397" width="2.0" height="15.0" fill="rgb(230,183,44)" rx="2" ry="2" />
<text  x="1060.09" y="1407.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::notify (47 samples, 0.08%)</title><rect x="1048.0" y="1253" width="1.0" height="15.0" fill="rgb(238,191,4)" rx="2" ry="2" />
<text  x="1050.96" y="1263.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (29 samples, 0.05%)</title><rect x="1118.0" y="933" width="0.7" height="15.0" fill="rgb(222,182,47)" rx="2" ry="2" />
<text  x="1121.05" y="943.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::stream::Stream&gt;::poll (11 samples, 0.02%)</title><rect x="1038.1" y="1093" width="0.2" height="15.0" fill="rgb(231,199,47)" rx="2" ry="2" />
<text  x="1041.12" y="1103.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (84 samples, 0.15%)</title><rect x="1144.5" y="837" width="1.8" height="15.0" fill="rgb(217,154,39)" rx="2" ry="2" />
<text  x="1147.49" y="847.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (18 samples, 0.03%)</title><rect x="1178.3" y="821" width="0.4" height="15.0" fill="rgb(222,90,28)" rx="2" ry="2" />
<text  x="1181.31" y="831.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (33 samples, 0.06%)</title><rect x="1030.5" y="1413" width="0.7" height="15.0" fill="rgb(236,68,30)" rx="2" ry="2" />
<text  x="1033.48" y="1423.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (10 samples, 0.02%)</title><rect x="201.4" y="1301" width="0.2" height="15.0" fill="rgb(218,213,36)" rx="2" ry="2" />
<text  x="204.37" y="1311.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (24 samples, 0.04%)</title><rect x="1151.7" y="501" width="0.5" height="15.0" fill="rgb(248,122,20)" rx="2" ry="2" />
<text  x="1154.72" y="511.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (12 samples, 0.02%)</title><rect x="1033.7" y="1381" width="0.2" height="15.0" fill="rgb(233,132,11)" rx="2" ry="2" />
<text  x="1036.68" y="1391.5" ></text>
</g>
<g >
<title>_rjem_je_arena_dalloc_bin_junked_locked (5 samples, 0.01%)</title><rect x="1060.5" y="1461" width="0.1" height="15.0" fill="rgb(222,73,2)" rx="2" ry="2" />
<text  x="1063.48" y="1471.5" ></text>
</g>
<g >
<title>noria::view::SyncView::lookup (5 samples, 0.01%)</title><rect x="192.5" y="1445" width="0.1" height="15.0" fill="rgb(252,28,25)" rx="2" ry="2" />
<text  x="195.48" y="1455.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::with_default (5 samples, 0.01%)</title><rect x="192.7" y="1445" width="0.1" height="15.0" fill="rgb(206,149,15)" rx="2" ry="2" />
<text  x="195.69" y="1455.5" ></text>
</g>
<g >
<title>&lt;futures::stream::futures_unordered::ArcNode&lt;T&gt; as futures::task_impl::UnsafeNotify&gt;::drop_raw (12 samples, 0.02%)</title><rect x="1005.5" y="1413" width="0.3" height="15.0" fill="rgb(225,153,4)" rx="2" ry="2" />
<text  x="1008.50" y="1423.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *const T&gt;::add (45 samples, 0.08%)</title><rect x="550.3" y="1221" width="0.9" height="15.0" fill="rgb(232,11,8)" rx="2" ry="2" />
<text  x="553.29" y="1231.5" ></text>
</g>
<g >
<title>&lt;mio::net::tcp::TcpStream as std::io::Write&gt;::write (5 samples, 0.01%)</title><rect x="995.2" y="1285" width="0.1" height="15.0" fill="rgb(250,199,11)" rx="2" ry="2" />
<text  x="998.21" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::std::BorrowedUnpark::to_owned (7 samples, 0.01%)</title><rect x="1013.6" y="1445" width="0.2" height="15.0" fill="rgb(205,125,29)" rx="2" ry="2" />
<text  x="1016.63" y="1455.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::Pool&lt;MS,Target,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (13 samples, 0.02%)</title><rect x="1030.8" y="837" width="0.2" height="15.0" fill="rgb(217,160,21)" rx="2" ry="2" />
<text  x="1033.77" y="847.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (11 samples, 0.02%)</title><rect x="560.2" y="1157" width="0.2" height="15.0" fill="rgb(245,40,54)" rx="2" ry="2" />
<text  x="563.20" y="1167.5" ></text>
</g>
<g >
<title>core::num::&lt;impl isize&gt;::wrapping_sub (9 samples, 0.02%)</title><rect x="1158.4" y="1013" width="0.2" height="15.0" fill="rgb(236,148,52)" rx="2" ry="2" />
<text  x="1161.45" y="1023.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::as_ptr (5 samples, 0.01%)</title><rect x="243.0" y="1285" width="0.1" height="15.0" fill="rgb(241,11,48)" rx="2" ry="2" />
<text  x="245.96" y="1295.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.03%)</title><rect x="193.3" y="1237" width="0.3" height="15.0" fill="rgb(214,136,51)" rx="2" ry="2" />
<text  x="196.33" y="1247.5" ></text>
</g>
<g >
<title>noria::table::_::&lt;impl serde::ser::Serialize for noria::table::Input&gt;::serialize (5 samples, 0.01%)</title><rect x="1057.7" y="1077" width="0.1" height="15.0" fill="rgb(214,171,34)" rx="2" ry="2" />
<text  x="1060.68" y="1087.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::DropNotifyService&lt;Svc&gt; as tower_service::Service&lt;Request&gt;&gt;::call (6 samples, 0.01%)</title><rect x="1015.2" y="853" width="0.1" height="15.0" fill="rgb(222,8,3)" rx="2" ry="2" />
<text  x="1018.22" y="863.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (20 samples, 0.04%)</title><rect x="1036.5" y="1445" width="0.4" height="15.0" fill="rgb(239,183,45)" rx="2" ry="2" />
<text  x="1039.48" y="1455.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (18 samples, 0.03%)</title><rect x="180.0" y="1317" width="0.4" height="15.0" fill="rgb(231,53,31)" rx="2" ry="2" />
<text  x="183.03" y="1327.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (7 samples, 0.01%)</title><rect x="1055.6" y="1253" width="0.2" height="15.0" fill="rgb(212,113,12)" rx="2" ry="2" />
<text  x="1058.64" y="1263.5" ></text>
</g>
<g >
<title>mio::poll::enqueue_with_wakeup (101 samples, 0.18%)</title><rect x="1144.1" y="917" width="2.2" height="15.0" fill="rgb(221,149,30)" rx="2" ry="2" />
<text  x="1147.15" y="927.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (155 samples, 0.28%)</title><rect x="327.2" y="1269" width="3.3" height="15.0" fill="rgb(206,49,1)" rx="2" ry="2" />
<text  x="330.20" y="1279.5" ></text>
</g>
<g >
<title>__libc_recv (12 samples, 0.02%)</title><rect x="1037.4" y="917" width="0.2" height="15.0" fill="rgb(230,95,27)" rx="2" ry="2" />
<text  x="1040.39" y="927.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (17 samples, 0.03%)</title><rect x="1036.1" y="1205" width="0.4" height="15.0" fill="rgb(242,32,27)" rx="2" ry="2" />
<text  x="1039.12" y="1215.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::clone_id (7 samples, 0.01%)</title><rect x="1058.8" y="1125" width="0.2" height="15.0" fill="rgb(253,221,13)" rx="2" ry="2" />
<text  x="1061.80" y="1135.5" ></text>
</g>
<g >
<title>sock_def_readable (9 samples, 0.02%)</title><rect x="1042.3" y="245" width="0.2" height="15.0" fill="rgb(243,180,51)" rx="2" ry="2" />
<text  x="1045.27" y="255.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::spawn_thread::_$u7b$$u7b$closure$u7d$$u7d$::ha7200d58e6efae3b (7 samples, 0.01%)</title><rect x="1030.3" y="1557" width="0.2" height="15.0" fill="rgb(253,103,0)" rx="2" ry="2" />
<text  x="1033.33" y="1567.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::pool::state::Lifecycle as core::convert::From&lt;usize&gt;&gt;::from (8 samples, 0.01%)</title><rect x="1067.3" y="1013" width="0.2" height="15.0" fill="rgb(233,84,23)" rx="2" ry="2" />
<text  x="1070.29" y="1023.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::ok_or (68 samples, 0.12%)</title><rect x="310.5" y="1237" width="1.4" height="15.0" fill="rgb(254,167,10)" rx="2" ry="2" />
<text  x="313.48" y="1247.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (6,084 samples, 10.94%)</title><rect x="1060.6" y="1541" width="129.1" height="15.0" fill="rgb(219,115,18)" rx="2" ry="2" />
<text  x="1063.61" y="1551.5" >&lt;alloc::boxed::B..</text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (11 samples, 0.02%)</title><rect x="1034.0" y="1381" width="0.2" height="15.0" fill="rgb(221,59,52)" rx="2" ry="2" />
<text  x="1036.96" y="1391.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (12 samples, 0.02%)</title><rect x="1022.2" y="1477" width="0.2" height="15.0" fill="rgb(220,197,31)" rx="2" ry="2" />
<text  x="1025.18" y="1487.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (9 samples, 0.02%)</title><rect x="1049.5" y="1349" width="0.2" height="15.0" fill="rgb(224,142,7)" rx="2" ry="2" />
<text  x="1052.53" y="1359.5" ></text>
</g>
<g >
<title>noria::table::_::&lt;impl serde::de::Deserialize for noria::table::TableBuilder&gt;::deserialize (5 samples, 0.01%)</title><rect x="1021.0" y="1429" width="0.1" height="15.0" fill="rgb(207,19,44)" rx="2" ry="2" />
<text  x="1024.01" y="1439.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="1019.8" y="1573" width="0.2" height="15.0" fill="rgb(217,66,2)" rx="2" ry="2" />
<text  x="1022.83" y="1583.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (118 samples, 0.21%)</title><rect x="1107.1" y="917" width="2.5" height="15.0" fill="rgb(209,215,30)" rx="2" ry="2" />
<text  x="1110.12" y="927.5" ></text>
</g>
<g >
<title>core::ptr::read (72 samples, 0.13%)</title><rect x="854.3" y="1269" width="1.5" height="15.0" fill="rgb(232,95,10)" rx="2" ry="2" />
<text  x="857.25" y="1279.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::enqueue_node_with_wakeup (32 samples, 0.06%)</title><rect x="185.1" y="1077" width="0.7" height="15.0" fill="rgb(223,170,29)" rx="2" ry="2" />
<text  x="188.14" y="1087.5" ></text>
</g>
<g >
<title>zookeeper::io::ZkIo::ready (5 samples, 0.01%)</title><rect x="992.8" y="1429" width="0.1" height="15.0" fill="rgb(240,110,10)" rx="2" ry="2" />
<text  x="995.81" y="1439.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.01%)</title><rect x="1027.4" y="1125" width="0.2" height="15.0" fill="rgb(232,130,5)" rx="2" ry="2" />
<text  x="1030.44" y="1135.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (22 samples, 0.04%)</title><rect x="1059.9" y="1381" width="0.5" height="15.0" fill="rgb(238,189,37)" rx="2" ry="2" />
<text  x="1062.89" y="1391.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.03%)</title><rect x="197.4" y="1205" width="0.3" height="15.0" fill="rgb(228,225,50)" rx="2" ry="2" />
<text  x="200.38" y="1215.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::DataType&gt;::serialize (6 samples, 0.01%)</title><rect x="1026.3" y="997" width="0.2" height="15.0" fill="rgb(209,79,18)" rx="2" ry="2" />
<text  x="1029.34" y="1007.5" ></text>
</g>
<g >
<title>bincode::ser::Serializer&lt;W,O&gt;::serialize_byte (10 samples, 0.02%)</title><rect x="1045.6" y="933" width="0.2" height="15.0" fill="rgb(212,105,11)" rx="2" ry="2" />
<text  x="1048.58" y="943.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::poll_complete (21 samples, 0.04%)</title><rect x="1057.1" y="1237" width="0.5" height="15.0" fill="rgb(207,172,33)" rx="2" ry="2" />
<text  x="1060.15" y="1247.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (34 samples, 0.06%)</title><rect x="627.8" y="1109" width="0.7" height="15.0" fill="rgb(241,215,49)" rx="2" ry="2" />
<text  x="630.79" y="1119.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (7 samples, 0.01%)</title><rect x="1030.3" y="1317" width="0.2" height="15.0" fill="rgb(223,3,27)" rx="2" ry="2" />
<text  x="1033.33" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (29 samples, 0.05%)</title><rect x="1113.0" y="869" width="0.6" height="15.0" fill="rgb(245,48,3)" rx="2" ry="2" />
<text  x="1115.95" y="879.5" ></text>
</g>
<g >
<title>&lt;futures::future::either::Either&lt;A,B&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="189.0" y="1285" width="0.2" height="15.0" fill="rgb(223,61,28)" rx="2" ry="2" />
<text  x="192.02" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (64 samples, 0.12%)</title><rect x="1050.0" y="1109" width="1.4" height="15.0" fill="rgb(227,128,14)" rx="2" ry="2" />
<text  x="1053.02" y="1119.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (7 samples, 0.01%)</title><rect x="251.6" y="1269" width="0.2" height="15.0" fill="rgb(227,135,27)" rx="2" ry="2" />
<text  x="254.64" y="1279.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (135 samples, 0.24%)</title><rect x="1140.3" y="1029" width="2.9" height="15.0" fill="rgb(222,20,36)" rx="2" ry="2" />
<text  x="1143.33" y="1039.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (16 samples, 0.03%)</title><rect x="1026.2" y="1365" width="0.3" height="15.0" fill="rgb(240,69,10)" rx="2" ry="2" />
<text  x="1029.19" y="1375.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run (6,082 samples, 10.94%)</title><rect x="1060.7" y="1365" width="129.0" height="15.0" fill="rgb(208,6,30)" rx="2" ry="2" />
<text  x="1063.65" y="1375.5" >tokio_threadpool..</text>
</g>
<g >
<title>_rjem_rallocx (75 samples, 0.13%)</title><rect x="1017.0" y="1589" width="1.6" height="15.0" fill="rgb(242,198,52)" rx="2" ry="2" />
<text  x="1019.96" y="1599.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (16 samples, 0.03%)</title><rect x="1026.2" y="1349" width="0.3" height="15.0" fill="rgb(230,176,45)" rx="2" ry="2" />
<text  x="1029.19" y="1359.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (193 samples, 0.35%)</title><rect x="985.8" y="1445" width="4.1" height="15.0" fill="rgb(240,59,14)" rx="2" ry="2" />
<text  x="988.77" y="1455.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current (15 samples, 0.03%)</title><rect x="194.7" y="1525" width="0.3" height="15.0" fill="rgb(254,202,26)" rx="2" ry="2" />
<text  x="197.71" y="1535.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (31 samples, 0.06%)</title><rect x="1129.4" y="1013" width="0.7" height="15.0" fill="rgb(207,127,26)" rx="2" ry="2" />
<text  x="1132.42" y="1023.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (7 samples, 0.01%)</title><rect x="1019.3" y="1589" width="0.1" height="15.0" fill="rgb(211,26,19)" rx="2" ry="2" />
<text  x="1022.27" y="1599.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="1041.1" y="853" width="0.2" height="15.0" fill="rgb(223,147,2)" rx="2" ry="2" />
<text  x="1044.09" y="863.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll1 (256 samples, 0.46%)</title><rect x="1075.0" y="933" width="5.5" height="15.0" fill="rgb(222,187,35)" rx="2" ry="2" />
<text  x="1078.04" y="943.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (6 samples, 0.01%)</title><rect x="194.7" y="1285" width="0.1" height="15.0" fill="rgb(239,109,37)" rx="2" ry="2" />
<text  x="197.71" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (35 samples, 0.06%)</title><rect x="1051.9" y="1301" width="0.7" height="15.0" fill="rgb(217,218,33)" rx="2" ry="2" />
<text  x="1054.87" y="1311.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (12 samples, 0.02%)</title><rect x="1029.9" y="837" width="0.3" height="15.0" fill="rgb(253,149,31)" rx="2" ry="2" />
<text  x="1032.95" y="847.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default (38 samples, 0.07%)</title><rect x="1026.6" y="1445" width="0.8" height="15.0" fill="rgb(212,23,24)" rx="2" ry="2" />
<text  x="1029.64" y="1455.5" ></text>
</g>
<g >
<title>_$LT$serde..de..impls..ArrayVisitor$LT$$u5b$T$u3b$$u20$_$u5d$$GT$$u20$as$u20$serde..de..Visitor$GT$::visit_seq::h74cb117724976784 (27 samples, 0.05%)</title><rect x="1002.5" y="677" width="0.5" height="15.0" fill="rgb(230,114,3)" rx="2" ry="2" />
<text  x="1005.47" y="687.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (44 samples, 0.08%)</title><rect x="852.8" y="1221" width="1.0" height="15.0" fill="rgb(241,190,27)" rx="2" ry="2" />
<text  x="855.83" y="1231.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (31 samples, 0.06%)</title><rect x="1035.2" y="1141" width="0.7" height="15.0" fill="rgb(213,177,48)" rx="2" ry="2" />
<text  x="1038.23" y="1151.5" ></text>
</g>
<g >
<title>tokio_timer::wheel::Wheel&lt;T&gt;::poll (140 samples, 0.25%)</title><rect x="1116.1" y="997" width="3.0" height="15.0" fill="rgb(242,205,45)" rx="2" ry="2" />
<text  x="1119.12" y="1007.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (5 samples, 0.01%)</title><rect x="1021.0" y="1445" width="0.1" height="15.0" fill="rgb(216,85,18)" rx="2" ry="2" />
<text  x="1024.01" y="1455.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (7 samples, 0.01%)</title><rect x="1030.3" y="1253" width="0.2" height="15.0" fill="rgb(223,80,14)" rx="2" ry="2" />
<text  x="1033.33" y="1263.5" ></text>
</g>
<g >
<title>std::panicking::try (9 samples, 0.02%)</title><rect x="1049.5" y="1333" width="0.2" height="15.0" fill="rgb(222,58,46)" rx="2" ry="2" />
<text  x="1052.53" y="1343.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::right_edge (27 samples, 0.05%)</title><rect x="647.2" y="1173" width="0.6" height="15.0" fill="rgb(248,28,54)" rx="2" ry="2" />
<text  x="650.22" y="1183.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (18 samples, 0.03%)</title><rect x="180.0" y="1301" width="0.4" height="15.0" fill="rgb(231,137,26)" rx="2" ry="2" />
<text  x="183.03" y="1311.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (5 samples, 0.01%)</title><rect x="997.0" y="1365" width="0.1" height="15.0" fill="rgb(236,26,23)" rx="2" ry="2" />
<text  x="999.95" y="1375.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h3169cfffdbef5731 (6 samples, 0.01%)</title><rect x="188.5" y="1573" width="0.1" height="15.0" fill="rgb(221,96,21)" rx="2" ry="2" />
<text  x="191.47" y="1583.5" ></text>
</g>
<g >
<title>core::ptr::read (90 samples, 0.16%)</title><rect x="627.3" y="1125" width="1.9" height="15.0" fill="rgb(222,12,4)" rx="2" ry="2" />
<text  x="630.26" y="1135.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.01%)</title><rect x="1058.1" y="1157" width="0.2" height="15.0" fill="rgb(206,204,35)" rx="2" ry="2" />
<text  x="1061.10" y="1167.5" ></text>
</g>
<g >
<title>core::mem::swap (16 samples, 0.03%)</title><rect x="1013.1" y="1509" width="0.4" height="15.0" fill="rgb(225,155,52)" rx="2" ry="2" />
<text  x="1016.12" y="1519.5" ></text>
</g>
<g >
<title>alloc::rc::Rc&lt;T&gt;::from_inner (23 samples, 0.04%)</title><rect x="403.4" y="1317" width="0.5" height="15.0" fill="rgb(252,9,37)" rx="2" ry="2" />
<text  x="406.40" y="1327.5" ></text>
</g>
<g >
<title>alloc::rc::Rc&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="991.4" y="1573" width="0.1" height="15.0" fill="rgb(209,229,34)" rx="2" ry="2" />
<text  x="994.37" y="1583.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (8 samples, 0.01%)</title><rect x="1034.7" y="1333" width="0.2" height="15.0" fill="rgb(251,109,14)" rx="2" ry="2" />
<text  x="1037.70" y="1343.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::h0526eb82a46ed6bf (11 samples, 0.02%)</title><rect x="992.9" y="1509" width="0.3" height="15.0" fill="rgb(250,77,10)" rx="2" ry="2" />
<text  x="995.92" y="1519.5" ></text>
</g>
<g >
<title>core::ptr::read (89 samples, 0.16%)</title><rect x="1178.7" y="821" width="1.9" height="15.0" fill="rgb(247,27,28)" rx="2" ry="2" />
<text  x="1181.71" y="831.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (13 samples, 0.02%)</title><rect x="1051.6" y="1381" width="0.3" height="15.0" fill="rgb(242,203,51)" rx="2" ry="2" />
<text  x="1054.59" y="1391.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (5 samples, 0.01%)</title><rect x="1160.9" y="885" width="0.1" height="15.0" fill="rgb(248,229,9)" rx="2" ry="2" />
<text  x="1163.89" y="895.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner&lt;T&gt;::complete (32 samples, 0.06%)</title><rect x="1043.6" y="933" width="0.7" height="15.0" fill="rgb(224,118,19)" rx="2" ry="2" />
<text  x="1046.63" y="943.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (6 samples, 0.01%)</title><rect x="1050.8" y="549" width="0.1" height="15.0" fill="rgb(229,21,29)" rx="2" ry="2" />
<text  x="1053.80" y="559.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (17 samples, 0.03%)</title><rect x="189.0" y="1413" width="0.4" height="15.0" fill="rgb(235,125,9)" rx="2" ry="2" />
<text  x="192.02" y="1423.5" ></text>
</g>
<g >
<title>bincode::internal::serialize_into (9 samples, 0.02%)</title><rect x="1052.1" y="1157" width="0.1" height="15.0" fill="rgb(228,193,5)" rx="2" ry="2" />
<text  x="1055.06" y="1167.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h314dffd6987d5e7f (11 samples, 0.02%)</title><rect x="977.1" y="1525" width="0.2" height="15.0" fill="rgb(248,175,25)" rx="2" ry="2" />
<text  x="980.07" y="1535.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::DataType&gt;::serialize (7 samples, 0.01%)</title><rect x="1027.6" y="965" width="0.1" height="15.0" fill="rgb(243,48,4)" rx="2" ry="2" />
<text  x="1030.59" y="975.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (8 samples, 0.01%)</title><rect x="1015.2" y="1061" width="0.1" height="15.0" fill="rgb(245,70,52)" rx="2" ry="2" />
<text  x="1018.18" y="1071.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.01%)</title><rect x="1022.5" y="1157" width="0.1" height="15.0" fill="rgb(244,173,47)" rx="2" ry="2" />
<text  x="1025.48" y="1167.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (7 samples, 0.01%)</title><rect x="1053.7" y="1061" width="0.2" height="15.0" fill="rgb(236,50,9)" rx="2" ry="2" />
<text  x="1056.73" y="1071.5" ></text>
</g>
<g >
<title>serde::ser::impls::_$LT$impl$u20$serde..ser..Serialize$u20$for$u20$$u5b$T$u3b$$u20$_$u5d$$GT$::serialize::h2ec73812861b0f31 (8 samples, 0.01%)</title><rect x="1054.1" y="965" width="0.2" height="15.0" fill="rgb(214,212,28)" rx="2" ry="2" />
<text  x="1057.11" y="975.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (11 samples, 0.02%)</title><rect x="1036.9" y="1397" width="0.2" height="15.0" fill="rgb(242,138,4)" rx="2" ry="2" />
<text  x="1039.91" y="1407.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (13 samples, 0.02%)</title><rect x="194.1" y="1493" width="0.2" height="15.0" fill="rgb(240,136,30)" rx="2" ry="2" />
<text  x="197.07" y="1503.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (20 samples, 0.04%)</title><rect x="1136.1" y="1013" width="0.4" height="15.0" fill="rgb(251,57,49)" rx="2" ry="2" />
<text  x="1139.10" y="1023.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::clone_id (5 samples, 0.01%)</title><rect x="1060.2" y="1093" width="0.1" height="15.0" fill="rgb(241,142,31)" rx="2" ry="2" />
<text  x="1063.23" y="1103.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::state::State::is_terminated (27 samples, 0.05%)</title><rect x="1066.9" y="1061" width="0.6" height="15.0" fill="rgb(216,113,48)" rx="2" ry="2" />
<text  x="1069.89" y="1071.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc (263 samples, 0.47%)</title><rect x="684.3" y="1221" width="5.6" height="15.0" fill="rgb(230,25,54)" rx="2" ry="2" />
<text  x="687.27" y="1231.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (13 samples, 0.02%)</title><rect x="1033.4" y="1237" width="0.3" height="15.0" fill="rgb(222,75,1)" rx="2" ry="2" />
<text  x="1036.41" y="1247.5" ></text>
</g>
<g >
<title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1031.0" y="837" width="0.2" height="15.0" fill="rgb(230,1,53)" rx="2" ry="2" />
<text  x="1034.05" y="847.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (44 samples, 0.08%)</title><rect x="187.5" y="1413" width="1.0" height="15.0" fill="rgb(239,18,22)" rx="2" ry="2" />
<text  x="190.54" y="1423.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::notify (6 samples, 0.01%)</title><rect x="1150.9" y="437" width="0.1" height="15.0" fill="rgb(227,92,48)" rx="2" ry="2" />
<text  x="1153.91" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (6 samples, 0.01%)</title><rect x="998.3" y="773" width="0.1" height="15.0" fill="rgb(241,161,19)" rx="2" ry="2" />
<text  x="1001.27" y="783.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.01%)</title><rect x="978.6" y="1237" width="0.1" height="15.0" fill="rgb(251,228,30)" rx="2" ry="2" />
<text  x="981.58" y="1247.5" ></text>
</g>
<g >
<title>mio::poll::RegistrationInner::set_readiness (5 samples, 0.01%)</title><rect x="996.3" y="1061" width="0.1" height="15.0" fill="rgb(240,32,29)" rx="2" ry="2" />
<text  x="999.27" y="1071.5" ></text>
</g>
<g >
<title>tokio_timer::wheel::Wheel&lt;T&gt;::next_expiration (55 samples, 0.10%)</title><rect x="1119.5" y="997" width="1.1" height="15.0" fill="rgb(243,179,50)" rx="2" ry="2" />
<text  x="1122.47" y="1007.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1033.8" y="1029" width="0.1" height="15.0" fill="rgb(229,209,17)" rx="2" ry="2" />
<text  x="1036.81" y="1039.5" ></text>
</g>
<g >
<title>vfs_write (18 samples, 0.03%)</title><rect x="1024.1" y="949" width="0.4" height="15.0" fill="rgb(254,190,5)" rx="2" ry="2" />
<text  x="1027.09" y="959.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (78 samples, 0.14%)</title><rect x="1049.7" y="1381" width="1.7" height="15.0" fill="rgb(225,101,1)" rx="2" ry="2" />
<text  x="1052.72" y="1391.5" ></text>
</g>
<g >
<title>core::ptr::read (243 samples, 0.44%)</title><rect x="969.7" y="1285" width="5.1" height="15.0" fill="rgb(225,106,26)" rx="2" ry="2" />
<text  x="972.66" y="1295.5" ></text>
</g>
<g >
<title>zookeeper::io::ZkIo::handle_response (7 samples, 0.01%)</title><rect x="994.7" y="1317" width="0.1" height="15.0" fill="rgb(244,217,53)" rx="2" ry="2" />
<text  x="997.68" y="1327.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (37 samples, 0.07%)</title><rect x="438.4" y="1285" width="0.8" height="15.0" fill="rgb(239,84,42)" rx="2" ry="2" />
<text  x="441.41" y="1295.5" ></text>
</g>
<g >
<title>&lt;chrono::naive::date::NaiveDate as core::fmt::Debug&gt;::fmt (11 samples, 0.02%)</title><rect x="997.7" y="965" width="0.2" height="15.0" fill="rgb(248,13,39)" rx="2" ry="2" />
<text  x="1000.67" y="975.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::worker::Worker&lt;T,Request&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="1030.1" y="789" width="0.1" height="15.0" fill="rgb(219,18,30)" rx="2" ry="2" />
<text  x="1033.05" y="799.5" ></text>
</g>
<g >
<title>&lt;mio::net::tcp::TcpStream as std::io::Read&gt;::read (20 samples, 0.04%)</title><rect x="1035.4" y="997" width="0.4" height="15.0" fill="rgb(206,4,52)" rx="2" ry="2" />
<text  x="1038.38" y="1007.5" ></text>
</g>
<g >
<title>std::panicking::try (20 samples, 0.04%)</title><rect x="1059.3" y="1413" width="0.4" height="15.0" fill="rgb(232,158,8)" rx="2" ry="2" />
<text  x="1062.29" y="1423.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (18 samples, 0.03%)</title><rect x="977.4" y="1349" width="0.3" height="15.0" fill="rgb(229,53,13)" rx="2" ry="2" />
<text  x="980.37" y="1359.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::reborrow (63 samples, 0.11%)</title><rect x="747.4" y="1173" width="1.3" height="15.0" fill="rgb(233,13,29)" rx="2" ry="2" />
<text  x="750.38" y="1183.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (11 samples, 0.02%)</title><rect x="1150.0" y="805" width="0.2" height="15.0" fill="rgb(233,129,2)" rx="2" ry="2" />
<text  x="1152.98" y="815.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (8 samples, 0.01%)</title><rect x="1070.2" y="1045" width="0.1" height="15.0" fill="rgb(216,210,39)" rx="2" ry="2" />
<text  x="1073.16" y="1055.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::clone_id (5 samples, 0.01%)</title><rect x="1056.0" y="1141" width="0.1" height="15.0" fill="rgb(225,19,14)" rx="2" ry="2" />
<text  x="1058.96" y="1151.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (22 samples, 0.04%)</title><rect x="835.6" y="1093" width="0.4" height="15.0" fill="rgb(223,197,22)" rx="2" ry="2" />
<text  x="838.56" y="1103.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.03%)</title><rect x="194.1" y="1589" width="0.3" height="15.0" fill="rgb(242,77,15)" rx="2" ry="2" />
<text  x="197.07" y="1599.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (210 samples, 0.38%)</title><rect x="813.3" y="1045" width="4.5" height="15.0" fill="rgb(237,132,9)" rx="2" ry="2" />
<text  x="816.34" y="1055.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit::_$u7b$$u7b$closure$u7d$$u7d$::h83d517d17b1a75b2 (56 samples, 0.10%)</title><rect x="184.8" y="1253" width="1.2" height="15.0" fill="rgb(230,94,39)" rx="2" ry="2" />
<text  x="187.80" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (6 samples, 0.01%)</title><rect x="996.3" y="1333" width="0.1" height="15.0" fill="rgb(213,81,3)" rx="2" ry="2" />
<text  x="999.27" y="1343.5" ></text>
</g>
<g >
<title>core::ptr::eq (17 samples, 0.03%)</title><rect x="271.8" y="1253" width="0.4" height="15.0" fill="rgb(208,69,2)" rx="2" ry="2" />
<text  x="274.84" y="1263.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (24 samples, 0.04%)</title><rect x="262.4" y="1253" width="0.5" height="15.0" fill="rgb(240,120,19)" rx="2" ry="2" />
<text  x="265.38" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (20 samples, 0.04%)</title><rect x="1029.0" y="997" width="0.4" height="15.0" fill="rgb(241,208,1)" rx="2" ry="2" />
<text  x="1031.97" y="1007.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (8 samples, 0.01%)</title><rect x="1036.5" y="1317" width="0.2" height="15.0" fill="rgb(253,20,43)" rx="2" ry="2" />
<text  x="1039.48" y="1327.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.01%)</title><rect x="994.3" y="1189" width="0.1" height="15.0" fill="rgb(236,209,42)" rx="2" ry="2" />
<text  x="997.30" y="1199.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::with_default (9 samples, 0.02%)</title><rect x="10.0" y="1381" width="0.2" height="15.0" fill="rgb(230,2,1)" rx="2" ry="2" />
<text  x="13.02" y="1391.5" ></text>
</g>
<g >
<title>tcp_sendmsg (12 samples, 0.02%)</title><rect x="1131.3" y="341" width="0.2" height="15.0" fill="rgb(225,107,19)" rx="2" ry="2" />
<text  x="1134.29" y="351.5" ></text>
</g>
<g >
<title>sys_write (10 samples, 0.02%)</title><rect x="10.7" y="949" width="0.3" height="15.0" fill="rgb(220,12,48)" rx="2" ry="2" />
<text  x="13.74" y="959.5" ></text>
</g>
<g >
<title>__libc_send (49 samples, 0.09%)</title><rect x="1041.7" y="789" width="1.0" height="15.0" fill="rgb(244,92,50)" rx="2" ry="2" />
<text  x="1044.70" y="799.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (5 samples, 0.01%)</title><rect x="1053.3" y="1029" width="0.1" height="15.0" fill="rgb(221,19,38)" rx="2" ry="2" />
<text  x="1056.33" y="1039.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h3169cfffdbef5731 (17 samples, 0.03%)</title><rect x="189.0" y="1397" width="0.4" height="15.0" fill="rgb(213,124,47)" rx="2" ry="2" />
<text  x="192.02" y="1407.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (8 samples, 0.01%)</title><rect x="1036.5" y="1221" width="0.2" height="15.0" fill="rgb(210,225,49)" rx="2" ry="2" />
<text  x="1039.48" y="1231.5" ></text>
</g>
<g >
<title>noria::controller::SyncControllerHandle&lt;A,E&gt;::unsubscribe (24 samples, 0.04%)</title><rect x="989.0" y="1317" width="0.5" height="15.0" fill="rgb(223,141,8)" rx="2" ry="2" />
<text  x="991.99" y="1327.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (50 samples, 0.09%)</title><rect x="192.8" y="1509" width="1.1" height="15.0" fill="rgb(242,154,28)" rx="2" ry="2" />
<text  x="195.84" y="1519.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (6,082 samples, 10.94%)</title><rect x="1060.7" y="1349" width="129.0" height="15.0" fill="rgb(219,229,34)" rx="2" ry="2" />
<text  x="1063.65" y="1359.5" >std::thread::loc..</text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (6 samples, 0.01%)</title><rect x="1035.2" y="1109" width="0.2" height="15.0" fill="rgb(208,103,23)" rx="2" ry="2" />
<text  x="1038.23" y="1119.5" ></text>
</g>
<g >
<title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="1044.8" y="1333" width="0.1" height="15.0" fill="rgb(213,73,16)" rx="2" ry="2" />
<text  x="1047.82" y="1343.5" ></text>
</g>
<g >
<title>mio::poll::SetReadiness::set_readiness (8 samples, 0.01%)</title><rect x="1073.1" y="965" width="0.2" height="15.0" fill="rgb(235,56,24)" rx="2" ry="2" />
<text  x="1076.13" y="975.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (18 samples, 0.03%)</title><rect x="1101.5" y="837" width="0.4" height="15.0" fill="rgb(211,108,37)" rx="2" ry="2" />
<text  x="1104.50" y="847.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (7 samples, 0.01%)</title><rect x="1022.5" y="1173" width="0.1" height="15.0" fill="rgb(214,45,2)" rx="2" ry="2" />
<text  x="1025.48" y="1183.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (30 samples, 0.05%)</title><rect x="592.9" y="1013" width="0.7" height="15.0" fill="rgb(251,164,34)" rx="2" ry="2" />
<text  x="595.92" y="1023.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1044.5" y="1205" width="0.1" height="15.0" fill="rgb(218,167,43)" rx="2" ry="2" />
<text  x="1047.48" y="1215.5" ></text>
</g>
<g >
<title>core::mem::replace (164 samples, 0.29%)</title><rect x="823.9" y="1077" width="3.5" height="15.0" fill="rgb(206,15,6)" rx="2" ry="2" />
<text  x="826.93" y="1087.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="1001.3" y="533" width="0.1" height="15.0" fill="rgb(244,195,44)" rx="2" ry="2" />
<text  x="1004.30" y="543.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (10 samples, 0.02%)</title><rect x="995.3" y="869" width="0.2" height="15.0" fill="rgb(217,212,20)" rx="2" ry="2" />
<text  x="998.32" y="879.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (59 samples, 0.11%)</title><rect x="1026.2" y="1573" width="1.2" height="15.0" fill="rgb(252,44,19)" rx="2" ry="2" />
<text  x="1029.19" y="1583.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (144 samples, 0.26%)</title><rect x="1000.0" y="1013" width="3.0" height="15.0" fill="rgb(246,12,39)" rx="2" ry="2" />
<text  x="1002.99" y="1023.5" ></text>
</g>
<g >
<title>std::sync::mpsc::spsc_queue::Queue&lt;T,ProducerAddition,ConsumerAddition&gt;::pop (9 samples, 0.02%)</title><rect x="985.6" y="1301" width="0.2" height="15.0" fill="rgb(223,57,31)" rx="2" ry="2" />
<text  x="988.58" y="1311.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (8 samples, 0.01%)</title><rect x="1034.7" y="1237" width="0.2" height="15.0" fill="rgb(244,165,13)" rx="2" ry="2" />
<text  x="1037.70" y="1247.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (5 samples, 0.01%)</title><rect x="1131.4" y="165" width="0.1" height="15.0" fill="rgb(236,123,44)" rx="2" ry="2" />
<text  x="1134.37" y="175.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (13 samples, 0.02%)</title><rect x="1033.4" y="1333" width="0.3" height="15.0" fill="rgb(249,168,32)" rx="2" ry="2" />
<text  x="1036.41" y="1343.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_mut (26 samples, 0.05%)</title><rect x="280.7" y="1253" width="0.6" height="15.0" fill="rgb(237,101,30)" rx="2" ry="2" />
<text  x="283.73" y="1263.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (9 samples, 0.02%)</title><rect x="1055.2" y="853" width="0.2" height="15.0" fill="rgb(226,72,10)" rx="2" ry="2" />
<text  x="1058.18" y="863.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::run (13 samples, 0.02%)</title><rect x="984.2" y="1221" width="0.3" height="15.0" fill="rgb(222,139,37)" rx="2" ry="2" />
<text  x="987.22" y="1231.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (6 samples, 0.01%)</title><rect x="1034.6" y="1477" width="0.1" height="15.0" fill="rgb(222,74,23)" rx="2" ry="2" />
<text  x="1037.57" y="1487.5" ></text>
</g>
<g >
<title>mio::poll::enqueue_with_wakeup (34 samples, 0.06%)</title><rect x="185.1" y="1093" width="0.7" height="15.0" fill="rgb(209,211,16)" rx="2" ry="2" />
<text  x="188.10" y="1103.5" ></text>
</g>
<g >
<title>serde_json::de::from_trait (5 samples, 0.01%)</title><rect x="1021.0" y="1493" width="0.1" height="15.0" fill="rgb(246,55,3)" rx="2" ry="2" />
<text  x="1024.01" y="1503.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (107 samples, 0.19%)</title><rect x="929.0" y="1301" width="2.2" height="15.0" fill="rgb(235,11,40)" rx="2" ry="2" />
<text  x="931.97" y="1311.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (20 samples, 0.04%)</title><rect x="456.5" y="1141" width="0.4" height="15.0" fill="rgb(209,67,42)" rx="2" ry="2" />
<text  x="459.47" y="1151.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (37 samples, 0.07%)</title><rect x="996.8" y="1589" width="0.8" height="15.0" fill="rgb(219,53,3)" rx="2" ry="2" />
<text  x="999.82" y="1599.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (126 samples, 0.23%)</title><rect x="1038.4" y="1077" width="2.7" height="15.0" fill="rgb(248,214,26)" rx="2" ry="2" />
<text  x="1041.41" y="1087.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (113 samples, 0.20%)</title><rect x="1099.7" y="901" width="2.4" height="15.0" fill="rgb(208,91,23)" rx="2" ry="2" />
<text  x="1102.67" y="911.5" ></text>
</g>
<g >
<title>_rjem_je_tcache_cleanup (5 samples, 0.01%)</title><rect x="195.0" y="1525" width="0.2" height="15.0" fill="rgb(250,114,33)" rx="2" ry="2" />
<text  x="198.05" y="1535.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.01%)</title><rect x="192.5" y="1349" width="0.1" height="15.0" fill="rgb(207,97,36)" rx="2" ry="2" />
<text  x="195.48" y="1359.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (23 samples, 0.04%)</title><rect x="768.8" y="1125" width="0.5" height="15.0" fill="rgb(218,92,32)" rx="2" ry="2" />
<text  x="771.85" y="1135.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::len (8 samples, 0.01%)</title><rect x="551.8" y="1221" width="0.2" height="15.0" fill="rgb(249,170,19)" rx="2" ry="2" />
<text  x="554.84" y="1231.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::as_mut_ptr (14 samples, 0.03%)</title><rect x="257.6" y="1205" width="0.3" height="15.0" fill="rgb(226,65,22)" rx="2" ry="2" />
<text  x="260.62" y="1215.5" ></text>
</g>
<g >
<title>core::ptr::read (114 samples, 0.20%)</title><rect x="721.8" y="1301" width="2.4" height="15.0" fill="rgb(223,10,44)" rx="2" ry="2" />
<text  x="724.83" y="1311.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::pop_task (60 samples, 0.11%)</title><rect x="1135.8" y="1045" width="1.2" height="15.0" fill="rgb(212,165,38)" rx="2" ry="2" />
<text  x="1138.76" y="1055.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (8 samples, 0.01%)</title><rect x="1027.6" y="1109" width="0.1" height="15.0" fill="rgb(212,34,32)" rx="2" ry="2" />
<text  x="1030.57" y="1119.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (67 samples, 0.12%)</title><rect x="187.0" y="1557" width="1.5" height="15.0" fill="rgb(208,106,9)" rx="2" ry="2" />
<text  x="190.05" y="1567.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (14 samples, 0.03%)</title><rect x="1005.5" y="1445" width="0.3" height="15.0" fill="rgb(238,201,41)" rx="2" ry="2" />
<text  x="1008.50" y="1455.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::saturating_mul (6 samples, 0.01%)</title><rect x="1078.3" y="837" width="0.1" height="15.0" fill="rgb(225,179,21)" rx="2" ry="2" />
<text  x="1081.30" y="847.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (8 samples, 0.01%)</title><rect x="1034.7" y="1445" width="0.2" height="15.0" fill="rgb(247,75,1)" rx="2" ry="2" />
<text  x="1037.70" y="1455.5" ></text>
</g>
<g >
<title>core::mem::min_align_of_val (32 samples, 0.06%)</title><rect x="837.3" y="1093" width="0.7" height="15.0" fill="rgb(222,192,37)" rx="2" ry="2" />
<text  x="840.32" y="1103.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (7 samples, 0.01%)</title><rect x="187.8" y="1285" width="0.2" height="15.0" fill="rgb(214,77,43)" rx="2" ry="2" />
<text  x="190.83" y="1295.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (7 samples, 0.01%)</title><rect x="1049.4" y="1349" width="0.1" height="15.0" fill="rgb(220,110,1)" rx="2" ry="2" />
<text  x="1052.38" y="1359.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (9 samples, 0.02%)</title><rect x="997.2" y="997" width="0.2" height="15.0" fill="rgb(231,67,14)" rx="2" ry="2" />
<text  x="1000.16" y="1007.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (11 samples, 0.02%)</title><rect x="1059.1" y="1317" width="0.2" height="15.0" fill="rgb(219,9,24)" rx="2" ry="2" />
<text  x="1062.06" y="1327.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNot&lt;T&gt;&gt;::serialize (6 samples, 0.01%)</title><rect x="1022.2" y="1349" width="0.1" height="15.0" fill="rgb(235,148,2)" rx="2" ry="2" />
<text  x="1025.20" y="1359.5" ></text>
</g>
<g >
<title>core::mem::size_of (37 samples, 0.07%)</title><rect x="735.0" y="1221" width="0.8" height="15.0" fill="rgb(241,152,29)" rx="2" ry="2" />
<text  x="738.03" y="1231.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (158 samples, 0.28%)</title><rect x="1041.1" y="1109" width="3.3" height="15.0" fill="rgb(239,117,54)" rx="2" ry="2" />
<text  x="1044.09" y="1119.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (20 samples, 0.04%)</title><rect x="1059.3" y="1461" width="0.4" height="15.0" fill="rgb(253,207,4)" rx="2" ry="2" />
<text  x="1062.29" y="1471.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (64 samples, 0.12%)</title><rect x="1050.0" y="1157" width="1.4" height="15.0" fill="rgb(223,4,33)" rx="2" ry="2" />
<text  x="1053.02" y="1167.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (14 samples, 0.03%)</title><rect x="182.4" y="1429" width="0.3" height="15.0" fill="rgb(224,138,18)" rx="2" ry="2" />
<text  x="185.38" y="1439.5" ></text>
</g>
<g >
<title>futures::task_impl::std::_$LT$impl$u20$futures..task_impl..Spawn$LT$F$GT$$GT$::wait_future::_$u7b$$u7b$closure$u7d$$u7d$::hd0f6d5cc3fe9bd86 (5 samples, 0.01%)</title><rect x="192.7" y="1317" width="0.1" height="15.0" fill="rgb(214,8,15)" rx="2" ry="2" />
<text  x="195.69" y="1327.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (16 samples, 0.03%)</title><rect x="1049.4" y="1509" width="0.3" height="15.0" fill="rgb(228,63,50)" rx="2" ry="2" />
<text  x="1052.38" y="1519.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (29 samples, 0.05%)</title><rect x="1167.7" y="933" width="0.6" height="15.0" fill="rgb(246,78,12)" rx="2" ry="2" />
<text  x="1170.68" y="943.5" ></text>
</g>
<g >
<title>std::panicking::try (17 samples, 0.03%)</title><rect x="1025.4" y="1477" width="0.4" height="15.0" fill="rgb(212,164,2)" rx="2" ry="2" />
<text  x="1028.43" y="1487.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (8 samples, 0.01%)</title><rect x="1034.7" y="1285" width="0.2" height="15.0" fill="rgb(228,70,20)" rx="2" ry="2" />
<text  x="1037.70" y="1295.5" ></text>
</g>
<g >
<title>futures::future::option::&lt;impl futures::future::Future for core::option::Option&lt;F&gt;&gt;::poll (6 samples, 0.01%)</title><rect x="1053.1" y="1285" width="0.1" height="15.0" fill="rgb(207,223,5)" rx="2" ry="2" />
<text  x="1056.05" y="1295.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (9 samples, 0.02%)</title><rect x="350.8" y="1221" width="0.2" height="15.0" fill="rgb(227,114,6)" rx="2" ry="2" />
<text  x="353.82" y="1231.5" ></text>
</g>
<g >
<title>mio::sys::unix::awakener::pipe::Awakener::cleanup (159 samples, 0.29%)</title><rect x="1094.3" y="917" width="3.4" height="15.0" fill="rgb(218,154,35)" rx="2" ry="2" />
<text  x="1097.32" y="927.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (23 samples, 0.04%)</title><rect x="1014.5" y="1269" width="0.4" height="15.0" fill="rgb(226,221,24)" rx="2" ry="2" />
<text  x="1017.46" y="1279.5" ></text>
</g>
<g >
<title>witness_assert_depth_to_rank (8 samples, 0.01%)</title><rect x="990.3" y="1525" width="0.2" height="15.0" fill="rgb(233,9,38)" rx="2" ry="2" />
<text  x="993.33" y="1535.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (158 samples, 0.28%)</title><rect x="1041.1" y="1253" width="3.3" height="15.0" fill="rgb(218,64,26)" rx="2" ry="2" />
<text  x="1044.09" y="1263.5" ></text>
</g>
<g >
<title>core::option::Option$LT$$RF$T$GT$::cloned::_$u7b$$u7b$closure$u7d$$u7d$::hebd15506a80f35f6 (34 samples, 0.06%)</title><rect x="675.4" y="1221" width="0.7" height="15.0" fill="rgb(217,216,45)" rx="2" ry="2" />
<text  x="678.40" y="1231.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (17 samples, 0.03%)</title><rect x="1036.1" y="1269" width="0.4" height="15.0" fill="rgb(236,23,30)" rx="2" ry="2" />
<text  x="1039.12" y="1279.5" ></text>
</g>
<g >
<title>&lt;hyper::proto::h1::io::WriteBuf&lt;B&gt; as bytes::buf::buf::Buf&gt;::remaining (6 samples, 0.01%)</title><rect x="1153.0" y="597" width="0.1" height="15.0" fill="rgb(208,28,39)" rx="2" ry="2" />
<text  x="1155.95" y="607.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll2 (782 samples, 1.41%)</title><rect x="1089.6" y="933" width="16.6" height="15.0" fill="rgb(248,190,13)" rx="2" ry="2" />
<text  x="1092.59" y="943.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="190.9" y="1509" width="0.1" height="15.0" fill="rgb(212,108,53)" rx="2" ry="2" />
<text  x="193.93" y="1519.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (229 samples, 0.41%)</title><rect x="253.8" y="1237" width="4.9" height="15.0" fill="rgb(238,181,19)" rx="2" ry="2" />
<text  x="256.85" y="1247.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::set_len (49 samples, 0.09%)</title><rect x="677.2" y="1269" width="1.1" height="15.0" fill="rgb(228,218,47)" rx="2" ry="2" />
<text  x="680.25" y="1279.5" ></text>
</g>
<g >
<title>noria::table::Table::prep_records (7 samples, 0.01%)</title><rect x="186.8" y="1365" width="0.2" height="15.0" fill="rgb(245,153,39)" rx="2" ry="2" />
<text  x="189.84" y="1375.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (6,082 samples, 10.94%)</title><rect x="1060.7" y="1157" width="129.0" height="15.0" fill="rgb(233,23,37)" rx="2" ry="2" />
<text  x="1063.65" y="1167.5" >tokio_timer::clo..</text>
</g>
<g >
<title>bincode::config::legacy::Config::serialize_into (7 samples, 0.01%)</title><rect x="1037.2" y="1077" width="0.1" height="15.0" fill="rgb(253,130,13)" rx="2" ry="2" />
<text  x="1040.18" y="1087.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (12 samples, 0.02%)</title><rect x="1037.4" y="933" width="0.2" height="15.0" fill="rgb(213,200,39)" rx="2" ry="2" />
<text  x="1040.39" y="943.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (78 samples, 0.14%)</title><rect x="788.3" y="1173" width="1.6" height="15.0" fill="rgb(231,220,15)" rx="2" ry="2" />
<text  x="791.29" y="1183.5" ></text>
</g>
<g >
<title>std::panicking::try (33 samples, 0.06%)</title><rect x="1035.2" y="1365" width="0.7" height="15.0" fill="rgb(218,28,28)" rx="2" ry="2" />
<text  x="1038.19" y="1375.5" ></text>
</g>
<g >
<title>http::extensions::Extensions::insert (12 samples, 0.02%)</title><rect x="1020.1" y="1445" width="0.3" height="15.0" fill="rgb(228,77,44)" rx="2" ry="2" />
<text  x="1023.12" y="1455.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.01%)</title><rect x="182.6" y="1333" width="0.1" height="15.0" fill="rgb(247,56,8)" rx="2" ry="2" />
<text  x="185.55" y="1343.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (8 samples, 0.01%)</title><rect x="1037.8" y="1269" width="0.2" height="15.0" fill="rgb(251,7,13)" rx="2" ry="2" />
<text  x="1040.82" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (8 samples, 0.01%)</title><rect x="1023.5" y="1573" width="0.2" height="15.0" fill="rgb(225,83,9)" rx="2" ry="2" />
<text  x="1026.54" y="1583.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (21 samples, 0.04%)</title><rect x="1042.0" y="501" width="0.5" height="15.0" fill="rgb(226,198,2)" rx="2" ry="2" />
<text  x="1045.02" y="511.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (11 samples, 0.02%)</title><rect x="977.1" y="1397" width="0.2" height="15.0" fill="rgb(243,212,4)" rx="2" ry="2" />
<text  x="980.07" y="1407.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec (17 samples, 0.03%)</title><rect x="982.5" y="1269" width="0.4" height="15.0" fill="rgb(205,6,4)" rx="2" ry="2" />
<text  x="985.54" y="1279.5" ></text>
</g>
<g >
<title>&lt;noria::data::DataType as core::convert::From&lt;alloc::string::String&gt;&gt;::from (28 samples, 0.05%)</title><rect x="195.3" y="1333" width="0.6" height="15.0" fill="rgb(252,4,48)" rx="2" ry="2" />
<text  x="198.26" y="1343.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (64 samples, 0.12%)</title><rect x="1050.0" y="1285" width="1.4" height="15.0" fill="rgb(219,35,13)" rx="2" ry="2" />
<text  x="1053.02" y="1295.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 0.03%)</title><rect x="1023.0" y="1253" width="0.3" height="15.0" fill="rgb(233,78,0)" rx="2" ry="2" />
<text  x="1025.97" y="1263.5" ></text>
</g>
<g >
<title>gen::write (10 samples, 0.02%)</title><rect x="10.0" y="1413" width="0.2" height="15.0" fill="rgb(241,218,34)" rx="2" ry="2" />
<text  x="13.00" y="1423.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h7139d8c7b0c70300 (17 samples, 0.03%)</title><rect x="1025.4" y="1525" width="0.4" height="15.0" fill="rgb(222,65,49)" rx="2" ry="2" />
<text  x="1028.43" y="1535.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (12 samples, 0.02%)</title><rect x="1029.9" y="901" width="0.3" height="15.0" fill="rgb(239,53,22)" rx="2" ry="2" />
<text  x="1032.95" y="911.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.02%)</title><rect x="981.6" y="1061" width="0.2" height="15.0" fill="rgb(247,220,38)" rx="2" ry="2" />
<text  x="984.59" y="1071.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::TableOperation&gt;::serialize (13 samples, 0.02%)</title><rect x="1044.9" y="1013" width="0.3" height="15.0" fill="rgb(214,196,3)" rx="2" ry="2" />
<text  x="1047.93" y="1023.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (24 samples, 0.04%)</title><rect x="1046.6" y="917" width="0.5" height="15.0" fill="rgb(218,108,4)" rx="2" ry="2" />
<text  x="1049.60" y="927.5" ></text>
</g>
<g >
<title>futures::task_impl::std::&lt;impl futures::task_impl::Spawn&lt;F&gt;&gt;::wait_future (122 samples, 0.22%)</title><rect x="979.9" y="1285" width="2.6" height="15.0" fill="rgb(219,94,38)" rx="2" ry="2" />
<text  x="982.93" y="1295.5" ></text>
</g>
<g >
<title>rand_chacha::guts::refill_wide::fn_impl (32 samples, 0.06%)</title><rect x="191.1" y="1573" width="0.7" height="15.0" fill="rgb(207,201,35)" rx="2" ry="2" />
<text  x="194.15" y="1583.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::check_run_state (122 samples, 0.22%)</title><rect x="1065.9" y="1077" width="2.6" height="15.0" fill="rgb(228,172,25)" rx="2" ry="2" />
<text  x="1068.93" y="1087.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (31 samples, 0.06%)</title><rect x="1059.1" y="1573" width="0.6" height="15.0" fill="rgb(206,174,16)" rx="2" ry="2" />
<text  x="1062.06" y="1583.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::submit_internal (8 samples, 0.01%)</title><rect x="1109.4" y="757" width="0.2" height="15.0" fill="rgb(207,19,22)" rx="2" ry="2" />
<text  x="1112.39" y="767.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (9 samples, 0.02%)</title><rect x="1090.6" y="885" width="0.2" height="15.0" fill="rgb(245,175,49)" rx="2" ry="2" />
<text  x="1093.61" y="895.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_shr (32 samples, 0.06%)</title><rect x="582.0" y="1077" width="0.7" height="15.0" fill="rgb(248,227,5)" rx="2" ry="2" />
<text  x="585.02" y="1087.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (8 samples, 0.01%)</title><rect x="192.6" y="1541" width="0.2" height="15.0" fill="rgb(226,176,37)" rx="2" ry="2" />
<text  x="195.63" y="1551.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (30 samples, 0.05%)</title><rect x="1037.2" y="1157" width="0.6" height="15.0" fill="rgb(236,148,20)" rx="2" ry="2" />
<text  x="1040.18" y="1167.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (23 samples, 0.04%)</title><rect x="1046.6" y="837" width="0.5" height="15.0" fill="rgb(215,121,21)" rx="2" ry="2" />
<text  x="1049.60" y="847.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::run (5 samples, 0.01%)</title><rect x="999.8" y="933" width="0.1" height="15.0" fill="rgb(214,89,17)" rx="2" ry="2" />
<text  x="1002.82" y="943.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (44 samples, 0.08%)</title><rect x="1141.7" y="981" width="1.0" height="15.0" fill="rgb(206,179,3)" rx="2" ry="2" />
<text  x="1144.73" y="991.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (10 samples, 0.02%)</title><rect x="984.2" y="1109" width="0.2" height="15.0" fill="rgb(232,3,11)" rx="2" ry="2" />
<text  x="987.22" y="1119.5" ></text>
</g>
<g >
<title>core::mem::drop (13 samples, 0.02%)</title><rect x="1180.9" y="885" width="0.3" height="15.0" fill="rgb(244,72,49)" rx="2" ry="2" />
<text  x="1183.88" y="895.5" ></text>
</g>
<g >
<title>vfs_write (6 samples, 0.01%)</title><rect x="983.5" y="1029" width="0.1" height="15.0" fill="rgb(235,15,20)" rx="2" ry="2" />
<text  x="986.52" y="1039.5" ></text>
</g>
<g >
<title>alloc::sync::Weak&lt;T&gt;::upgrade (6 samples, 0.01%)</title><rect x="1109.0" y="661" width="0.2" height="15.0" fill="rgb(227,114,37)" rx="2" ry="2" />
<text  x="1112.03" y="671.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (13 samples, 0.02%)</title><rect x="1033.4" y="1141" width="0.3" height="15.0" fill="rgb(235,20,23)" rx="2" ry="2" />
<text  x="1036.41" y="1151.5" ></text>
</g>
<g >
<title>&lt;noria::table::_::&lt;impl serde::de::Deserialize for noria::table::TableBuilder&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.01%)</title><rect x="1021.0" y="1397" width="0.1" height="15.0" fill="rgb(239,117,49)" rx="2" ry="2" />
<text  x="1024.01" y="1407.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (21 samples, 0.04%)</title><rect x="816.4" y="997" width="0.5" height="15.0" fill="rgb(207,139,6)" rx="2" ry="2" />
<text  x="819.42" y="1007.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::get_default (9 samples, 0.02%)</title><rect x="1030.8" y="757" width="0.2" height="15.0" fill="rgb(251,77,1)" rx="2" ry="2" />
<text  x="1033.80" y="767.5" ></text>
</g>
<g >
<title>vfs_write (7 samples, 0.01%)</title><rect x="983.3" y="1077" width="0.2" height="15.0" fill="rgb(243,205,10)" rx="2" ry="2" />
<text  x="986.33" y="1087.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (15 samples, 0.03%)</title><rect x="194.7" y="1333" width="0.3" height="15.0" fill="rgb(233,47,28)" rx="2" ry="2" />
<text  x="197.71" y="1343.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::last_leaf_edge (87 samples, 0.16%)</title><rect x="949.1" y="1285" width="1.9" height="15.0" fill="rgb(218,132,53)" rx="2" ry="2" />
<text  x="952.15" y="1295.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 0.02%)</title><rect x="1027.7" y="1205" width="0.3" height="15.0" fill="rgb(208,201,14)" rx="2" ry="2" />
<text  x="1030.74" y="1215.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (77 samples, 0.14%)</title><rect x="411.5" y="1269" width="1.6" height="15.0" fill="rgb(245,150,38)" rx="2" ry="2" />
<text  x="414.50" y="1279.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Selector::select (15 samples, 0.03%)</title><rect x="993.6" y="1301" width="0.3" height="15.0" fill="rgb(243,121,32)" rx="2" ry="2" />
<text  x="996.60" y="1311.5" ></text>
</g>
<g >
<title>chan::ChannelId::receiver (36 samples, 0.06%)</title><rect x="703.8" y="1317" width="0.7" height="15.0" fill="rgb(219,56,34)" rx="2" ry="2" />
<text  x="706.77" y="1327.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::future::ResponseFuture&lt;T&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="180.4" y="1237" width="0.2" height="15.0" fill="rgb(244,3,23)" rx="2" ry="2" />
<text  x="183.43" y="1247.5" ></text>
</g>
<g >
<title>&lt;chrono::naive::time::NaiveTime as core::fmt::Debug&gt;::fmt (5 samples, 0.01%)</title><rect x="997.9" y="965" width="0.1" height="15.0" fill="rgb(242,34,52)" rx="2" ry="2" />
<text  x="1000.91" y="975.5" ></text>
</g>
<g >
<title>&lt;futures::future::either::Either&lt;A,B&gt; as futures::future::Future&gt;::poll (34 samples, 0.06%)</title><rect x="1131.0" y="725" width="0.8" height="15.0" fill="rgb(212,109,43)" rx="2" ry="2" />
<text  x="1134.03" y="735.5" ></text>
</g>
<g >
<title>tokio_reactor::registration::Registration::take_write_ready (20 samples, 0.04%)</title><rect x="1057.2" y="1157" width="0.4" height="15.0" fill="rgb(242,173,29)" rx="2" ry="2" />
<text  x="1060.17" y="1167.5" ></text>
</g>
<g >
<title>pipe_write (7 samples, 0.01%)</title><rect x="10.8" y="885" width="0.1" height="15.0" fill="rgb(240,161,50)" rx="2" ry="2" />
<text  x="13.79" y="895.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (7 samples, 0.01%)</title><rect x="1093.8" y="885" width="0.1" height="15.0" fill="rgb(229,146,6)" rx="2" ry="2" />
<text  x="1096.79" y="895.5" ></text>
</g>
<g >
<title>futures::task_impl::std::BorrowedUnpark::to_owned (5 samples, 0.01%)</title><rect x="1056.0" y="1205" width="0.1" height="15.0" fill="rgb(213,201,22)" rx="2" ry="2" />
<text  x="1058.96" y="1215.5" ></text>
</g>
<g >
<title>noria::table::SyncTable::insert::_$u7b$$u7b$closure$u7d$$u7d$::hda9decbe4187d0e3 (8 samples, 0.01%)</title><rect x="194.5" y="1573" width="0.2" height="15.0" fill="rgb(215,126,30)" rx="2" ry="2" />
<text  x="197.54" y="1583.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::clone_id (5 samples, 0.01%)</title><rect x="1007.0" y="1413" width="0.1" height="15.0" fill="rgb(251,32,34)" rx="2" ry="2" />
<text  x="1010.03" y="1423.5" ></text>
</g>
<g >
<title>imalloc (58 samples, 0.10%)</title><rect x="1015.7" y="1573" width="1.2" height="15.0" fill="rgb(211,198,49)" rx="2" ry="2" />
<text  x="1018.67" y="1583.5" ></text>
</g>
<g >
<title>dev_queue_xmit (6 samples, 0.01%)</title><rect x="1050.8" y="565" width="0.1" height="15.0" fill="rgb(218,9,43)" rx="2" ry="2" />
<text  x="1053.80" y="575.5" ></text>
</g>
<g >
<title>core::mem::replace (214 samples, 0.38%)</title><rect x="590.7" y="1077" width="4.5" height="15.0" fill="rgb(216,194,3)" rx="2" ry="2" />
<text  x="593.70" y="1087.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::signal_work (6 samples, 0.01%)</title><rect x="996.3" y="1157" width="0.1" height="15.0" fill="rgb(214,121,27)" rx="2" ry="2" />
<text  x="999.27" y="1167.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::get (32 samples, 0.06%)</title><rect x="1169.1" y="901" width="0.7" height="15.0" fill="rgb(240,68,36)" rx="2" ry="2" />
<text  x="1172.10" y="911.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.02%)</title><rect x="1015.2" y="1461" width="0.2" height="15.0" fill="rgb(231,228,22)" rx="2" ry="2" />
<text  x="1018.18" y="1471.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::as_mut_ptr (7 samples, 0.01%)</title><rect x="566.5" y="1253" width="0.1" height="15.0" fill="rgb(229,81,9)" rx="2" ry="2" />
<text  x="569.46" y="1263.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (33 samples, 0.06%)</title><rect x="998.0" y="1333" width="0.7" height="15.0" fill="rgb(229,144,18)" rx="2" ry="2" />
<text  x="1001.01" y="1343.5" ></text>
</g>
<g >
<title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (10 samples, 0.02%)</title><rect x="989.6" y="1173" width="0.2" height="15.0" fill="rgb(216,192,2)" rx="2" ry="2" />
<text  x="992.61" y="1183.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::Thread::new::thread_start (6,084 samples, 10.94%)</title><rect x="1060.6" y="1573" width="129.1" height="15.0" fill="rgb(239,42,50)" rx="2" ry="2" />
<text  x="1063.61" y="1583.5" >std::sys::unix::..</text>
</g>
<g >
<title>serde_json::ser::to_vec (109 samples, 0.20%)</title><rect x="986.4" y="1253" width="2.3" height="15.0" fill="rgb(211,175,22)" rx="2" ry="2" />
<text  x="989.43" y="1263.5" ></text>
</g>
<g >
<title>tokio_reactor::Reactor::turn (179 samples, 0.32%)</title><rect x="1122.3" y="997" width="3.8" height="15.0" fill="rgb(214,102,24)" rx="2" ry="2" />
<text  x="1125.29" y="1007.5" ></text>
</g>
<g >
<title>tokio_timer::wheel::Wheel&lt;T&gt;::next_expiration (21 samples, 0.04%)</title><rect x="1126.8" y="981" width="0.4" height="15.0" fill="rgb(254,227,46)" rx="2" ry="2" />
<text  x="1129.77" y="991.5" ></text>
</g>
<g >
<title>&lt;tower_balance::p2c::service::Balance&lt;D,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (6 samples, 0.01%)</title><rect x="1015.2" y="869" width="0.1" height="15.0" fill="rgb(210,201,49)" rx="2" ry="2" />
<text  x="1018.22" y="879.5" ></text>
</g>
<g >
<title>noria::controller::ControllerHandle&lt;A&gt;::unsubscribe (13 samples, 0.02%)</title><rect x="989.0" y="1301" width="0.3" height="15.0" fill="rgb(248,43,8)" rx="2" ry="2" />
<text  x="991.99" y="1311.5" ></text>
</g>
<g >
<title>async_bincode::reader::AsyncBincodeReader&lt;R,T&gt;::fill (13 samples, 0.02%)</title><rect x="1037.4" y="1093" width="0.3" height="15.0" fill="rgb(254,169,42)" rx="2" ry="2" />
<text  x="1040.39" y="1103.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::spawn_thread::_$u7b$$u7b$closure$u7d$$u7d$::ha7200d58e6efae3b (38 samples, 0.07%)</title><rect x="1026.6" y="1525" width="0.8" height="15.0" fill="rgb(225,12,43)" rx="2" ry="2" />
<text  x="1029.64" y="1535.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (6 samples, 0.01%)</title><rect x="810.7" y="1061" width="0.1" height="15.0" fill="rgb(245,16,2)" rx="2" ry="2" />
<text  x="813.69" y="1071.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (12 samples, 0.02%)</title><rect x="997.4" y="1189" width="0.2" height="15.0" fill="rgb(228,218,39)" rx="2" ry="2" />
<text  x="1000.35" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (11 samples, 0.02%)</title><rect x="1035.9" y="1141" width="0.2" height="15.0" fill="rgb(221,150,30)" rx="2" ry="2" />
<text  x="1038.89" y="1151.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (35 samples, 0.06%)</title><rect x="1098.2" y="885" width="0.8" height="15.0" fill="rgb(214,86,37)" rx="2" ry="2" />
<text  x="1101.25" y="895.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::into_raw_non_null (456 samples, 0.82%)</title><rect x="216.7" y="1317" width="9.6" height="15.0" fill="rgb(205,183,38)" rx="2" ry="2" />
<text  x="219.67" y="1327.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (22 samples, 0.04%)</title><rect x="189.4" y="1477" width="0.5" height="15.0" fill="rgb(210,114,2)" rx="2" ry="2" />
<text  x="192.38" y="1487.5" ></text>
</g>
<g >
<title>tokio_sync::task::atomic_task::AtomicTask::notify (56 samples, 0.10%)</title><rect x="184.8" y="1445" width="1.2" height="15.0" fill="rgb(230,97,41)" rx="2" ry="2" />
<text  x="187.80" y="1455.5" ></text>
</g>
<g >
<title>__sched_text_start (107 samples, 0.19%)</title><rect x="1063.5" y="997" width="2.3" height="15.0" fill="rgb(246,44,7)" rx="2" ry="2" />
<text  x="1066.54" y="1007.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="997.2" y="917" width="0.1" height="15.0" fill="rgb(251,197,9)" rx="2" ry="2" />
<text  x="1000.16" y="927.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1025.6" y="597" width="0.1" height="15.0" fill="rgb(254,34,22)" rx="2" ry="2" />
<text  x="1028.62" y="607.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::ptr_eq (26 samples, 0.05%)</title><rect x="1157.7" y="1013" width="0.6" height="15.0" fill="rgb(233,224,12)" rx="2" ry="2" />
<text  x="1160.70" y="1023.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::offset (19 samples, 0.03%)</title><rect x="382.5" y="1237" width="0.4" height="15.0" fill="rgb(225,117,12)" rx="2" ry="2" />
<text  x="385.48" y="1247.5" ></text>
</g>
<g >
<title>crossbeam_utils::atomic::atomic_cell::atomic_swap (7 samples, 0.01%)</title><rect x="1005.3" y="1461" width="0.2" height="15.0" fill="rgb(239,132,11)" rx="2" ry="2" />
<text  x="1008.31" y="1471.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h1027365c3acffc8d (102 samples, 0.18%)</title><rect x="993.2" y="1413" width="2.1" height="15.0" fill="rgb(251,133,19)" rx="2" ry="2" />
<text  x="996.15" y="1423.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (21 samples, 0.04%)</title><rect x="1026.2" y="1461" width="0.4" height="15.0" fill="rgb(226,168,41)" rx="2" ry="2" />
<text  x="1029.19" y="1471.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::he0977de3e88b310a (5 samples, 0.01%)</title><rect x="192.5" y="1205" width="0.1" height="15.0" fill="rgb(224,155,52)" rx="2" ry="2" />
<text  x="195.48" y="1215.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner$LT$T$GT$::complete::_$u7b$$u7b$closure$u7d$$u7d$::ha909f8ce63324937 (22 samples, 0.04%)</title><rect x="1134.4" y="709" width="0.5" height="15.0" fill="rgb(206,16,19)" rx="2" ry="2" />
<text  x="1137.45" y="719.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::is_some (17 samples, 0.03%)</title><rect x="472.1" y="1221" width="0.4" height="15.0" fill="rgb(211,170,8)" rx="2" ry="2" />
<text  x="475.15" y="1231.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (5 samples, 0.01%)</title><rect x="195.7" y="1317" width="0.1" height="15.0" fill="rgb(243,206,8)" rx="2" ry="2" />
<text  x="198.71" y="1327.5" ></text>
</g>
<g >
<title>core::mem::swap (5 samples, 0.01%)</title><rect x="1043.5" y="901" width="0.1" height="15.0" fill="rgb(231,14,21)" rx="2" ry="2" />
<text  x="1046.48" y="911.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (7 samples, 0.01%)</title><rect x="1030.3" y="1397" width="0.2" height="15.0" fill="rgb(247,185,34)" rx="2" ry="2" />
<text  x="1033.33" y="1407.5" ></text>
</g>
<g >
<title>chan::select::Select::try_select (13 samples, 0.02%)</title><rect x="991.5" y="1589" width="0.3" height="15.0" fill="rgb(229,52,26)" rx="2" ry="2" />
<text  x="994.48" y="1599.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (27 samples, 0.05%)</title><rect x="1030.5" y="981" width="0.5" height="15.0" fill="rgb(250,48,54)" rx="2" ry="2" />
<text  x="1033.48" y="991.5" ></text>
</g>
<g >
<title>std::panicking::try (8 samples, 0.01%)</title><rect x="192.6" y="1589" width="0.2" height="15.0" fill="rgb(252,206,54)" rx="2" ry="2" />
<text  x="195.63" y="1599.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::future::ResponseFuture&lt;T&gt; as futures::future::Future&gt;::poll (23 samples, 0.04%)</title><rect x="187.0" y="1333" width="0.5" height="15.0" fill="rgb(226,204,6)" rx="2" ry="2" />
<text  x="190.05" y="1343.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (14 samples, 0.03%)</title><rect x="628.9" y="1093" width="0.3" height="15.0" fill="rgb(248,120,9)" rx="2" ry="2" />
<text  x="631.87" y="1103.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (144 samples, 0.26%)</title><rect x="1053.0" y="1317" width="3.1" height="15.0" fill="rgb(252,210,25)" rx="2" ry="2" />
<text  x="1056.01" y="1327.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::channel (5 samples, 0.01%)</title><rect x="188.1" y="1333" width="0.1" height="15.0" fill="rgb(227,196,7)" rx="2" ry="2" />
<text  x="191.09" y="1343.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::poll_evented::PollEvented&lt;E&gt; as std::io::Write&gt;::write (51 samples, 0.09%)</title><rect x="1041.7" y="869" width="1.0" height="15.0" fill="rgb(224,207,17)" rx="2" ry="2" />
<text  x="1044.66" y="879.5" ></text>
</g>
<g >
<title>tokio_timer::timer::Timer&lt;T,N&gt;::process (108 samples, 0.19%)</title><rect x="1080.7" y="997" width="2.3" height="15.0" fill="rgb(232,119,1)" rx="2" ry="2" />
<text  x="1083.66" y="1007.5" ></text>
</g>
<g >
<title>tcache_event (276 samples, 0.50%)</title><rect x="147.9" y="1509" width="5.8" height="15.0" fill="rgb(234,14,38)" rx="2" ry="2" />
<text  x="150.88" y="1519.5" ></text>
</g>
<g >
<title>gen::write (348 samples, 0.63%)</title><rect x="195.2" y="1365" width="7.3" height="15.0" fill="rgb(234,129,27)" rx="2" ry="2" />
<text  x="198.16" y="1375.5" ></text>
</g>
<g >
<title>serde::de::SeqAccess::next_element (144 samples, 0.26%)</title><rect x="1000.0" y="1381" width="3.0" height="15.0" fill="rgb(246,111,51)" rx="2" ry="2" />
<text  x="1002.99" y="1391.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 0.03%)</title><rect x="997.6" y="1445" width="0.4" height="15.0" fill="rgb(240,179,31)" rx="2" ry="2" />
<text  x="1000.61" y="1455.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.01%)</title><rect x="180.5" y="1157" width="0.1" height="15.0" fill="rgb(236,23,54)" rx="2" ry="2" />
<text  x="183.45" y="1167.5" ></text>
</g>
<g >
<title>core::mem::drop (5 samples, 0.01%)</title><rect x="1161.8" y="949" width="0.1" height="15.0" fill="rgb(241,50,36)" rx="2" ry="2" />
<text  x="1164.78" y="959.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_phase_1 (7 samples, 0.01%)</title><rect x="1133.2" y="693" width="0.1" height="15.0" fill="rgb(207,74,5)" rx="2" ry="2" />
<text  x="1136.15" y="703.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="1044.4" y="1461" width="0.3" height="15.0" fill="rgb(208,205,31)" rx="2" ry="2" />
<text  x="1047.44" y="1471.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (174 samples, 0.31%)</title><rect x="1053.0" y="1381" width="3.7" height="15.0" fill="rgb(232,18,16)" rx="2" ry="2" />
<text  x="1056.01" y="1391.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.01%)</title><rect x="194.9" y="1189" width="0.1" height="15.0" fill="rgb(211,224,8)" rx="2" ry="2" />
<text  x="197.86" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (6 samples, 0.01%)</title><rect x="1034.6" y="1253" width="0.1" height="15.0" fill="rgb(245,8,10)" rx="2" ry="2" />
<text  x="1037.57" y="1263.5" ></text>
</g>
<g >
<title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (18 samples, 0.03%)</title><rect x="242.6" y="1269" width="0.4" height="15.0" fill="rgb(211,4,19)" rx="2" ry="2" />
<text  x="245.58" y="1279.5" ></text>
</g>
<g >
<title>core::mem::size_of (14 samples, 0.03%)</title><rect x="497.0" y="1205" width="0.3" height="15.0" fill="rgb(234,23,2)" rx="2" ry="2" />
<text  x="499.97" y="1215.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (13 samples, 0.02%)</title><rect x="983.9" y="1221" width="0.3" height="15.0" fill="rgb(214,5,19)" rx="2" ry="2" />
<text  x="986.94" y="1231.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit (33 samples, 0.06%)</title><rect x="10.4" y="1365" width="0.7" height="15.0" fill="rgb(212,58,53)" rx="2" ry="2" />
<text  x="13.40" y="1375.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (5 samples, 0.01%)</title><rect x="991.1" y="1557" width="0.1" height="15.0" fill="rgb(234,67,19)" rx="2" ry="2" />
<text  x="994.14" y="1567.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (21 samples, 0.04%)</title><rect x="1026.2" y="1477" width="0.4" height="15.0" fill="rgb(207,51,53)" rx="2" ry="2" />
<text  x="1029.19" y="1487.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (17 samples, 0.03%)</title><rect x="189.0" y="1429" width="0.4" height="15.0" fill="rgb(206,43,2)" rx="2" ry="2" />
<text  x="192.02" y="1439.5" ></text>
</g>
<g >
<title>sys_epoll_wait (18 samples, 0.03%)</title><rect x="1079.8" y="837" width="0.4" height="15.0" fill="rgb(221,210,0)" rx="2" ry="2" />
<text  x="1082.79" y="847.5" ></text>
</g>
<g >
<title>tokio_reactor::Reactor::poll (292 samples, 0.53%)</title><rect x="1074.3" y="965" width="6.2" height="15.0" fill="rgb(251,187,19)" rx="2" ry="2" />
<text  x="1077.27" y="975.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (6 samples, 0.01%)</title><rect x="1164.8" y="981" width="0.1" height="15.0" fill="rgb(228,174,6)" rx="2" ry="2" />
<text  x="1167.81" y="991.5" ></text>
</g>
<g >
<title>tokio_tower::mediator::Sender&lt;T&gt;::try_send (27 samples, 0.05%)</title><rect x="1028.4" y="1301" width="0.6" height="15.0" fill="rgb(225,115,51)" rx="2" ry="2" />
<text  x="1031.40" y="1311.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (17 samples, 0.03%)</title><rect x="1044.4" y="1525" width="0.4" height="15.0" fill="rgb(254,220,5)" rx="2" ry="2" />
<text  x="1047.44" y="1535.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (20 samples, 0.04%)</title><rect x="1042.0" y="325" width="0.5" height="15.0" fill="rgb(252,209,48)" rx="2" ry="2" />
<text  x="1045.04" y="335.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (78 samples, 0.14%)</title><rect x="1049.7" y="1493" width="1.7" height="15.0" fill="rgb(247,205,3)" rx="2" ry="2" />
<text  x="1052.72" y="1503.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get (6 samples, 0.01%)</title><rect x="1074.8" y="917" width="0.1" height="15.0" fill="rgb(227,96,29)" rx="2" ry="2" />
<text  x="1077.76" y="927.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (14 samples, 0.03%)</title><rect x="1150.4" y="565" width="0.3" height="15.0" fill="rgb(252,119,18)" rx="2" ry="2" />
<text  x="1153.43" y="575.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (13 samples, 0.02%)</title><rect x="1027.7" y="1093" width="0.3" height="15.0" fill="rgb(227,4,41)" rx="2" ry="2" />
<text  x="1030.74" y="1103.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll1 (32 samples, 0.06%)</title><rect x="993.2" y="1333" width="0.7" height="15.0" fill="rgb(207,187,49)" rx="2" ry="2" />
<text  x="996.24" y="1343.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.01%)</title><rect x="1027.4" y="1221" width="0.2" height="15.0" fill="rgb(244,195,52)" rx="2" ry="2" />
<text  x="1030.44" y="1231.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.01%)</title><rect x="1134.8" y="597" width="0.1" height="15.0" fill="rgb(227,83,3)" rx="2" ry="2" />
<text  x="1137.79" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::write (11 samples, 0.02%)</title><rect x="984.0" y="1173" width="0.2" height="15.0" fill="rgb(251,14,11)" rx="2" ry="2" />
<text  x="986.97" y="1183.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNot&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1057.7" y="1141" width="0.1" height="15.0" fill="rgb(245,173,5)" rx="2" ry="2" />
<text  x="1060.68" y="1151.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (6 samples, 0.01%)</title><rect x="1033.7" y="1061" width="0.1" height="15.0" fill="rgb(220,208,25)" rx="2" ry="2" />
<text  x="1036.68" y="1071.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (26 samples, 0.05%)</title><rect x="1029.4" y="1029" width="0.5" height="15.0" fill="rgb(225,116,24)" rx="2" ry="2" />
<text  x="1032.39" y="1039.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="1036.7" y="1045" width="0.2" height="15.0" fill="rgb(252,186,28)" rx="2" ry="2" />
<text  x="1039.65" y="1055.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (5 samples, 0.01%)</title><rect x="1025.0" y="1541" width="0.1" height="15.0" fill="rgb(210,23,14)" rx="2" ry="2" />
<text  x="1027.96" y="1551.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default::_$u7b$$u7b$closure$u7d$$u7d$::ha80fbdab9b554b03 (36 samples, 0.06%)</title><rect x="1032.5" y="1509" width="0.7" height="15.0" fill="rgb(244,140,9)" rx="2" ry="2" />
<text  x="1035.47" y="1519.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (5 samples, 0.01%)</title><rect x="1127.3" y="997" width="0.1" height="15.0" fill="rgb(253,201,47)" rx="2" ry="2" />
<text  x="1130.32" y="1007.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (158 samples, 0.28%)</title><rect x="1041.1" y="981" width="3.3" height="15.0" fill="rgb(228,132,52)" rx="2" ry="2" />
<text  x="1044.09" y="991.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="996.1" y="1589" width="0.2" height="15.0" fill="rgb(251,227,31)" rx="2" ry="2" />
<text  x="999.06" y="1599.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (5 samples, 0.01%)</title><rect x="1023.8" y="1157" width="0.1" height="15.0" fill="rgb(212,139,20)" rx="2" ry="2" />
<text  x="1026.81" y="1167.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (14 samples, 0.03%)</title><rect x="1032.5" y="1045" width="0.3" height="15.0" fill="rgb(228,133,38)" rx="2" ry="2" />
<text  x="1035.47" y="1055.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (26 samples, 0.05%)</title><rect x="1020.0" y="1557" width="0.6" height="15.0" fill="rgb(254,216,47)" rx="2" ry="2" />
<text  x="1023.04" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.03%)</title><rect x="1111.6" y="821" width="0.4" height="15.0" fill="rgb(254,171,31)" rx="2" ry="2" />
<text  x="1114.64" y="831.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (7 samples, 0.01%)</title><rect x="1036.2" y="1029" width="0.1" height="15.0" fill="rgb(208,94,53)" rx="2" ry="2" />
<text  x="1039.16" y="1039.5" ></text>
</g>
<g >
<title>core::slice::Iter&lt;T&gt;::post_inc_start (35 samples, 0.06%)</title><rect x="542.0" y="1205" width="0.7" height="15.0" fill="rgb(208,9,37)" rx="2" ry="2" />
<text  x="545.00" y="1215.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="1139.8" y="1045" width="0.1" height="15.0" fill="rgb(218,58,54)" rx="2" ry="2" />
<text  x="1142.84" y="1055.5" ></text>
</g>
<g >
<title>bincode::internal::serialize_into (31 samples, 0.06%)</title><rect x="1053.2" y="1205" width="0.7" height="15.0" fill="rgb(239,172,52)" rx="2" ry="2" />
<text  x="1056.24" y="1215.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (154 samples, 0.28%)</title><rect x="1177.6" y="837" width="3.3" height="15.0" fill="rgb(234,129,1)" rx="2" ry="2" />
<text  x="1180.59" y="847.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.02%)</title><rect x="1053.2" y="1157" width="0.2" height="15.0" fill="rgb(206,162,17)" rx="2" ry="2" />
<text  x="1056.24" y="1167.5" ></text>
</g>
<g >
<title>noria::view::_::&lt;impl serde::ser::Serialize for noria::view::ReadQuery&gt;::serialize (10 samples, 0.02%)</title><rect x="1053.7" y="1157" width="0.2" height="15.0" fill="rgb(207,39,37)" rx="2" ry="2" />
<text  x="1056.67" y="1167.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (10 samples, 0.02%)</title><rect x="1048.5" y="661" width="0.2" height="15.0" fill="rgb(232,201,51)" rx="2" ry="2" />
<text  x="1051.47" y="671.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (72 samples, 0.13%)</title><rect x="1027.4" y="1413" width="1.6" height="15.0" fill="rgb(230,68,53)" rx="2" ry="2" />
<text  x="1030.44" y="1423.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (5 samples, 0.01%)</title><rect x="1130.0" y="965" width="0.1" height="15.0" fill="rgb(244,176,32)" rx="2" ry="2" />
<text  x="1132.97" y="975.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="1032.5" y="1029" width="0.2" height="15.0" fill="rgb(215,1,42)" rx="2" ry="2" />
<text  x="1035.47" y="1039.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (6 samples, 0.01%)</title><rect x="1031.0" y="741" width="0.2" height="15.0" fill="rgb(215,96,26)" rx="2" ry="2" />
<text  x="1034.05" y="751.5" ></text>
</g>
<g >
<title>alloc::collections::btree::search::search_linear (1,457 samples, 2.62%)</title><rect x="299.8" y="1285" width="31.0" height="15.0" fill="rgb(234,158,21)" rx="2" ry="2" />
<text  x="302.85" y="1295.5" >al..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1053.9" y="1061" width="0.1" height="15.0" fill="rgb(219,131,13)" rx="2" ry="2" />
<text  x="1056.90" y="1071.5" ></text>
</g>
<g >
<title>crossbeam_deque::Injector&lt;T&gt;::steal_batch (16 samples, 0.03%)</title><rect x="1121.5" y="1061" width="0.4" height="15.0" fill="rgb(216,176,27)" rx="2" ry="2" />
<text  x="1124.55" y="1071.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get (5 samples, 0.01%)</title><rect x="1074.8" y="901" width="0.1" height="15.0" fill="rgb(218,78,12)" rx="2" ry="2" />
<text  x="1077.78" y="911.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (54 samples, 0.10%)</title><rect x="820.9" y="1077" width="1.2" height="15.0" fill="rgb(239,36,36)" rx="2" ry="2" />
<text  x="823.94" y="1087.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (52 samples, 0.09%)</title><rect x="980.2" y="1173" width="1.1" height="15.0" fill="rgb(229,156,43)" rx="2" ry="2" />
<text  x="983.19" y="1183.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (5 samples, 0.01%)</title><rect x="192.7" y="1173" width="0.1" height="15.0" fill="rgb(250,161,19)" rx="2" ry="2" />
<text  x="195.69" y="1183.5" ></text>
</g>
<g >
<title>chrono::offset::local::Local::now (31 samples, 0.06%)</title><rect x="196.3" y="1349" width="0.6" height="15.0" fill="rgb(246,45,37)" rx="2" ry="2" />
<text  x="199.28" y="1359.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (33 samples, 0.06%)</title><rect x="1030.5" y="1509" width="0.7" height="15.0" fill="rgb(239,185,14)" rx="2" ry="2" />
<text  x="1033.48" y="1519.5" ></text>
</g>
<g >
<title>noria::view::SyncView::lookup::_$u7b$$u7b$closure$u7d$$u7d$::h339f90ccab48f6ba (22 samples, 0.04%)</title><rect x="189.4" y="1557" width="0.5" height="15.0" fill="rgb(211,7,54)" rx="2" ry="2" />
<text  x="192.38" y="1567.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (35 samples, 0.06%)</title><rect x="1051.9" y="1461" width="0.7" height="15.0" fill="rgb(247,181,16)" rx="2" ry="2" />
<text  x="1054.87" y="1471.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::unpark (47 samples, 0.08%)</title><rect x="1108.2" y="725" width="1.0" height="15.0" fill="rgb(250,210,9)" rx="2" ry="2" />
<text  x="1111.16" y="735.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (348 samples, 0.63%)</title><rect x="195.2" y="1429" width="7.3" height="15.0" fill="rgb(227,26,7)" rx="2" ry="2" />
<text  x="198.16" y="1439.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts (107 samples, 0.19%)</title><rect x="769.5" y="1141" width="2.3" height="15.0" fill="rgb(242,205,40)" rx="2" ry="2" />
<text  x="772.49" y="1151.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::enqueue_node_with_wakeup (17 samples, 0.03%)</title><rect x="10.6" y="1109" width="0.4" height="15.0" fill="rgb(216,210,35)" rx="2" ry="2" />
<text  x="13.62" y="1119.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (8 samples, 0.01%)</title><rect x="1021.9" y="1589" width="0.2" height="15.0" fill="rgb(210,50,29)" rx="2" ry="2" />
<text  x="1024.95" y="1599.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (6 samples, 0.01%)</title><rect x="188.5" y="1509" width="0.1" height="15.0" fill="rgb(225,102,54)" rx="2" ry="2" />
<text  x="191.47" y="1519.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (21 samples, 0.04%)</title><rect x="1026.2" y="1557" width="0.4" height="15.0" fill="rgb(215,211,18)" rx="2" ry="2" />
<text  x="1029.19" y="1567.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h1e333f0842b39e4b (5 samples, 0.01%)</title><rect x="997.0" y="1205" width="0.1" height="15.0" fill="rgb(253,24,5)" rx="2" ry="2" />
<text  x="999.95" y="1215.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (13 samples, 0.02%)</title><rect x="1026.6" y="933" width="0.3" height="15.0" fill="rgb(243,63,39)" rx="2" ry="2" />
<text  x="1029.64" y="943.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (12 samples, 0.02%)</title><rect x="278.0" y="1237" width="0.3" height="15.0" fill="rgb(218,172,17)" rx="2" ry="2" />
<text  x="281.01" y="1247.5" ></text>
</g>
<g >
<title>std::panicking::try (10 samples, 0.02%)</title><rect x="995.3" y="1029" width="0.2" height="15.0" fill="rgb(253,138,28)" rx="2" ry="2" />
<text  x="998.32" y="1039.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (37 samples, 0.07%)</title><rect x="186.3" y="1541" width="0.7" height="15.0" fill="rgb(232,86,7)" rx="2" ry="2" />
<text  x="189.26" y="1551.5" ></text>
</g>
<g >
<title>&lt;noria::view::View as tower_service::Service&lt; (56 samples, 0.10%)</title><rect x="184.8" y="1509" width="1.2" height="15.0" fill="rgb(221,84,50)" rx="2" ry="2" />
<text  x="187.80" y="1519.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (33 samples, 0.06%)</title><rect x="10.4" y="1397" width="0.7" height="15.0" fill="rgb(225,145,5)" rx="2" ry="2" />
<text  x="13.40" y="1407.5" ></text>
</g>
<g >
<title>bincode::deserialize (11 samples, 0.02%)</title><rect x="1055.2" y="1237" width="0.2" height="15.0" fill="rgb(219,191,14)" rx="2" ry="2" />
<text  x="1058.15" y="1247.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (5 samples, 0.01%)</title><rect x="1044.5" y="1029" width="0.1" height="15.0" fill="rgb(247,206,54)" rx="2" ry="2" />
<text  x="1047.48" y="1039.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::service::Buffer&lt;T,Request&gt; as tower_service::Service&lt;Request&gt;&gt;::call (8 samples, 0.01%)</title><rect x="11.1" y="1493" width="0.2" height="15.0" fill="rgb(242,20,16)" rx="2" ry="2" />
<text  x="14.10" y="1503.5" ></text>
</g>
<g >
<title>tokio_sync::loom::sync::CausalCell&lt;T&gt;::with_mut (27 samples, 0.05%)</title><rect x="1013.5" y="1525" width="0.6" height="15.0" fill="rgb(209,212,51)" rx="2" ry="2" />
<text  x="1016.50" y="1535.5" ></text>
</g>
<g >
<title>std::panicking::try (35 samples, 0.06%)</title><rect x="191.8" y="1573" width="0.8" height="15.0" fill="rgb(222,27,16)" rx="2" ry="2" />
<text  x="194.85" y="1583.5" ></text>
</g>
<g >
<title>tower_buffer::worker::Worker&lt;T,Request&gt;::poll_next_msg (153 samples, 0.28%)</title><rect x="1010.8" y="1573" width="3.3" height="15.0" fill="rgb(229,81,8)" rx="2" ry="2" />
<text  x="1013.83" y="1583.5" ></text>
</g>
<g >
<title>__pthread_cond_signal (11 samples, 0.02%)</title><rect x="1134.1" y="597" width="0.2" height="15.0" fill="rgb(208,111,26)" rx="2" ry="2" />
<text  x="1137.11" y="607.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::Mutex&lt;T&gt; as core::ops::drop::Drop&gt;::drop (97 samples, 0.17%)</title><rect x="905.9" y="1269" width="2.1" height="15.0" fill="rgb(245,57,42)" rx="2" ry="2" />
<text  x="908.94" y="1279.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::find (12 samples, 0.02%)</title><rect x="201.7" y="1317" width="0.2" height="15.0" fill="rgb(238,112,50)" rx="2" ry="2" />
<text  x="204.69" y="1327.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (11 samples, 0.02%)</title><rect x="984.0" y="1157" width="0.2" height="15.0" fill="rgb(249,217,42)" rx="2" ry="2" />
<text  x="986.97" y="1167.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (23 samples, 0.04%)</title><rect x="950.3" y="1237" width="0.5" height="15.0" fill="rgb(254,56,11)" rx="2" ry="2" />
<text  x="953.31" y="1247.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (6 samples, 0.01%)</title><rect x="977.5" y="1317" width="0.1" height="15.0" fill="rgb(254,199,29)" rx="2" ry="2" />
<text  x="980.47" y="1327.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (12 samples, 0.02%)</title><rect x="1029.9" y="1189" width="0.3" height="15.0" fill="rgb(214,157,39)" rx="2" ry="2" />
<text  x="1032.95" y="1199.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (50 samples, 0.09%)</title><rect x="192.8" y="1541" width="1.1" height="15.0" fill="rgb(207,210,38)" rx="2" ry="2" />
<text  x="195.84" y="1551.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::notify (22 samples, 0.04%)</title><rect x="1024.0" y="1477" width="0.5" height="15.0" fill="rgb(207,139,21)" rx="2" ry="2" />
<text  x="1027.01" y="1487.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (9 samples, 0.02%)</title><rect x="1051.4" y="1237" width="0.2" height="15.0" fill="rgb(246,6,6)" rx="2" ry="2" />
<text  x="1054.38" y="1247.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (11 samples, 0.02%)</title><rect x="1034.3" y="1381" width="0.3" height="15.0" fill="rgb(215,47,51)" rx="2" ry="2" />
<text  x="1037.34" y="1391.5" ></text>
</g>
<g >
<title>sys_write (18 samples, 0.03%)</title><rect x="1108.6" y="453" width="0.4" height="15.0" fill="rgb(223,7,53)" rx="2" ry="2" />
<text  x="1111.58" y="463.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (6 samples, 0.01%)</title><rect x="1033.7" y="1077" width="0.1" height="15.0" fill="rgb(224,55,38)" rx="2" ry="2" />
<text  x="1036.68" y="1087.5" ></text>
</g>
<g >
<title>futures::task_impl::core::BorrowedUnpark::to_owned (5 samples, 0.01%)</title><rect x="1060.2" y="1109" width="0.1" height="15.0" fill="rgb(238,142,10)" rx="2" ry="2" />
<text  x="1063.23" y="1119.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (17 samples, 0.03%)</title><rect x="1025.4" y="1141" width="0.4" height="15.0" fill="rgb(208,174,32)" rx="2" ry="2" />
<text  x="1028.43" y="1151.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (16 samples, 0.03%)</title><rect x="996.8" y="1541" width="0.4" height="15.0" fill="rgb(246,150,19)" rx="2" ry="2" />
<text  x="999.82" y="1551.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (22 samples, 0.04%)</title><rect x="1024.0" y="1413" width="0.5" height="15.0" fill="rgb(213,73,32)" rx="2" ry="2" />
<text  x="1027.01" y="1423.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.02%)</title><rect x="1023.0" y="901" width="0.2" height="15.0" fill="rgb(206,34,44)" rx="2" ry="2" />
<text  x="1026.03" y="911.5" ></text>
</g>
<g >
<title>gen::do_every::_$u7b$$u7b$closure$u7d$$u7d$::h68074d467c3e64ab (191 samples, 0.34%)</title><rect x="985.8" y="1349" width="4.0" height="15.0" fill="rgb(244,32,31)" rx="2" ry="2" />
<text  x="988.77" y="1359.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (25 samples, 0.04%)</title><rect x="699.3" y="1285" width="0.6" height="15.0" fill="rgb(234,90,18)" rx="2" ry="2" />
<text  x="702.34" y="1295.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.01%)</title><rect x="1005.0" y="1413" width="0.1" height="15.0" fill="rgb(234,77,50)" rx="2" ry="2" />
<text  x="1007.97" y="1423.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (11 samples, 0.02%)</title><rect x="1035.9" y="1333" width="0.2" height="15.0" fill="rgb(210,121,12)" rx="2" ry="2" />
<text  x="1038.89" y="1343.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (6 samples, 0.01%)</title><rect x="1034.6" y="1333" width="0.1" height="15.0" fill="rgb(235,191,29)" rx="2" ry="2" />
<text  x="1037.57" y="1343.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (7 samples, 0.01%)</title><rect x="988.0" y="1125" width="0.2" height="15.0" fill="rgb(246,87,16)" rx="2" ry="2" />
<text  x="991.04" y="1135.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.05%)</title><rect x="1028.4" y="1125" width="0.6" height="15.0" fill="rgb(223,49,34)" rx="2" ry="2" />
<text  x="1031.40" y="1135.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (9 samples, 0.02%)</title><rect x="1163.4" y="997" width="0.2" height="15.0" fill="rgb(217,176,1)" rx="2" ry="2" />
<text  x="1166.39" y="1007.5" ></text>
</g>
<g >
<title>&lt;tokio_tcp::stream::TcpStream as tokio_io::async_write::AsyncWrite&gt;::write_buf (20 samples, 0.04%)</title><rect x="1131.2" y="597" width="0.4" height="15.0" fill="rgb(238,117,42)" rx="2" ry="2" />
<text  x="1134.16" y="607.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (22 samples, 0.04%)</title><rect x="1024.0" y="1429" width="0.5" height="15.0" fill="rgb(233,112,7)" rx="2" ry="2" />
<text  x="1027.01" y="1439.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1023.8" y="1269" width="0.1" height="15.0" fill="rgb(253,29,43)" rx="2" ry="2" />
<text  x="1026.81" y="1279.5" ></text>
</g>
<g >
<title>start_thread (37,459 samples, 67.36%)</title><rect x="195.0" y="1589" width="794.9" height="15.0" fill="rgb(217,163,13)" rx="2" ry="2" />
<text  x="198.03" y="1599.5" >start_thread</text>
</g>
<g >
<title>ip_local_deliver (17 samples, 0.03%)</title><rect x="1039.0" y="341" width="0.4" height="15.0" fill="rgb(228,143,21)" rx="2" ry="2" />
<text  x="1042.05" y="351.5" ></text>
</g>
<g >
<title>&lt;noria::table::Table as tower_service::Service&lt;noria::data::TableOperation&gt;&gt;::call (19 samples, 0.03%)</title><rect x="180.0" y="1541" width="0.4" height="15.0" fill="rgb(247,29,52)" rx="2" ry="2" />
<text  x="183.03" y="1551.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (5 samples, 0.01%)</title><rect x="983.8" y="917" width="0.1" height="15.0" fill="rgb(211,197,44)" rx="2" ry="2" />
<text  x="986.82" y="927.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (295 samples, 0.53%)</title><rect x="252.4" y="1285" width="6.3" height="15.0" fill="rgb(222,45,25)" rx="2" ry="2" />
<text  x="255.45" y="1295.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8 samples, 0.01%)</title><rect x="601.0" y="1029" width="0.2" height="15.0" fill="rgb(251,137,45)" rx="2" ry="2" />
<text  x="603.99" y="1039.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (84 samples, 0.15%)</title><rect x="671.8" y="1189" width="1.8" height="15.0" fill="rgb(215,14,44)" rx="2" ry="2" />
<text  x="674.82" y="1199.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (35 samples, 0.06%)</title><rect x="1051.9" y="1445" width="0.7" height="15.0" fill="rgb(222,134,39)" rx="2" ry="2" />
<text  x="1054.87" y="1455.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Events::get::_$u7b$$u7b$closure$u7d$$u7d$::h67276c749ed68104 (10 samples, 0.02%)</title><rect x="1088.3" y="917" width="0.2" height="15.0" fill="rgb(251,140,52)" rx="2" ry="2" />
<text  x="1091.30" y="927.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (43 samples, 0.08%)</title><rect x="1036.9" y="1589" width="0.9" height="15.0" fill="rgb(208,40,34)" rx="2" ry="2" />
<text  x="1039.91" y="1599.5" ></text>
</g>
<g >
<title>&lt;noria::table::Table as tower_service::Service&lt;noria::data::TableOperation&gt;&gt;::poll_ready (12 samples, 0.02%)</title><rect x="186.3" y="1413" width="0.2" height="15.0" fill="rgb(210,197,7)" rx="2" ry="2" />
<text  x="189.29" y="1423.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::BufWriter&lt;W&gt; as std::io::Write&gt;::flush (9 samples, 0.02%)</title><rect x="989.6" y="1125" width="0.2" height="15.0" fill="rgb(228,73,20)" rx="2" ry="2" />
<text  x="992.63" y="1135.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *const T&gt;::is_null (37 samples, 0.07%)</title><rect x="541.2" y="1205" width="0.8" height="15.0" fill="rgb(242,152,40)" rx="2" ry="2" />
<text  x="544.21" y="1215.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNotInner&lt;T&gt;&gt;::serialize (60 samples, 0.11%)</title><rect x="998.7" y="1413" width="1.3" height="15.0" fill="rgb(236,30,19)" rx="2" ry="2" />
<text  x="1001.71" y="1423.5" ></text>
</g>
<g >
<title>alloc::alloc::box_free (553 samples, 0.99%)</title><rect x="908.9" y="1269" width="11.7" height="15.0" fill="rgb(210,17,21)" rx="2" ry="2" />
<text  x="911.85" y="1279.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::BoxedNode&lt;K,V&gt;::as_ptr (75 samples, 0.13%)</title><rect x="291.9" y="1301" width="1.6" height="15.0" fill="rgb(216,140,28)" rx="2" ry="2" />
<text  x="294.91" y="1311.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (50 samples, 0.09%)</title><rect x="1038.6" y="661" width="1.1" height="15.0" fill="rgb(246,138,51)" rx="2" ry="2" />
<text  x="1041.62" y="671.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (32 samples, 0.06%)</title><rect x="1037.1" y="1205" width="0.7" height="15.0" fill="rgb(218,160,28)" rx="2" ry="2" />
<text  x="1040.14" y="1215.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::chan::Rx$LT$T$C$S$GT$::recv::_$u7b$$u7b$closure$u7d$$u7d$::h02832e8795bf303a (23 samples, 0.04%)</title><rect x="1003.0" y="1493" width="0.5" height="15.0" fill="rgb(234,78,16)" rx="2" ry="2" />
<text  x="1006.04" y="1503.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::run (10 samples, 0.02%)</title><rect x="998.3" y="933" width="0.2" height="15.0" fill="rgb(219,0,9)" rx="2" ry="2" />
<text  x="1001.27" y="943.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (7 samples, 0.01%)</title><rect x="1147.9" y="981" width="0.2" height="15.0" fill="rgb(244,124,31)" rx="2" ry="2" />
<text  x="1150.94" y="991.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (34 samples, 0.06%)</title><rect x="1171.9" y="949" width="0.7" height="15.0" fill="rgb(209,202,10)" rx="2" ry="2" />
<text  x="1174.88" y="959.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (17 samples, 0.03%)</title><rect x="1036.1" y="1189" width="0.4" height="15.0" fill="rgb(247,212,8)" rx="2" ry="2" />
<text  x="1039.12" y="1199.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (5 samples, 0.01%)</title><rect x="1044.5" y="1125" width="0.1" height="15.0" fill="rgb(209,143,26)" rx="2" ry="2" />
<text  x="1047.48" y="1135.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::count_ones (26 samples, 0.05%)</title><rect x="691.7" y="1189" width="0.6" height="15.0" fill="rgb(241,159,22)" rx="2" ry="2" />
<text  x="694.74" y="1199.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.02%)</title><rect x="1030.8" y="741" width="0.2" height="15.0" fill="rgb(220,33,32)" rx="2" ry="2" />
<text  x="1033.80" y="751.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (23 samples, 0.04%)</title><rect x="1014.5" y="1205" width="0.4" height="15.0" fill="rgb(223,207,20)" rx="2" ry="2" />
<text  x="1017.46" y="1215.5" ></text>
</g>
<g >
<title>futures::sync::mpsc::Sender&lt;T&gt;::do_send_nb (6 samples, 0.01%)</title><rect x="1024.8" y="1509" width="0.1" height="15.0" fill="rgb(209,190,23)" rx="2" ry="2" />
<text  x="1027.79" y="1519.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (39 samples, 0.07%)</title><rect x="819.5" y="1093" width="0.8" height="15.0" fill="rgb(249,208,29)" rx="2" ry="2" />
<text  x="822.48" y="1103.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run (6 samples, 0.01%)</title><rect x="1030.2" y="1557" width="0.1" height="15.0" fill="rgb(245,105,0)" rx="2" ry="2" />
<text  x="1033.20" y="1567.5" ></text>
</g>
<g >
<title>futures::task_impl::with (12 samples, 0.02%)</title><rect x="1013.5" y="1477" width="0.3" height="15.0" fill="rgb(224,28,46)" rx="2" ry="2" />
<text  x="1016.54" y="1487.5" ></text>
</g>
<g >
<title>bincode::deserialize (7 samples, 0.01%)</title><rect x="1022.5" y="1429" width="0.1" height="15.0" fill="rgb(234,106,17)" rx="2" ry="2" />
<text  x="1025.48" y="1439.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (8 samples, 0.01%)</title><rect x="1034.7" y="1269" width="0.2" height="15.0" fill="rgb(233,171,5)" rx="2" ry="2" />
<text  x="1037.70" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (73 samples, 0.13%)</title><rect x="1144.7" y="773" width="1.6" height="15.0" fill="rgb(252,41,5)" rx="2" ry="2" />
<text  x="1147.72" y="783.5" ></text>
</g>
<g >
<title>std::panicking::try (8 samples, 0.01%)</title><rect x="1034.7" y="1397" width="0.2" height="15.0" fill="rgb(206,226,41)" rx="2" ry="2" />
<text  x="1037.70" y="1407.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (5 samples, 0.01%)</title><rect x="1021.0" y="1381" width="0.1" height="15.0" fill="rgb(212,116,53)" rx="2" ry="2" />
<text  x="1024.01" y="1391.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (18 samples, 0.03%)</title><rect x="180.0" y="1397" width="0.4" height="15.0" fill="rgb(232,217,19)" rx="2" ry="2" />
<text  x="183.03" y="1407.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::service::Buffer&lt;T,Request&gt; as tower_service::Service&lt;Request&gt;&gt;::call (19 samples, 0.03%)</title><rect x="180.0" y="1509" width="0.4" height="15.0" fill="rgb(234,203,5)" rx="2" ry="2" />
<text  x="183.03" y="1519.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (12 samples, 0.02%)</title><rect x="1047.6" y="1253" width="0.2" height="15.0" fill="rgb(229,178,12)" rx="2" ry="2" />
<text  x="1050.56" y="1263.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (14 samples, 0.03%)</title><rect x="197.4" y="1237" width="0.3" height="15.0" fill="rgb(243,88,49)" rx="2" ry="2" />
<text  x="200.38" y="1247.5" ></text>
</g>
<g >
<title>tower_balance::p2c::service::Balance&lt;D,Req&gt;::poll_discover (23 samples, 0.04%)</title><rect x="1003.5" y="1557" width="0.5" height="15.0" fill="rgb(244,88,42)" rx="2" ry="2" />
<text  x="1006.53" y="1567.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (15 samples, 0.03%)</title><rect x="1045.2" y="981" width="0.4" height="15.0" fill="rgb(224,177,44)" rx="2" ry="2" />
<text  x="1048.25" y="991.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Root&lt;K,V&gt;::new_leaf (759 samples, 1.36%)</title><rect x="275.3" y="1301" width="16.1" height="15.0" fill="rgb(243,207,17)" rx="2" ry="2" />
<text  x="278.28" y="1311.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::offset (15 samples, 0.03%)</title><rect x="698.8" y="1221" width="0.4" height="15.0" fill="rgb(212,224,17)" rx="2" ry="2" />
<text  x="701.85" y="1231.5" ></text>
</g>
<g >
<title>do_syscall_64 (132 samples, 0.24%)</title><rect x="1063.0" y="1045" width="2.8" height="15.0" fill="rgb(249,60,20)" rx="2" ry="2" />
<text  x="1066.01" y="1055.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (10 samples, 0.02%)</title><rect x="1051.4" y="1333" width="0.2" height="15.0" fill="rgb(227,63,8)" rx="2" ry="2" />
<text  x="1054.38" y="1343.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (26 samples, 0.05%)</title><rect x="996.3" y="1493" width="0.5" height="15.0" fill="rgb(236,220,24)" rx="2" ry="2" />
<text  x="999.27" y="1503.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (8 samples, 0.01%)</title><rect x="1025.6" y="821" width="0.2" height="15.0" fill="rgb(240,142,54)" rx="2" ry="2" />
<text  x="1028.62" y="831.5" ></text>
</g>
<g >
<title>mio::poll::SetReadiness::set_readiness (6 samples, 0.01%)</title><rect x="1113.6" y="965" width="0.1" height="15.0" fill="rgb(209,7,1)" rx="2" ry="2" />
<text  x="1116.59" y="975.5" ></text>
</g>
<g >
<title>do_syscall_64 (21 samples, 0.04%)</title><rect x="1108.5" y="469" width="0.5" height="15.0" fill="rgb(236,211,11)" rx="2" ry="2" />
<text  x="1111.52" y="479.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (13 samples, 0.02%)</title><rect x="1054.0" y="1125" width="0.3" height="15.0" fill="rgb(230,138,10)" rx="2" ry="2" />
<text  x="1057.01" y="1135.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::into_slices_mut (184 samples, 0.33%)</title><rect x="962.8" y="1269" width="3.9" height="15.0" fill="rgb(210,137,4)" rx="2" ry="2" />
<text  x="965.79" y="1279.5" ></text>
</g>
<g >
<title>tokio_reactor::sharded_rwlock::RwLock&lt;T&gt;::read (5 samples, 0.01%)</title><rect x="1055.0" y="1093" width="0.2" height="15.0" fill="rgb(218,159,22)" rx="2" ry="2" />
<text  x="1058.05" y="1103.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (12 samples, 0.02%)</title><rect x="999.2" y="853" width="0.2" height="15.0" fill="rgb(224,204,31)" rx="2" ry="2" />
<text  x="1002.18" y="863.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::Pool&lt;MS,Target,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (70 samples, 0.13%)</title><rect x="1131.9" y="757" width="1.5" height="15.0" fill="rgb(207,139,9)" rx="2" ry="2" />
<text  x="1134.90" y="767.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (28 samples, 0.05%)</title><rect x="1035.9" y="1413" width="0.6" height="15.0" fill="rgb(234,82,45)" rx="2" ry="2" />
<text  x="1038.89" y="1423.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::bounded::Sender&lt;T&gt;::try_send (8 samples, 0.01%)</title><rect x="11.1" y="1477" width="0.2" height="15.0" fill="rgb(248,155,42)" rx="2" ry="2" />
<text  x="14.10" y="1487.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1026.2" y="1045" width="0.1" height="15.0" fill="rgb(219,184,30)" rx="2" ry="2" />
<text  x="1029.19" y="1055.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default (6,082 samples, 10.94%)</title><rect x="1060.7" y="1301" width="129.0" height="15.0" fill="rgb(218,192,9)" rx="2" ry="2" />
<text  x="1063.65" y="1311.5" >tokio_executor::..</text>
</g>
<g >
<title>core::ptr::real_drop_in_place (8 samples, 0.01%)</title><rect x="991.8" y="1541" width="0.1" height="15.0" fill="rgb(242,8,26)" rx="2" ry="2" />
<text  x="994.77" y="1551.5" ></text>
</g>
<g >
<title>__nptl_deallocate_tsd (11 samples, 0.02%)</title><rect x="1060.4" y="1573" width="0.2" height="15.0" fill="rgb(208,52,52)" rx="2" ry="2" />
<text  x="1063.37" y="1583.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (6 samples, 0.01%)</title><rect x="1033.7" y="1141" width="0.1" height="15.0" fill="rgb(230,219,50)" rx="2" ry="2" />
<text  x="1036.68" y="1151.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit::_$u7b$$u7b$closure$u7d$$u7d$::h83d517d17b1a75b2 (21 samples, 0.04%)</title><rect x="1056.3" y="1029" width="0.4" height="15.0" fill="rgb(218,81,52)" rx="2" ry="2" />
<text  x="1059.26" y="1039.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (31 samples, 0.06%)</title><rect x="1059.1" y="1541" width="0.6" height="15.0" fill="rgb(244,175,10)" rx="2" ry="2" />
<text  x="1062.06" y="1551.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (5,397 samples, 9.70%)</title><rect x="739.2" y="1237" width="114.6" height="15.0" fill="rgb(227,21,3)" rx="2" ry="2" />
<text  x="742.25" y="1247.5" >core::iter::tr..</text>
</g>
<g >
<title>std::panicking::try::do_call (29 samples, 0.05%)</title><rect x="1031.2" y="1269" width="0.6" height="15.0" fill="rgb(242,112,34)" rx="2" ry="2" />
<text  x="1034.18" y="1279.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.01%)</title><rect x="1084.6" y="933" width="0.2" height="15.0" fill="rgb(244,186,10)" rx="2" ry="2" />
<text  x="1087.63" y="943.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (21 samples, 0.04%)</title><rect x="1022.9" y="1429" width="0.5" height="15.0" fill="rgb(253,56,2)" rx="2" ry="2" />
<text  x="1025.92" y="1439.5" ></text>
</g>
<g >
<title>std::thread::panicking (61 samples, 0.11%)</title><rect x="487.4" y="1205" width="1.3" height="15.0" fill="rgb(250,16,34)" rx="2" ry="2" />
<text  x="490.38" y="1215.5" ></text>
</g>
<g >
<title>SYSC_sendto (46 samples, 0.08%)</title><rect x="1050.1" y="789" width="1.0" height="15.0" fill="rgb(247,31,13)" rx="2" ry="2" />
<text  x="1053.08" y="799.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (54 samples, 0.10%)</title><rect x="181.0" y="1493" width="1.2" height="15.0" fill="rgb(206,127,44)" rx="2" ry="2" />
<text  x="184.02" y="1503.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (13 samples, 0.02%)</title><rect x="1175.8" y="885" width="0.2" height="15.0" fill="rgb(240,186,10)" rx="2" ry="2" />
<text  x="1178.76" y="895.5" ></text>
</g>
<g >
<title>std::thread::panicking (119 samples, 0.21%)</title><rect x="454.4" y="1205" width="2.5" height="15.0" fill="rgb(216,31,18)" rx="2" ry="2" />
<text  x="457.36" y="1215.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (6 samples, 0.01%)</title><rect x="187.0" y="1221" width="0.2" height="15.0" fill="rgb(208,134,9)" rx="2" ry="2" />
<text  x="190.05" y="1231.5" ></text>
</g>
<g >
<title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (35 samples, 0.06%)</title><rect x="676.5" y="1253" width="0.7" height="15.0" fill="rgb(232,27,27)" rx="2" ry="2" />
<text  x="679.50" y="1263.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (17 samples, 0.03%)</title><rect x="1025.4" y="1077" width="0.4" height="15.0" fill="rgb(254,22,46)" rx="2" ry="2" />
<text  x="1028.43" y="1087.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfb347edd97d33f3d (21 samples, 0.04%)</title><rect x="1033.2" y="1541" width="0.5" height="15.0" fill="rgb(245,102,36)" rx="2" ry="2" />
<text  x="1036.24" y="1551.5" ></text>
</g>
<g >
<title>&lt;rand::os::imp::OsRng as rand::Rng&gt;::fill_bytes (9 samples, 0.02%)</title><rect x="189.9" y="1525" width="0.2" height="15.0" fill="rgb(223,33,13)" rx="2" ry="2" />
<text  x="192.87" y="1535.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (17 samples, 0.03%)</title><rect x="1025.4" y="1125" width="0.4" height="15.0" fill="rgb(217,153,11)" rx="2" ry="2" />
<text  x="1028.43" y="1135.5" ></text>
</g>
<g >
<title>tokio_sync::loom::sync::CausalCell&lt;T&gt;::with_mut (25 samples, 0.04%)</title><rect x="1012.5" y="1461" width="0.5" height="15.0" fill="rgb(210,108,28)" rx="2" ry="2" />
<text  x="1015.48" y="1471.5" ></text>
</g>
<g >
<title>core::mem::swap (13 samples, 0.02%)</title><rect x="1110.4" y="853" width="0.2" height="15.0" fill="rgb(251,78,6)" rx="2" ry="2" />
<text  x="1113.37" y="863.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (24 samples, 0.04%)</title><rect x="557.1" y="1237" width="0.5" height="15.0" fill="rgb(244,84,46)" rx="2" ry="2" />
<text  x="560.11" y="1247.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (11 samples, 0.02%)</title><rect x="1041.1" y="949" width="0.2" height="15.0" fill="rgb(226,160,50)" rx="2" ry="2" />
<text  x="1044.09" y="959.5" ></text>
</g>
<g >
<title>sys_sched_yield (109 samples, 0.20%)</title><rect x="1063.5" y="1029" width="2.3" height="15.0" fill="rgb(213,176,12)" rx="2" ry="2" />
<text  x="1066.49" y="1039.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (12 samples, 0.02%)</title><rect x="1037.4" y="981" width="0.2" height="15.0" fill="rgb(214,202,45)" rx="2" ry="2" />
<text  x="1040.39" y="991.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::Task as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="1058.4" y="1221" width="0.2" height="15.0" fill="rgb(221,149,17)" rx="2" ry="2" />
<text  x="1061.42" y="1231.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (5 samples, 0.01%)</title><rect x="992.8" y="1541" width="0.1" height="15.0" fill="rgb(227,50,36)" rx="2" ry="2" />
<text  x="995.81" y="1551.5" ></text>
</g>
<g >
<title>zookeeper::io::ZkIo::clear_timeout (6 samples, 0.01%)</title><rect x="994.6" y="1317" width="0.1" height="15.0" fill="rgb(228,226,30)" rx="2" ry="2" />
<text  x="997.55" y="1327.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::poll_evented::PollEvented&lt;E&gt; as std::io::Write&gt;::write (62 samples, 0.11%)</title><rect x="1038.5" y="869" width="1.3" height="15.0" fill="rgb(226,198,11)" rx="2" ry="2" />
<text  x="1041.48" y="879.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::len (19 samples, 0.03%)</title><rect x="380.7" y="1269" width="0.4" height="15.0" fill="rgb(214,173,38)" rx="2" ry="2" />
<text  x="383.69" y="1279.5" ></text>
</g>
<g >
<title>mio::poll::RegistrationInner::set_readiness (39 samples, 0.07%)</title><rect x="185.0" y="1125" width="0.8" height="15.0" fill="rgb(221,79,11)" rx="2" ry="2" />
<text  x="188.01" y="1135.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (44 samples, 0.08%)</title><rect x="1116.5" y="965" width="0.9" height="15.0" fill="rgb(207,23,36)" rx="2" ry="2" />
<text  x="1119.50" y="975.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (11 samples, 0.02%)</title><rect x="954.4" y="1269" width="0.2" height="15.0" fill="rgb(207,0,2)" rx="2" ry="2" />
<text  x="957.41" y="1279.5" ></text>
</g>
<g >
<title>hyper::client::Client&lt;C,B&gt;::request (6 samples, 0.01%)</title><rect x="1004.8" y="1525" width="0.1" height="15.0" fill="rgb(233,218,17)" rx="2" ry="2" />
<text  x="1007.78" y="1535.5" ></text>
</g>
<g >
<title>chan::ChannelId::receiver (18 samples, 0.03%)</title><rect x="409.4" y="1317" width="0.4" height="15.0" fill="rgb(215,149,24)" rx="2" ry="2" />
<text  x="412.38" y="1327.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (63 samples, 0.11%)</title><rect x="672.3" y="1173" width="1.3" height="15.0" fill="rgb(239,100,4)" rx="2" ry="2" />
<text  x="675.26" y="1183.5" ></text>
</g>
<g >
<title>rand::Rng::gen (61 samples, 0.11%)</title><rect x="189.9" y="1573" width="1.2" height="15.0" fill="rgb(216,213,1)" rx="2" ry="2" />
<text  x="192.85" y="1583.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (33 samples, 0.06%)</title><rect x="1033.2" y="1573" width="0.7" height="15.0" fill="rgb(222,227,28)" rx="2" ry="2" />
<text  x="1036.24" y="1583.5" ></text>
</g>
<g >
<title>&lt;noria::Tagger as tokio_tower::multiplex::client::TagStore&lt;noria::Tagged&lt;Request&gt;,noria::Tagged&lt;Response&gt;&gt;&gt;::finish_tag (5 samples, 0.01%)</title><rect x="1043.1" y="933" width="0.1" height="15.0" fill="rgb(218,119,36)" rx="2" ry="2" />
<text  x="1046.08" y="943.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping (15 samples, 0.03%)</title><rect x="1013.1" y="1477" width="0.4" height="15.0" fill="rgb(231,93,41)" rx="2" ry="2" />
<text  x="1016.14" y="1487.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (9 samples, 0.02%)</title><rect x="1128.1" y="949" width="0.2" height="15.0" fill="rgb(223,157,25)" rx="2" ry="2" />
<text  x="1131.10" y="959.5" ></text>
</g>
<g >
<title>core::slice::Iter&lt;T&gt;::post_inc_start (13 samples, 0.02%)</title><rect x="314.5" y="1237" width="0.3" height="15.0" fill="rgb(233,225,5)" rx="2" ry="2" />
<text  x="317.53" y="1247.5" ></text>
</g>
<g >
<title>core::mem::take (5 samples, 0.01%)</title><rect x="199.9" y="1317" width="0.1" height="15.0" fill="rgb(227,124,45)" rx="2" ry="2" />
<text  x="202.89" y="1327.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (15 samples, 0.03%)</title><rect x="1028.1" y="1285" width="0.3" height="15.0" fill="rgb(233,56,29)" rx="2" ry="2" />
<text  x="1031.06" y="1295.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (63 samples, 0.11%)</title><rect x="1151.3" y="549" width="1.3" height="15.0" fill="rgb(218,123,0)" rx="2" ry="2" />
<text  x="1154.28" y="559.5" ></text>
</g>
<g >
<title>mio::sys::unix::awakener::pipe::Awakener::wakeup (30 samples, 0.05%)</title><rect x="185.2" y="1045" width="0.6" height="15.0" fill="rgb(222,36,9)" rx="2" ry="2" />
<text  x="188.18" y="1055.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="189.1" y="1173" width="0.1" height="15.0" fill="rgb(235,50,20)" rx="2" ry="2" />
<text  x="192.09" y="1183.5" ></text>
</g>
<g >
<title>do_syscall_64 (21 samples, 0.04%)</title><rect x="1024.0" y="981" width="0.5" height="15.0" fill="rgb(226,123,24)" rx="2" ry="2" />
<text  x="1027.03" y="991.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (12 samples, 0.02%)</title><rect x="995.3" y="1253" width="0.3" height="15.0" fill="rgb(213,81,31)" rx="2" ry="2" />
<text  x="998.32" y="1263.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (8 samples, 0.01%)</title><rect x="1027.6" y="1253" width="0.1" height="15.0" fill="rgb(240,155,13)" rx="2" ry="2" />
<text  x="1030.57" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (8 samples, 0.01%)</title><rect x="1025.6" y="869" width="0.2" height="15.0" fill="rgb(251,38,37)" rx="2" ry="2" />
<text  x="1028.62" y="879.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::clone_id (6 samples, 0.01%)</title><rect x="1013.7" y="1413" width="0.1" height="15.0" fill="rgb(216,89,26)" rx="2" ry="2" />
<text  x="1016.65" y="1423.5" ></text>
</g>
<g >
<title>crossbeam_epoch::default::HANDLE::__getit (37 samples, 0.07%)</title><rect x="1171.8" y="965" width="0.8" height="15.0" fill="rgb(221,1,44)" rx="2" ry="2" />
<text  x="1174.82" y="975.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (6 samples, 0.01%)</title><rect x="1014.2" y="1141" width="0.1" height="15.0" fill="rgb(221,158,12)" rx="2" ry="2" />
<text  x="1017.20" y="1151.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (27 samples, 0.05%)</title><rect x="1045.2" y="1205" width="0.6" height="15.0" fill="rgb(250,215,2)" rx="2" ry="2" />
<text  x="1048.22" y="1215.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::new_edge (52 samples, 0.09%)</title><rect x="713.6" y="1269" width="1.1" height="15.0" fill="rgb(226,2,18)" rx="2" ry="2" />
<text  x="716.59" y="1279.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::poll_complete (8 samples, 0.01%)</title><rect x="1051.9" y="1221" width="0.2" height="15.0" fill="rgb(246,170,44)" rx="2" ry="2" />
<text  x="1054.89" y="1231.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.01%)</title><rect x="1057.9" y="1061" width="0.1" height="15.0" fill="rgb(223,145,42)" rx="2" ry="2" />
<text  x="1060.89" y="1071.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv_mut (446 samples, 0.80%)</title><rect x="512.0" y="1285" width="9.5" height="15.0" fill="rgb(229,108,32)" rx="2" ry="2" />
<text  x="514.99" y="1295.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::wakeup (15 samples, 0.03%)</title><rect x="10.7" y="1093" width="0.3" height="15.0" fill="rgb(248,128,24)" rx="2" ry="2" />
<text  x="13.66" y="1103.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (28 samples, 0.05%)</title><rect x="1037.8" y="1573" width="0.6" height="15.0" fill="rgb(252,14,27)" rx="2" ry="2" />
<text  x="1040.82" y="1583.5" ></text>
</g>
<g >
<title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (9 samples, 0.02%)</title><rect x="989.6" y="1077" width="0.2" height="15.0" fill="rgb(233,136,32)" rx="2" ry="2" />
<text  x="992.63" y="1087.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (14 samples, 0.03%)</title><rect x="1032.5" y="1285" width="0.3" height="15.0" fill="rgb(236,9,33)" rx="2" ry="2" />
<text  x="1035.47" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (9 samples, 0.02%)</title><rect x="1049.5" y="1253" width="0.2" height="15.0" fill="rgb(207,91,46)" rx="2" ry="2" />
<text  x="1052.53" y="1263.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (6 samples, 0.01%)</title><rect x="1116.8" y="917" width="0.1" height="15.0" fill="rgb(239,15,53)" rx="2" ry="2" />
<text  x="1119.82" y="927.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (93 samples, 0.17%)</title><rect x="1057.1" y="1541" width="2.0" height="15.0" fill="rgb(245,152,23)" rx="2" ry="2" />
<text  x="1060.09" y="1551.5" ></text>
</g>
<g >
<title>alloc::collections::btree::search::search_node (1,281 samples, 2.30%)</title><rect x="524.8" y="1269" width="27.2" height="15.0" fill="rgb(212,71,43)" rx="2" ry="2" />
<text  x="527.83" y="1279.5" >a..</text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (5 samples, 0.01%)</title><rect x="980.3" y="1109" width="0.1" height="15.0" fill="rgb(222,175,15)" rx="2" ry="2" />
<text  x="983.25" y="1119.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (6 samples, 0.01%)</title><rect x="1026.3" y="981" width="0.2" height="15.0" fill="rgb(206,213,11)" rx="2" ry="2" />
<text  x="1029.34" y="991.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (13 samples, 0.02%)</title><rect x="1044.9" y="1061" width="0.3" height="15.0" fill="rgb(244,163,49)" rx="2" ry="2" />
<text  x="1047.93" y="1071.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::stream::Stream&gt;::poll (7 samples, 0.01%)</title><rect x="1033.0" y="997" width="0.1" height="15.0" fill="rgb(240,90,35)" rx="2" ry="2" />
<text  x="1035.96" y="1007.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::set_default (8 samples, 0.01%)</title><rect x="983.1" y="1317" width="0.2" height="15.0" fill="rgb(229,5,4)" rx="2" ry="2" />
<text  x="986.10" y="1327.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (33 samples, 0.06%)</title><rect x="10.4" y="1333" width="0.7" height="15.0" fill="rgb(217,186,20)" rx="2" ry="2" />
<text  x="13.40" y="1343.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (8 samples, 0.01%)</title><rect x="1033.2" y="1221" width="0.2" height="15.0" fill="rgb(209,51,10)" rx="2" ry="2" />
<text  x="1036.24" y="1231.5" ></text>
</g>
<g >
<title>&lt;mio::net::tcp::TcpStream as mio::event_imp::Evented&gt;::reregister (5 samples, 0.01%)</title><rect x="994.1" y="1285" width="0.1" height="15.0" fill="rgb(209,43,39)" rx="2" ry="2" />
<text  x="997.11" y="1295.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (47 samples, 0.08%)</title><rect x="948.1" y="1269" width="1.0" height="15.0" fill="rgb(250,204,27)" rx="2" ry="2" />
<text  x="951.15" y="1279.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::io::Io as std::io::Write&gt;::write (15 samples, 0.03%)</title><rect x="10.7" y="1061" width="0.3" height="15.0" fill="rgb(249,116,14)" rx="2" ry="2" />
<text  x="13.66" y="1071.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (9 samples, 0.02%)</title><rect x="686.9" y="1157" width="0.2" height="15.0" fill="rgb(222,58,4)" rx="2" ry="2" />
<text  x="689.90" y="1167.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (10 samples, 0.02%)</title><rect x="995.3" y="965" width="0.2" height="15.0" fill="rgb(246,87,33)" rx="2" ry="2" />
<text  x="998.32" y="975.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="193.9" y="1125" width="0.2" height="15.0" fill="rgb(241,83,19)" rx="2" ry="2" />
<text  x="196.90" y="1135.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (9 samples, 0.02%)</title><rect x="265.6" y="1285" width="0.2" height="15.0" fill="rgb(210,128,7)" rx="2" ry="2" />
<text  x="268.62" y="1295.5" ></text>
</g>
<g >
<title>__libc_write (15 samples, 0.03%)</title><rect x="10.7" y="997" width="0.3" height="15.0" fill="rgb(227,201,0)" rx="2" ry="2" />
<text  x="13.66" y="1007.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (8 samples, 0.01%)</title><rect x="1083.1" y="965" width="0.1" height="15.0" fill="rgb(242,137,33)" rx="2" ry="2" />
<text  x="1086.06" y="975.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::wrapping_add (13 samples, 0.02%)</title><rect x="569.4" y="1221" width="0.3" height="15.0" fill="rgb(254,70,22)" rx="2" ry="2" />
<text  x="572.41" y="1231.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::RangeMut&lt;K,V&gt;::next_unchecked (892 samples, 1.60%)</title><rect x="955.9" y="1301" width="18.9" height="15.0" fill="rgb(227,52,21)" rx="2" ry="2" />
<text  x="958.89" y="1311.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (8 samples, 0.01%)</title><rect x="1033.2" y="1125" width="0.2" height="15.0" fill="rgb(238,201,30)" rx="2" ry="2" />
<text  x="1036.24" y="1135.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple (23 samples, 0.04%)</title><rect x="1046.6" y="853" width="0.5" height="15.0" fill="rgb(219,82,0)" rx="2" ry="2" />
<text  x="1049.60" y="863.5" ></text>
</g>
<g >
<title>crossbeam_epoch::epoch::Epoch::starting (7 samples, 0.01%)</title><rect x="1162.7" y="965" width="0.1" height="15.0" fill="rgb(254,89,48)" rx="2" ry="2" />
<text  x="1165.69" y="975.5" ></text>
</g>
<g >
<title>core::mem::take (16 samples, 0.03%)</title><rect x="1013.1" y="1541" width="0.4" height="15.0" fill="rgb(251,65,26)" rx="2" ry="2" />
<text  x="1016.12" y="1551.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (6 samples, 0.01%)</title><rect x="828.8" y="1077" width="0.1" height="15.0" fill="rgb(208,158,46)" rx="2" ry="2" />
<text  x="831.81" y="1087.5" ></text>
</g>
<g >
<title>std::panicking::update_panic_count::PANIC_COUNT::__getit (6 samples, 0.01%)</title><rect x="488.5" y="1125" width="0.2" height="15.0" fill="rgb(240,131,35)" rx="2" ry="2" />
<text  x="491.53" y="1135.5" ></text>
</g>
<g >
<title>tsdn_null (7 samples, 0.01%)</title><rect x="69.7" y="1509" width="0.1" height="15.0" fill="rgb(207,81,49)" rx="2" ry="2" />
<text  x="72.67" y="1519.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (13 samples, 0.02%)</title><rect x="1052.1" y="1205" width="0.2" height="15.0" fill="rgb(252,104,36)" rx="2" ry="2" />
<text  x="1055.06" y="1215.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple (7 samples, 0.01%)</title><rect x="1022.5" y="901" width="0.1" height="15.0" fill="rgb(228,2,54)" rx="2" ry="2" />
<text  x="1025.48" y="911.5" ></text>
</g>
<g >
<title>chan::RecvOp&lt;T&gt;::into_result_lock (153 samples, 0.28%)</title><rect x="475.6" y="1253" width="3.2" height="15.0" fill="rgb(207,211,5)" rx="2" ry="2" />
<text  x="478.56" y="1263.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (6 samples, 0.01%)</title><rect x="1058.6" y="1221" width="0.1" height="15.0" fill="rgb(225,73,44)" rx="2" ry="2" />
<text  x="1061.59" y="1231.5" ></text>
</g>
<g >
<title>sys_recvfrom (11 samples, 0.02%)</title><rect x="1035.6" y="853" width="0.2" height="15.0" fill="rgb(214,122,36)" rx="2" ry="2" />
<text  x="1038.57" y="863.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (9 samples, 0.02%)</title><rect x="412.9" y="1253" width="0.2" height="15.0" fill="rgb(253,28,2)" rx="2" ry="2" />
<text  x="415.95" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (21 samples, 0.04%)</title><rect x="1056.3" y="1205" width="0.4" height="15.0" fill="rgb(214,67,4)" rx="2" ry="2" />
<text  x="1059.26" y="1215.5" ></text>
</g>
<g >
<title>__vfs_write (56 samples, 0.10%)</title><rect x="1145.0" y="709" width="1.1" height="15.0" fill="rgb(234,13,10)" rx="2" ry="2" />
<text  x="1147.95" y="719.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::h21cd600e9f97af32 (6 samples, 0.01%)</title><rect x="1030.2" y="1509" width="0.1" height="15.0" fill="rgb(226,137,19)" rx="2" ry="2" />
<text  x="1033.20" y="1519.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (11 samples, 0.02%)</title><rect x="668.3" y="1157" width="0.2" height="15.0" fill="rgb(249,128,6)" rx="2" ry="2" />
<text  x="671.31" y="1167.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (19 samples, 0.03%)</title><rect x="1052.6" y="1477" width="0.4" height="15.0" fill="rgb(216,121,18)" rx="2" ry="2" />
<text  x="1055.61" y="1487.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (22 samples, 0.04%)</title><rect x="600.7" y="1045" width="0.5" height="15.0" fill="rgb(251,9,1)" rx="2" ry="2" />
<text  x="603.69" y="1055.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::BoxedNode&lt;K,V&gt;::as_ptr (75 samples, 0.13%)</title><rect x="522.0" y="1269" width="1.6" height="15.0" fill="rgb(220,81,6)" rx="2" ry="2" />
<text  x="524.97" y="1279.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::is_null (12 samples, 0.02%)</title><rect x="436.2" y="1253" width="0.3" height="15.0" fill="rgb(248,27,24)" rx="2" ry="2" />
<text  x="439.24" y="1263.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (20 samples, 0.04%)</title><rect x="1038.0" y="1413" width="0.4" height="15.0" fill="rgb(252,33,11)" rx="2" ry="2" />
<text  x="1040.99" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.05%)</title><rect x="1113.0" y="885" width="0.6" height="15.0" fill="rgb(253,54,41)" rx="2" ry="2" />
<text  x="1115.95" y="895.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (22 samples, 0.04%)</title><rect x="192.8" y="1221" width="0.5" height="15.0" fill="rgb(215,214,8)" rx="2" ry="2" />
<text  x="195.84" y="1231.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (6 samples, 0.01%)</title><rect x="1026.3" y="1029" width="0.2" height="15.0" fill="rgb(222,203,49)" rx="2" ry="2" />
<text  x="1029.34" y="1039.5" ></text>
</g>
<g >
<title>vfs_write (64 samples, 0.12%)</title><rect x="1144.9" y="725" width="1.3" height="15.0" fill="rgb(248,135,21)" rx="2" ry="2" />
<text  x="1147.87" y="735.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (28 samples, 0.05%)</title><rect x="916.4" y="1205" width="0.6" height="15.0" fill="rgb(251,143,0)" rx="2" ry="2" />
<text  x="919.36" y="1215.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (14 samples, 0.03%)</title><rect x="197.4" y="1221" width="0.3" height="15.0" fill="rgb(250,198,17)" rx="2" ry="2" />
<text  x="200.38" y="1231.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (7 samples, 0.01%)</title><rect x="998.3" y="853" width="0.1" height="15.0" fill="rgb(244,45,42)" rx="2" ry="2" />
<text  x="1001.27" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.01%)</title><rect x="982.7" y="1205" width="0.2" height="15.0" fill="rgb(217,14,39)" rx="2" ry="2" />
<text  x="985.73" y="1215.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (11 samples, 0.02%)</title><rect x="1131.3" y="325" width="0.2" height="15.0" fill="rgb(215,104,47)" rx="2" ry="2" />
<text  x="1134.31" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (46 samples, 0.08%)</title><rect x="1098.1" y="901" width="1.0" height="15.0" fill="rgb(249,42,31)" rx="2" ry="2" />
<text  x="1101.12" y="911.5" ></text>
</g>
<g >
<title>&lt;noria::_::&lt;impl serde::de::Deserialize for noria::Tagged&lt;T&gt;&gt;::deserialize::__Visitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (11 samples, 0.02%)</title><rect x="1055.2" y="1109" width="0.2" height="15.0" fill="rgb(210,11,19)" rx="2" ry="2" />
<text  x="1058.15" y="1119.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::as_mut_ptr (6 samples, 0.01%)</title><rect x="593.6" y="1013" width="0.1" height="15.0" fill="rgb(231,63,2)" rx="2" ry="2" />
<text  x="596.56" y="1023.5" ></text>
</g>
<g >
<title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (9 samples, 0.02%)</title><rect x="1001.7" y="549" width="0.2" height="15.0" fill="rgb(226,23,1)" rx="2" ry="2" />
<text  x="1004.66" y="559.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (14 samples, 0.03%)</title><rect x="215.7" y="1285" width="0.3" height="15.0" fill="rgb(228,33,48)" rx="2" ry="2" />
<text  x="218.72" y="1295.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (78 samples, 0.14%)</title><rect x="452.7" y="1173" width="1.7" height="15.0" fill="rgb(251,0,38)" rx="2" ry="2" />
<text  x="455.71" y="1183.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (5 samples, 0.01%)</title><rect x="981.2" y="1093" width="0.1" height="15.0" fill="rgb(218,184,28)" rx="2" ry="2" />
<text  x="984.19" y="1103.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (10 samples, 0.02%)</title><rect x="1112.6" y="869" width="0.2" height="15.0" fill="rgb(253,37,42)" rx="2" ry="2" />
<text  x="1115.59" y="879.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (15 samples, 0.03%)</title><rect x="188.6" y="1397" width="0.4" height="15.0" fill="rgb(214,110,15)" rx="2" ry="2" />
<text  x="191.64" y="1407.5" ></text>
</g>
<g >
<title>core::iter::adapters::Cloned&lt;I&gt;::new (65 samples, 0.12%)</title><rect x="630.7" y="1301" width="1.4" height="15.0" fill="rgb(220,75,21)" rx="2" ry="2" />
<text  x="633.67" y="1311.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (20 samples, 0.04%)</title><rect x="496.5" y="1205" width="0.5" height="15.0" fill="rgb(236,97,3)" rx="2" ry="2" />
<text  x="499.55" y="1215.5" ></text>
</g>
<g >
<title>tcp_data_queue (9 samples, 0.02%)</title><rect x="1042.3" y="261" width="0.2" height="15.0" fill="rgb(216,181,24)" rx="2" ry="2" />
<text  x="1045.27" y="271.5" ></text>
</g>
<g >
<title>tracing::span::Span::current (7 samples, 0.01%)</title><rect x="1132.1" y="693" width="0.1" height="15.0" fill="rgb(219,11,6)" rx="2" ry="2" />
<text  x="1135.05" y="703.5" ></text>
</g>
<g >
<title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (234 samples, 0.42%)</title><rect x="597.8" y="1141" width="4.9" height="15.0" fill="rgb(243,55,45)" rx="2" ry="2" />
<text  x="600.76" y="1151.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (18 samples, 0.03%)</title><rect x="1059.3" y="1189" width="0.4" height="15.0" fill="rgb(240,90,20)" rx="2" ry="2" />
<text  x="1062.33" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (11 samples, 0.02%)</title><rect x="1059.1" y="1253" width="0.2" height="15.0" fill="rgb(245,114,52)" rx="2" ry="2" />
<text  x="1062.06" y="1263.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (6,084 samples, 10.94%)</title><rect x="1060.6" y="1493" width="129.1" height="15.0" fill="rgb(239,201,51)" rx="2" ry="2" />
<text  x="1063.61" y="1503.5" >std::panic::catc..</text>
</g>
<g >
<title>serde::ser::Serializer::collect_str (5 samples, 0.01%)</title><rect x="1022.3" y="1045" width="0.1" height="15.0" fill="rgb(219,117,21)" rx="2" ry="2" />
<text  x="1025.33" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::add (25 samples, 0.04%)</title><rect x="698.6" y="1237" width="0.6" height="15.0" fill="rgb(209,192,4)" rx="2" ry="2" />
<text  x="701.64" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (11 samples, 0.02%)</title><rect x="1059.1" y="1285" width="0.2" height="15.0" fill="rgb(229,8,0)" rx="2" ry="2" />
<text  x="1062.06" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (174 samples, 0.31%)</title><rect x="1053.0" y="1589" width="3.7" height="15.0" fill="rgb(236,8,10)" rx="2" ry="2" />
<text  x="1056.01" y="1599.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::h21cd600e9f97af32 (12 samples, 0.02%)</title><rect x="1029.9" y="1333" width="0.3" height="15.0" fill="rgb(215,219,14)" rx="2" ry="2" />
<text  x="1032.95" y="1343.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (6 samples, 0.01%)</title><rect x="1031.2" y="1013" width="0.1" height="15.0" fill="rgb(254,206,47)" rx="2" ry="2" />
<text  x="1034.18" y="1023.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="1034.2" y="1237" width="0.1" height="15.0" fill="rgb(214,18,12)" rx="2" ry="2" />
<text  x="1037.19" y="1247.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (37 samples, 0.07%)</title><rect x="1105.1" y="821" width="0.8" height="15.0" fill="rgb(227,27,29)" rx="2" ry="2" />
<text  x="1108.10" y="831.5" ></text>
</g>
<g >
<title>witness_assert_depth_to_rank (50 samples, 0.09%)</title><rect x="159.8" y="1541" width="1.1" height="15.0" fill="rgb(209,46,41)" rx="2" ry="2" />
<text  x="162.80" y="1551.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::get (6 samples, 0.01%)</title><rect x="214.7" y="1269" width="0.1" height="15.0" fill="rgb(227,195,40)" rx="2" ry="2" />
<text  x="217.66" y="1279.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ThreadNotify as futures::task_impl::Notify&gt;::notify (5 samples, 0.01%)</title><rect x="1040.5" y="805" width="0.1" height="15.0" fill="rgb(228,108,19)" rx="2" ry="2" />
<text  x="1043.47" y="815.5" ></text>
</g>
<g >
<title>__atime_needs_update (5 samples, 0.01%)</title><rect x="1096.5" y="709" width="0.1" height="15.0" fill="rgb(249,117,36)" rx="2" ry="2" />
<text  x="1099.51" y="719.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h2ab9300f8f77b09c (64 samples, 0.12%)</title><rect x="1151.3" y="645" width="1.3" height="15.0" fill="rgb(239,36,9)" rx="2" ry="2" />
<text  x="1154.25" y="655.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (5 samples, 0.01%)</title><rect x="188.0" y="1285" width="0.1" height="15.0" fill="rgb(230,136,15)" rx="2" ry="2" />
<text  x="190.98" y="1295.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::notify (6 samples, 0.01%)</title><rect x="996.3" y="1269" width="0.1" height="15.0" fill="rgb(222,53,26)" rx="2" ry="2" />
<text  x="999.27" y="1279.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (142 samples, 0.26%)</title><rect x="1041.4" y="965" width="3.0" height="15.0" fill="rgb(216,99,53)" rx="2" ry="2" />
<text  x="1044.43" y="975.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (33 samples, 0.06%)</title><rect x="1035.2" y="1157" width="0.7" height="15.0" fill="rgb(252,224,6)" rx="2" ry="2" />
<text  x="1038.19" y="1167.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit::_$u7b$$u7b$closure$u7d$$u7d$::h83d517d17b1a75b2 (47 samples, 0.08%)</title><rect x="1048.0" y="1061" width="1.0" height="15.0" fill="rgb(215,27,45)" rx="2" ry="2" />
<text  x="1050.96" y="1071.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (7 samples, 0.01%)</title><rect x="1059.4" y="1157" width="0.1" height="15.0" fill="rgb(242,57,48)" rx="2" ry="2" />
<text  x="1062.36" y="1167.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::get (19 samples, 0.03%)</title><rect x="557.8" y="1237" width="0.4" height="15.0" fill="rgb(244,142,15)" rx="2" ry="2" />
<text  x="560.83" y="1247.5" ></text>
</g>
<g >
<title>core::alloc::Layout::size (12 samples, 0.02%)</title><rect x="687.4" y="1189" width="0.3" height="15.0" fill="rgb(247,49,43)" rx="2" ry="2" />
<text  x="690.41" y="1199.5" ></text>
</g>
<g >
<title>&lt;futures::stream::concat::ConcatSafe&lt;S&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1041.1" y="693" width="0.1" height="15.0" fill="rgb(217,140,18)" rx="2" ry="2" />
<text  x="1044.09" y="703.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::spawn_thread::_$u7b$$u7b$closure$u7d$$u7d$::ha7200d58e6efae3b (12 samples, 0.02%)</title><rect x="1015.2" y="1509" width="0.2" height="15.0" fill="rgb(241,189,22)" rx="2" ry="2" />
<text  x="1018.18" y="1519.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::h21cd600e9f97af32 (21 samples, 0.04%)</title><rect x="997.2" y="1477" width="0.4" height="15.0" fill="rgb(240,50,27)" rx="2" ry="2" />
<text  x="1000.16" y="1487.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::as_mut_ptr (15 samples, 0.03%)</title><rect x="723.4" y="1285" width="0.3" height="15.0" fill="rgb(226,129,21)" rx="2" ry="2" />
<text  x="726.42" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (21 samples, 0.04%)</title><rect x="1056.3" y="1189" width="0.4" height="15.0" fill="rgb(241,52,46)" rx="2" ry="2" />
<text  x="1059.26" y="1199.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (7 samples, 0.01%)</title><rect x="198.3" y="1269" width="0.2" height="15.0" fill="rgb(212,209,46)" rx="2" ry="2" />
<text  x="201.32" y="1279.5" ></text>
</g>
<g >
<title>mio::sys::unix::awakener::pipe::Awakener::wakeup (20 samples, 0.04%)</title><rect x="1048.3" y="869" width="0.4" height="15.0" fill="rgb(216,78,10)" rx="2" ry="2" />
<text  x="1051.32" y="879.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="1033.2" y="1301" width="0.2" height="15.0" fill="rgb(247,197,26)" rx="2" ry="2" />
<text  x="1036.24" y="1311.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (9 samples, 0.02%)</title><rect x="619.8" y="1205" width="0.2" height="15.0" fill="rgb(232,67,2)" rx="2" ry="2" />
<text  x="622.81" y="1215.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (12 samples, 0.02%)</title><rect x="721.6" y="1285" width="0.2" height="15.0" fill="rgb(228,219,13)" rx="2" ry="2" />
<text  x="724.57" y="1295.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (12 samples, 0.02%)</title><rect x="1033.9" y="1589" width="0.3" height="15.0" fill="rgb(209,147,45)" rx="2" ry="2" />
<text  x="1036.94" y="1599.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (34 samples, 0.06%)</title><rect x="1022.2" y="1541" width="0.7" height="15.0" fill="rgb(229,62,40)" rx="2" ry="2" />
<text  x="1025.18" y="1551.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (7 samples, 0.01%)</title><rect x="1034.2" y="1253" width="0.1" height="15.0" fill="rgb(248,20,50)" rx="2" ry="2" />
<text  x="1037.19" y="1263.5" ></text>
</g>
<g >
<title>epoll_wait (170 samples, 0.31%)</title><rect x="1102.4" y="901" width="3.6" height="15.0" fill="rgb(237,223,21)" rx="2" ry="2" />
<text  x="1105.37" y="911.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (16 samples, 0.03%)</title><rect x="996.8" y="1461" width="0.4" height="15.0" fill="rgb(236,215,44)" rx="2" ry="2" />
<text  x="999.82" y="1471.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (98 samples, 0.18%)</title><rect x="583.3" y="1077" width="2.1" height="15.0" fill="rgb(237,119,45)" rx="2" ry="2" />
<text  x="586.29" y="1087.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (174 samples, 0.31%)</title><rect x="1053.0" y="1557" width="3.7" height="15.0" fill="rgb(254,151,5)" rx="2" ry="2" />
<text  x="1056.01" y="1567.5" ></text>
</g>
<g >
<title>std::sync::mpsc::SyncSender&lt;T&gt;::send (5 samples, 0.01%)</title><rect x="992.8" y="1349" width="0.1" height="15.0" fill="rgb(220,97,39)" rx="2" ry="2" />
<text  x="995.81" y="1359.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (9 samples, 0.02%)</title><rect x="1049.5" y="1189" width="0.2" height="15.0" fill="rgb(216,116,28)" rx="2" ry="2" />
<text  x="1052.53" y="1199.5" ></text>
</g>
<g >
<title>core::iter::adapters::map_try_fold::_$u7b$$u7b$closure$u7d$$u7d$::h64ef46a13609215e (5 samples, 0.01%)</title><rect x="198.0" y="1173" width="0.1" height="15.0" fill="rgb(236,145,47)" rx="2" ry="2" />
<text  x="201.02" y="1183.5" ></text>
</g>
<g >
<title>crossbeam_utils::atomic::atomic_cell::AtomicCell&lt;T&gt;::swap (7 samples, 0.01%)</title><rect x="1005.3" y="1477" width="0.2" height="15.0" fill="rgb(235,209,42)" rx="2" ry="2" />
<text  x="1008.31" y="1487.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (9 samples, 0.02%)</title><rect x="1131.3" y="261" width="0.2" height="15.0" fill="rgb(233,55,49)" rx="2" ry="2" />
<text  x="1134.31" y="271.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::get (12 samples, 0.02%)</title><rect x="262.6" y="1237" width="0.3" height="15.0" fill="rgb(249,75,6)" rx="2" ry="2" />
<text  x="265.63" y="1247.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (11 samples, 0.02%)</title><rect x="1035.9" y="1301" width="0.2" height="15.0" fill="rgb(253,157,44)" rx="2" ry="2" />
<text  x="1038.89" y="1311.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (48 samples, 0.09%)</title><rect x="1014.2" y="1525" width="1.0" height="15.0" fill="rgb(209,159,49)" rx="2" ry="2" />
<text  x="1017.16" y="1535.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (12 samples, 0.02%)</title><rect x="1033.7" y="1461" width="0.2" height="15.0" fill="rgb(238,211,35)" rx="2" ry="2" />
<text  x="1036.68" y="1471.5" ></text>
</g>
<g >
<title>nf_hook_slow (7 samples, 0.01%)</title><rect x="1050.2" y="597" width="0.1" height="15.0" fill="rgb(223,195,38)" rx="2" ry="2" />
<text  x="1053.17" y="607.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (6 samples, 0.01%)</title><rect x="375.8" y="1269" width="0.1" height="15.0" fill="rgb(216,159,53)" rx="2" ry="2" />
<text  x="378.81" y="1279.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit (56 samples, 0.10%)</title><rect x="184.8" y="1333" width="1.2" height="15.0" fill="rgb(219,18,0)" rx="2" ry="2" />
<text  x="187.80" y="1343.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (5 samples, 0.01%)</title><rect x="180.7" y="1461" width="0.1" height="15.0" fill="rgb(251,95,35)" rx="2" ry="2" />
<text  x="183.73" y="1471.5" ></text>
</g>
<g >
<title>tokio_tower::mediator::Receiver&lt;T&gt;::try_recv (37 samples, 0.07%)</title><rect x="1058.3" y="1269" width="0.7" height="15.0" fill="rgb(250,8,35)" rx="2" ry="2" />
<text  x="1061.25" y="1279.5" ></text>
</g>
<g >
<title>noria::table::_::&lt;impl serde::ser::Serialize for noria::table::Input&gt;::serialize (16 samples, 0.03%)</title><rect x="1045.2" y="1125" width="0.4" height="15.0" fill="rgb(219,25,39)" rx="2" ry="2" />
<text  x="1048.22" y="1135.5" ></text>
</g>
<g >
<title>tsd_witness_tsdp_get (79 samples, 0.14%)</title><rect x="156.7" y="1525" width="1.7" height="15.0" fill="rgb(226,157,23)" rx="2" ry="2" />
<text  x="159.73" y="1535.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (25 samples, 0.04%)</title><rect x="615.4" y="1205" width="0.6" height="15.0" fill="rgb(208,99,2)" rx="2" ry="2" />
<text  x="618.44" y="1215.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="995.3" y="837" width="0.2" height="15.0" fill="rgb(248,176,49)" rx="2" ry="2" />
<text  x="998.32" y="847.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (38 samples, 0.07%)</title><rect x="921.6" y="1301" width="0.9" height="15.0" fill="rgb(214,130,44)" rx="2" ry="2" />
<text  x="924.65" y="1311.5" ></text>
</g>
<g >
<title>&lt;bincode::de::read::SliceReader as bincode::de::read::BincodeRead&gt;::forward_read_str (83 samples, 0.15%)</title><rect x="1000.6" y="677" width="1.8" height="15.0" fill="rgb(214,47,52)" rx="2" ry="2" />
<text  x="1003.64" y="687.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (7 samples, 0.01%)</title><rect x="1034.2" y="1301" width="0.1" height="15.0" fill="rgb(252,68,21)" rx="2" ry="2" />
<text  x="1037.19" y="1311.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (26 samples, 0.05%)</title><rect x="1028.4" y="837" width="0.6" height="15.0" fill="rgb(250,72,18)" rx="2" ry="2" />
<text  x="1031.42" y="847.5" ></text>
</g>
<g >
<title>std::sys_common::poison::Flag::get (5 samples, 0.01%)</title><rect x="193.7" y="1237" width="0.1" height="15.0" fill="rgb(252,63,4)" rx="2" ry="2" />
<text  x="196.71" y="1247.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.01%)</title><rect x="1022.2" y="1333" width="0.1" height="15.0" fill="rgb(218,8,13)" rx="2" ry="2" />
<text  x="1025.20" y="1343.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (6 samples, 0.01%)</title><rect x="1014.2" y="1189" width="0.1" height="15.0" fill="rgb(237,104,21)" rx="2" ry="2" />
<text  x="1017.20" y="1199.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (102 samples, 0.18%)</title><rect x="993.2" y="1429" width="2.1" height="15.0" fill="rgb(233,120,34)" rx="2" ry="2" />
<text  x="996.15" y="1439.5" ></text>
</g>
<g >
<title>chan::select::Select::maybe_try_select::try_sync (9,358 samples, 16.83%)</title><rect x="431.6" y="1317" width="198.6" height="15.0" fill="rgb(251,189,47)" rx="2" ry="2" />
<text  x="434.64" y="1327.5" >chan::select::Select::mayb..</text>
</g>
<g >
<title>futures::future::Future::wait (50 samples, 0.09%)</title><rect x="192.8" y="1381" width="1.1" height="15.0" fill="rgb(211,126,50)" rx="2" ry="2" />
<text  x="195.84" y="1391.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::write (6 samples, 0.01%)</title><rect x="983.5" y="1125" width="0.1" height="15.0" fill="rgb(234,106,35)" rx="2" ry="2" />
<text  x="986.52" y="1135.5" ></text>
</g>
<g >
<title>&lt;bincode::config::int::FixintEncoding as bincode::config::int::IntEncoding&gt;::deserialize_u32 (5 samples, 0.01%)</title><rect x="1000.2" y="725" width="0.1" height="15.0" fill="rgb(240,228,38)" rx="2" ry="2" />
<text  x="1003.20" y="735.5" ></text>
</g>
<g >
<title>futures::task_impl::current (12 samples, 0.02%)</title><rect x="1013.5" y="1493" width="0.3" height="15.0" fill="rgb(227,216,52)" rx="2" ry="2" />
<text  x="1016.54" y="1503.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (357 samples, 0.64%)</title><rect x="910.3" y="1253" width="7.6" height="15.0" fill="rgb(230,3,26)" rx="2" ry="2" />
<text  x="913.29" y="1263.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::clone_id (6 samples, 0.01%)</title><rect x="1058.4" y="1141" width="0.2" height="15.0" fill="rgb(222,204,11)" rx="2" ry="2" />
<text  x="1061.44" y="1151.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align (75 samples, 0.13%)</title><rect x="690.7" y="1221" width="1.6" height="15.0" fill="rgb(251,3,37)" rx="2" ry="2" />
<text  x="693.70" y="1231.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::register_task (24 samples, 0.04%)</title><rect x="1007.0" y="1493" width="0.5" height="15.0" fill="rgb(222,201,0)" rx="2" ry="2" />
<text  x="1009.99" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.01%)</title><rect x="1040.5" y="741" width="0.1" height="15.0" fill="rgb(208,199,37)" rx="2" ry="2" />
<text  x="1043.47" y="751.5" ></text>
</g>
<g >
<title>&lt;async_bincode::reader::AsyncBincodeReader&lt;R,T&gt; as futures::stream::Stream&gt;::poll (9 samples, 0.02%)</title><rect x="1042.8" y="917" width="0.2" height="15.0" fill="rgb(210,200,26)" rx="2" ry="2" />
<text  x="1045.78" y="927.5" ></text>
</g>
<g >
<title>_rjem_je_arena_ralloc_no_move (26 samples, 0.05%)</title><rect x="1017.3" y="1541" width="0.5" height="15.0" fill="rgb(235,53,27)" rx="2" ry="2" />
<text  x="1020.28" y="1551.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (97 samples, 0.17%)</title><rect x="1031.2" y="1589" width="2.0" height="15.0" fill="rgb(226,163,37)" rx="2" ry="2" />
<text  x="1034.18" y="1599.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (13 samples, 0.02%)</title><rect x="1044.9" y="1125" width="0.3" height="15.0" fill="rgb(237,11,30)" rx="2" ry="2" />
<text  x="1047.93" y="1135.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (20 samples, 0.04%)</title><rect x="1038.0" y="1397" width="0.4" height="15.0" fill="rgb(206,169,29)" rx="2" ry="2" />
<text  x="1040.99" y="1407.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.01%)</title><rect x="194.1" y="1189" width="0.1" height="15.0" fill="rgb(207,165,32)" rx="2" ry="2" />
<text  x="197.14" y="1199.5" ></text>
</g>
<g >
<title>&lt;hyper::proto::h1::dispatch::Client&lt;B&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (6 samples, 0.01%)</title><rect x="996.3" y="1445" width="0.1" height="15.0" fill="rgb(208,201,8)" rx="2" ry="2" />
<text  x="999.27" y="1455.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (5 samples, 0.01%)</title><rect x="192.7" y="1285" width="0.1" height="15.0" fill="rgb(209,19,8)" rx="2" ry="2" />
<text  x="195.69" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (8 samples, 0.01%)</title><rect x="1034.7" y="1221" width="0.2" height="15.0" fill="rgb(243,114,8)" rx="2" ry="2" />
<text  x="1037.70" y="1231.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::wrappers::ClientResponseFut&lt;T,E&gt; as futures::future::Future&gt;::poll (20 samples, 0.04%)</title><rect x="187.0" y="1301" width="0.5" height="15.0" fill="rgb(207,194,30)" rx="2" ry="2" />
<text  x="190.05" y="1311.5" ></text>
</g>
<g >
<title>tcache_flush_cache (5 samples, 0.01%)</title><rect x="195.0" y="1493" width="0.2" height="15.0" fill="rgb(209,103,27)" rx="2" ry="2" />
<text  x="198.05" y="1503.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::clone_id (6 samples, 0.01%)</title><rect x="1013.9" y="1381" width="0.1" height="15.0" fill="rgb(205,121,48)" rx="2" ry="2" />
<text  x="1016.88" y="1391.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (7 samples, 0.01%)</title><rect x="194.4" y="1365" width="0.1" height="15.0" fill="rgb(246,180,29)" rx="2" ry="2" />
<text  x="197.39" y="1375.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (12 samples, 0.02%)</title><rect x="1037.4" y="949" width="0.2" height="15.0" fill="rgb(214,7,52)" rx="2" ry="2" />
<text  x="1040.39" y="959.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (5 samples, 0.01%)</title><rect x="1044.5" y="1093" width="0.1" height="15.0" fill="rgb(242,159,39)" rx="2" ry="2" />
<text  x="1047.48" y="1103.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (11 samples, 0.02%)</title><rect x="1034.3" y="1317" width="0.3" height="15.0" fill="rgb(205,25,37)" rx="2" ry="2" />
<text  x="1037.34" y="1327.5" ></text>
</g>
<g >
<title>std::panicking::try (36,502 samples, 65.64%)</title><rect x="202.5" y="1477" width="774.6" height="15.0" fill="rgb(234,115,46)" rx="2" ry="2" />
<text  x="205.54" y="1487.5" >std::panicking::try</text>
</g>
<g >
<title>mio::sys::unix::awakener::pipe::Awakener::cleanup (6 samples, 0.01%)</title><rect x="993.5" y="1301" width="0.1" height="15.0" fill="rgb(207,85,44)" rx="2" ry="2" />
<text  x="996.47" y="1311.5" ></text>
</g>
<g >
<title>tcp_recvmsg (7 samples, 0.01%)</title><rect x="1035.6" y="789" width="0.2" height="15.0" fill="rgb(244,177,3)" rx="2" ry="2" />
<text  x="1038.61" y="799.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (12 samples, 0.02%)</title><rect x="1029.9" y="853" width="0.3" height="15.0" fill="rgb(224,74,10)" rx="2" ry="2" />
<text  x="1032.95" y="863.5" ></text>
</g>
<g >
<title>core::mem::swap (9 samples, 0.02%)</title><rect x="1128.1" y="965" width="0.2" height="15.0" fill="rgb(219,161,24)" rx="2" ry="2" />
<text  x="1131.10" y="975.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::notify (27 samples, 0.05%)</title><rect x="1028.4" y="1285" width="0.6" height="15.0" fill="rgb(233,137,38)" rx="2" ry="2" />
<text  x="1031.40" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (93 samples, 0.17%)</title><rect x="1057.1" y="1429" width="2.0" height="15.0" fill="rgb(245,93,29)" rx="2" ry="2" />
<text  x="1060.09" y="1439.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (6 samples, 0.01%)</title><rect x="1034.6" y="1429" width="0.1" height="15.0" fill="rgb(209,155,47)" rx="2" ry="2" />
<text  x="1037.57" y="1439.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::InternalAsyncWriter&lt;S,T,D&gt; as std::io::Read&gt;::read (21 samples, 0.04%)</title><rect x="1035.4" y="1045" width="0.4" height="15.0" fill="rgb(253,11,34)" rx="2" ry="2" />
<text  x="1038.38" y="1055.5" ></text>
</g>
<g >
<title>core::mem::swap (13 samples, 0.02%)</title><rect x="1120.3" y="965" width="0.3" height="15.0" fill="rgb(214,29,10)" rx="2" ry="2" />
<text  x="1123.27" y="975.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (40 samples, 0.07%)</title><rect x="803.1" y="1061" width="0.8" height="15.0" fill="rgb(243,82,4)" rx="2" ry="2" />
<text  x="806.07" y="1071.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (8 samples, 0.01%)</title><rect x="1036.5" y="1141" width="0.2" height="15.0" fill="rgb(239,193,39)" rx="2" ry="2" />
<text  x="1039.48" y="1151.5" ></text>
</g>
<g >
<title>time::at (12 samples, 0.02%)</title><rect x="196.7" y="1317" width="0.2" height="15.0" fill="rgb(214,11,34)" rx="2" ry="2" />
<text  x="199.66" y="1327.5" ></text>
</g>
<g >
<title>sys_write (5 samples, 0.01%)</title><rect x="984.1" y="1093" width="0.1" height="15.0" fill="rgb(215,164,38)" rx="2" ry="2" />
<text  x="987.09" y="1103.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (12 samples, 0.02%)</title><rect x="1129.5" y="965" width="0.3" height="15.0" fill="rgb(233,31,32)" rx="2" ry="2" />
<text  x="1132.55" y="975.5" ></text>
</g>
<g >
<title>tokio_sync::loom::sync::CausalCell&lt;T&gt;::with_mut (104 samples, 0.19%)</title><rect x="1010.9" y="1525" width="2.2" height="15.0" fill="rgb(248,55,45)" rx="2" ry="2" />
<text  x="1013.91" y="1535.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default (10 samples, 0.02%)</title><rect x="1051.4" y="1525" width="0.2" height="15.0" fill="rgb(228,59,46)" rx="2" ry="2" />
<text  x="1054.38" y="1535.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (21 samples, 0.04%)</title><rect x="1033.2" y="1397" width="0.5" height="15.0" fill="rgb(244,161,18)" rx="2" ry="2" />
<text  x="1036.24" y="1407.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (8 samples, 0.01%)</title><rect x="1120.6" y="1029" width="0.2" height="15.0" fill="rgb(225,117,12)" rx="2" ry="2" />
<text  x="1123.64" y="1039.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (10 samples, 0.02%)</title><rect x="1045.6" y="965" width="0.2" height="15.0" fill="rgb(229,196,12)" rx="2" ry="2" />
<text  x="1048.58" y="975.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (55 samples, 0.10%)</title><rect x="698.2" y="1269" width="1.1" height="15.0" fill="rgb(222,168,35)" rx="2" ry="2" />
<text  x="701.17" y="1279.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (8 samples, 0.01%)</title><rect x="1071.8" y="1013" width="0.2" height="15.0" fill="rgb(217,87,33)" rx="2" ry="2" />
<text  x="1074.79" y="1023.5" ></text>
</g>
<g >
<title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (57 samples, 0.10%)</title><rect x="998.7" y="1045" width="1.2" height="15.0" fill="rgb(244,74,31)" rx="2" ry="2" />
<text  x="1001.71" y="1055.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.01%)</title><rect x="1027.4" y="965" width="0.2" height="15.0" fill="rgb(205,137,49)" rx="2" ry="2" />
<text  x="1030.44" y="975.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (6 samples, 0.01%)</title><rect x="189.1" y="1157" width="0.1" height="15.0" fill="rgb(238,77,16)" rx="2" ry="2" />
<text  x="192.09" y="1167.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (12 samples, 0.02%)</title><rect x="1029.9" y="1045" width="0.3" height="15.0" fill="rgb(214,9,20)" rx="2" ry="2" />
<text  x="1032.95" y="1055.5" ></text>
</g>
<g >
<title>core::mem::replace (11 samples, 0.02%)</title><rect x="1129.6" y="933" width="0.2" height="15.0" fill="rgb(243,93,32)" rx="2" ry="2" />
<text  x="1132.57" y="943.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (216 samples, 0.39%)</title><rect x="1044.8" y="1509" width="4.6" height="15.0" fill="rgb(234,18,41)" rx="2" ry="2" />
<text  x="1047.80" y="1519.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (56 samples, 0.10%)</title><rect x="427.9" y="1269" width="1.2" height="15.0" fill="rgb(224,115,18)" rx="2" ry="2" />
<text  x="430.86" y="1279.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h248546646748d6c4 (8 samples, 0.01%)</title><rect x="11.1" y="1557" width="0.2" height="15.0" fill="rgb(210,126,27)" rx="2" ry="2" />
<text  x="14.10" y="1567.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (11 samples, 0.02%)</title><rect x="1034.0" y="1413" width="0.2" height="15.0" fill="rgb(215,121,3)" rx="2" ry="2" />
<text  x="1036.96" y="1423.5" ></text>
</g>
<g >
<title>std::panicking::try (234 samples, 0.42%)</title><rect x="1130.4" y="981" width="5.0" height="15.0" fill="rgb(221,90,27)" rx="2" ry="2" />
<text  x="1133.44" y="991.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (6 samples, 0.01%)</title><rect x="983.5" y="965" width="0.1" height="15.0" fill="rgb(236,31,29)" rx="2" ry="2" />
<text  x="986.52" y="975.5" ></text>
</g>
<g >
<title>__vfs_write (14 samples, 0.03%)</title><rect x="1014.6" y="805" width="0.3" height="15.0" fill="rgb(234,83,43)" rx="2" ry="2" />
<text  x="1017.61" y="815.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="1035.9" y="1125" width="0.2" height="15.0" fill="rgb(215,144,31)" rx="2" ry="2" />
<text  x="1038.89" y="1135.5" ></text>
</g>
<g >
<title>bincode::internal::serialized_size (6 samples, 0.01%)</title><rect x="1027.4" y="1253" width="0.2" height="15.0" fill="rgb(235,53,51)" rx="2" ry="2" />
<text  x="1030.44" y="1263.5" ></text>
</g>
<g >
<title>&lt;async_bincode::reader::AsyncBincodeReader&lt;R,T&gt; as futures::stream::Stream&gt;::poll (17 samples, 0.03%)</title><rect x="1031.3" y="1029" width="0.4" height="15.0" fill="rgb(228,45,40)" rx="2" ry="2" />
<text  x="1034.30" y="1039.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (120 samples, 0.22%)</title><rect x="549.5" y="1237" width="2.5" height="15.0" fill="rgb(217,89,42)" rx="2" ry="2" />
<text  x="552.47" y="1247.5" ></text>
</g>
<g >
<title>serde::de::VariantAccess::newtype_variant (128 samples, 0.23%)</title><rect x="1000.3" y="757" width="2.7" height="15.0" fill="rgb(210,102,41)" rx="2" ry="2" />
<text  x="1003.32" y="767.5" ></text>
</g>
<g >
<title>cache_bin_alloc_easy (353 samples, 0.63%)</title><rect x="53.1" y="1477" width="7.5" height="15.0" fill="rgb(243,87,23)" rx="2" ry="2" />
<text  x="56.12" y="1487.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::stream::Stream&gt;::poll (144 samples, 0.26%)</title><rect x="1000.0" y="1557" width="3.0" height="15.0" fill="rgb(224,2,25)" rx="2" ry="2" />
<text  x="1002.99" y="1567.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::swap_remove_full (42 samples, 0.08%)</title><rect x="1009.9" y="1493" width="0.9" height="15.0" fill="rgb(248,72,8)" rx="2" ry="2" />
<text  x="1012.87" y="1503.5" ></text>
</g>
<g >
<title>tsd_reentrancy_levelp_get (112 samples, 0.20%)</title><rect x="161.6" y="1541" width="2.4" height="15.0" fill="rgb(207,228,45)" rx="2" ry="2" />
<text  x="164.61" y="1551.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::unpark (7 samples, 0.01%)</title><rect x="1047.6" y="1061" width="0.1" height="15.0" fill="rgb(254,217,39)" rx="2" ry="2" />
<text  x="1050.60" y="1071.5" ></text>
</g>
<g >
<title>&lt;tokio_timer::timer::Timer&lt;T,N&gt; as tokio_executor::park::Park&gt;::park (1,617 samples, 2.91%)</title><rect x="1086.3" y="1029" width="34.3" height="15.0" fill="rgb(254,54,13)" rx="2" ry="2" />
<text  x="1089.32" y="1039.5" >&lt;t..</text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::as_leaf_mut (28 samples, 0.05%)</title><rect x="347.5" y="1285" width="0.6" height="15.0" fill="rgb(228,34,27)" rx="2" ry="2" />
<text  x="350.49" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (14 samples, 0.03%)</title><rect x="1049.7" y="1285" width="0.3" height="15.0" fill="rgb(205,47,4)" rx="2" ry="2" />
<text  x="1052.72" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (13 samples, 0.02%)</title><rect x="1033.4" y="1189" width="0.3" height="15.0" fill="rgb(245,225,20)" rx="2" ry="2" />
<text  x="1036.41" y="1199.5" ></text>
</g>
<g >
<title>core::mem::swap (10 samples, 0.02%)</title><rect x="1082.5" y="933" width="0.2" height="15.0" fill="rgb(239,224,53)" rx="2" ry="2" />
<text  x="1085.53" y="943.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (35 samples, 0.06%)</title><rect x="191.8" y="1589" width="0.8" height="15.0" fill="rgb(218,138,10)" rx="2" ry="2" />
<text  x="194.85" y="1599.5" ></text>
</g>
<g >
<title>&lt;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (17 samples, 0.03%)</title><rect x="530.0" y="1237" width="0.4" height="15.0" fill="rgb(232,57,14)" rx="2" ry="2" />
<text  x="533.01" y="1247.5" ></text>
</g>
<g >
<title>&lt;tower_balance::p2c::service::Balance&lt;D,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (7 samples, 0.01%)</title><rect x="1030.1" y="757" width="0.1" height="15.0" fill="rgb(241,55,17)" rx="2" ry="2" />
<text  x="1033.05" y="767.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::poll_evented::PollEvented&lt;E&gt; as std::io::Read&gt;::read (13 samples, 0.02%)</title><rect x="1037.4" y="1029" width="0.3" height="15.0" fill="rgb(240,223,37)" rx="2" ry="2" />
<text  x="1040.39" y="1039.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (60 samples, 0.11%)</title><rect x="1014.2" y="1589" width="1.2" height="15.0" fill="rgb(239,0,44)" rx="2" ry="2" />
<text  x="1017.16" y="1599.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *const T&gt;::add (143 samples, 0.26%)</title><rect x="778.1" y="1141" width="3.0" height="15.0" fill="rgb(247,37,4)" rx="2" ry="2" />
<text  x="781.08" y="1151.5" ></text>
</g>
<g >
<title>noria::table::Table::quick_n_dirty::_$u7b$$u7b$closure$u7d$$u7d$::h3f374431d27411e4 (19 samples, 0.03%)</title><rect x="180.0" y="1557" width="0.4" height="15.0" fill="rgb(223,165,15)" rx="2" ry="2" />
<text  x="183.03" y="1567.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (14 samples, 0.03%)</title><rect x="1039.8" y="933" width="0.3" height="15.0" fill="rgb(233,128,40)" rx="2" ry="2" />
<text  x="1042.79" y="943.5" ></text>
</g>
<g >
<title>mio::poll::SetReadiness::set_readiness (7 samples, 0.01%)</title><rect x="1028.1" y="1045" width="0.1" height="15.0" fill="rgb(208,80,45)" rx="2" ry="2" />
<text  x="1031.10" y="1055.5" ></text>
</g>
<g >
<title>tokio_timer::wheel::level::Level&lt;T&gt;::next_expiration (11 samples, 0.02%)</title><rect x="1085.7" y="965" width="0.2" height="15.0" fill="rgb(244,25,21)" rx="2" ry="2" />
<text  x="1088.71" y="975.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="979.4" y="1317" width="0.1" height="15.0" fill="rgb(215,182,3)" rx="2" ry="2" />
<text  x="982.40" y="1327.5" ></text>
</g>
<g >
<title>byteorder::io::WriteBytesExt::write_u8 (14 samples, 0.03%)</title><rect x="1023.0" y="965" width="0.3" height="15.0" fill="rgb(210,89,54)" rx="2" ry="2" />
<text  x="1026.03" y="975.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.01%)</title><rect x="998.3" y="885" width="0.1" height="15.0" fill="rgb(235,170,37)" rx="2" ry="2" />
<text  x="1001.27" y="895.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (17 samples, 0.03%)</title><rect x="1044.4" y="1493" width="0.4" height="15.0" fill="rgb(237,38,16)" rx="2" ry="2" />
<text  x="1047.44" y="1503.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (10 samples, 0.02%)</title><rect x="995.3" y="981" width="0.2" height="15.0" fill="rgb(244,182,46)" rx="2" ry="2" />
<text  x="998.32" y="991.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::list::Tx&lt;T&gt;::push (6 samples, 0.01%)</title><rect x="187.7" y="1301" width="0.1" height="15.0" fill="rgb(211,18,19)" rx="2" ry="2" />
<text  x="190.67" y="1311.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current (122 samples, 0.22%)</title><rect x="979.9" y="1269" width="2.6" height="15.0" fill="rgb(247,168,54)" rx="2" ry="2" />
<text  x="982.93" y="1279.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::worker::Worker&lt;T,Request&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="1051.5" y="997" width="0.1" height="15.0" fill="rgb(221,26,21)" rx="2" ry="2" />
<text  x="1054.46" y="1007.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (146 samples, 0.26%)</title><rect x="459.7" y="1205" width="3.1" height="15.0" fill="rgb(219,178,34)" rx="2" ry="2" />
<text  x="462.67" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::with (6 samples, 0.01%)</title><rect x="1005.8" y="1445" width="0.2" height="15.0" fill="rgb(218,98,19)" rx="2" ry="2" />
<text  x="1008.84" y="1455.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (11 samples, 0.02%)</title><rect x="992.9" y="1461" width="0.3" height="15.0" fill="rgb(242,175,13)" rx="2" ry="2" />
<text  x="995.92" y="1471.5" ></text>
</g>
<g >
<title>tokio_reactor::HandlePriv::wakeup (45 samples, 0.08%)</title><rect x="1108.2" y="693" width="1.0" height="15.0" fill="rgb(225,198,19)" rx="2" ry="2" />
<text  x="1111.20" y="703.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (7 samples, 0.01%)</title><rect x="1010.5" y="1429" width="0.1" height="15.0" fill="rgb(254,78,47)" rx="2" ry="2" />
<text  x="1013.47" y="1439.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.01%)</title><rect x="194.9" y="1205" width="0.1" height="15.0" fill="rgb(248,45,34)" rx="2" ry="2" />
<text  x="197.86" y="1215.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (20 samples, 0.04%)</title><rect x="1059.3" y="1349" width="0.4" height="15.0" fill="rgb(246,57,12)" rx="2" ry="2" />
<text  x="1062.29" y="1359.5" ></text>
</g>
<g >
<title>mio::sys::unix::awakener::pipe::Awakener::wakeup (26 samples, 0.05%)</title><rect x="1108.4" y="581" width="0.6" height="15.0" fill="rgb(246,15,32)" rx="2" ry="2" />
<text  x="1111.41" y="591.5" ></text>
</g>
<g >
<title>_rjem_je_arena_tcache_fill_small (6 samples, 0.01%)</title><rect x="53.0" y="1461" width="0.1" height="15.0" fill="rgb(244,225,26)" rx="2" ry="2" />
<text  x="55.99" y="1471.5" ></text>
</g>
<g >
<title>&lt;tower_util::ready::Ready&lt;T,Request&gt; as futures::future::Future&gt;::poll (14 samples, 0.03%)</title><rect x="186.3" y="1429" width="0.3" height="15.0" fill="rgb(218,68,33)" rx="2" ry="2" />
<text  x="189.26" y="1439.5" ></text>
</g>
<g >
<title>__GI___clone (37,459 samples, 67.36%)</title><rect x="195.0" y="1605" width="794.9" height="15.0" fill="rgb(248,210,51)" rx="2" ry="2" />
<text  x="198.03" y="1615.5" >__GI___clone</text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (32 samples, 0.06%)</title><rect x="1031.8" y="1173" width="0.7" height="15.0" fill="rgb(217,188,15)" rx="2" ry="2" />
<text  x="1034.79" y="1183.5" ></text>
</g>
<g >
<title>&lt;futures::future::then::Then&lt;A,B,F&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="194.7" y="1301" width="0.1" height="15.0" fill="rgb(217,216,5)" rx="2" ry="2" />
<text  x="197.71" y="1311.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *const T&gt;::offset (19 samples, 0.03%)</title><rect x="673.0" y="1141" width="0.4" height="15.0" fill="rgb(236,205,0)" rx="2" ry="2" />
<text  x="676.05" y="1151.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run (12 samples, 0.02%)</title><rect x="1015.2" y="1493" width="0.2" height="15.0" fill="rgb(239,226,23)" rx="2" ry="2" />
<text  x="1018.18" y="1503.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h688efbe20c01ba86 (193 samples, 0.35%)</title><rect x="985.8" y="1413" width="4.1" height="15.0" fill="rgb(246,71,18)" rx="2" ry="2" />
<text  x="988.77" y="1423.5" ></text>
</g>
<g >
<title>tsd_thread_allocatedp_get (50 samples, 0.09%)</title><rect x="80.3" y="1541" width="1.1" height="15.0" fill="rgb(222,90,53)" rx="2" ry="2" />
<text  x="83.30" y="1551.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (9 samples, 0.02%)</title><rect x="873.5" y="1269" width="0.2" height="15.0" fill="rgb(251,143,54)" rx="2" ry="2" />
<text  x="876.50" y="1279.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::Handle as tokio_executor::park::Unpark&gt;::unpark (5 samples, 0.01%)</title><rect x="1047.6" y="1045" width="0.1" height="15.0" fill="rgb(213,213,32)" rx="2" ry="2" />
<text  x="1050.62" y="1055.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::keys (256 samples, 0.46%)</title><rect x="543.4" y="1237" width="5.4" height="15.0" fill="rgb(217,46,43)" rx="2" ry="2" />
<text  x="546.40" y="1247.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts_mut (19 samples, 0.03%)</title><rect x="935.2" y="1269" width="0.4" height="15.0" fill="rgb(214,25,23)" rx="2" ry="2" />
<text  x="938.20" y="1279.5" ></text>
</g>
<g >
<title>__GI_epoll_ctl (5 samples, 0.01%)</title><rect x="994.1" y="1221" width="0.1" height="15.0" fill="rgb(244,58,38)" rx="2" ry="2" />
<text  x="997.11" y="1231.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (8 samples, 0.01%)</title><rect x="1034.7" y="1317" width="0.2" height="15.0" fill="rgb(210,163,48)" rx="2" ry="2" />
<text  x="1037.70" y="1327.5" ></text>
</g>
<g >
<title>tokio_timer::wheel::Wheel&lt;T&gt;::poll_at (103 samples, 0.19%)</title><rect x="1083.8" y="997" width="2.1" height="15.0" fill="rgb(208,190,22)" rx="2" ry="2" />
<text  x="1086.76" y="1007.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (12 samples, 0.02%)</title><rect x="1033.7" y="1429" width="0.2" height="15.0" fill="rgb(247,165,13)" rx="2" ry="2" />
<text  x="1036.68" y="1439.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (12 samples, 0.02%)</title><rect x="1036.7" y="1237" width="0.2" height="15.0" fill="rgb(245,106,31)" rx="2" ry="2" />
<text  x="1039.65" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit::_$u7b$$u7b$closure$u7d$$u7d$::h83d517d17b1a75b2 (76 samples, 0.14%)</title><rect x="1107.9" y="773" width="1.7" height="15.0" fill="rgb(238,38,1)" rx="2" ry="2" />
<text  x="1110.95" y="783.5" ></text>
</g>
<g >
<title>ep_poll (6 samples, 0.01%)</title><rect x="1080.0" y="821" width="0.2" height="15.0" fill="rgb(226,124,27)" rx="2" ry="2" />
<text  x="1083.04" y="831.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (76 samples, 0.14%)</title><rect x="915.3" y="1221" width="1.7" height="15.0" fill="rgb(211,6,43)" rx="2" ry="2" />
<text  x="918.34" y="1231.5" ></text>
</g>
<g >
<title>tokio_tower::mediator::Receiver&lt;T&gt;::try_recv (22 samples, 0.04%)</title><rect x="1024.0" y="1493" width="0.5" height="15.0" fill="rgb(253,94,0)" rx="2" ry="2" />
<text  x="1027.01" y="1503.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (36 samples, 0.06%)</title><rect x="1185.4" y="885" width="0.8" height="15.0" fill="rgb(211,63,15)" rx="2" ry="2" />
<text  x="1188.42" y="895.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1025.6" y="709" width="0.1" height="15.0" fill="rgb(231,228,11)" rx="2" ry="2" />
<text  x="1028.62" y="719.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (16 samples, 0.03%)</title><rect x="991.8" y="1589" width="0.3" height="15.0" fill="rgb(237,205,23)" rx="2" ry="2" />
<text  x="994.75" y="1599.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h5b3a67a18c04d66c (15 samples, 0.03%)</title><rect x="188.6" y="1445" width="0.4" height="15.0" fill="rgb(251,146,0)" rx="2" ry="2" />
<text  x="191.64" y="1455.5" ></text>
</g>
<g >
<title>futures::task_impl::std::CURRENT_TASK::__getit (5 samples, 0.01%)</title><rect x="1135.3" y="773" width="0.1" height="15.0" fill="rgb(206,33,9)" rx="2" ry="2" />
<text  x="1138.26" y="783.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="1056.7" y="1301" width="0.1" height="15.0" fill="rgb(245,86,34)" rx="2" ry="2" />
<text  x="1059.70" y="1311.5" ></text>
</g>
<g >
<title>tokio_reactor::Reactor::turn (1,123 samples, 2.02%)</title><rect x="1086.8" y="997" width="23.8" height="15.0" fill="rgb(208,213,11)" rx="2" ry="2" />
<text  x="1089.81" y="1007.5" >t..</text>
</g>
<g >
<title>core::ptr::real_drop_in_place (14 samples, 0.03%)</title><rect x="182.4" y="1413" width="0.3" height="15.0" fill="rgb(244,80,31)" rx="2" ry="2" />
<text  x="185.38" y="1423.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (28 samples, 0.05%)</title><rect x="1037.8" y="1589" width="0.6" height="15.0" fill="rgb(248,5,54)" rx="2" ry="2" />
<text  x="1040.82" y="1599.5" ></text>
</g>
<g >
<title>all (55,611 samples, 100%)</title><rect x="10.0" y="1637" width="1180.0" height="15.0" fill="rgb(254,16,50)" rx="2" ry="2" />
<text  x="13.00" y="1647.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::spawn_thread::_$u7b$$u7b$closure$u7d$$u7d$::ha7200d58e6efae3b (284 samples, 0.51%)</title><rect x="1038.4" y="1589" width="6.0" height="15.0" fill="rgb(253,24,54)" rx="2" ry="2" />
<text  x="1041.41" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.04%)</title><rect x="1028.5" y="805" width="0.5" height="15.0" fill="rgb(248,188,3)" rx="2" ry="2" />
<text  x="1031.52" y="815.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (21 samples, 0.04%)</title><rect x="1022.9" y="1461" width="0.5" height="15.0" fill="rgb(252,216,1)" rx="2" ry="2" />
<text  x="1025.92" y="1471.5" ></text>
</g>
<g >
<title>tsd_fetch (213 samples, 0.38%)</title><rect x="172.3" y="1573" width="4.5" height="15.0" fill="rgb(244,192,42)" rx="2" ry="2" />
<text  x="175.32" y="1583.5" ></text>
</g>
<g >
<title>chan::Receiver&lt;T&gt;::id (166 samples, 0.30%)</title><rect x="702.5" y="1333" width="3.5" height="15.0" fill="rgb(247,56,43)" rx="2" ry="2" />
<text  x="705.50" y="1343.5" ></text>
</g>
<g >
<title>_rjem_je_tcache_bin_flush_small (8 samples, 0.01%)</title><rect x="147.7" y="1509" width="0.2" height="15.0" fill="rgb(233,51,13)" rx="2" ry="2" />
<text  x="150.71" y="1519.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::new_kv (28 samples, 0.05%)</title><rect x="749.6" y="1173" width="0.6" height="15.0" fill="rgb(214,55,23)" rx="2" ry="2" />
<text  x="752.60" y="1183.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (6 samples, 0.01%)</title><rect x="1014.2" y="1125" width="0.1" height="15.0" fill="rgb(246,188,12)" rx="2" ry="2" />
<text  x="1017.20" y="1135.5" ></text>
</g>
<g >
<title>serde_json::read::parse_escape (8 samples, 0.01%)</title><rect x="1152.4" y="501" width="0.2" height="15.0" fill="rgb(207,171,10)" rx="2" ry="2" />
<text  x="1155.42" y="511.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::tcp::TcpStream as std::io::Read&gt;::read (19 samples, 0.03%)</title><rect x="1035.4" y="981" width="0.4" height="15.0" fill="rgb(249,67,17)" rx="2" ry="2" />
<text  x="1038.40" y="991.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (9 samples, 0.02%)</title><rect x="665.1" y="1173" width="0.2" height="15.0" fill="rgb(214,33,25)" rx="2" ry="2" />
<text  x="668.11" y="1183.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::Handle as tokio_executor::park::Unpark&gt;::unpark (22 samples, 0.04%)</title><rect x="1024.0" y="1221" width="0.5" height="15.0" fill="rgb(249,226,10)" rx="2" ry="2" />
<text  x="1027.01" y="1231.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (93 samples, 0.17%)</title><rect x="1057.1" y="1477" width="2.0" height="15.0" fill="rgb(250,52,19)" rx="2" ry="2" />
<text  x="1060.09" y="1487.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (16 samples, 0.03%)</title><rect x="1045.2" y="1061" width="0.4" height="15.0" fill="rgb(209,199,49)" rx="2" ry="2" />
<text  x="1048.22" y="1071.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="1074.4" y="949" width="0.1" height="15.0" fill="rgb(246,122,49)" rx="2" ry="2" />
<text  x="1077.42" y="959.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit_external (33 samples, 0.06%)</title><rect x="10.4" y="1269" width="0.7" height="15.0" fill="rgb(232,46,53)" rx="2" ry="2" />
<text  x="13.40" y="1279.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (11 samples, 0.02%)</title><rect x="1035.9" y="1237" width="0.2" height="15.0" fill="rgb(231,34,29)" rx="2" ry="2" />
<text  x="1038.89" y="1247.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::stream::Stream&gt;::poll (9 samples, 0.02%)</title><rect x="1042.8" y="933" width="0.2" height="15.0" fill="rgb(207,54,47)" rx="2" ry="2" />
<text  x="1045.78" y="943.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (6 samples, 0.01%)</title><rect x="1150.9" y="485" width="0.1" height="15.0" fill="rgb(240,55,50)" rx="2" ry="2" />
<text  x="1153.91" y="495.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::park (58 samples, 0.10%)</title><rect x="981.3" y="1189" width="1.2" height="15.0" fill="rgb(222,70,37)" rx="2" ry="2" />
<text  x="984.29" y="1199.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (6 samples, 0.01%)</title><rect x="1034.6" y="1413" width="0.1" height="15.0" fill="rgb(225,60,7)" rx="2" ry="2" />
<text  x="1037.57" y="1423.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::BoxedNode&lt;K,V&gt;::as_ptr (71 samples, 0.13%)</title><rect x="430.1" y="1269" width="1.5" height="15.0" fill="rgb(226,88,2)" rx="2" ry="2" />
<text  x="433.13" y="1279.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeInclusive&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.01%)</title><rect x="199.5" y="1093" width="0.1" height="15.0" fill="rgb(253,22,33)" rx="2" ry="2" />
<text  x="202.53" y="1103.5" ></text>
</g>
<g >
<title>zookeeper::io::ZkIo::handle_response (5 samples, 0.01%)</title><rect x="992.8" y="1397" width="0.1" height="15.0" fill="rgb(239,222,28)" rx="2" ry="2" />
<text  x="995.81" y="1407.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (50 samples, 0.09%)</title><rect x="192.8" y="1525" width="1.1" height="15.0" fill="rgb(222,60,46)" rx="2" ry="2" />
<text  x="195.84" y="1535.5" ></text>
</g>
<g >
<title>__libc_read (135 samples, 0.24%)</title><rect x="1094.7" y="837" width="2.8" height="15.0" fill="rgb(224,157,53)" rx="2" ry="2" />
<text  x="1097.66" y="847.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (19 samples, 0.03%)</title><rect x="1151.8" y="485" width="0.4" height="15.0" fill="rgb(229,132,38)" rx="2" ry="2" />
<text  x="1154.76" y="495.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (27 samples, 0.05%)</title><rect x="1027.4" y="1301" width="0.6" height="15.0" fill="rgb(232,35,10)" rx="2" ry="2" />
<text  x="1030.44" y="1311.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (216 samples, 0.39%)</title><rect x="1044.8" y="1429" width="4.6" height="15.0" fill="rgb(218,27,47)" rx="2" ry="2" />
<text  x="1047.80" y="1439.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (6 samples, 0.01%)</title><rect x="1035.2" y="1125" width="0.2" height="15.0" fill="rgb(206,114,30)" rx="2" ry="2" />
<text  x="1038.23" y="1135.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.02%)</title><rect x="1134.2" y="565" width="0.1" height="15.0" fill="rgb(215,81,20)" rx="2" ry="2" />
<text  x="1137.15" y="575.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (20 samples, 0.04%)</title><rect x="1029.0" y="933" width="0.4" height="15.0" fill="rgb(224,212,41)" rx="2" ry="2" />
<text  x="1031.97" y="943.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (9 samples, 0.02%)</title><rect x="1026.0" y="965" width="0.2" height="15.0" fill="rgb(221,211,51)" rx="2" ry="2" />
<text  x="1028.98" y="975.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (33 samples, 0.06%)</title><rect x="1035.2" y="1349" width="0.7" height="15.0" fill="rgb(221,67,43)" rx="2" ry="2" />
<text  x="1038.19" y="1359.5" ></text>
</g>
<g >
<title>tokio_reactor::HandlePriv::inner (5 samples, 0.01%)</title><rect x="1057.4" y="1109" width="0.1" height="15.0" fill="rgb(244,4,32)" rx="2" ry="2" />
<text  x="1060.36" y="1119.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (22 samples, 0.04%)</title><rect x="1032.8" y="1077" width="0.4" height="15.0" fill="rgb(212,160,11)" rx="2" ry="2" />
<text  x="1035.77" y="1087.5" ></text>
</g>
<g >
<title>&lt; (6 samples, 0.01%)</title><rect x="1011.0" y="1493" width="0.1" height="15.0" fill="rgb(232,34,41)" rx="2" ry="2" />
<text  x="1014.02" y="1503.5" ></text>
</g>
<g >
<title>rand::Rng::gen (1,557 samples, 2.80%)</title><rect x="569.7" y="1237" width="33.0" height="15.0" fill="rgb(240,94,31)" rx="2" ry="2" />
<text  x="572.69" y="1247.5" >ra..</text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (16 samples, 0.03%)</title><rect x="996.8" y="1573" width="0.4" height="15.0" fill="rgb(245,42,18)" rx="2" ry="2" />
<text  x="999.82" y="1583.5" ></text>
</g>
<g >
<title>&lt;futures::future::map::Map&lt;A,F&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1041.1" y="725" width="0.1" height="15.0" fill="rgb(226,217,38)" rx="2" ry="2" />
<text  x="1044.09" y="735.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::service::Buffer&lt;T,Request&gt; as tower_service::Service&lt;Request&gt;&gt;::call (33 samples, 0.06%)</title><rect x="10.4" y="1525" width="0.7" height="15.0" fill="rgb(246,187,29)" rx="2" ry="2" />
<text  x="13.40" y="1535.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (29 samples, 0.05%)</title><rect x="1031.2" y="1317" width="0.6" height="15.0" fill="rgb(226,62,8)" rx="2" ry="2" />
<text  x="1034.18" y="1327.5" ></text>
</g>
<g >
<title>&lt;core::slice::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (192 samples, 0.35%)</title><rect x="506.9" y="1301" width="4.1" height="15.0" fill="rgb(218,78,0)" rx="2" ry="2" />
<text  x="509.90" y="1311.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::io::Io as std::io::Write&gt;::write (26 samples, 0.05%)</title><rect x="1028.4" y="885" width="0.6" height="15.0" fill="rgb(224,224,19)" rx="2" ry="2" />
<text  x="1031.42" y="895.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::with_default (177 samples, 0.32%)</title><rect x="979.5" y="1333" width="3.8" height="15.0" fill="rgb(208,90,2)" rx="2" ry="2" />
<text  x="982.51" y="1343.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (13 samples, 0.02%)</title><rect x="1026.6" y="1061" width="0.3" height="15.0" fill="rgb(234,208,28)" rx="2" ry="2" />
<text  x="1029.64" y="1071.5" ></text>
</g>
<g >
<title>chrono::offset::local::tm_to_datetime (18 samples, 0.03%)</title><rect x="196.3" y="1333" width="0.4" height="15.0" fill="rgb(211,55,11)" rx="2" ry="2" />
<text  x="199.28" y="1343.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (17 samples, 0.03%)</title><rect x="1114.8" y="917" width="0.3" height="15.0" fill="rgb(253,40,35)" rx="2" ry="2" />
<text  x="1117.76" y="927.5" ></text>
</g>
<g >
<title>bincode::internal::serialize_into (19 samples, 0.03%)</title><rect x="1022.9" y="1381" width="0.4" height="15.0" fill="rgb(216,41,43)" rx="2" ry="2" />
<text  x="1025.92" y="1391.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (11 samples, 0.02%)</title><rect x="1035.9" y="1221" width="0.2" height="15.0" fill="rgb(239,154,29)" rx="2" ry="2" />
<text  x="1038.89" y="1231.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (12 samples, 0.02%)</title><rect x="1005.5" y="1381" width="0.3" height="15.0" fill="rgb(246,210,7)" rx="2" ry="2" />
<text  x="1008.50" y="1391.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (10 samples, 0.02%)</title><rect x="1037.2" y="1093" width="0.2" height="15.0" fill="rgb(210,175,22)" rx="2" ry="2" />
<text  x="1040.18" y="1103.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_enum (7 samples, 0.01%)</title><rect x="1022.5" y="1221" width="0.1" height="15.0" fill="rgb(210,159,7)" rx="2" ry="2" />
<text  x="1025.48" y="1231.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (35 samples, 0.06%)</title><rect x="265.1" y="1301" width="0.7" height="15.0" fill="rgb(233,37,1)" rx="2" ry="2" />
<text  x="268.07" y="1311.5" ></text>
</g>
<g >
<title>&lt;tower_util::ready::Ready&lt;T,Request&gt; as futures::future::Future&gt;::poll (13 samples, 0.02%)</title><rect x="1008.0" y="1413" width="0.3" height="15.0" fill="rgb(247,47,5)" rx="2" ry="2" />
<text  x="1011.01" y="1423.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.02%)</title><rect x="1031.4" y="805" width="0.2" height="15.0" fill="rgb(220,153,46)" rx="2" ry="2" />
<text  x="1034.37" y="815.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::get (5 samples, 0.01%)</title><rect x="731.0" y="1205" width="0.1" height="15.0" fill="rgb(240,121,40)" rx="2" ry="2" />
<text  x="733.95" y="1215.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit::_$u7b$$u7b$closure$u7d$$u7d$::h83d517d17b1a75b2 (33 samples, 0.06%)</title><rect x="10.4" y="1285" width="0.7" height="15.0" fill="rgb(209,111,16)" rx="2" ry="2" />
<text  x="13.40" y="1295.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (22 samples, 0.04%)</title><rect x="1022.2" y="1509" width="0.4" height="15.0" fill="rgb(224,31,24)" rx="2" ry="2" />
<text  x="1025.18" y="1519.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::clone_id (6 samples, 0.01%)</title><rect x="1058.4" y="1173" width="0.2" height="15.0" fill="rgb(250,103,47)" rx="2" ry="2" />
<text  x="1061.44" y="1183.5" ></text>
</g>
<g >
<title>&lt;jemallocator::Jemalloc as core::alloc::GlobalAlloc&gt;::alloc (94 samples, 0.17%)</title><rect x="261.7" y="1269" width="2.0" height="15.0" fill="rgb(246,15,49)" rx="2" ry="2" />
<text  x="264.74" y="1279.5" ></text>
</g>
<g >
<title>noria::view::_::&lt;impl serde::de::Deserialize for noria::view::ReadReply&gt;::deserialize (24 samples, 0.04%)</title><rect x="1046.6" y="1077" width="0.5" height="15.0" fill="rgb(230,184,3)" rx="2" ry="2" />
<text  x="1049.60" y="1087.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (7 samples, 0.01%)</title><rect x="1022.5" y="1333" width="0.1" height="15.0" fill="rgb(243,187,48)" rx="2" ry="2" />
<text  x="1025.48" y="1343.5" ></text>
</g>
<g >
<title>futures::task_impl::current (6 samples, 0.01%)</title><rect x="1005.8" y="1461" width="0.2" height="15.0" fill="rgb(247,108,26)" rx="2" ry="2" />
<text  x="1008.84" y="1471.5" ></text>
</g>
<g >
<title>rand::rngs::thread::thread_rng (5 samples, 0.01%)</title><rect x="201.2" y="1349" width="0.1" height="15.0" fill="rgb(205,22,28)" rx="2" ry="2" />
<text  x="204.22" y="1359.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::get (7 samples, 0.01%)</title><rect x="212.8" y="1237" width="0.2" height="15.0" fill="rgb(231,175,28)" rx="2" ry="2" />
<text  x="215.83" y="1247.5" ></text>
</g>
<g >
<title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (92 samples, 0.17%)</title><rect x="540.8" y="1221" width="1.9" height="15.0" fill="rgb(209,7,32)" rx="2" ry="2" />
<text  x="543.79" y="1231.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (6 samples, 0.01%)</title><rect x="1150.1" y="757" width="0.1" height="15.0" fill="rgb(238,159,49)" rx="2" ry="2" />
<text  x="1153.09" y="767.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (6 samples, 0.01%)</title><rect x="983.5" y="1109" width="0.1" height="15.0" fill="rgb(225,184,0)" rx="2" ry="2" />
<text  x="986.52" y="1119.5" ></text>
</g>
<g >
<title>std::sync::condvar::Condvar::new (227 samples, 0.41%)</title><rect x="227.2" y="1333" width="4.8" height="15.0" fill="rgb(206,104,46)" rx="2" ry="2" />
<text  x="230.17" y="1343.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="990.9" y="1525" width="0.2" height="15.0" fill="rgb(246,129,7)" rx="2" ry="2" />
<text  x="993.92" y="1535.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (8 samples, 0.01%)</title><rect x="1023.8" y="1477" width="0.1" height="15.0" fill="rgb(229,93,21)" rx="2" ry="2" />
<text  x="1026.77" y="1487.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (14 samples, 0.03%)</title><rect x="1049.7" y="1189" width="0.3" height="15.0" fill="rgb(223,43,1)" rx="2" ry="2" />
<text  x="1052.72" y="1199.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::first_leaf_edge (134 samples, 0.24%)</title><rect x="712.9" y="1301" width="2.8" height="15.0" fill="rgb(246,13,19)" rx="2" ry="2" />
<text  x="715.87" y="1311.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (22 samples, 0.04%)</title><rect x="1032.8" y="1317" width="0.4" height="15.0" fill="rgb(229,7,28)" rx="2" ry="2" />
<text  x="1035.77" y="1327.5" ></text>
</g>
<g >
<title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (136 samples, 0.24%)</title><rect x="311.9" y="1253" width="2.9" height="15.0" fill="rgb(252,110,44)" rx="2" ry="2" />
<text  x="314.92" y="1263.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (6 samples, 0.01%)</title><rect x="1082.4" y="917" width="0.1" height="15.0" fill="rgb(209,33,48)" rx="2" ry="2" />
<text  x="1085.40" y="927.5" ></text>
</g>
<g >
<title>bincode::internal::deserialize_seed (144 samples, 0.26%)</title><rect x="1000.0" y="1477" width="3.0" height="15.0" fill="rgb(254,202,28)" rx="2" ry="2" />
<text  x="1002.99" y="1487.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (14 samples, 0.03%)</title><rect x="628.2" y="1093" width="0.3" height="15.0" fill="rgb(207,141,0)" rx="2" ry="2" />
<text  x="631.21" y="1103.5" ></text>
</g>
<g >
<title>&lt;noria::_::&lt;impl serde::de::Deserialize for noria::Tagged&lt;T&gt;&gt;::deserialize::__Visitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (144 samples, 0.26%)</title><rect x="1000.0" y="1397" width="3.0" height="15.0" fill="rgb(241,225,4)" rx="2" ry="2" />
<text  x="1002.99" y="1407.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (126 samples, 0.23%)</title><rect x="1038.4" y="1253" width="2.7" height="15.0" fill="rgb(226,197,9)" rx="2" ry="2" />
<text  x="1041.41" y="1263.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (11 samples, 0.02%)</title><rect x="1096.6" y="709" width="0.2" height="15.0" fill="rgb(213,79,47)" rx="2" ry="2" />
<text  x="1099.62" y="719.5" ></text>
</g>
<g >
<title>std::panicking::try (11 samples, 0.02%)</title><rect x="992.9" y="1477" width="0.3" height="15.0" fill="rgb(248,192,53)" rx="2" ry="2" />
<text  x="995.92" y="1487.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::DropNotifyService&lt;Svc&gt; as tower_service::Service&lt;Request&gt;&gt;::call (5 samples, 0.01%)</title><rect x="1051.5" y="949" width="0.1" height="15.0" fill="rgb(239,78,36)" rx="2" ry="2" />
<text  x="1054.46" y="959.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="1049.4" y="1109" width="0.1" height="15.0" fill="rgb(213,204,52)" rx="2" ry="2" />
<text  x="1052.38" y="1119.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (26 samples, 0.05%)</title><rect x="1029.4" y="949" width="0.5" height="15.0" fill="rgb(233,133,35)" rx="2" ry="2" />
<text  x="1032.39" y="959.5" ></text>
</g>
<g >
<title>chrono::format::parse::parse (62 samples, 0.11%)</title><rect x="1000.7" y="597" width="1.3" height="15.0" fill="rgb(241,65,20)" rx="2" ry="2" />
<text  x="1003.73" y="607.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Shared&lt;T&gt;::as_raw (11 samples, 0.02%)</title><rect x="1187.4" y="837" width="0.2" height="15.0" fill="rgb(236,139,29)" rx="2" ry="2" />
<text  x="1190.39" y="847.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (204 samples, 0.37%)</title><rect x="1130.9" y="789" width="4.3" height="15.0" fill="rgb(222,90,47)" rx="2" ry="2" />
<text  x="1133.91" y="799.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (8 samples, 0.01%)</title><rect x="1025.6" y="805" width="0.2" height="15.0" fill="rgb(221,123,6)" rx="2" ry="2" />
<text  x="1028.62" y="815.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (14 samples, 0.03%)</title><rect x="821.8" y="1061" width="0.3" height="15.0" fill="rgb(208,49,13)" rx="2" ry="2" />
<text  x="824.79" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::add (69 samples, 0.12%)</title><rect x="967.9" y="1237" width="1.5" height="15.0" fill="rgb(245,146,54)" rx="2" ry="2" />
<text  x="970.95" y="1247.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (824 samples, 1.48%)</title><rect x="903.1" y="1285" width="17.5" height="15.0" fill="rgb(253,155,27)" rx="2" ry="2" />
<text  x="906.10" y="1295.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (12 samples, 0.02%)</title><rect x="1004.9" y="1477" width="0.3" height="15.0" fill="rgb(253,113,20)" rx="2" ry="2" />
<text  x="1007.91" y="1487.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="180.7" y="1381" width="0.1" height="15.0" fill="rgb(243,147,12)" rx="2" ry="2" />
<text  x="183.73" y="1391.5" ></text>
</g>
<g >
<title>&lt;tokio_timer::timer::Timer&lt;T,N&gt; as tokio_executor::park::Park&gt;::park_timeout (293 samples, 0.53%)</title><rect x="1122.1" y="1029" width="6.2" height="15.0" fill="rgb(234,199,48)" rx="2" ry="2" />
<text  x="1125.12" y="1039.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1053.3" y="1109" width="0.1" height="15.0" fill="rgb(238,82,51)" rx="2" ry="2" />
<text  x="1056.33" y="1119.5" ></text>
</g>
<g >
<title>core::alloc::Layout::size (7 samples, 0.01%)</title><rect x="213.0" y="1253" width="0.1" height="15.0" fill="rgb(229,89,36)" rx="2" ry="2" />
<text  x="215.98" y="1263.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::he020094adb00dc4f (5 samples, 0.01%)</title><rect x="192.7" y="1525" width="0.1" height="15.0" fill="rgb(226,93,44)" rx="2" ry="2" />
<text  x="195.69" y="1535.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (6 samples, 0.01%)</title><rect x="1027.4" y="997" width="0.2" height="15.0" fill="rgb(211,122,10)" rx="2" ry="2" />
<text  x="1030.44" y="1007.5" ></text>
</g>
<g >
<title>tcp_push (42 samples, 0.08%)</title><rect x="1041.8" y="645" width="0.9" height="15.0" fill="rgb(246,107,24)" rx="2" ry="2" />
<text  x="1044.77" y="655.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::Pool&lt;MS,Target,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (10 samples, 0.02%)</title><rect x="1029.2" y="869" width="0.2" height="15.0" fill="rgb(215,24,47)" rx="2" ry="2" />
<text  x="1032.18" y="879.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::get (31 samples, 0.06%)</title><rect x="251.1" y="1285" width="0.7" height="15.0" fill="rgb(238,102,15)" rx="2" ry="2" />
<text  x="254.13" y="1295.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="1177.0" y="869" width="0.1" height="15.0" fill="rgb(211,169,9)" rx="2" ry="2" />
<text  x="1180.04" y="879.5" ></text>
</g>
<g >
<title>crossbeam_epoch::default::with_handle::_$u7b$$u7b$closure$u7d$$u7d$::hf954dbe9c1b84c93 (15 samples, 0.03%)</title><rect x="1019.5" y="1525" width="0.3" height="15.0" fill="rgb(215,22,23)" rx="2" ry="2" />
<text  x="1022.51" y="1535.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::get_default (7 samples, 0.01%)</title><rect x="1132.1" y="677" width="0.1" height="15.0" fill="rgb(251,167,20)" rx="2" ry="2" />
<text  x="1135.05" y="687.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (25 samples, 0.04%)</title><rect x="1026.9" y="949" width="0.5" height="15.0" fill="rgb(250,80,38)" rx="2" ry="2" />
<text  x="1029.91" y="959.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (20 samples, 0.04%)</title><rect x="1038.0" y="1381" width="0.4" height="15.0" fill="rgb(227,160,31)" rx="2" ry="2" />
<text  x="1040.99" y="1391.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (19 samples, 0.03%)</title><rect x="1045.8" y="1061" width="0.4" height="15.0" fill="rgb(247,101,2)" rx="2" ry="2" />
<text  x="1048.80" y="1071.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current (19 samples, 0.03%)</title><rect x="180.4" y="1557" width="0.4" height="15.0" fill="rgb(232,5,44)" rx="2" ry="2" />
<text  x="183.43" y="1567.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (13 samples, 0.02%)</title><rect x="1026.6" y="1173" width="0.3" height="15.0" fill="rgb(227,91,26)" rx="2" ry="2" />
<text  x="1029.64" y="1183.5" ></text>
</g>
<g >
<title>fake::impls::std::primitives::&lt;impl fake::Dummy&lt;core::ops::range::Range&lt;usize&gt;&gt; for usize&gt;::dummy_with_rng (9 samples, 0.02%)</title><rect x="199.5" y="1253" width="0.2" height="15.0" fill="rgb(207,171,35)" rx="2" ry="2" />
<text  x="202.46" y="1263.5" ></text>
</g>
<g >
<title>core::ptr::write (5 samples, 0.01%)</title><rect x="1102.0" y="853" width="0.1" height="15.0" fill="rgb(212,61,20)" rx="2" ry="2" />
<text  x="1104.96" y="863.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::register (10 samples, 0.02%)</title><rect x="1060.1" y="1189" width="0.3" height="15.0" fill="rgb(253,79,26)" rx="2" ry="2" />
<text  x="1063.14" y="1199.5" ></text>
</g>
<g >
<title>&lt;&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple::Access&lt;R,O&gt; as serde::de::SeqAccess&gt;::next_element_seed (11 samples, 0.02%)</title><rect x="1046.9" y="805" width="0.2" height="15.0" fill="rgb(234,114,12)" rx="2" ry="2" />
<text  x="1049.86" y="815.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.01%)</title><rect x="1022.5" y="1365" width="0.1" height="15.0" fill="rgb(252,29,7)" rx="2" ry="2" />
<text  x="1025.48" y="1375.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::poll_evented::PollEvented&lt;E&gt; as std::io::Read&gt;::read (6 samples, 0.01%)</title><rect x="1052.7" y="1189" width="0.1" height="15.0" fill="rgb(242,61,32)" rx="2" ry="2" />
<text  x="1055.71" y="1199.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run (10 samples, 0.02%)</title><rect x="1026.0" y="1461" width="0.2" height="15.0" fill="rgb(251,148,49)" rx="2" ry="2" />
<text  x="1028.98" y="1471.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.01%)</title><rect x="1014.2" y="1093" width="0.1" height="15.0" fill="rgb(241,22,0)" rx="2" ry="2" />
<text  x="1017.20" y="1103.5" ></text>
</g>
<g >
<title>futures::task_impl::current::_$u7b$$u7b$closure$u7d$$u7d$::hb88041a16b038a29 (11 samples, 0.02%)</title><rect x="1007.5" y="1461" width="0.3" height="15.0" fill="rgb(250,137,51)" rx="2" ry="2" />
<text  x="1010.52" y="1471.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="652.8" y="1109" width="0.1" height="15.0" fill="rgb(237,23,47)" rx="2" ry="2" />
<text  x="655.76" y="1119.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (6 samples, 0.01%)</title><rect x="1033.8" y="1077" width="0.1" height="15.0" fill="rgb(246,0,14)" rx="2" ry="2" />
<text  x="1036.81" y="1087.5" ></text>
</g>
<g >
<title>&lt;&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple::Access&lt;R,O&gt; as serde::de::SeqAccess&gt;::next_element_seed (24 samples, 0.04%)</title><rect x="1046.6" y="1109" width="0.5" height="15.0" fill="rgb(241,26,40)" rx="2" ry="2" />
<text  x="1049.60" y="1119.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (6 samples, 0.01%)</title><rect x="995.8" y="1525" width="0.1" height="15.0" fill="rgb(232,42,28)" rx="2" ry="2" />
<text  x="998.81" y="1535.5" ></text>
</g>
<g >
<title>chan::Inner&lt;T&gt;::recv (273 samples, 0.49%)</title><rect x="466.7" y="1253" width="5.8" height="15.0" fill="rgb(221,171,12)" rx="2" ry="2" />
<text  x="469.71" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (48 samples, 0.09%)</title><rect x="1014.2" y="1477" width="1.0" height="15.0" fill="rgb(206,61,38)" rx="2" ry="2" />
<text  x="1017.16" y="1487.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (826 samples, 1.49%)</title><rect x="488.7" y="1285" width="17.5" height="15.0" fill="rgb(253,125,43)" rx="2" ry="2" />
<text  x="491.68" y="1295.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::service::Buffer&lt;T,Request&gt; as tower_service::Service&lt;Request&gt;&gt;::call (44 samples, 0.08%)</title><rect x="187.5" y="1349" width="1.0" height="15.0" fill="rgb(205,65,47)" rx="2" ry="2" />
<text  x="190.54" y="1359.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::he020094adb00dc4f (5 samples, 0.01%)</title><rect x="192.5" y="1509" width="0.1" height="15.0" fill="rgb(244,25,6)" rx="2" ry="2" />
<text  x="195.48" y="1519.5" ></text>
</g>
<g >
<title>__libc_write (6 samples, 0.01%)</title><rect x="983.5" y="1093" width="0.1" height="15.0" fill="rgb(222,118,8)" rx="2" ry="2" />
<text  x="986.52" y="1103.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (20 samples, 0.04%)</title><rect x="1059.3" y="1381" width="0.4" height="15.0" fill="rgb(239,70,10)" rx="2" ry="2" />
<text  x="1062.29" y="1391.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (5 samples, 0.01%)</title><rect x="1122.4" y="949" width="0.1" height="15.0" fill="rgb(225,164,2)" rx="2" ry="2" />
<text  x="1125.40" y="959.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_u8 (10 samples, 0.02%)</title><rect x="1045.6" y="949" width="0.2" height="15.0" fill="rgb(239,157,39)" rx="2" ry="2" />
<text  x="1048.58" y="959.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="1169.7" y="885" width="0.1" height="15.0" fill="rgb(249,109,22)" rx="2" ry="2" />
<text  x="1172.67" y="895.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::Handle as tokio_executor::park::Unpark&gt;::unpark (11 samples, 0.02%)</title><rect x="1028.1" y="1077" width="0.2" height="15.0" fill="rgb(254,12,42)" rx="2" ry="2" />
<text  x="1031.06" y="1087.5" ></text>
</g>
<g >
<title>tokio_sync::loom::sync::CausalCell&lt;T&gt;::with (6 samples, 0.01%)</title><rect x="1040.5" y="917" width="0.1" height="15.0" fill="rgb(254,179,18)" rx="2" ry="2" />
<text  x="1043.47" y="927.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (52 samples, 0.09%)</title><rect x="653.4" y="1141" width="1.1" height="15.0" fill="rgb(241,39,35)" rx="2" ry="2" />
<text  x="656.38" y="1151.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (112 samples, 0.20%)</title><rect x="997.6" y="1557" width="2.4" height="15.0" fill="rgb(250,153,42)" rx="2" ry="2" />
<text  x="1000.61" y="1567.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.02%)</title><rect x="995.3" y="1317" width="0.3" height="15.0" fill="rgb(211,197,5)" rx="2" ry="2" />
<text  x="998.32" y="1327.5" ></text>
</g>
<g >
<title>rand_chacha::guts::round (17 samples, 0.03%)</title><rect x="191.4" y="1541" width="0.4" height="15.0" fill="rgb(243,105,44)" rx="2" ry="2" />
<text  x="194.42" y="1551.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::reborrow (51 samples, 0.09%)</title><rect x="316.2" y="1253" width="1.1" height="15.0" fill="rgb(223,36,28)" rx="2" ry="2" />
<text  x="319.23" y="1263.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (6 samples, 0.01%)</title><rect x="10.8" y="837" width="0.1" height="15.0" fill="rgb(225,71,42)" rx="2" ry="2" />
<text  x="13.79" y="847.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (59 samples, 0.11%)</title><rect x="381.7" y="1269" width="1.3" height="15.0" fill="rgb(214,163,21)" rx="2" ry="2" />
<text  x="384.73" y="1279.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll1 (130 samples, 0.23%)</title><rect x="1110.8" y="949" width="2.8" height="15.0" fill="rgb(254,56,22)" rx="2" ry="2" />
<text  x="1113.83" y="959.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (6 samples, 0.01%)</title><rect x="1027.4" y="981" width="0.2" height="15.0" fill="rgb(252,39,34)" rx="2" ry="2" />
<text  x="1030.44" y="991.5" ></text>
</g>
<g >
<title>tokio_io::async_read::AsyncRead::poll_read (17 samples, 0.03%)</title><rect x="1031.3" y="997" width="0.4" height="15.0" fill="rgb(249,77,45)" rx="2" ry="2" />
<text  x="1034.30" y="1007.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.01%)</title><rect x="1044.5" y="1285" width="0.1" height="15.0" fill="rgb(224,187,47)" rx="2" ry="2" />
<text  x="1047.48" y="1295.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (21 samples, 0.04%)</title><rect x="1032.8" y="1029" width="0.4" height="15.0" fill="rgb(209,222,30)" rx="2" ry="2" />
<text  x="1035.77" y="1039.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (60 samples, 0.11%)</title><rect x="998.7" y="1477" width="1.3" height="15.0" fill="rgb(252,71,26)" rx="2" ry="2" />
<text  x="1001.71" y="1487.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::service::Buffer&lt;T,Request&gt; as tower_service::Service&lt;Request&gt;&gt;::call (32 samples, 0.06%)</title><rect x="183.8" y="1477" width="0.7" height="15.0" fill="rgb(241,32,9)" rx="2" ry="2" />
<text  x="186.82" y="1487.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.01%)</title><rect x="198.3" y="1253" width="0.2" height="15.0" fill="rgb(246,24,21)" rx="2" ry="2" />
<text  x="201.32" y="1263.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (10 samples, 0.02%)</title><rect x="1154.5" y="981" width="0.2" height="15.0" fill="rgb(231,47,12)" rx="2" ry="2" />
<text  x="1157.52" y="991.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::as_leaf_mut (27 samples, 0.05%)</title><rect x="515.7" y="1253" width="0.6" height="15.0" fill="rgb(215,182,49)" rx="2" ry="2" />
<text  x="518.71" y="1263.5" ></text>
</g>
<g >
<title>std::sync::mpsc::stream::Packet&lt;T&gt;::try_recv (11 samples, 0.02%)</title><rect x="985.5" y="1317" width="0.3" height="15.0" fill="rgb(238,213,50)" rx="2" ry="2" />
<text  x="988.54" y="1327.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (7 samples, 0.01%)</title><rect x="983.5" y="1173" width="0.1" height="15.0" fill="rgb(216,114,23)" rx="2" ry="2" />
<text  x="986.50" y="1183.5" ></text>
</g>
<g >
<title>rand::prng::isaac64::Isaac64Rng::isaac64 (35 samples, 0.06%)</title><rect x="190.4" y="1525" width="0.7" height="15.0" fill="rgb(220,7,39)" rx="2" ry="2" />
<text  x="193.40" y="1535.5" ></text>
</g>
<g >
<title>__libc_write (9 samples, 0.02%)</title><rect x="989.6" y="1029" width="0.2" height="15.0" fill="rgb(226,51,31)" rx="2" ry="2" />
<text  x="992.63" y="1039.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner&lt;T&gt;::set_rx_task (7 samples, 0.01%)</title><rect x="181.7" y="1413" width="0.2" height="15.0" fill="rgb(234,171,28)" rx="2" ry="2" />
<text  x="184.72" y="1423.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (8 samples, 0.01%)</title><rect x="1046.9" y="773" width="0.2" height="15.0" fill="rgb(205,16,16)" rx="2" ry="2" />
<text  x="1049.92" y="783.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.02%)</title><rect x="10.0" y="1285" width="0.2" height="15.0" fill="rgb(248,127,8)" rx="2" ry="2" />
<text  x="13.02" y="1295.5" ></text>
</g>
<g >
<title>tokio_reactor::Reactor::poll (1,117 samples, 2.01%)</title><rect x="1086.9" y="981" width="23.7" height="15.0" fill="rgb(238,93,2)" rx="2" ry="2" />
<text  x="1089.94" y="991.5" >t..</text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (9 samples, 0.02%)</title><rect x="997.2" y="1061" width="0.2" height="15.0" fill="rgb(246,152,37)" rx="2" ry="2" />
<text  x="1000.16" y="1071.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (6 samples, 0.01%)</title><rect x="1070.2" y="1029" width="0.1" height="15.0" fill="rgb(233,10,34)" rx="2" ry="2" />
<text  x="1073.20" y="1039.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (370 samples, 0.67%)</title><rect x="622.4" y="1205" width="7.8" height="15.0" fill="rgb(237,47,27)" rx="2" ry="2" />
<text  x="625.35" y="1215.5" ></text>
</g>
<g >
<title>core::cmp::min (5 samples, 0.01%)</title><rect x="1158.3" y="1013" width="0.1" height="15.0" fill="rgb(237,201,13)" rx="2" ry="2" />
<text  x="1161.30" y="1023.5" ></text>
</g>
<g >
<title>sock_sendmsg (52 samples, 0.09%)</title><rect x="1038.6" y="709" width="1.1" height="15.0" fill="rgb(246,118,29)" rx="2" ry="2" />
<text  x="1041.60" y="719.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit (90 samples, 0.16%)</title><rect x="1107.6" y="853" width="2.0" height="15.0" fill="rgb(215,111,34)" rx="2" ry="2" />
<text  x="1110.65" y="863.5" ></text>
</g>
<g >
<title>&lt;tokio_tcp::stream::TcpStream as std::io::Write&gt;::write (51 samples, 0.09%)</title><rect x="1041.7" y="885" width="1.0" height="15.0" fill="rgb(254,215,20)" rx="2" ry="2" />
<text  x="1044.66" y="895.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (26 samples, 0.05%)</title><rect x="1029.4" y="1061" width="0.5" height="15.0" fill="rgb(248,178,38)" rx="2" ry="2" />
<text  x="1032.39" y="1071.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_u32 (6 samples, 0.01%)</title><rect x="1058.1" y="1013" width="0.2" height="15.0" fill="rgb(230,18,17)" rx="2" ry="2" />
<text  x="1061.13" y="1023.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (5 samples, 0.01%)</title><rect x="1148.4" y="1029" width="0.1" height="15.0" fill="rgb(236,3,34)" rx="2" ry="2" />
<text  x="1151.39" y="1039.5" ></text>
</g>
<g >
<title>&lt;futures::future::then::Then&lt;A,B,F&gt; as futures::future::Future&gt;::poll (17 samples, 0.03%)</title><rect x="1020.6" y="1525" width="0.4" height="15.0" fill="rgb(226,36,44)" rx="2" ry="2" />
<text  x="1023.61" y="1535.5" ></text>
</g>
<g >
<title>tokio_timer::wheel::Wheel&lt;T&gt;::poll_at (37 samples, 0.07%)</title><rect x="1127.6" y="1013" width="0.7" height="15.0" fill="rgb(220,98,52)" rx="2" ry="2" />
<text  x="1130.55" y="1023.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (9 samples, 0.02%)</title><rect x="1049.5" y="1237" width="0.2" height="15.0" fill="rgb(236,43,43)" rx="2" ry="2" />
<text  x="1052.53" y="1247.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::write_fmt (57 samples, 0.10%)</title><rect x="998.7" y="1013" width="1.2" height="15.0" fill="rgb(216,167,51)" rx="2" ry="2" />
<text  x="1001.71" y="1023.5" ></text>
</g>
<g >
<title>std::sync::mpsc::blocking::SignalToken::signal (22 samples, 0.04%)</title><rect x="202.0" y="1317" width="0.5" height="15.0" fill="rgb(250,49,4)" rx="2" ry="2" />
<text  x="205.01" y="1327.5" ></text>
</g>
<g >
<title>core::mem::align_of (28 samples, 0.05%)</title><rect x="352.6" y="1253" width="0.6" height="15.0" fill="rgb(215,143,17)" rx="2" ry="2" />
<text  x="355.58" y="1263.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (7 samples, 0.01%)</title><rect x="383.9" y="1269" width="0.1" height="15.0" fill="rgb(231,87,31)" rx="2" ry="2" />
<text  x="386.88" y="1279.5" ></text>
</g>
<g >
<title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (5 samples, 0.01%)</title><rect x="593.6" y="997" width="0.1" height="15.0" fill="rgb(216,169,37)" rx="2" ry="2" />
<text  x="596.58" y="1007.5" ></text>
</g>
<g >
<title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (515 samples, 0.93%)</title><rect x="643.6" y="1205" width="10.9" height="15.0" fill="rgb(234,131,31)" rx="2" ry="2" />
<text  x="646.55" y="1215.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="593.4" y="997" width="0.2" height="15.0" fill="rgb(219,212,43)" rx="2" ry="2" />
<text  x="596.43" y="1007.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (5 samples, 0.01%)</title><rect x="1022.2" y="933" width="0.1" height="15.0" fill="rgb(234,198,22)" rx="2" ry="2" />
<text  x="1025.22" y="943.5" ></text>
</g>
<g >
<title>epoll_wait (72 samples, 0.13%)</title><rect x="1078.7" y="885" width="1.5" height="15.0" fill="rgb(240,154,27)" rx="2" ry="2" />
<text  x="1081.69" y="895.5" ></text>
</g>
<g >
<title>bincode::config::legacy::Config::serialize_into (9 samples, 0.02%)</title><rect x="1052.1" y="1173" width="0.1" height="15.0" fill="rgb(222,152,23)" rx="2" ry="2" />
<text  x="1055.06" y="1183.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::notify (5 samples, 0.01%)</title><rect x="1024.8" y="1253" width="0.1" height="15.0" fill="rgb(233,49,47)" rx="2" ry="2" />
<text  x="1027.79" y="1263.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::stream::Stream&gt;::poll (9 samples, 0.02%)</title><rect x="1022.4" y="1477" width="0.2" height="15.0" fill="rgb(237,224,37)" rx="2" ry="2" />
<text  x="1025.43" y="1487.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::h1adb2f04ac003c70 (8 samples, 0.01%)</title><rect x="11.1" y="1589" width="0.2" height="15.0" fill="rgb(223,51,34)" rx="2" ry="2" />
<text  x="14.10" y="1599.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (19 samples, 0.03%)</title><rect x="1052.6" y="1429" width="0.4" height="15.0" fill="rgb(248,211,30)" rx="2" ry="2" />
<text  x="1055.61" y="1439.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::set_len (12 samples, 0.02%)</title><rect x="657.5" y="1237" width="0.2" height="15.0" fill="rgb(231,227,5)" rx="2" ry="2" />
<text  x="660.49" y="1247.5" ></text>
</g>
<g >
<title>std::sync::once::Once::is_completed (5 samples, 0.01%)</title><rect x="981.2" y="1109" width="0.1" height="15.0" fill="rgb(232,97,30)" rx="2" ry="2" />
<text  x="984.19" y="1119.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (13 samples, 0.02%)</title><rect x="1026.6" y="1013" width="0.3" height="15.0" fill="rgb(237,0,26)" rx="2" ry="2" />
<text  x="1029.64" y="1023.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (20 samples, 0.04%)</title><rect x="1009.0" y="1525" width="0.4" height="15.0" fill="rgb(253,18,38)" rx="2" ry="2" />
<text  x="1011.98" y="1535.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (15 samples, 0.03%)</title><rect x="1028.1" y="1269" width="0.3" height="15.0" fill="rgb(230,142,16)" rx="2" ry="2" />
<text  x="1031.06" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (10 samples, 0.02%)</title><rect x="995.3" y="917" width="0.2" height="15.0" fill="rgb(233,226,43)" rx="2" ry="2" />
<text  x="998.32" y="927.5" ></text>
</g>
<g >
<title>mio::sys::unix::awakener::pipe::Awakener::cleanup (25 samples, 0.04%)</title><rect x="1111.4" y="917" width="0.6" height="15.0" fill="rgb(214,44,11)" rx="2" ry="2" />
<text  x="1114.45" y="927.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (33 samples, 0.06%)</title><rect x="998.0" y="1301" width="0.7" height="15.0" fill="rgb(233,206,23)" rx="2" ry="2" />
<text  x="1001.01" y="1311.5" ></text>
</g>
<g >
<title>&lt;async_bincode::reader::AsyncBincodeReader&lt;R,T&gt; as futures::stream::Stream&gt;::poll (7 samples, 0.01%)</title><rect x="1033.0" y="965" width="0.1" height="15.0" fill="rgb(227,204,40)" rx="2" ry="2" />
<text  x="1035.96" y="975.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (11 samples, 0.02%)</title><rect x="1101.6" y="821" width="0.3" height="15.0" fill="rgb(234,210,10)" rx="2" ry="2" />
<text  x="1104.64" y="831.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_mul (19 samples, 0.03%)</title><rect x="693.1" y="1205" width="0.4" height="15.0" fill="rgb(214,190,50)" rx="2" ry="2" />
<text  x="696.14" y="1215.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.01%)</title><rect x="1030.2" y="1589" width="0.1" height="15.0" fill="rgb(210,140,42)" rx="2" ry="2" />
<text  x="1033.20" y="1599.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::Reactor as tokio_executor::park::Park&gt;::park_timeout (179 samples, 0.32%)</title><rect x="1122.3" y="1013" width="3.8" height="15.0" fill="rgb(237,114,40)" rx="2" ry="2" />
<text  x="1125.29" y="1023.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Events::get (8 samples, 0.01%)</title><rect x="1122.6" y="949" width="0.1" height="15.0" fill="rgb(214,202,19)" rx="2" ry="2" />
<text  x="1125.57" y="959.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (18 samples, 0.03%)</title><rect x="1034.2" y="1589" width="0.4" height="15.0" fill="rgb(222,161,40)" rx="2" ry="2" />
<text  x="1037.19" y="1599.5" ></text>
</g>
<g >
<title>&lt;futures::future::either::Either&lt;A,B&gt; as futures::future::Future&gt;::poll (27 samples, 0.05%)</title><rect x="1020.0" y="1573" width="0.6" height="15.0" fill="rgb(211,75,19)" rx="2" ry="2" />
<text  x="1023.04" y="1583.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (9 samples, 0.02%)</title><rect x="1118.4" y="901" width="0.2" height="15.0" fill="rgb(241,56,7)" rx="2" ry="2" />
<text  x="1121.37" y="911.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::get_default (13 samples, 0.02%)</title><rect x="188.2" y="1317" width="0.3" height="15.0" fill="rgb(241,147,54)" rx="2" ry="2" />
<text  x="191.20" y="1327.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (476 samples, 0.86%)</title><rect x="421.5" y="1317" width="10.1" height="15.0" fill="rgb(208,37,52)" rx="2" ry="2" />
<text  x="424.54" y="1327.5" ></text>
</g>
<g >
<title>&lt;noria::table::Table as tower_service::Service&lt;noria::data::TableOperation&gt;&gt;::call (16 samples, 0.03%)</title><rect x="186.6" y="1381" width="0.4" height="15.0" fill="rgb(249,190,7)" rx="2" ry="2" />
<text  x="189.65" y="1391.5" ></text>
</g>
<g >
<title>&lt;tower_balance::p2c::service::UnreadyService&lt;K,S,Req&gt; as futures::future::Future&gt;::poll (25 samples, 0.04%)</title><rect x="1008.4" y="1429" width="0.5" height="15.0" fill="rgb(229,20,14)" rx="2" ry="2" />
<text  x="1011.39" y="1439.5" ></text>
</g>
<g >
<title>core::fmt::Write::write_fmt (33 samples, 0.06%)</title><rect x="998.0" y="1109" width="0.7" height="15.0" fill="rgb(228,207,31)" rx="2" ry="2" />
<text  x="1001.01" y="1119.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (6 samples, 0.01%)</title><rect x="996.3" y="1317" width="0.1" height="15.0" fill="rgb(211,65,17)" rx="2" ry="2" />
<text  x="999.27" y="1327.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (78 samples, 0.14%)</title><rect x="1049.7" y="1349" width="1.7" height="15.0" fill="rgb(240,49,37)" rx="2" ry="2" />
<text  x="1052.72" y="1359.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="1015.2" y="1125" width="0.1" height="15.0" fill="rgb(211,125,6)" rx="2" ry="2" />
<text  x="1018.18" y="1135.5" ></text>
</g>
<g >
<title>&lt;futures::future::map::Map&lt;A,F&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="192.7" y="1205" width="0.1" height="15.0" fill="rgb(248,7,14)" rx="2" ry="2" />
<text  x="195.69" y="1215.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (19 samples, 0.03%)</title><rect x="1045.8" y="1221" width="0.4" height="15.0" fill="rgb(236,112,9)" rx="2" ry="2" />
<text  x="1048.80" y="1231.5" ></text>
</g>
<g >
<title>__vfs_write (11 samples, 0.02%)</title><rect x="1048.5" y="709" width="0.2" height="15.0" fill="rgb(246,171,11)" rx="2" ry="2" />
<text  x="1051.47" y="719.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="1041.1" y="773" width="0.2" height="15.0" fill="rgb(238,84,1)" rx="2" ry="2" />
<text  x="1044.09" y="783.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (8 samples, 0.01%)</title><rect x="1026.3" y="1157" width="0.2" height="15.0" fill="rgb(210,68,34)" rx="2" ry="2" />
<text  x="1029.30" y="1167.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (20 samples, 0.04%)</title><rect x="1029.0" y="901" width="0.4" height="15.0" fill="rgb(213,224,40)" rx="2" ry="2" />
<text  x="1031.97" y="911.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (16 samples, 0.03%)</title><rect x="810.5" y="1093" width="0.3" height="15.0" fill="rgb(253,31,36)" rx="2" ry="2" />
<text  x="813.48" y="1103.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.01%)</title><rect x="1022.5" y="837" width="0.1" height="15.0" fill="rgb(231,159,0)" rx="2" ry="2" />
<text  x="1025.48" y="847.5" ></text>
</g>
<g >
<title>do_writev (12 samples, 0.02%)</title><rect x="1131.3" y="453" width="0.2" height="15.0" fill="rgb(245,149,45)" rx="2" ry="2" />
<text  x="1134.29" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.03%)</title><rect x="182.3" y="1461" width="0.4" height="15.0" fill="rgb(253,60,0)" rx="2" ry="2" />
<text  x="185.30" y="1471.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_mut (50 samples, 0.09%)</title><rect x="401.8" y="1285" width="1.0" height="15.0" fill="rgb(206,159,2)" rx="2" ry="2" />
<text  x="404.78" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (13 samples, 0.02%)</title><rect x="1026.6" y="1205" width="0.3" height="15.0" fill="rgb(216,89,13)" rx="2" ry="2" />
<text  x="1029.64" y="1215.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::offset (49 samples, 0.09%)</title><rect x="339.9" y="1253" width="1.0" height="15.0" fill="rgb(210,158,5)" rx="2" ry="2" />
<text  x="342.89" y="1263.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (7 samples, 0.01%)</title><rect x="952.5" y="1237" width="0.1" height="15.0" fill="rgb(253,215,9)" rx="2" ry="2" />
<text  x="955.48" y="1247.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default (46 samples, 0.08%)</title><rect x="1029.0" y="1413" width="0.9" height="15.0" fill="rgb(220,91,50)" rx="2" ry="2" />
<text  x="1031.97" y="1423.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (57 samples, 0.10%)</title><rect x="565.3" y="1253" width="1.2" height="15.0" fill="rgb(230,222,51)" rx="2" ry="2" />
<text  x="568.25" y="1263.5" ></text>
</g>
<g >
<title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="991.8" y="1445" width="0.1" height="15.0" fill="rgb(208,203,2)" rx="2" ry="2" />
<text  x="994.77" y="1455.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (56 samples, 0.10%)</title><rect x="184.8" y="1429" width="1.2" height="15.0" fill="rgb(227,57,7)" rx="2" ry="2" />
<text  x="187.80" y="1439.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (15 samples, 0.03%)</title><rect x="194.7" y="1445" width="0.3" height="15.0" fill="rgb(245,104,7)" rx="2" ry="2" />
<text  x="197.71" y="1455.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (7 samples, 0.01%)</title><rect x="1056.9" y="1525" width="0.2" height="15.0" fill="rgb(231,62,28)" rx="2" ry="2" />
<text  x="1059.94" y="1535.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::reborrow_mut (61 samples, 0.11%)</title><rect x="362.4" y="1269" width="1.3" height="15.0" fill="rgb(227,87,48)" rx="2" ry="2" />
<text  x="365.44" y="1279.5" ></text>
</g>
<g >
<title>bincode::internal::serialized_size (5 samples, 0.01%)</title><rect x="1049.8" y="933" width="0.1" height="15.0" fill="rgb(214,88,42)" rx="2" ry="2" />
<text  x="1052.76" y="943.5" ></text>
</g>
<g >
<title>tokio_reactor::registration::Inner::poll_ready (18 samples, 0.03%)</title><rect x="1054.4" y="1109" width="0.4" height="15.0" fill="rgb(248,97,25)" rx="2" ry="2" />
<text  x="1057.39" y="1119.5" ></text>
</g>
<g >
<title>tokio_reactor::Reactor::poll (177 samples, 0.32%)</title><rect x="1122.3" y="981" width="3.8" height="15.0" fill="rgb(228,218,16)" rx="2" ry="2" />
<text  x="1125.33" y="991.5" ></text>
</g>
<g >
<title>futures::task_impl::with (6 samples, 0.01%)</title><rect x="181.7" y="1349" width="0.2" height="15.0" fill="rgb(243,222,52)" rx="2" ry="2" />
<text  x="184.75" y="1359.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (10 samples, 0.02%)</title><rect x="1051.4" y="1381" width="0.2" height="15.0" fill="rgb(219,2,20)" rx="2" ry="2" />
<text  x="1054.38" y="1391.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1031.0" y="853" width="0.2" height="15.0" fill="rgb(224,174,52)" rx="2" ry="2" />
<text  x="1034.05" y="863.5" ></text>
</g>
<g >
<title>core::ptr::write (13 samples, 0.02%)</title><rect x="883.1" y="1221" width="0.2" height="15.0" fill="rgb(214,134,42)" rx="2" ry="2" />
<text  x="886.07" y="1231.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.01%)</title><rect x="1030.3" y="1573" width="0.2" height="15.0" fill="rgb(244,98,53)" rx="2" ry="2" />
<text  x="1033.33" y="1583.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::register (6 samples, 0.01%)</title><rect x="1052.5" y="1221" width="0.1" height="15.0" fill="rgb(248,128,29)" rx="2" ry="2" />
<text  x="1055.48" y="1231.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (6 samples, 0.01%)</title><rect x="1027.4" y="1013" width="0.2" height="15.0" fill="rgb(232,109,37)" rx="2" ry="2" />
<text  x="1030.44" y="1023.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_and (6 samples, 0.01%)</title><rect x="1089.4" y="933" width="0.2" height="15.0" fill="rgb(246,88,2)" rx="2" ry="2" />
<text  x="1092.44" y="943.5" ></text>
</g>
<g >
<title>tcp_push (9 samples, 0.02%)</title><rect x="1131.3" y="309" width="0.2" height="15.0" fill="rgb(229,75,15)" rx="2" ry="2" />
<text  x="1134.31" y="319.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (21 samples, 0.04%)</title><rect x="1056.3" y="1141" width="0.4" height="15.0" fill="rgb(221,148,17)" rx="2" ry="2" />
<text  x="1059.26" y="1151.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (84 samples, 0.15%)</title><rect x="786.0" y="1157" width="1.8" height="15.0" fill="rgb(223,48,48)" rx="2" ry="2" />
<text  x="788.99" y="1167.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (5 samples, 0.01%)</title><rect x="382.9" y="1253" width="0.1" height="15.0" fill="rgb(233,107,18)" rx="2" ry="2" />
<text  x="385.88" y="1263.5" ></text>
</g>
<g >
<title>std::sync::condvar::Condvar::wait (17 samples, 0.03%)</title><rect x="984.9" y="1285" width="0.4" height="15.0" fill="rgb(241,218,32)" rx="2" ry="2" />
<text  x="987.94" y="1295.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default::_$u7b$$u7b$closure$u7d$$u7d$::ha80fbdab9b554b03 (21 samples, 0.04%)</title><rect x="1033.2" y="1557" width="0.5" height="15.0" fill="rgb(241,61,25)" rx="2" ry="2" />
<text  x="1036.24" y="1567.5" ></text>
</g>
<g >
<title>hyper::client::dispatch::Callback&lt;T,U&gt;::send (6 samples, 0.01%)</title><rect x="996.3" y="1429" width="0.1" height="15.0" fill="rgb(253,38,9)" rx="2" ry="2" />
<text  x="999.27" y="1439.5" ></text>
</g>
<g >
<title>&lt;chan::ChannelKey as core::cmp::Ord&gt;::cmp (235 samples, 0.42%)</title><rect x="531.6" y="1221" width="4.9" height="15.0" fill="rgb(220,49,12)" rx="2" ry="2" />
<text  x="534.56" y="1231.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (8 samples, 0.01%)</title><rect x="1023.8" y="1493" width="0.1" height="15.0" fill="rgb(229,34,16)" rx="2" ry="2" />
<text  x="1026.77" y="1503.5" ></text>
</g>
<g >
<title>chrono::format::scan::number (17 samples, 0.03%)</title><rect x="1001.2" y="565" width="0.4" height="15.0" fill="rgb(225,210,8)" rx="2" ry="2" />
<text  x="1004.24" y="575.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (9 samples, 0.02%)</title><rect x="651.2" y="1109" width="0.2" height="15.0" fill="rgb(210,193,20)" rx="2" ry="2" />
<text  x="654.23" y="1119.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::hb87fc0a2e16bd2ae (193 samples, 0.35%)</title><rect x="985.8" y="1525" width="4.1" height="15.0" fill="rgb(226,70,26)" rx="2" ry="2" />
<text  x="988.77" y="1535.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (10 samples, 0.02%)</title><rect x="1041.1" y="789" width="0.2" height="15.0" fill="rgb(241,210,32)" rx="2" ry="2" />
<text  x="1044.09" y="799.5" ></text>
</g>
<g >
<title>tcache_dalloc_small (11 samples, 0.02%)</title><rect x="1018.9" y="1525" width="0.3" height="15.0" fill="rgb(224,37,9)" rx="2" ry="2" />
<text  x="1021.93" y="1535.5" ></text>
</g>
<g >
<title>arena_malloc (9 samples, 0.02%)</title><rect x="102.0" y="1525" width="0.2" height="15.0" fill="rgb(226,131,9)" rx="2" ry="2" />
<text  x="104.96" y="1535.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,HandleType&gt;::force (92 samples, 0.17%)</title><rect x="295.5" y="1301" width="2.0" height="15.0" fill="rgb(226,158,51)" rx="2" ry="2" />
<text  x="298.50" y="1311.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (15 samples, 0.03%)</title><rect x="1039.1" y="293" width="0.3" height="15.0" fill="rgb(226,73,30)" rx="2" ry="2" />
<text  x="1042.07" y="303.5" ></text>
</g>
<g >
<title>tsd_thread_deallocatedp_get (57 samples, 0.10%)</title><rect x="164.0" y="1557" width="1.2" height="15.0" fill="rgb(223,94,6)" rx="2" ry="2" />
<text  x="166.99" y="1567.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (7 samples, 0.01%)</title><rect x="1085.9" y="1013" width="0.2" height="15.0" fill="rgb(217,183,21)" rx="2" ry="2" />
<text  x="1088.94" y="1023.5" ></text>
</g>
<g >
<title>core::ptr::write (22 samples, 0.04%)</title><rect x="657.7" y="1237" width="0.5" height="15.0" fill="rgb(226,141,5)" rx="2" ry="2" />
<text  x="660.75" y="1247.5" ></text>
</g>
<g >
<title>__nptl_deallocate_tsd (6 samples, 0.01%)</title><rect x="195.0" y="1573" width="0.2" height="15.0" fill="rgb(218,76,37)" rx="2" ry="2" />
<text  x="198.03" y="1583.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 0.02%)</title><rect x="1045.3" y="949" width="0.2" height="15.0" fill="rgb(225,75,49)" rx="2" ry="2" />
<text  x="1048.27" y="959.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::chan::Rx&lt;T,S&gt;::recv (23 samples, 0.04%)</title><rect x="1003.0" y="1525" width="0.5" height="15.0" fill="rgb(254,61,43)" rx="2" ry="2" />
<text  x="1006.04" y="1535.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (10 samples, 0.02%)</title><rect x="1114.9" y="901" width="0.2" height="15.0" fill="rgb(242,226,4)" rx="2" ry="2" />
<text  x="1117.91" y="911.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (46 samples, 0.08%)</title><rect x="263.7" y="1269" width="1.0" height="15.0" fill="rgb(249,199,44)" rx="2" ry="2" />
<text  x="266.73" y="1279.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (19 samples, 0.03%)</title><rect x="1025.8" y="1589" width="0.4" height="15.0" fill="rgb(225,24,13)" rx="2" ry="2" />
<text  x="1028.79" y="1599.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *const T&gt;::add (79 samples, 0.14%)</title><rect x="370.6" y="1269" width="1.7" height="15.0" fill="rgb(253,81,5)" rx="2" ry="2" />
<text  x="373.61" y="1279.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.01%)</title><rect x="1022.3" y="1205" width="0.1" height="15.0" fill="rgb(211,73,13)" rx="2" ry="2" />
<text  x="1025.33" y="1215.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (6 samples, 0.01%)</title><rect x="1025.8" y="1317" width="0.1" height="15.0" fill="rgb(215,112,46)" rx="2" ry="2" />
<text  x="1028.79" y="1327.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (7 samples, 0.01%)</title><rect x="1049.4" y="1381" width="0.1" height="15.0" fill="rgb(218,60,46)" rx="2" ry="2" />
<text  x="1052.38" y="1391.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::replace (7 samples, 0.01%)</title><rect x="200.4" y="1253" width="0.2" height="15.0" fill="rgb(248,116,7)" rx="2" ry="2" />
<text  x="203.42" y="1263.5" ></text>
</g>
<g >
<title>tsd_reentrancy_levelp_get (71 samples, 0.13%)</title><rect x="68.2" y="1493" width="1.5" height="15.0" fill="rgb(245,91,6)" rx="2" ry="2" />
<text  x="71.16" y="1503.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (12 samples, 0.02%)</title><rect x="1036.7" y="1109" width="0.2" height="15.0" fill="rgb(250,19,52)" rx="2" ry="2" />
<text  x="1039.65" y="1119.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (28 samples, 0.05%)</title><rect x="1035.9" y="1525" width="0.6" height="15.0" fill="rgb(206,190,35)" rx="2" ry="2" />
<text  x="1038.89" y="1535.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default::_$u7b$$u7b$closure$u7d$$u7d$::ha80fbdab9b554b03 (12 samples, 0.02%)</title><rect x="1015.2" y="1381" width="0.2" height="15.0" fill="rgb(233,33,7)" rx="2" ry="2" />
<text  x="1018.18" y="1391.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (18 samples, 0.03%)</title><rect x="1127.9" y="981" width="0.4" height="15.0" fill="rgb(215,191,12)" rx="2" ry="2" />
<text  x="1130.91" y="991.5" ></text>
</g>
<g >
<title>&lt;async_bincode::reader::AsyncBincodeReader&lt;R,T&gt; as futures::stream::Stream&gt;::poll (9 samples, 0.02%)</title><rect x="1052.7" y="1269" width="0.2" height="15.0" fill="rgb(218,97,40)" rx="2" ry="2" />
<text  x="1055.71" y="1279.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.01%)</title><rect x="1094.0" y="869" width="0.1" height="15.0" fill="rgb(252,71,23)" rx="2" ry="2" />
<text  x="1097.03" y="879.5" ></text>
</g>
<g >
<title>tokio_tower::mediator::Sender&lt;T&gt;::try_send (21 samples, 0.04%)</title><rect x="1056.3" y="1237" width="0.4" height="15.0" fill="rgb(210,189,50)" rx="2" ry="2" />
<text  x="1059.26" y="1247.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.01%)</title><rect x="1009.2" y="1477" width="0.1" height="15.0" fill="rgb(209,27,52)" rx="2" ry="2" />
<text  x="1012.19" y="1487.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (14 samples, 0.03%)</title><rect x="1032.5" y="1173" width="0.3" height="15.0" fill="rgb(233,116,43)" rx="2" ry="2" />
<text  x="1035.47" y="1183.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (17 samples, 0.03%)</title><rect x="1023.0" y="1189" width="0.3" height="15.0" fill="rgb(253,142,0)" rx="2" ry="2" />
<text  x="1025.97" y="1199.5" ></text>
</g>
<g >
<title>tsd_witness_tsdp_get_unsafe (17 samples, 0.03%)</title><rect x="71.4" y="1477" width="0.4" height="15.0" fill="rgb(227,141,40)" rx="2" ry="2" />
<text  x="74.41" y="1487.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (5 samples, 0.01%)</title><rect x="602.0" y="1013" width="0.2" height="15.0" fill="rgb(254,203,45)" rx="2" ry="2" />
<text  x="605.05" y="1023.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (11 samples, 0.02%)</title><rect x="1114.3" y="965" width="0.2" height="15.0" fill="rgb(247,128,1)" rx="2" ry="2" />
<text  x="1117.27" y="975.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (6 samples, 0.01%)</title><rect x="1033.7" y="1237" width="0.1" height="15.0" fill="rgb(215,168,9)" rx="2" ry="2" />
<text  x="1036.68" y="1247.5" ></text>
</g>
<g >
<title>&lt;jemallocator::Jemalloc as core::alloc::GlobalAlloc&gt;::dealloc (57 samples, 0.10%)</title><rect x="861.9" y="1253" width="1.2" height="15.0" fill="rgb(229,105,0)" rx="2" ry="2" />
<text  x="864.94" y="1263.5" ></text>
</g>
<g >
<title>futex_wait (5 samples, 0.01%)</title><rect x="192.4" y="1109" width="0.1" height="15.0" fill="rgb(239,78,30)" rx="2" ry="2" />
<text  x="195.35" y="1119.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (158 samples, 0.28%)</title><rect x="1041.1" y="1013" width="3.3" height="15.0" fill="rgb(208,204,20)" rx="2" ry="2" />
<text  x="1044.09" y="1023.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (6 samples, 0.01%)</title><rect x="1024.8" y="1445" width="0.1" height="15.0" fill="rgb(214,196,20)" rx="2" ry="2" />
<text  x="1027.79" y="1455.5" ></text>
</g>
<g >
<title>core::mem::take (8 samples, 0.01%)</title><rect x="1003.8" y="1509" width="0.1" height="15.0" fill="rgb(216,194,22)" rx="2" ry="2" />
<text  x="1006.76" y="1519.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.01%)</title><rect x="997.0" y="1221" width="0.1" height="15.0" fill="rgb(242,112,52)" rx="2" ry="2" />
<text  x="999.95" y="1231.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (126 samples, 0.23%)</title><rect x="1038.4" y="1269" width="2.7" height="15.0" fill="rgb(238,184,19)" rx="2" ry="2" />
<text  x="1041.41" y="1279.5" ></text>
</g>
<g >
<title>isdalloct (1,658 samples, 2.98%)</title><rect x="125.7" y="1557" width="35.2" height="15.0" fill="rgb(213,102,16)" rx="2" ry="2" />
<text  x="128.69" y="1567.5" >is..</text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="1033.7" y="1013" width="0.1" height="15.0" fill="rgb(235,150,54)" rx="2" ry="2" />
<text  x="1036.68" y="1023.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::hd16273aabd937917 (37 samples, 0.07%)</title><rect x="186.3" y="1493" width="0.7" height="15.0" fill="rgb(238,110,21)" rx="2" ry="2" />
<text  x="189.26" y="1503.5" ></text>
</g>
<g >
<title>tokio_timer::atomic::imp::AtomicU64::store (14 samples, 0.03%)</title><rect x="1115.2" y="997" width="0.3" height="15.0" fill="rgb(236,64,10)" rx="2" ry="2" />
<text  x="1118.18" y="1007.5" ></text>
</g>
<g >
<title>futures::task_impl::std::_$LT$impl$u20$futures..task_impl..Spawn$LT$F$GT$$GT$::wait_future::_$u7b$$u7b$closure$u7d$$u7d$::h6e5f9dba7457629d (50 samples, 0.09%)</title><rect x="192.8" y="1285" width="1.1" height="15.0" fill="rgb(244,217,39)" rx="2" ry="2" />
<text  x="195.84" y="1295.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="997.2" y="933" width="0.1" height="15.0" fill="rgb(218,103,37)" rx="2" ry="2" />
<text  x="1000.16" y="943.5" ></text>
</g>
<g >
<title>&lt;mio::net::tcp::TcpStream as std::io::Write&gt;::write (51 samples, 0.09%)</title><rect x="1041.7" y="853" width="1.0" height="15.0" fill="rgb(229,70,27)" rx="2" ry="2" />
<text  x="1044.66" y="863.5" ></text>
</g>
<g >
<title>security_file_permission (5 samples, 0.01%)</title><rect x="185.7" y="869" width="0.1" height="15.0" fill="rgb(233,53,49)" rx="2" ry="2" />
<text  x="188.69" y="879.5" ></text>
</g>
<g >
<title>sys_futex (10 samples, 0.02%)</title><rect x="1043.8" y="725" width="0.2" height="15.0" fill="rgb(232,38,12)" rx="2" ry="2" />
<text  x="1046.82" y="735.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (26 samples, 0.05%)</title><rect x="1029.4" y="933" width="0.5" height="15.0" fill="rgb(212,88,23)" rx="2" ry="2" />
<text  x="1032.39" y="943.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (21 samples, 0.04%)</title><rect x="1059.9" y="1221" width="0.5" height="15.0" fill="rgb(233,98,32)" rx="2" ry="2" />
<text  x="1062.91" y="1231.5" ></text>
</g>
<g >
<title>__libc_send (57 samples, 0.10%)</title><rect x="1038.5" y="789" width="1.2" height="15.0" fill="rgb(244,26,1)" rx="2" ry="2" />
<text  x="1041.50" y="799.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::is_none (63 samples, 0.11%)</title><rect x="700.2" y="1317" width="1.3" height="15.0" fill="rgb(231,52,13)" rx="2" ry="2" />
<text  x="703.21" y="1327.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (9 samples, 0.02%)</title><rect x="1051.4" y="1221" width="0.2" height="15.0" fill="rgb(234,197,52)" rx="2" ry="2" />
<text  x="1054.38" y="1231.5" ></text>
</g>
<g >
<title>sys_futex (6 samples, 0.01%)</title><rect x="985.2" y="1157" width="0.1" height="15.0" fill="rgb(249,27,54)" rx="2" ry="2" />
<text  x="988.17" y="1167.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::add (87 samples, 0.16%)</title><rect x="372.3" y="1269" width="1.8" height="15.0" fill="rgb(208,166,16)" rx="2" ry="2" />
<text  x="375.29" y="1279.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run (7 samples, 0.01%)</title><rect x="1030.3" y="1541" width="0.2" height="15.0" fill="rgb(250,43,38)" rx="2" ry="2" />
<text  x="1033.33" y="1551.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Root&lt;K,V&gt;::as_mut (100 samples, 0.18%)</title><rect x="291.4" y="1317" width="2.1" height="15.0" fill="rgb(209,53,32)" rx="2" ry="2" />
<text  x="294.38" y="1327.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::wakeup (21 samples, 0.04%)</title><rect x="1048.3" y="885" width="0.4" height="15.0" fill="rgb(212,172,41)" rx="2" ry="2" />
<text  x="1051.30" y="895.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (13 samples, 0.02%)</title><rect x="1052.1" y="1237" width="0.2" height="15.0" fill="rgb(248,52,21)" rx="2" ry="2" />
<text  x="1055.06" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (23 samples, 0.04%)</title><rect x="1014.5" y="1317" width="0.4" height="15.0" fill="rgb(209,48,17)" rx="2" ry="2" />
<text  x="1017.46" y="1327.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::hd16273aabd937917 (5 samples, 0.01%)</title><rect x="180.7" y="1397" width="0.1" height="15.0" fill="rgb(231,42,36)" rx="2" ry="2" />
<text  x="183.73" y="1407.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (12 samples, 0.02%)</title><rect x="1036.7" y="1349" width="0.2" height="15.0" fill="rgb(244,52,35)" rx="2" ry="2" />
<text  x="1039.65" y="1359.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::tcp::TcpStream as std::io::Write&gt;::write (50 samples, 0.09%)</title><rect x="1041.7" y="837" width="1.0" height="15.0" fill="rgb(223,127,14)" rx="2" ry="2" />
<text  x="1044.68" y="847.5" ></text>
</g>
<g >
<title>futures::task_impl::std::_$LT$impl$u20$futures..task_impl..Spawn$LT$F$GT$$GT$::wait_future::_$u7b$$u7b$closure$u7d$$u7d$::hd0f6d5cc3fe9bd86 (7 samples, 0.01%)</title><rect x="194.4" y="1541" width="0.1" height="15.0" fill="rgb(229,120,49)" rx="2" ry="2" />
<text  x="197.39" y="1551.5" ></text>
</g>
<g >
<title>inet_recvmsg (8 samples, 0.01%)</title><rect x="1035.6" y="805" width="0.2" height="15.0" fill="rgb(231,209,40)" rx="2" ry="2" />
<text  x="1038.59" y="815.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (5 samples, 0.01%)</title><rect x="1108.2" y="677" width="0.1" height="15.0" fill="rgb(224,47,22)" rx="2" ry="2" />
<text  x="1111.20" y="687.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (9 samples, 0.02%)</title><rect x="1042.3" y="229" width="0.2" height="15.0" fill="rgb(253,112,48)" rx="2" ry="2" />
<text  x="1045.27" y="239.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (22 samples, 0.04%)</title><rect x="1014.5" y="933" width="0.4" height="15.0" fill="rgb(243,178,50)" rx="2" ry="2" />
<text  x="1017.46" y="943.5" ></text>
</g>
<g >
<title>futures::sync::mpsc::Sender&lt;T&gt;::signal (6 samples, 0.01%)</title><rect x="1024.8" y="1477" width="0.1" height="15.0" fill="rgb(205,20,38)" rx="2" ry="2" />
<text  x="1027.79" y="1487.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (5 samples, 0.01%)</title><rect x="1020.4" y="1445" width="0.1" height="15.0" fill="rgb(247,73,6)" rx="2" ry="2" />
<text  x="1023.40" y="1455.5" ></text>
</g>
<g >
<title>futures::future::Future::wait (129 samples, 0.23%)</title><rect x="979.8" y="1301" width="2.7" height="15.0" fill="rgb(220,80,19)" rx="2" ry="2" />
<text  x="982.79" y="1311.5" ></text>
</g>
<g >
<title>core::ptr::read (7 samples, 0.01%)</title><rect x="1082.6" y="901" width="0.1" height="15.0" fill="rgb(208,54,44)" rx="2" ry="2" />
<text  x="1085.57" y="911.5" ></text>
</g>
<g >
<title>sock_sendmsg (12 samples, 0.02%)</title><rect x="1131.3" y="373" width="0.2" height="15.0" fill="rgb(211,152,0)" rx="2" ry="2" />
<text  x="1134.29" y="383.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (9 samples, 0.02%)</title><rect x="194.8" y="1285" width="0.2" height="15.0" fill="rgb(237,39,41)" rx="2" ry="2" />
<text  x="197.84" y="1295.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (49 samples, 0.09%)</title><rect x="1041.7" y="821" width="1.0" height="15.0" fill="rgb(234,114,30)" rx="2" ry="2" />
<text  x="1044.70" y="831.5" ></text>
</g>
<g >
<title>bincode::internal::deserialize_seed (7 samples, 0.01%)</title><rect x="1022.5" y="1381" width="0.1" height="15.0" fill="rgb(248,68,41)" rx="2" ry="2" />
<text  x="1025.48" y="1391.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (12 samples, 0.02%)</title><rect x="1033.7" y="1413" width="0.2" height="15.0" fill="rgb(252,58,48)" rx="2" ry="2" />
<text  x="1036.68" y="1423.5" ></text>
</g>
<g >
<title>tokio_sync::loom::sync::CausalCell&lt;T&gt;::with_mut (7 samples, 0.01%)</title><rect x="181.7" y="1397" width="0.2" height="15.0" fill="rgb(249,124,47)" rx="2" ry="2" />
<text  x="184.72" y="1407.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (8 samples, 0.01%)</title><rect x="1025.6" y="1061" width="0.2" height="15.0" fill="rgb(252,61,38)" rx="2" ry="2" />
<text  x="1028.62" y="1071.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.01%)</title><rect x="1043.3" y="917" width="0.1" height="15.0" fill="rgb(227,7,16)" rx="2" ry="2" />
<text  x="1046.27" y="927.5" ></text>
</g>
<g >
<title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (12 samples, 0.02%)</title><rect x="1025.1" y="1541" width="0.3" height="15.0" fill="rgb(238,229,44)" rx="2" ry="2" />
<text  x="1028.11" y="1551.5" ></text>
</g>
<g >
<title>tcache_small_bin_get (69 samples, 0.12%)</title><rect x="64.8" y="1477" width="1.5" height="15.0" fill="rgb(216,13,34)" rx="2" ry="2" />
<text  x="67.79" y="1487.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::future::ResponseFuture&lt;T&gt; as futures::future::Future&gt;::poll (106 samples, 0.19%)</title><rect x="181.0" y="1509" width="2.2" height="15.0" fill="rgb(251,156,28)" rx="2" ry="2" />
<text  x="183.98" y="1519.5" ></text>
</g>
<g >
<title>sock_def_readable (7 samples, 0.01%)</title><rect x="1050.5" y="325" width="0.2" height="15.0" fill="rgb(221,132,36)" rx="2" ry="2" />
<text  x="1053.53" y="335.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (6 samples, 0.01%)</title><rect x="769.2" y="1109" width="0.1" height="15.0" fill="rgb(223,165,15)" rx="2" ry="2" />
<text  x="772.21" y="1119.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (212 samples, 0.38%)</title><rect x="823.0" y="1109" width="4.5" height="15.0" fill="rgb(221,106,38)" rx="2" ry="2" />
<text  x="826.02" y="1119.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.01%)</title><rect x="1026.2" y="997" width="0.1" height="15.0" fill="rgb(227,127,16)" rx="2" ry="2" />
<text  x="1029.19" y="1007.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (32 samples, 0.06%)</title><rect x="1037.1" y="1365" width="0.7" height="15.0" fill="rgb(210,210,34)" rx="2" ry="2" />
<text  x="1040.14" y="1375.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (126 samples, 0.23%)</title><rect x="1038.4" y="1109" width="2.7" height="15.0" fill="rgb(217,68,14)" rx="2" ry="2" />
<text  x="1041.41" y="1119.5" ></text>
</g>
<g >
<title>tokio_reactor::HandlePriv::inner (6 samples, 0.01%)</title><rect x="1109.0" y="677" width="0.2" height="15.0" fill="rgb(237,73,2)" rx="2" ry="2" />
<text  x="1112.03" y="687.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (182 samples, 0.33%)</title><rect x="783.9" y="1173" width="3.9" height="15.0" fill="rgb(207,184,54)" rx="2" ry="2" />
<text  x="786.91" y="1183.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (35 samples, 0.06%)</title><rect x="1051.9" y="1493" width="0.7" height="15.0" fill="rgb(239,166,42)" rx="2" ry="2" />
<text  x="1054.87" y="1503.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (22 samples, 0.04%)</title><rect x="189.4" y="1269" width="0.5" height="15.0" fill="rgb(241,16,4)" rx="2" ry="2" />
<text  x="192.38" y="1279.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (21 samples, 0.04%)</title><rect x="428.6" y="1237" width="0.5" height="15.0" fill="rgb(218,6,35)" rx="2" ry="2" />
<text  x="431.60" y="1247.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::first_edge (30 samples, 0.05%)</title><rect x="947.5" y="1269" width="0.6" height="15.0" fill="rgb(235,31,48)" rx="2" ry="2" />
<text  x="950.51" y="1279.5" ></text>
</g>
<g >
<title>tsd_do_data_cleanup (6 samples, 0.01%)</title><rect x="195.0" y="1541" width="0.2" height="15.0" fill="rgb(251,149,37)" rx="2" ry="2" />
<text  x="198.03" y="1551.5" ></text>
</g>
<g >
<title>&lt;&amp;T as core::fmt::Display&gt;::fmt (57 samples, 0.10%)</title><rect x="998.7" y="1077" width="1.2" height="15.0" fill="rgb(226,134,41)" rx="2" ry="2" />
<text  x="1001.71" y="1087.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (22 samples, 0.04%)</title><rect x="1024.0" y="1061" width="0.5" height="15.0" fill="rgb(213,75,2)" rx="2" ry="2" />
<text  x="1027.01" y="1071.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::he0977de3e88b310a (17 samples, 0.03%)</title><rect x="189.0" y="1381" width="0.4" height="15.0" fill="rgb(246,139,5)" rx="2" ry="2" />
<text  x="192.02" y="1391.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (8 samples, 0.01%)</title><rect x="1067.7" y="1029" width="0.2" height="15.0" fill="rgb(211,165,26)" rx="2" ry="2" />
<text  x="1070.69" y="1039.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (8 samples, 0.01%)</title><rect x="980.6" y="1061" width="0.1" height="15.0" fill="rgb(243,116,20)" rx="2" ry="2" />
<text  x="983.57" y="1071.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::new_edge (11 samples, 0.02%)</title><rect x="947.9" y="1253" width="0.2" height="15.0" fill="rgb(242,141,4)" rx="2" ry="2" />
<text  x="950.91" y="1263.5" ></text>
</g>
<g >
<title>std::sys_common::thread::start_thread (6,084 samples, 10.94%)</title><rect x="1060.6" y="1557" width="129.1" height="15.0" fill="rgb(223,19,45)" rx="2" ry="2" />
<text  x="1063.61" y="1567.5" >std::sys_common:..</text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (64 samples, 0.12%)</title><rect x="1050.0" y="1077" width="1.4" height="15.0" fill="rgb(231,70,52)" rx="2" ry="2" />
<text  x="1053.02" y="1087.5" ></text>
</g>
<g >
<title>&lt;mio::poll::Iter as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="1122.5" y="965" width="0.2" height="15.0" fill="rgb(207,29,15)" rx="2" ry="2" />
<text  x="1125.55" y="975.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (13 samples, 0.02%)</title><rect x="1051.6" y="1413" width="0.3" height="15.0" fill="rgb(249,23,33)" rx="2" ry="2" />
<text  x="1054.59" y="1423.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (6 samples, 0.01%)</title><rect x="1053.1" y="1221" width="0.1" height="15.0" fill="rgb(241,7,23)" rx="2" ry="2" />
<text  x="1056.05" y="1231.5" ></text>
</g>
<g >
<title>tower_buffer::worker::Worker&lt;T,Request&gt;::poll_next_msg (6 samples, 0.01%)</title><rect x="1044.7" y="1445" width="0.1" height="15.0" fill="rgb(225,25,48)" rx="2" ry="2" />
<text  x="1047.67" y="1455.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (83 samples, 0.15%)</title><rect x="1107.8" y="805" width="1.8" height="15.0" fill="rgb(206,204,23)" rx="2" ry="2" />
<text  x="1110.80" y="815.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (19 samples, 0.03%)</title><rect x="1025.8" y="1557" width="0.4" height="15.0" fill="rgb(230,25,42)" rx="2" ry="2" />
<text  x="1028.79" y="1567.5" ></text>
</g>
<g >
<title>tcp_ack (6 samples, 0.01%)</title><rect x="1039.2" y="261" width="0.1" height="15.0" fill="rgb(213,44,3)" rx="2" ry="2" />
<text  x="1042.16" y="271.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_str (9 samples, 0.02%)</title><rect x="1027.7" y="917" width="0.2" height="15.0" fill="rgb(223,126,36)" rx="2" ry="2" />
<text  x="1030.74" y="927.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (10 samples, 0.02%)</title><rect x="1087.6" y="949" width="0.2" height="15.0" fill="rgb(245,223,52)" rx="2" ry="2" />
<text  x="1090.58" y="959.5" ></text>
</g>
<g >
<title>core::num::wrapping::&lt;impl core::ops::arith::Add for core::num::Wrapping&lt;u64&gt;&gt;::add (6 samples, 0.01%)</title><rect x="190.2" y="1525" width="0.1" height="15.0" fill="rgb(226,146,14)" rx="2" ry="2" />
<text  x="193.17" y="1535.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (12 samples, 0.02%)</title><rect x="997.4" y="1077" width="0.2" height="15.0" fill="rgb(239,29,54)" rx="2" ry="2" />
<text  x="1000.35" y="1087.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (25 samples, 0.04%)</title><rect x="565.9" y="1237" width="0.6" height="15.0" fill="rgb(246,193,1)" rx="2" ry="2" />
<text  x="568.93" y="1247.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (22 samples, 0.04%)</title><rect x="1024.0" y="1397" width="0.5" height="15.0" fill="rgb(209,118,52)" rx="2" ry="2" />
<text  x="1027.01" y="1407.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (61 samples, 0.11%)</title><rect x="1031.2" y="1397" width="1.3" height="15.0" fill="rgb(211,224,33)" rx="2" ry="2" />
<text  x="1034.18" y="1407.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::stream::Stream&gt;::poll (17 samples, 0.03%)</title><rect x="1031.3" y="1061" width="0.4" height="15.0" fill="rgb(208,15,49)" rx="2" ry="2" />
<text  x="1034.30" y="1071.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (26 samples, 0.05%)</title><rect x="996.3" y="1525" width="0.5" height="15.0" fill="rgb(221,187,38)" rx="2" ry="2" />
<text  x="999.27" y="1535.5" ></text>
</g>
<g >
<title>core::ptr::write (13 samples, 0.02%)</title><rect x="827.1" y="1029" width="0.3" height="15.0" fill="rgb(207,17,47)" rx="2" ry="2" />
<text  x="830.14" y="1039.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (50 samples, 0.09%)</title><rect x="570.9" y="1157" width="1.1" height="15.0" fill="rgb(248,143,12)" rx="2" ry="2" />
<text  x="573.94" y="1167.5" ></text>
</g>
<g >
<title>common_file_perm (8 samples, 0.01%)</title><rect x="1097.3" y="709" width="0.1" height="15.0" fill="rgb(220,62,36)" rx="2" ry="2" />
<text  x="1100.25" y="719.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (17 samples, 0.03%)</title><rect x="843.3" y="1109" width="0.4" height="15.0" fill="rgb(253,123,3)" rx="2" ry="2" />
<text  x="846.31" y="1119.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (5 samples, 0.01%)</title><rect x="186.0" y="1557" width="0.1" height="15.0" fill="rgb(214,180,38)" rx="2" ry="2" />
<text  x="189.03" y="1567.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (25 samples, 0.04%)</title><rect x="814.6" y="1029" width="0.5" height="15.0" fill="rgb(249,55,4)" rx="2" ry="2" />
<text  x="817.55" y="1039.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessNode::enqueue_with_wakeup (20 samples, 0.04%)</title><rect x="10.6" y="1141" width="0.4" height="15.0" fill="rgb(254,118,30)" rx="2" ry="2" />
<text  x="13.55" y="1151.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner$LT$T$GT$::complete::_$u7b$$u7b$closure$u7d$$u7d$::hc97a7b3bae4cba5e (9 samples, 0.02%)</title><rect x="1044.1" y="901" width="0.2" height="15.0" fill="rgb(221,102,52)" rx="2" ry="2" />
<text  x="1047.10" y="911.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (36 samples, 0.06%)</title><rect x="571.2" y="1141" width="0.8" height="15.0" fill="rgb(209,162,30)" rx="2" ry="2" />
<text  x="574.24" y="1151.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="1041.1" y="805" width="0.2" height="15.0" fill="rgb(210,47,41)" rx="2" ry="2" />
<text  x="1044.09" y="815.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (28 samples, 0.05%)</title><rect x="881.9" y="1189" width="0.6" height="15.0" fill="rgb(248,16,39)" rx="2" ry="2" />
<text  x="884.86" y="1199.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (6 samples, 0.01%)</title><rect x="1022.2" y="1077" width="0.1" height="15.0" fill="rgb(207,150,14)" rx="2" ry="2" />
<text  x="1025.20" y="1087.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::io::Io as std::io::Read&gt;::read (5 samples, 0.01%)</title><rect x="993.5" y="1285" width="0.1" height="15.0" fill="rgb(253,211,17)" rx="2" ry="2" />
<text  x="996.47" y="1295.5" ></text>
</g>
<g >
<title>time::at (6 samples, 0.01%)</title><rect x="978.4" y="1189" width="0.1" height="15.0" fill="rgb(208,167,23)" rx="2" ry="2" />
<text  x="981.36" y="1199.5" ></text>
</g>
<g >
<title>mio::event_imp::Ready::contains (7 samples, 0.01%)</title><rect x="1093.2" y="853" width="0.1" height="15.0" fill="rgb(222,229,32)" rx="2" ry="2" />
<text  x="1096.16" y="863.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::Handle as tokio_executor::park::Unpark&gt;::unpark (6 samples, 0.01%)</title><rect x="996.3" y="1109" width="0.1" height="15.0" fill="rgb(227,228,22)" rx="2" ry="2" />
<text  x="999.27" y="1119.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::get (9 samples, 0.02%)</title><rect x="914.5" y="1189" width="0.2" height="15.0" fill="rgb(248,180,44)" rx="2" ry="2" />
<text  x="917.54" y="1199.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (8 samples, 0.01%)</title><rect x="1120.1" y="949" width="0.1" height="15.0" fill="rgb(243,152,16)" rx="2" ry="2" />
<text  x="1123.06" y="959.5" ></text>
</g>
<g >
<title>std::time::Instant::now (19 samples, 0.03%)</title><rect x="1114.7" y="965" width="0.4" height="15.0" fill="rgb(212,182,52)" rx="2" ry="2" />
<text  x="1117.74" y="975.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::notify (5 samples, 0.01%)</title><rect x="1051.5" y="901" width="0.1" height="15.0" fill="rgb(213,41,21)" rx="2" ry="2" />
<text  x="1054.46" y="911.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (172 samples, 0.31%)</title><rect x="1150.4" y="805" width="3.6" height="15.0" fill="rgb(210,2,20)" rx="2" ry="2" />
<text  x="1153.36" y="815.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts (33 samples, 0.06%)</title><rect x="670.3" y="1157" width="0.7" height="15.0" fill="rgb(230,201,12)" rx="2" ry="2" />
<text  x="673.27" y="1167.5" ></text>
</g>
<g >
<title>&lt;jemallocator::Jemalloc as core::alloc::GlobalAlloc&gt;::alloc (66 samples, 0.12%)</title><rect x="212.0" y="1269" width="1.4" height="15.0" fill="rgb(246,76,51)" rx="2" ry="2" />
<text  x="215.05" y="1279.5" ></text>
</g>
<g >
<title>chrono::format::parsed::Parsed::set_month (5 samples, 0.01%)</title><rect x="1000.9" y="565" width="0.1" height="15.0" fill="rgb(211,163,28)" rx="2" ry="2" />
<text  x="1003.88" y="575.5" ></text>
</g>
<g >
<title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (9 samples, 0.02%)</title><rect x="199.5" y="1141" width="0.2" height="15.0" fill="rgb(207,39,35)" rx="2" ry="2" />
<text  x="202.46" y="1151.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (11 samples, 0.02%)</title><rect x="1035.9" y="1269" width="0.2" height="15.0" fill="rgb(228,229,45)" rx="2" ry="2" />
<text  x="1038.89" y="1279.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (39 samples, 0.07%)</title><rect x="850.1" y="1093" width="0.8" height="15.0" fill="rgb(245,147,35)" rx="2" ry="2" />
<text  x="853.10" y="1103.5" ></text>
</g>
<g >
<title>futex_wake (9 samples, 0.02%)</title><rect x="1134.5" y="581" width="0.2" height="15.0" fill="rgb(232,25,28)" rx="2" ry="2" />
<text  x="1137.51" y="591.5" ></text>
</g>
<g >
<title>&lt;chan::select::Select as core::ops::drop::Drop&gt;::drop (1,921 samples, 3.45%)</title><rect x="936.2" y="1333" width="40.8" height="15.0" fill="rgb(227,183,14)" rx="2" ry="2" />
<text  x="939.20" y="1343.5" >&lt;ch..</text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::TableOperation&gt;::serialize (19 samples, 0.03%)</title><rect x="1045.8" y="1029" width="0.4" height="15.0" fill="rgb(251,30,17)" rx="2" ry="2" />
<text  x="1048.80" y="1039.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (26 samples, 0.05%)</title><rect x="402.8" y="1285" width="0.6" height="15.0" fill="rgb(248,167,22)" rx="2" ry="2" />
<text  x="405.85" y="1295.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::unwrap_or_else (76 samples, 0.14%)</title><rect x="695.6" y="1221" width="1.6" height="15.0" fill="rgb(229,181,37)" rx="2" ry="2" />
<text  x="698.60" y="1231.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_u8 (5 samples, 0.01%)</title><rect x="1022.2" y="1013" width="0.1" height="15.0" fill="rgb(215,130,5)" rx="2" ry="2" />
<text  x="1025.22" y="1023.5" ></text>
</g>
<g >
<title>futures::stream::futures_unordered::FuturesUnordered&lt;T&gt;::push (17 samples, 0.03%)</title><rect x="1132.8" y="709" width="0.3" height="15.0" fill="rgb(225,181,4)" rx="2" ry="2" />
<text  x="1135.75" y="719.5" ></text>
</g>
<g >
<title>&lt;tokio_sync::mpsc::unbounded::UnboundedReceiver&lt;T&gt; as futures::stream::Stream&gt;::poll (8 samples, 0.01%)</title><rect x="1003.6" y="1525" width="0.1" height="15.0" fill="rgb(208,187,44)" rx="2" ry="2" />
<text  x="1006.57" y="1535.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (5 samples, 0.01%)</title><rect x="1082.4" y="901" width="0.1" height="15.0" fill="rgb(220,223,18)" rx="2" ry="2" />
<text  x="1085.42" y="911.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current (12 samples, 0.02%)</title><rect x="1047.6" y="1173" width="0.2" height="15.0" fill="rgb(222,74,30)" rx="2" ry="2" />
<text  x="1050.56" y="1183.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (26 samples, 0.05%)</title><rect x="1029.4" y="901" width="0.5" height="15.0" fill="rgb(225,16,25)" rx="2" ry="2" />
<text  x="1032.39" y="911.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (9 samples, 0.02%)</title><rect x="1026.0" y="1013" width="0.2" height="15.0" fill="rgb(230,130,48)" rx="2" ry="2" />
<text  x="1028.98" y="1023.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (20 samples, 0.04%)</title><rect x="1029.0" y="917" width="0.4" height="15.0" fill="rgb(211,143,6)" rx="2" ry="2" />
<text  x="1031.97" y="927.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (13 samples, 0.02%)</title><rect x="1027.7" y="1173" width="0.3" height="15.0" fill="rgb(224,39,19)" rx="2" ry="2" />
<text  x="1030.74" y="1183.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (22 samples, 0.04%)</title><rect x="198.9" y="1221" width="0.5" height="15.0" fill="rgb(248,210,20)" rx="2" ry="2" />
<text  x="201.91" y="1231.5" ></text>
</g>
<g >
<title>&lt;&amp;tokio_tcp::stream::TcpStream as tokio_io::async_read::AsyncRead&gt;::read_buf (5 samples, 0.01%)</title><rect x="1031.0" y="629" width="0.2" height="15.0" fill="rgb(225,164,30)" rx="2" ry="2" />
<text  x="1034.05" y="639.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (33 samples, 0.06%)</title><rect x="998.0" y="1237" width="0.7" height="15.0" fill="rgb(209,1,2)" rx="2" ry="2" />
<text  x="1001.01" y="1247.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNot&lt;T&gt;&gt;::serialize (8 samples, 0.01%)</title><rect x="1026.3" y="1253" width="0.2" height="15.0" fill="rgb(222,40,38)" rx="2" ry="2" />
<text  x="1029.30" y="1263.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (9 samples, 0.02%)</title><rect x="950.8" y="1269" width="0.2" height="15.0" fill="rgb(223,54,19)" rx="2" ry="2" />
<text  x="953.80" y="1279.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::Client&lt;T,E&gt; as tower_service::Service&lt;&lt;T as futures::sink::Sink&gt;::SinkItem&gt;&gt;::call (10 samples, 0.02%)</title><rect x="1029.2" y="821" width="0.2" height="15.0" fill="rgb(210,42,43)" rx="2" ry="2" />
<text  x="1032.18" y="831.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessNode::enqueue_with_wakeup (22 samples, 0.04%)</title><rect x="1014.5" y="1029" width="0.4" height="15.0" fill="rgb(232,140,41)" rx="2" ry="2" />
<text  x="1017.46" y="1039.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (16 samples, 0.03%)</title><rect x="1050.4" y="373" width="0.4" height="15.0" fill="rgb(225,134,13)" rx="2" ry="2" />
<text  x="1053.44" y="383.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::worker::Worker&lt;T,Request&gt; as futures::future::Future&gt;::poll (13 samples, 0.02%)</title><rect x="1030.8" y="853" width="0.2" height="15.0" fill="rgb(215,105,40)" rx="2" ry="2" />
<text  x="1033.77" y="863.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (5 samples, 0.01%)</title><rect x="1025.0" y="1573" width="0.1" height="15.0" fill="rgb(233,225,20)" rx="2" ry="2" />
<text  x="1027.96" y="1583.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (46 samples, 0.08%)</title><rect x="1029.0" y="1253" width="0.9" height="15.0" fill="rgb(233,33,47)" rx="2" ry="2" />
<text  x="1031.97" y="1263.5" ></text>
</g>
<g >
<title>core::fmt::write (33 samples, 0.06%)</title><rect x="998.0" y="1093" width="0.7" height="15.0" fill="rgb(254,15,41)" rx="2" ry="2" />
<text  x="1001.01" y="1103.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (22 samples, 0.04%)</title><rect x="257.2" y="1189" width="0.4" height="15.0" fill="rgb(230,24,39)" rx="2" ry="2" />
<text  x="260.16" y="1199.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.04%)</title><rect x="1108.5" y="485" width="0.5" height="15.0" fill="rgb(242,45,19)" rx="2" ry="2" />
<text  x="1111.52" y="495.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNotInner&lt;T&gt;&gt;::serialize (8 samples, 0.01%)</title><rect x="1026.3" y="1221" width="0.2" height="15.0" fill="rgb(252,39,30)" rx="2" ry="2" />
<text  x="1029.30" y="1231.5" ></text>
</g>
<g >
<title>crossbeam_utils::atomic::atomic_cell::AtomicCell&lt;T&gt;::swap (5 samples, 0.01%)</title><rect x="1008.6" y="1349" width="0.1" height="15.0" fill="rgb(237,54,48)" rx="2" ry="2" />
<text  x="1011.64" y="1359.5" ></text>
</g>
<g >
<title>mio::poll::SetReadiness::set_readiness (27 samples, 0.05%)</title><rect x="1028.4" y="997" width="0.6" height="15.0" fill="rgb(248,91,11)" rx="2" ry="2" />
<text  x="1031.40" y="1007.5" ></text>
</g>
<g >
<title>crossbeam_epoch::default::pin (15 samples, 0.03%)</title><rect x="1019.5" y="1573" width="0.3" height="15.0" fill="rgb(237,147,33)" rx="2" ry="2" />
<text  x="1022.51" y="1583.5" ></text>
</g>
<g >
<title>bincode::internal::serialized_size (60 samples, 0.11%)</title><rect x="998.7" y="1493" width="1.3" height="15.0" fill="rgb(234,22,43)" rx="2" ry="2" />
<text  x="1001.71" y="1503.5" ></text>
</g>
<g >
<title>arena_bin_malloc_hard (5 samples, 0.01%)</title><rect x="53.0" y="1445" width="0.1" height="15.0" fill="rgb(210,156,45)" rx="2" ry="2" />
<text  x="55.99" y="1455.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (10 samples, 0.02%)</title><rect x="1026.0" y="1253" width="0.2" height="15.0" fill="rgb(250,124,8)" rx="2" ry="2" />
<text  x="1028.98" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (5 samples, 0.01%)</title><rect x="192.5" y="1237" width="0.1" height="15.0" fill="rgb(218,164,54)" rx="2" ry="2" />
<text  x="195.48" y="1247.5" ></text>
</g>
<g >
<title>&lt;&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple::Access&lt;R,O&gt; as serde::de::SeqAccess&gt;::next_element_seed (18 samples, 0.03%)</title><rect x="1002.7" y="645" width="0.3" height="15.0" fill="rgb(246,198,37)" rx="2" ry="2" />
<text  x="1005.66" y="655.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (78 samples, 0.14%)</title><rect x="1049.7" y="1461" width="1.7" height="15.0" fill="rgb(206,100,7)" rx="2" ry="2" />
<text  x="1052.72" y="1471.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::signal_work (64 samples, 0.12%)</title><rect x="1108.0" y="757" width="1.4" height="15.0" fill="rgb(247,136,49)" rx="2" ry="2" />
<text  x="1111.01" y="767.5" ></text>
</g>
<g >
<title>pipe_write (11 samples, 0.02%)</title><rect x="1048.5" y="677" width="0.2" height="15.0" fill="rgb(209,207,14)" rx="2" ry="2" />
<text  x="1051.47" y="687.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit (21 samples, 0.04%)</title><rect x="1056.3" y="1109" width="0.4" height="15.0" fill="rgb(207,0,22)" rx="2" ry="2" />
<text  x="1059.26" y="1119.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.01%)</title><rect x="335.5" y="1253" width="0.1" height="15.0" fill="rgb(225,15,7)" rx="2" ry="2" />
<text  x="338.54" y="1263.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (7 samples, 0.01%)</title><rect x="1030.3" y="1349" width="0.2" height="15.0" fill="rgb(224,157,26)" rx="2" ry="2" />
<text  x="1033.33" y="1359.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (28 samples, 0.05%)</title><rect x="1037.8" y="1525" width="0.6" height="15.0" fill="rgb(207,213,48)" rx="2" ry="2" />
<text  x="1040.82" y="1535.5" ></text>
</g>
<g >
<title>mio::token::&lt;impl core::convert::From&lt;mio::token::Token&gt; for usize&gt;::from (6 samples, 0.01%)</title><rect x="1098.0" y="885" width="0.1" height="15.0" fill="rgb(205,51,8)" rx="2" ry="2" />
<text  x="1101.00" y="895.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_ptr (16 samples, 0.03%)</title><rect x="1116.7" y="933" width="0.4" height="15.0" fill="rgb(207,91,5)" rx="2" ry="2" />
<text  x="1119.73" y="943.5" ></text>
</g>
<g >
<title>serde::de::SeqAccess::next_element (144 samples, 0.26%)</title><rect x="1000.0" y="965" width="3.0" height="15.0" fill="rgb(245,43,45)" rx="2" ry="2" />
<text  x="1002.99" y="975.5" ></text>
</g>
<g >
<title>&lt;tokio_sync::oneshot::Receiver&lt;T&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="189.1" y="1205" width="0.1" height="15.0" fill="rgb(248,93,2)" rx="2" ry="2" />
<text  x="192.09" y="1215.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default (12 samples, 0.02%)</title><rect x="995.3" y="1349" width="0.3" height="15.0" fill="rgb(245,12,52)" rx="2" ry="2" />
<text  x="998.32" y="1359.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (8 samples, 0.01%)</title><rect x="882.8" y="1189" width="0.2" height="15.0" fill="rgb(244,117,24)" rx="2" ry="2" />
<text  x="885.82" y="1199.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::signal_work (15 samples, 0.03%)</title><rect x="1028.1" y="1125" width="0.3" height="15.0" fill="rgb(240,108,50)" rx="2" ry="2" />
<text  x="1031.06" y="1135.5" ></text>
</g>
<g >
<title>rand::rand_impls::&lt;impl rand::Rand for usize&gt;::rand (1,556 samples, 2.80%)</title><rect x="569.7" y="1221" width="33.0" height="15.0" fill="rgb(252,82,47)" rx="2" ry="2" />
<text  x="572.71" y="1231.5" >ra..</text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::h2c533180e0a21e7c (5 samples, 0.01%)</title><rect x="1021.0" y="1573" width="0.1" height="15.0" fill="rgb(208,174,40)" rx="2" ry="2" />
<text  x="1024.01" y="1583.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::he0977de3e88b310a (13 samples, 0.02%)</title><rect x="194.1" y="1461" width="0.2" height="15.0" fill="rgb(207,163,39)" rx="2" ry="2" />
<text  x="197.07" y="1471.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.01%)</title><rect x="1014.2" y="997" width="0.1" height="15.0" fill="rgb(211,106,43)" rx="2" ry="2" />
<text  x="1017.20" y="1007.5" ></text>
</g>
<g >
<title>&lt;jemallocator::Jemalloc as core::alloc::GlobalAlloc&gt;::alloc (73 samples, 0.13%)</title><rect x="388.6" y="1269" width="1.6" height="15.0" fill="rgb(214,65,49)" rx="2" ry="2" />
<text  x="391.61" y="1279.5" ></text>
</g>
<g >
<title>vfs_read (10 samples, 0.02%)</title><rect x="1111.7" y="773" width="0.3" height="15.0" fill="rgb(236,49,5)" rx="2" ry="2" />
<text  x="1114.74" y="783.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::will_notify (7 samples, 0.01%)</title><rect x="1003.1" y="1317" width="0.2" height="15.0" fill="rgb(212,153,29)" rx="2" ry="2" />
<text  x="1006.15" y="1327.5" ></text>
</g>
<g >
<title>core::mem::size_of (9 samples, 0.02%)</title><rect x="880.3" y="1221" width="0.2" height="15.0" fill="rgb(220,146,4)" rx="2" ry="2" />
<text  x="883.27" y="1231.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (142 samples, 0.26%)</title><rect x="276.2" y="1269" width="3.0" height="15.0" fill="rgb(212,31,53)" rx="2" ry="2" />
<text  x="279.17" y="1279.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (69 samples, 0.12%)</title><rect x="552.8" y="1301" width="1.4" height="15.0" fill="rgb(206,20,11)" rx="2" ry="2" />
<text  x="555.78" y="1311.5" ></text>
</g>
<g >
<title>&lt;mio::poll::Iter as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="1074.6" y="949" width="0.3" height="15.0" fill="rgb(245,153,7)" rx="2" ry="2" />
<text  x="1077.57" y="959.5" ></text>
</g>
<g >
<title>arccstr::ArcCStr::from_raw_cstr_no_nul (12 samples, 0.02%)</title><rect x="195.4" y="1301" width="0.2" height="15.0" fill="rgb(220,21,22)" rx="2" ry="2" />
<text  x="198.37" y="1311.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (6 samples, 0.01%)</title><rect x="10.8" y="869" width="0.1" height="15.0" fill="rgb(252,85,52)" rx="2" ry="2" />
<text  x="13.79" y="879.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (8 samples, 0.01%)</title><rect x="1141.3" y="949" width="0.2" height="15.0" fill="rgb(246,192,52)" rx="2" ry="2" />
<text  x="1144.28" y="959.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::Handle as tokio_executor::park::Unpark&gt;::unpark (5 samples, 0.01%)</title><rect x="1024.8" y="1221" width="0.1" height="15.0" fill="rgb(208,155,5)" rx="2" ry="2" />
<text  x="1027.79" y="1231.5" ></text>
</g>
<g >
<title>&lt;crossbeam_utils::cache_padded::CachePadded&lt;T&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.01%)</title><rect x="1069.5" y="1061" width="0.1" height="15.0" fill="rgb(206,130,25)" rx="2" ry="2" />
<text  x="1072.50" y="1071.5" ></text>
</g>
<g >
<title>&lt;noria::table::Table as tower_service::Service&lt;noria::table::Input&gt;&gt;::poll_ready (11 samples, 0.02%)</title><rect x="186.3" y="1397" width="0.2" height="15.0" fill="rgb(250,98,5)" rx="2" ry="2" />
<text  x="189.31" y="1407.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (9 samples, 0.02%)</title><rect x="979.0" y="1349" width="0.1" height="15.0" fill="rgb(225,152,39)" rx="2" ry="2" />
<text  x="981.96" y="1359.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (6 samples, 0.01%)</title><rect x="1034.6" y="1317" width="0.1" height="15.0" fill="rgb(228,43,46)" rx="2" ry="2" />
<text  x="1037.57" y="1327.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (61 samples, 0.11%)</title><rect x="1031.2" y="1461" width="1.3" height="15.0" fill="rgb(227,199,47)" rx="2" ry="2" />
<text  x="1034.18" y="1471.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::spawn_thread::_$u7b$$u7b$closure$u7d$$u7d$::ha7200d58e6efae3b (12 samples, 0.02%)</title><rect x="995.3" y="1429" width="0.3" height="15.0" fill="rgb(248,89,19)" rx="2" ry="2" />
<text  x="998.32" y="1439.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (8 samples, 0.01%)</title><rect x="1033.2" y="1237" width="0.2" height="15.0" fill="rgb(210,103,19)" rx="2" ry="2" />
<text  x="1036.24" y="1247.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (33 samples, 0.06%)</title><rect x="1033.2" y="1589" width="0.7" height="15.0" fill="rgb(244,107,32)" rx="2" ry="2" />
<text  x="1036.24" y="1599.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (56 samples, 0.10%)</title><rect x="949.6" y="1269" width="1.2" height="15.0" fill="rgb(211,39,36)" rx="2" ry="2" />
<text  x="952.61" y="1279.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::as_mut_ptr (16 samples, 0.03%)</title><rect x="774.2" y="1141" width="0.4" height="15.0" fill="rgb(209,16,51)" rx="2" ry="2" />
<text  x="777.22" y="1151.5" ></text>
</g>
<g >
<title>rand::prng::isaac64::Isaac64Rng::init (51 samples, 0.09%)</title><rect x="190.1" y="1541" width="1.0" height="15.0" fill="rgb(246,161,25)" rx="2" ry="2" />
<text  x="193.06" y="1551.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (17 samples, 0.03%)</title><rect x="1044.4" y="1573" width="0.4" height="15.0" fill="rgb(215,118,15)" rx="2" ry="2" />
<text  x="1047.44" y="1583.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.01%)</title><rect x="488.5" y="1141" width="0.2" height="15.0" fill="rgb(216,215,38)" rx="2" ry="2" />
<text  x="491.53" y="1151.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.02%)</title><rect x="1129.0" y="1029" width="0.1" height="15.0" fill="rgb(240,227,16)" rx="2" ry="2" />
<text  x="1131.95" y="1039.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner&lt;T&gt;::complete (6 samples, 0.01%)</title><rect x="1040.5" y="933" width="0.1" height="15.0" fill="rgb(232,63,21)" rx="2" ry="2" />
<text  x="1043.47" y="943.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (12 samples, 0.02%)</title><rect x="1029.9" y="1109" width="0.3" height="15.0" fill="rgb(250,153,12)" rx="2" ry="2" />
<text  x="1032.95" y="1119.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (20 samples, 0.04%)</title><rect x="1059.3" y="1317" width="0.4" height="15.0" fill="rgb(224,148,7)" rx="2" ry="2" />
<text  x="1062.29" y="1327.5" ></text>
</g>
<g >
<title>core::mem::align_of (9 samples, 0.02%)</title><rect x="762.3" y="1141" width="0.2" height="15.0" fill="rgb(248,47,54)" rx="2" ry="2" />
<text  x="765.29" y="1151.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (12 samples, 0.02%)</title><rect x="1015.2" y="1333" width="0.2" height="15.0" fill="rgb(208,56,45)" rx="2" ry="2" />
<text  x="1018.18" y="1343.5" ></text>
</g>
<g >
<title>std::panicking::panicking (37 samples, 0.07%)</title><rect x="456.1" y="1189" width="0.8" height="15.0" fill="rgb(228,171,40)" rx="2" ry="2" />
<text  x="459.10" y="1199.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (20 samples, 0.04%)</title><rect x="1050.4" y="549" width="0.4" height="15.0" fill="rgb(236,1,34)" rx="2" ry="2" />
<text  x="1053.38" y="559.5" ></text>
</g>
<g >
<title>&lt;&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple::Access&lt;R,O&gt; as serde::de::SeqAccess&gt;::next_element_seed (7 samples, 0.01%)</title><rect x="1058.1" y="1061" width="0.2" height="15.0" fill="rgb(217,196,24)" rx="2" ry="2" />
<text  x="1061.10" y="1071.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (12 samples, 0.02%)</title><rect x="997.4" y="997" width="0.2" height="15.0" fill="rgb(209,51,8)" rx="2" ry="2" />
<text  x="1000.35" y="1007.5" ></text>
</g>
<g >
<title>do_futex (8 samples, 0.01%)</title><rect x="982.2" y="1029" width="0.2" height="15.0" fill="rgb(238,121,27)" rx="2" ry="2" />
<text  x="985.25" y="1039.5" ></text>
</g>
<g >
<title>alloc::sync::Weak&lt;T&gt;::upgrade (5 samples, 0.01%)</title><rect x="1057.4" y="1093" width="0.1" height="15.0" fill="rgb(239,11,40)" rx="2" ry="2" />
<text  x="1060.36" y="1103.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::clear_sleep_marker (5 samples, 0.01%)</title><rect x="1091.4" y="885" width="0.1" height="15.0" fill="rgb(249,161,38)" rx="2" ry="2" />
<text  x="1094.44" y="895.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (15 samples, 0.03%)</title><rect x="1034.9" y="1157" width="0.3" height="15.0" fill="rgb(213,214,53)" rx="2" ry="2" />
<text  x="1037.87" y="1167.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (11 samples, 0.02%)</title><rect x="1036.9" y="1445" width="0.2" height="15.0" fill="rgb(220,225,1)" rx="2" ry="2" />
<text  x="1039.91" y="1455.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeTuple&gt;::serialize_element (5 samples, 0.01%)</title><rect x="1022.2" y="1045" width="0.1" height="15.0" fill="rgb(247,37,2)" rx="2" ry="2" />
<text  x="1025.22" y="1055.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (22 samples, 0.04%)</title><rect x="1059.9" y="1349" width="0.5" height="15.0" fill="rgb(246,15,2)" rx="2" ry="2" />
<text  x="1062.89" y="1359.5" ></text>
</g>
<g >
<title>futures::sync::mpsc::Receiver&lt;T&gt;::try_park (9 samples, 0.02%)</title><rect x="996.6" y="1397" width="0.2" height="15.0" fill="rgb(235,5,22)" rx="2" ry="2" />
<text  x="999.63" y="1407.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit (22 samples, 0.04%)</title><rect x="1024.0" y="1365" width="0.5" height="15.0" fill="rgb(208,225,12)" rx="2" ry="2" />
<text  x="1027.01" y="1375.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (12 samples, 0.02%)</title><rect x="1029.9" y="1461" width="0.3" height="15.0" fill="rgb(238,89,9)" rx="2" ry="2" />
<text  x="1032.95" y="1471.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::spawn_thread::_$u7b$$u7b$closure$u7d$$u7d$::ha7200d58e6efae3b (21 samples, 0.04%)</title><rect x="997.2" y="1541" width="0.4" height="15.0" fill="rgb(225,136,30)" rx="2" ry="2" />
<text  x="1000.16" y="1551.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::park_timeout (298 samples, 0.54%)</title><rect x="1122.1" y="1061" width="6.3" height="15.0" fill="rgb(244,38,52)" rx="2" ry="2" />
<text  x="1125.08" y="1071.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (11 samples, 0.02%)</title><rect x="1127.7" y="981" width="0.2" height="15.0" fill="rgb(226,46,51)" rx="2" ry="2" />
<text  x="1130.68" y="991.5" ></text>
</g>
<g >
<title>__libc_send (47 samples, 0.08%)</title><rect x="1050.1" y="853" width="1.0" height="15.0" fill="rgb(216,101,7)" rx="2" ry="2" />
<text  x="1053.06" y="863.5" ></text>
</g>
<g >
<title>serde::de::impls::_$LT$impl$u20$serde..de..Deserialize$u20$for$u20$$u5b$T$u3b$$u20$_$u5d$$GT$::deserialize::h3069135bc3e4e059 (27 samples, 0.05%)</title><rect x="1002.5" y="709" width="0.5" height="15.0" fill="rgb(224,46,34)" rx="2" ry="2" />
<text  x="1005.47" y="719.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (2,482 samples, 4.46%)</title><rect x="1137.0" y="1061" width="52.7" height="15.0" fill="rgb(243,49,53)" rx="2" ry="2" />
<text  x="1140.04" y="1071.5" >tokio..</text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current (5 samples, 0.01%)</title><rect x="192.5" y="1365" width="0.1" height="15.0" fill="rgb(225,39,31)" rx="2" ry="2" />
<text  x="195.48" y="1375.5" ></text>
</g>
<g >
<title>crossbeam_epoch::default::with_handle (15 samples, 0.03%)</title><rect x="1019.5" y="1557" width="0.3" height="15.0" fill="rgb(205,67,9)" rx="2" ry="2" />
<text  x="1022.51" y="1567.5" ></text>
</g>
<g >
<title>tokio_sync::loom::sync::CausalCell&lt;T&gt;::with_mut (16 samples, 0.03%)</title><rect x="182.8" y="1445" width="0.3" height="15.0" fill="rgb(233,191,22)" rx="2" ry="2" />
<text  x="185.81" y="1455.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (18 samples, 0.03%)</title><rect x="1035.4" y="949" width="0.4" height="15.0" fill="rgb(229,189,30)" rx="2" ry="2" />
<text  x="1038.42" y="959.5" ></text>
</g>
<g >
<title>core::option::Option&lt;&amp;T&gt;::cloned (72 samples, 0.13%)</title><rect x="674.6" y="1253" width="1.5" height="15.0" fill="rgb(207,77,53)" rx="2" ry="2" />
<text  x="677.59" y="1263.5" ></text>
</g>
<g >
<title>gen (46,306 samples, 83.27%)</title><rect x="10.0" y="1621" width="982.6" height="15.0" fill="rgb(243,159,28)" rx="2" ry="2" />
<text  x="13.00" y="1631.5" >gen</text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::io::Io as std::io::Read&gt;::read (25 samples, 0.04%)</title><rect x="1111.4" y="901" width="0.6" height="15.0" fill="rgb(251,142,53)" rx="2" ry="2" />
<text  x="1114.45" y="911.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (102 samples, 0.18%)</title><rect x="1038.5" y="965" width="2.1" height="15.0" fill="rgb(213,17,35)" rx="2" ry="2" />
<text  x="1041.48" y="975.5" ></text>
</g>
<g >
<title>chan::select::Select::new (1,836 samples, 3.30%)</title><rect x="204.6" y="1349" width="38.9" height="15.0" fill="rgb(228,55,26)" rx="2" ry="2" />
<text  x="207.58" y="1359.5" >cha..</text>
</g>
<g >
<title>core::num::wrapping::&lt;impl core::ops::arith::Add for core::num::Wrapping&lt;u64&gt;&gt;::add (97 samples, 0.17%)</title><rect x="579.1" y="1093" width="2.1" height="15.0" fill="rgb(217,34,50)" rx="2" ry="2" />
<text  x="582.11" y="1103.5" ></text>
</g>
<g >
<title>noria::controller::SyncControllerHandle&lt;A,E&gt;::run (8 samples, 0.01%)</title><rect x="988.8" y="1301" width="0.2" height="15.0" fill="rgb(249,20,53)" rx="2" ry="2" />
<text  x="991.82" y="1311.5" ></text>
</g>
<g >
<title>tokio_reactor::registration::Inner::poll_ready (12 samples, 0.02%)</title><rect x="1046.2" y="1125" width="0.3" height="15.0" fill="rgb(211,26,18)" rx="2" ry="2" />
<text  x="1049.20" y="1135.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (126 samples, 0.23%)</title><rect x="1038.4" y="997" width="2.7" height="15.0" fill="rgb(222,120,48)" rx="2" ry="2" />
<text  x="1041.41" y="1007.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (19 samples, 0.03%)</title><rect x="1052.6" y="1365" width="0.4" height="15.0" fill="rgb(227,18,21)" rx="2" ry="2" />
<text  x="1055.61" y="1375.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts_mut (74 samples, 0.13%)</title><rect x="965.1" y="1253" width="1.6" height="15.0" fill="rgb(253,116,39)" rx="2" ry="2" />
<text  x="968.12" y="1263.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (23 samples, 0.04%)</title><rect x="863.1" y="1253" width="0.5" height="15.0" fill="rgb(242,103,1)" rx="2" ry="2" />
<text  x="866.15" y="1263.5" ></text>
</g>
<g >
<title>&lt;noria::table::Table as tower_service::Service&lt;noria::data::TableOperation&gt;&gt;::call (33 samples, 0.06%)</title><rect x="10.4" y="1557" width="0.7" height="15.0" fill="rgb(206,137,19)" rx="2" ry="2" />
<text  x="13.40" y="1567.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (22 samples, 0.04%)</title><rect x="893.2" y="1269" width="0.5" height="15.0" fill="rgb(224,70,51)" rx="2" ry="2" />
<text  x="896.19" y="1279.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (45 samples, 0.08%)</title><rect x="881.5" y="1205" width="1.0" height="15.0" fill="rgb(240,50,45)" rx="2" ry="2" />
<text  x="884.50" y="1215.5" ></text>
</g>
<g >
<title>core::ptr::read (404 samples, 0.73%)</title><rect x="781.4" y="1189" width="8.6" height="15.0" fill="rgb(210,170,11)" rx="2" ry="2" />
<text  x="784.41" y="1199.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (15 samples, 0.03%)</title><rect x="1034.9" y="1285" width="0.3" height="15.0" fill="rgb(209,85,5)" rx="2" ry="2" />
<text  x="1037.87" y="1295.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNotInner&lt;T&gt;&gt;::serialize (6 samples, 0.01%)</title><rect x="1057.9" y="1109" width="0.1" height="15.0" fill="rgb(231,228,11)" rx="2" ry="2" />
<text  x="1060.89" y="1119.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.01%)</title><rect x="1021.0" y="1365" width="0.1" height="15.0" fill="rgb(223,69,31)" rx="2" ry="2" />
<text  x="1024.01" y="1375.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (12 samples, 0.02%)</title><rect x="1029.9" y="1205" width="0.3" height="15.0" fill="rgb(211,123,12)" rx="2" ry="2" />
<text  x="1032.95" y="1215.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (10 samples, 0.02%)</title><rect x="1051.4" y="1429" width="0.2" height="15.0" fill="rgb(210,175,26)" rx="2" ry="2" />
<text  x="1054.38" y="1439.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (53 samples, 0.10%)</title><rect x="477.7" y="1237" width="1.1" height="15.0" fill="rgb(242,200,2)" rx="2" ry="2" />
<text  x="480.68" y="1247.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default::_$u7b$$u7b$closure$u7d$$u7d$::ha80fbdab9b554b03 (12 samples, 0.02%)</title><rect x="995.3" y="1301" width="0.3" height="15.0" fill="rgb(250,94,21)" rx="2" ry="2" />
<text  x="998.32" y="1311.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (66 samples, 0.12%)</title><rect x="358.3" y="1253" width="1.4" height="15.0" fill="rgb(253,83,30)" rx="2" ry="2" />
<text  x="361.31" y="1263.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (49 samples, 0.09%)</title><rect x="1041.7" y="805" width="1.0" height="15.0" fill="rgb(239,61,21)" rx="2" ry="2" />
<text  x="1044.70" y="815.5" ></text>
</g>
<g >
<title>tsd_reentrancy_level_get (82 samples, 0.15%)</title><rect x="67.9" y="1509" width="1.8" height="15.0" fill="rgb(212,36,14)" rx="2" ry="2" />
<text  x="70.93" y="1519.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_ptr (6 samples, 0.01%)</title><rect x="1088.0" y="917" width="0.1" height="15.0" fill="rgb(206,2,39)" rx="2" ry="2" />
<text  x="1091.00" y="927.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (8 samples, 0.01%)</title><rect x="983.8" y="1125" width="0.1" height="15.0" fill="rgb(213,19,23)" rx="2" ry="2" />
<text  x="986.75" y="1135.5" ></text>
</g>
<g >
<title>byteorder::io::ReadBytesExt::read_u8 (12 samples, 0.02%)</title><rect x="1002.7" y="565" width="0.3" height="15.0" fill="rgb(244,223,7)" rx="2" ry="2" />
<text  x="1005.74" y="575.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (20 samples, 0.04%)</title><rect x="1038.0" y="1189" width="0.4" height="15.0" fill="rgb(220,101,11)" rx="2" ry="2" />
<text  x="1040.99" y="1199.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::as_leaf_mut (14 samples, 0.03%)</title><rect x="964.8" y="1253" width="0.3" height="15.0" fill="rgb(214,210,40)" rx="2" ry="2" />
<text  x="967.78" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (6 samples, 0.01%)</title><rect x="1026.7" y="773" width="0.1" height="15.0" fill="rgb(205,161,46)" rx="2" ry="2" />
<text  x="1029.72" y="783.5" ></text>
</g>
<g >
<title>std::panicking::try (6 samples, 0.01%)</title><rect x="1033.7" y="1221" width="0.1" height="15.0" fill="rgb(252,151,35)" rx="2" ry="2" />
<text  x="1036.68" y="1231.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (9 samples, 0.02%)</title><rect x="1025.4" y="821" width="0.2" height="15.0" fill="rgb(247,120,53)" rx="2" ry="2" />
<text  x="1028.43" y="831.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::new_edge (26 samples, 0.05%)</title><rect x="665.5" y="1189" width="0.6" height="15.0" fill="rgb(217,227,51)" rx="2" ry="2" />
<text  x="668.51" y="1199.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (6 samples, 0.01%)</title><rect x="1030.2" y="1397" width="0.1" height="15.0" fill="rgb(228,97,50)" rx="2" ry="2" />
<text  x="1033.20" y="1407.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Write&gt;::write (11 samples, 0.02%)</title><rect x="983.3" y="1189" width="0.2" height="15.0" fill="rgb(225,185,40)" rx="2" ry="2" />
<text  x="986.27" y="1199.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (106 samples, 0.19%)</title><rect x="839.0" y="1125" width="2.2" height="15.0" fill="rgb(250,99,33)" rx="2" ry="2" />
<text  x="841.98" y="1135.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (11 samples, 0.02%)</title><rect x="1035.9" y="1173" width="0.2" height="15.0" fill="rgb(232,129,32)" rx="2" ry="2" />
<text  x="1038.89" y="1183.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::de::Deserialize for noria::Tagged&lt;T&gt;&gt;::deserialize (24 samples, 0.04%)</title><rect x="1046.6" y="1189" width="0.5" height="15.0" fill="rgb(244,58,36)" rx="2" ry="2" />
<text  x="1049.60" y="1199.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (54 samples, 0.10%)</title><rect x="435.4" y="1269" width="1.1" height="15.0" fill="rgb(226,33,30)" rx="2" ry="2" />
<text  x="438.35" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::current (15 samples, 0.03%)</title><rect x="1058.7" y="1237" width="0.3" height="15.0" fill="rgb(208,106,7)" rx="2" ry="2" />
<text  x="1061.72" y="1247.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::as_mut_ptr (5 samples, 0.01%)</title><rect x="954.3" y="1269" width="0.1" height="15.0" fill="rgb(216,170,9)" rx="2" ry="2" />
<text  x="957.30" y="1279.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (20 samples, 0.04%)</title><rect x="1029.0" y="1157" width="0.4" height="15.0" fill="rgb(250,167,16)" rx="2" ry="2" />
<text  x="1031.97" y="1167.5" ></text>
</g>
<g >
<title>bytes::bytes::BytesMut::reserve (6 samples, 0.01%)</title><rect x="1038.1" y="1045" width="0.1" height="15.0" fill="rgb(219,166,47)" rx="2" ry="2" />
<text  x="1041.12" y="1055.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (7 samples, 0.01%)</title><rect x="1034.2" y="1333" width="0.1" height="15.0" fill="rgb(224,104,16)" rx="2" ry="2" />
<text  x="1037.19" y="1343.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (33 samples, 0.06%)</title><rect x="1030.5" y="1349" width="0.7" height="15.0" fill="rgb(228,14,14)" rx="2" ry="2" />
<text  x="1033.48" y="1359.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.01%)</title><rect x="1024.8" y="1317" width="0.1" height="15.0" fill="rgb(208,91,5)" rx="2" ry="2" />
<text  x="1027.79" y="1327.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (20 samples, 0.04%)</title><rect x="1038.0" y="1301" width="0.4" height="15.0" fill="rgb(250,114,11)" rx="2" ry="2" />
<text  x="1040.99" y="1311.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (24 samples, 0.04%)</title><rect x="1046.6" y="901" width="0.5" height="15.0" fill="rgb(217,218,6)" rx="2" ry="2" />
<text  x="1049.60" y="911.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (7 samples, 0.01%)</title><rect x="1019.3" y="1525" width="0.1" height="15.0" fill="rgb(239,228,49)" rx="2" ry="2" />
<text  x="1022.27" y="1535.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit::_$u7b$$u7b$closure$u7d$$u7d$::h83d517d17b1a75b2 (6 samples, 0.01%)</title><rect x="996.3" y="1173" width="0.1" height="15.0" fill="rgb(209,130,20)" rx="2" ry="2" />
<text  x="999.27" y="1183.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for core::result::Result&lt;T,E&gt;&gt;::deserialize (9 samples, 0.02%)</title><rect x="1055.2" y="949" width="0.2" height="15.0" fill="rgb(246,217,0)" rx="2" ry="2" />
<text  x="1058.18" y="959.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (49 samples, 0.09%)</title><rect x="764.0" y="1125" width="1.0" height="15.0" fill="rgb(239,194,24)" rx="2" ry="2" />
<text  x="766.97" y="1135.5" ></text>
</g>
<g >
<title>core::iter::adapters::map_fold::_$u7b$$u7b$closure$u7d$$u7d$::h27d50f3cab06629c (42 samples, 0.08%)</title><rect x="977.9" y="1269" width="0.9" height="15.0" fill="rgb(234,72,12)" rx="2" ry="2" />
<text  x="980.94" y="1279.5" ></text>
</g>
<g >
<title>log::max_level (9 samples, 0.02%)</title><rect x="1070.1" y="1061" width="0.2" height="15.0" fill="rgb(239,45,17)" rx="2" ry="2" />
<text  x="1073.13" y="1071.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::saturating_mul (5 samples, 0.01%)</title><rect x="1081.3" y="965" width="0.1" height="15.0" fill="rgb(209,0,53)" rx="2" ry="2" />
<text  x="1084.34" y="975.5" ></text>
</g>
<g >
<title>alloc::sync::data_offset_align (5 samples, 0.01%)</title><rect x="1107.4" y="821" width="0.1" height="15.0" fill="rgb(234,111,10)" rx="2" ry="2" />
<text  x="1110.40" y="831.5" ></text>
</g>
<g >
<title>crossbeam_epoch::epoch::AtomicEpoch::load (5 samples, 0.01%)</title><rect x="1187.8" y="869" width="0.1" height="15.0" fill="rgb(254,92,46)" rx="2" ry="2" />
<text  x="1190.84" y="879.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (56 samples, 0.10%)</title><rect x="184.8" y="1397" width="1.2" height="15.0" fill="rgb(247,119,50)" rx="2" ry="2" />
<text  x="187.80" y="1407.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Selector::select (395 samples, 0.71%)</title><rect x="1097.7" y="917" width="8.4" height="15.0" fill="rgb(219,28,14)" rx="2" ry="2" />
<text  x="1100.70" y="927.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (12 samples, 0.02%)</title><rect x="1036.7" y="1285" width="0.2" height="15.0" fill="rgb(220,88,40)" rx="2" ry="2" />
<text  x="1039.65" y="1295.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (32 samples, 0.06%)</title><rect x="296.8" y="1285" width="0.7" height="15.0" fill="rgb(237,186,11)" rx="2" ry="2" />
<text  x="299.77" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (12 samples, 0.02%)</title><rect x="1036.7" y="1173" width="0.2" height="15.0" fill="rgb(242,147,26)" rx="2" ry="2" />
<text  x="1039.65" y="1183.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNotInner&lt;T&gt;&gt;::serialize (6 samples, 0.01%)</title><rect x="1022.2" y="1317" width="0.1" height="15.0" fill="rgb(245,73,20)" rx="2" ry="2" />
<text  x="1025.20" y="1327.5" ></text>
</g>
<g >
<title>noria::view::View::multi_lookup::_$u7b$$u7b$closure$u7d$$u7d$::hfd25b5db07962f7a (56 samples, 0.10%)</title><rect x="184.8" y="1525" width="1.2" height="15.0" fill="rgb(215,196,52)" rx="2" ry="2" />
<text  x="187.80" y="1535.5" ></text>
</g>
<g >
<title>gen::do_every (36,502 samples, 65.64%)</title><rect x="202.5" y="1365" width="774.6" height="15.0" fill="rgb(249,220,32)" rx="2" ry="2" />
<text  x="205.54" y="1375.5" >gen::do_every</text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.01%)</title><rect x="192.5" y="1493" width="0.1" height="15.0" fill="rgb(236,214,41)" rx="2" ry="2" />
<text  x="195.48" y="1503.5" ></text>
</g>
<g >
<title>core::mem::drop (19 samples, 0.03%)</title><rect x="595.2" y="1093" width="0.4" height="15.0" fill="rgb(252,49,5)" rx="2" ry="2" />
<text  x="598.24" y="1103.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::he0977de3e88b310a (8 samples, 0.01%)</title><rect x="193.9" y="1189" width="0.2" height="15.0" fill="rgb(238,10,35)" rx="2" ry="2" />
<text  x="196.90" y="1199.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::millis (12 samples, 0.02%)</title><rect x="1078.2" y="853" width="0.3" height="15.0" fill="rgb(223,52,16)" rx="2" ry="2" />
<text  x="1081.22" y="863.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (11 samples, 0.02%)</title><rect x="1059.1" y="1477" width="0.2" height="15.0" fill="rgb(210,26,10)" rx="2" ry="2" />
<text  x="1062.06" y="1487.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.02%)</title><rect x="998.8" y="869" width="0.3" height="15.0" fill="rgb(242,162,21)" rx="2" ry="2" />
<text  x="1001.84" y="879.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (93 samples, 0.17%)</title><rect x="483.6" y="1173" width="2.0" height="15.0" fill="rgb(212,30,52)" rx="2" ry="2" />
<text  x="486.65" y="1183.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Write&gt;::write (10 samples, 0.02%)</title><rect x="984.2" y="1141" width="0.2" height="15.0" fill="rgb(236,0,26)" rx="2" ry="2" />
<text  x="987.22" y="1151.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (21 samples, 0.04%)</title><rect x="1070.9" y="1045" width="0.5" height="15.0" fill="rgb(214,79,31)" rx="2" ry="2" />
<text  x="1073.94" y="1055.5" ></text>
</g>
<g >
<title>_$LT$futures..stream..futures_unordered..FuturesUnordered$LT$T$GT$$u20$as$u20$futures..stream..Stream$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::hf66ee163353ed4b7 (25 samples, 0.04%)</title><rect x="1008.4" y="1445" width="0.5" height="15.0" fill="rgb(216,113,7)" rx="2" ry="2" />
<text  x="1011.39" y="1455.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (34 samples, 0.06%)</title><rect x="1051.9" y="1253" width="0.7" height="15.0" fill="rgb(207,177,23)" rx="2" ry="2" />
<text  x="1054.89" y="1263.5" ></text>
</g>
<g >
<title>sys_sendto (53 samples, 0.10%)</title><rect x="1038.6" y="741" width="1.1" height="15.0" fill="rgb(218,32,20)" rx="2" ry="2" />
<text  x="1041.58" y="751.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::now (5 samples, 0.01%)</title><rect x="1106.1" y="885" width="0.1" height="15.0" fill="rgb(236,76,49)" rx="2" ry="2" />
<text  x="1109.08" y="895.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (25 samples, 0.04%)</title><rect x="1026.9" y="917" width="0.5" height="15.0" fill="rgb(208,169,38)" rx="2" ry="2" />
<text  x="1029.91" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (135 samples, 0.24%)</title><rect x="1063.0" y="1061" width="2.9" height="15.0" fill="rgb(216,176,11)" rx="2" ry="2" />
<text  x="1066.01" y="1071.5" ></text>
</g>
<g >
<title>&lt;jemallocator::Jemalloc as core::alloc::GlobalAlloc&gt;::dealloc (64 samples, 0.12%)</title><rect x="848.7" y="1093" width="1.4" height="15.0" fill="rgb(207,116,5)" rx="2" ry="2" />
<text  x="851.74" y="1103.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h7d931fa06560a1c2 (11 samples, 0.02%)</title><rect x="992.9" y="1525" width="0.3" height="15.0" fill="rgb(219,225,28)" rx="2" ry="2" />
<text  x="995.92" y="1535.5" ></text>
</g>
<g >
<title>noria::controller::SyncControllerHandle&lt;A,E&gt;::export_data (22 samples, 0.04%)</title><rect x="985.9" y="1317" width="0.5" height="15.0" fill="rgb(205,225,16)" rx="2" ry="2" />
<text  x="988.90" y="1327.5" ></text>
</g>
<g >
<title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="1041.3" y="965" width="0.1" height="15.0" fill="rgb(227,65,39)" rx="2" ry="2" />
<text  x="1044.32" y="975.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (6 samples, 0.01%)</title><rect x="1022.2" y="1141" width="0.1" height="15.0" fill="rgb(250,187,31)" rx="2" ry="2" />
<text  x="1025.20" y="1151.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::get (7 samples, 0.01%)</title><rect x="389.5" y="1237" width="0.2" height="15.0" fill="rgb(241,99,39)" rx="2" ry="2" />
<text  x="392.52" y="1247.5" ></text>
</g>
<g >
<title>rand_chacha::guts::refill_wide::impl_avx2 (32 samples, 0.06%)</title><rect x="191.1" y="1589" width="0.7" height="15.0" fill="rgb(230,159,53)" rx="2" ry="2" />
<text  x="194.15" y="1599.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (293 samples, 0.53%)</title><rect x="623.6" y="1189" width="6.3" height="15.0" fill="rgb(254,36,34)" rx="2" ry="2" />
<text  x="626.65" y="1199.5" ></text>
</g>
<g >
<title>bincode::internal::serialize_into (52 samples, 0.09%)</title><rect x="997.6" y="1493" width="1.1" height="15.0" fill="rgb(240,27,22)" rx="2" ry="2" />
<text  x="1000.61" y="1503.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (52 samples, 0.09%)</title><rect x="869.7" y="1285" width="1.1" height="15.0" fill="rgb(222,4,31)" rx="2" ry="2" />
<text  x="872.72" y="1295.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.01%)</title><rect x="1022.5" y="949" width="0.1" height="15.0" fill="rgb(247,122,25)" rx="2" ry="2" />
<text  x="1025.48" y="959.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="1034.0" y="1269" width="0.2" height="15.0" fill="rgb(253,58,40)" rx="2" ry="2" />
<text  x="1036.96" y="1279.5" ></text>
</g>
<g >
<title>ip_queue_xmit (7 samples, 0.01%)</title><rect x="1131.4" y="245" width="0.1" height="15.0" fill="rgb(226,164,7)" rx="2" ry="2" />
<text  x="1134.35" y="255.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (22 samples, 0.04%)</title><rect x="1059.9" y="1269" width="0.5" height="15.0" fill="rgb(241,25,9)" rx="2" ry="2" />
<text  x="1062.89" y="1279.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Sender&lt;T&gt;::send (34 samples, 0.06%)</title><rect x="1043.6" y="949" width="0.7" height="15.0" fill="rgb(251,134,38)" rx="2" ry="2" />
<text  x="1046.59" y="959.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (26 samples, 0.05%)</title><rect x="1029.4" y="1173" width="0.5" height="15.0" fill="rgb(233,178,32)" rx="2" ry="2" />
<text  x="1032.39" y="1183.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (34 samples, 0.06%)</title><rect x="556.9" y="1253" width="0.7" height="15.0" fill="rgb(218,12,2)" rx="2" ry="2" />
<text  x="559.89" y="1263.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (63 samples, 0.11%)</title><rect x="645.9" y="1173" width="1.3" height="15.0" fill="rgb(217,187,51)" rx="2" ry="2" />
<text  x="648.89" y="1183.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::future::ResponseFuture&lt;T&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="1041.1" y="869" width="0.2" height="15.0" fill="rgb(206,160,3)" rx="2" ry="2" />
<text  x="1044.09" y="879.5" ></text>
</g>
<g >
<title>tcp_write_xmit (42 samples, 0.08%)</title><rect x="1041.8" y="613" width="0.9" height="15.0" fill="rgb(219,70,40)" rx="2" ry="2" />
<text  x="1044.77" y="623.5" ></text>
</g>
<g >
<title>indexmap::map::OrderMapCore&lt;K,V&gt;::find_existing_entry (5 samples, 0.01%)</title><rect x="1132.4" y="677" width="0.1" height="15.0" fill="rgb(237,96,30)" rx="2" ry="2" />
<text  x="1135.37" y="687.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.03%)</title><rect x="198.6" y="1269" width="0.3" height="15.0" fill="rgb(210,6,21)" rx="2" ry="2" />
<text  x="201.55" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (14 samples, 0.03%)</title><rect x="180.4" y="1461" width="0.3" height="15.0" fill="rgb(207,35,48)" rx="2" ry="2" />
<text  x="183.43" y="1471.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (21 samples, 0.04%)</title><rect x="670.5" y="1141" width="0.5" height="15.0" fill="rgb(235,124,16)" rx="2" ry="2" />
<text  x="673.52" y="1151.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (49 samples, 0.09%)</title><rect x="183.8" y="1557" width="1.0" height="15.0" fill="rgb(220,163,35)" rx="2" ry="2" />
<text  x="186.76" y="1567.5" ></text>
</g>
<g >
<title>arena_salloc (7 samples, 0.01%)</title><rect x="1018.2" y="1557" width="0.2" height="15.0" fill="rgb(216,49,40)" rx="2" ry="2" />
<text  x="1021.23" y="1567.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="1059.1" y="1221" width="0.2" height="15.0" fill="rgb(241,149,47)" rx="2" ry="2" />
<text  x="1062.06" y="1231.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (7 samples, 0.01%)</title><rect x="1049.4" y="1173" width="0.1" height="15.0" fill="rgb(241,221,47)" rx="2" ry="2" />
<text  x="1052.38" y="1183.5" ></text>
</g>
<g >
<title>futures::task_impl::std::_$LT$impl$u20$futures..task_impl..Spawn$LT$F$GT$$GT$::wait_future::_$u7b$$u7b$closure$u7d$$u7d$::h6e5f9dba7457629d (8 samples, 0.01%)</title><rect x="194.5" y="1461" width="0.2" height="15.0" fill="rgb(243,21,45)" rx="2" ry="2" />
<text  x="197.54" y="1471.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit::_$u7b$$u7b$closure$u7d$$u7d$::h83d517d17b1a75b2 (16 samples, 0.03%)</title><rect x="180.1" y="1269" width="0.3" height="15.0" fill="rgb(210,56,22)" rx="2" ry="2" />
<text  x="183.07" y="1279.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::get_default::_$u7b$$u7b$closure$u7d$$u7d$::hf93adb842fd7e7c1 (9 samples, 0.02%)</title><rect x="1030.8" y="725" width="0.2" height="15.0" fill="rgb(223,127,24)" rx="2" ry="2" />
<text  x="1033.80" y="735.5" ></text>
</g>
<g >
<title>core::mem::take (9 samples, 0.02%)</title><rect x="1043.4" y="933" width="0.2" height="15.0" fill="rgb(223,21,4)" rx="2" ry="2" />
<text  x="1046.40" y="943.5" ></text>
</g>
<g >
<title>vfs_writev (12 samples, 0.02%)</title><rect x="1131.3" y="437" width="0.2" height="15.0" fill="rgb(206,106,17)" rx="2" ry="2" />
<text  x="1134.29" y="447.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (37 samples, 0.07%)</title><rect x="1014.2" y="1397" width="0.7" height="15.0" fill="rgb(232,65,39)" rx="2" ry="2" />
<text  x="1017.16" y="1407.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::Reactor as tokio_executor::park::Park&gt;::park_timeout (303 samples, 0.54%)</title><rect x="1074.0" y="997" width="6.5" height="15.0" fill="rgb(212,15,43)" rx="2" ry="2" />
<text  x="1077.04" y="1007.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (7 samples, 0.01%)</title><rect x="1154.6" y="933" width="0.1" height="15.0" fill="rgb(231,192,50)" rx="2" ry="2" />
<text  x="1157.59" y="943.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc (131 samples, 0.24%)</title><rect x="861.2" y="1301" width="2.8" height="15.0" fill="rgb(247,205,32)" rx="2" ry="2" />
<text  x="864.24" y="1311.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::Handle as tokio_executor::park::Unpark&gt;::unpark (47 samples, 0.08%)</title><rect x="184.9" y="1173" width="1.0" height="15.0" fill="rgb(246,181,47)" rx="2" ry="2" />
<text  x="187.91" y="1183.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (7 samples, 0.01%)</title><rect x="1056.9" y="1397" width="0.2" height="15.0" fill="rgb(245,23,54)" rx="2" ry="2" />
<text  x="1059.94" y="1407.5" ></text>
</g>
<g >
<title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (10 samples, 0.02%)</title><rect x="882.5" y="1189" width="0.2" height="15.0" fill="rgb(242,91,5)" rx="2" ry="2" />
<text  x="885.45" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (7 samples, 0.01%)</title><rect x="1056.7" y="1413" width="0.2" height="15.0" fill="rgb(254,182,13)" rx="2" ry="2" />
<text  x="1059.70" y="1423.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (48 samples, 0.09%)</title><rect x="1014.2" y="1509" width="1.0" height="15.0" fill="rgb(226,116,8)" rx="2" ry="2" />
<text  x="1017.16" y="1519.5" ></text>
</g>
<g >
<title>&lt;T as fake::private::FakeBase&lt;U&gt;&gt;::_fake (114 samples, 0.20%)</title><rect x="197.3" y="1333" width="2.4" height="15.0" fill="rgb(210,68,1)" rx="2" ry="2" />
<text  x="200.26" y="1343.5" ></text>
</g>
<g >
<title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (135 samples, 0.24%)</title><rect x="219.6" y="1285" width="2.9" height="15.0" fill="rgb(245,64,43)" rx="2" ry="2" />
<text  x="222.60" y="1295.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="979.0" y="1333" width="0.1" height="15.0" fill="rgb(229,202,43)" rx="2" ry="2" />
<text  x="982.04" y="1343.5" ></text>
</g>
<g >
<title>noria::table::SyncTable::insert::_$u7b$$u7b$closure$u7d$$u7d$::hda9decbe4187d0e3 (50 samples, 0.09%)</title><rect x="192.8" y="1397" width="1.1" height="15.0" fill="rgb(206,123,53)" rx="2" ry="2" />
<text  x="195.84" y="1407.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (54 samples, 0.10%)</title><rect x="224.5" y="1269" width="1.2" height="15.0" fill="rgb(247,78,47)" rx="2" ry="2" />
<text  x="227.52" y="1279.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::unpark (27 samples, 0.05%)</title><rect x="1028.4" y="1045" width="0.6" height="15.0" fill="rgb(223,54,47)" rx="2" ry="2" />
<text  x="1031.40" y="1055.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (216 samples, 0.39%)</title><rect x="1044.8" y="1445" width="4.6" height="15.0" fill="rgb(207,92,2)" rx="2" ry="2" />
<text  x="1047.80" y="1455.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::into_slices (968 samples, 1.74%)</title><rect x="755.0" y="1173" width="20.5" height="15.0" fill="rgb(223,60,49)" rx="2" ry="2" />
<text  x="757.95" y="1183.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.01%)</title><rect x="997.8" y="869" width="0.1" height="15.0" fill="rgb(252,33,21)" rx="2" ry="2" />
<text  x="1000.78" y="879.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (105 samples, 0.19%)</title><rect x="1038.4" y="981" width="2.2" height="15.0" fill="rgb(224,18,54)" rx="2" ry="2" />
<text  x="1041.41" y="991.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Write&gt;::write (5 samples, 0.01%)</title><rect x="983.6" y="1125" width="0.2" height="15.0" fill="rgb(215,50,15)" rx="2" ry="2" />
<text  x="986.65" y="1135.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (47 samples, 0.08%)</title><rect x="673.6" y="1237" width="1.0" height="15.0" fill="rgb(228,138,30)" rx="2" ry="2" />
<text  x="676.60" y="1247.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.01%)</title><rect x="1030.2" y="1541" width="0.1" height="15.0" fill="rgb(222,196,36)" rx="2" ry="2" />
<text  x="1033.20" y="1551.5" ></text>
</g>
<g >
<title>futures::task_impl::spawn (6 samples, 0.01%)</title><rect x="979.8" y="1285" width="0.1" height="15.0" fill="rgb(251,39,42)" rx="2" ry="2" />
<text  x="982.81" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (7 samples, 0.01%)</title><rect x="1056.7" y="1429" width="0.2" height="15.0" fill="rgb(254,131,40)" rx="2" ry="2" />
<text  x="1059.70" y="1439.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (8 samples, 0.01%)</title><rect x="831.2" y="1077" width="0.2" height="15.0" fill="rgb(254,194,1)" rx="2" ry="2" />
<text  x="834.23" y="1087.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (252 samples, 0.45%)</title><rect x="1130.1" y="1013" width="5.3" height="15.0" fill="rgb(217,147,50)" rx="2" ry="2" />
<text  x="1133.08" y="1023.5" ></text>
</g>
<g >
<title>&lt;tower_balance::p2c::service::Balance&lt;D,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (20 samples, 0.04%)</title><rect x="1040.6" y="949" width="0.5" height="15.0" fill="rgb(223,190,52)" rx="2" ry="2" />
<text  x="1043.64" y="959.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (33 samples, 0.06%)</title><rect x="1035.2" y="1301" width="0.7" height="15.0" fill="rgb(216,158,54)" rx="2" ry="2" />
<text  x="1038.19" y="1311.5" ></text>
</g>
<g >
<title>chan::Receiver&lt;T&gt;::id (277 samples, 0.50%)</title><rect x="407.3" y="1333" width="5.8" height="15.0" fill="rgb(222,55,46)" rx="2" ry="2" />
<text  x="410.26" y="1343.5" ></text>
</g>
<g >
<title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (47 samples, 0.08%)</title><rect x="522.6" y="1253" width="1.0" height="15.0" fill="rgb(247,88,36)" rx="2" ry="2" />
<text  x="525.56" y="1263.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (36,502 samples, 65.64%)</title><rect x="202.5" y="1461" width="774.6" height="15.0" fill="rgb(233,176,40)" rx="2" ry="2" />
<text  x="205.54" y="1471.5" >__rust_maybe_catch_panic</text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (6,082 samples, 10.94%)</title><rect x="1060.7" y="1125" width="129.0" height="15.0" fill="rgb(225,143,43)" rx="2" ry="2" />
<text  x="1063.65" y="1135.5" >tokio_timer::tim..</text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (5 samples, 0.01%)</title><rect x="1023.8" y="1253" width="0.1" height="15.0" fill="rgb(215,178,32)" rx="2" ry="2" />
<text  x="1026.81" y="1263.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (19 samples, 0.03%)</title><rect x="628.8" y="1109" width="0.4" height="15.0" fill="rgb(246,102,20)" rx="2" ry="2" />
<text  x="631.76" y="1119.5" ></text>
</g>
<g >
<title>do_futex (17 samples, 0.03%)</title><rect x="202.1" y="1221" width="0.4" height="15.0" fill="rgb(214,52,24)" rx="2" ry="2" />
<text  x="205.12" y="1231.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (7 samples, 0.01%)</title><rect x="1019.3" y="1557" width="0.1" height="15.0" fill="rgb(247,121,43)" rx="2" ry="2" />
<text  x="1022.27" y="1567.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (13 samples, 0.02%)</title><rect x="652.6" y="1125" width="0.3" height="15.0" fill="rgb(228,228,45)" rx="2" ry="2" />
<text  x="655.63" y="1135.5" ></text>
</g>
<g >
<title>tokio_timer::timer::atomic_stack::AtomicStack::take (9 samples, 0.02%)</title><rect x="1083.6" y="981" width="0.2" height="15.0" fill="rgb(242,145,6)" rx="2" ry="2" />
<text  x="1086.57" y="991.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::TableOperation&gt;::serialize (13 samples, 0.02%)</title><rect x="1027.7" y="1061" width="0.3" height="15.0" fill="rgb(224,46,16)" rx="2" ry="2" />
<text  x="1030.74" y="1071.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="192.5" y="1141" width="0.1" height="15.0" fill="rgb(206,156,1)" rx="2" ry="2" />
<text  x="195.48" y="1151.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (7 samples, 0.01%)</title><rect x="620.9" y="1157" width="0.2" height="15.0" fill="rgb(237,56,7)" rx="2" ry="2" />
<text  x="623.91" y="1167.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current (27 samples, 0.05%)</title><rect x="1028.4" y="1157" width="0.6" height="15.0" fill="rgb(254,29,14)" rx="2" ry="2" />
<text  x="1031.40" y="1167.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (7 samples, 0.01%)</title><rect x="983.5" y="1157" width="0.1" height="15.0" fill="rgb(229,182,6)" rx="2" ry="2" />
<text  x="986.50" y="1167.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (15 samples, 0.03%)</title><rect x="1034.9" y="1413" width="0.3" height="15.0" fill="rgb(234,214,37)" rx="2" ry="2" />
<text  x="1037.87" y="1423.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.03%)</title><rect x="1025.4" y="1269" width="0.4" height="15.0" fill="rgb(229,53,13)" rx="2" ry="2" />
<text  x="1028.43" y="1279.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (22 samples, 0.04%)</title><rect x="1059.9" y="1253" width="0.5" height="15.0" fill="rgb(254,131,41)" rx="2" ry="2" />
<text  x="1062.89" y="1263.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (6 samples, 0.01%)</title><rect x="729.8" y="1189" width="0.2" height="15.0" fill="rgb(236,167,26)" rx="2" ry="2" />
<text  x="732.85" y="1199.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::DataType&gt;::serialize (6 samples, 0.01%)</title><rect x="1022.2" y="1093" width="0.1" height="15.0" fill="rgb(213,116,25)" rx="2" ry="2" />
<text  x="1025.20" y="1103.5" ></text>
</g>
<g >
<title>futures::future::Future::wait (8 samples, 0.01%)</title><rect x="193.9" y="1381" width="0.2" height="15.0" fill="rgb(212,168,28)" rx="2" ry="2" />
<text  x="196.90" y="1391.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (8 samples, 0.01%)</title><rect x="193.9" y="1253" width="0.2" height="15.0" fill="rgb(229,41,24)" rx="2" ry="2" />
<text  x="196.90" y="1263.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (12 samples, 0.02%)</title><rect x="1015.2" y="1349" width="0.2" height="15.0" fill="rgb(254,44,40)" rx="2" ry="2" />
<text  x="1018.18" y="1359.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (2,017 samples, 3.63%)</title><rect x="341.2" y="1317" width="42.8" height="15.0" fill="rgb(218,74,12)" rx="2" ry="2" />
<text  x="344.23" y="1327.5" >allo..</text>
</g>
<g >
<title>&lt;T as core::convert::TryFrom&lt;U&gt;&gt;::try_from (11 samples, 0.02%)</title><rect x="578.1" y="1045" width="0.2" height="15.0" fill="rgb(248,169,31)" rx="2" ry="2" />
<text  x="581.09" y="1055.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (21 samples, 0.04%)</title><rect x="229.1" y="1269" width="0.5" height="15.0" fill="rgb(254,71,47)" rx="2" ry="2" />
<text  x="232.13" y="1279.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::InternalAsyncWriter&lt;S,T,D&gt; as std::io::Read&gt;::read (5 samples, 0.01%)</title><rect x="1052.3" y="1157" width="0.1" height="15.0" fill="rgb(212,210,40)" rx="2" ry="2" />
<text  x="1055.33" y="1167.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::into_raw_non_null (444 samples, 0.80%)</title><rect x="394.0" y="1317" width="9.4" height="15.0" fill="rgb(253,152,15)" rx="2" ry="2" />
<text  x="396.98" y="1327.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (110 samples, 0.20%)</title><rect x="600.2" y="1061" width="2.4" height="15.0" fill="rgb(244,137,54)" rx="2" ry="2" />
<text  x="603.24" y="1071.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (8 samples, 0.01%)</title><rect x="1033.2" y="1205" width="0.2" height="15.0" fill="rgb(232,173,43)" rx="2" ry="2" />
<text  x="1036.24" y="1215.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (171 samples, 0.31%)</title><rect x="1150.4" y="789" width="3.6" height="15.0" fill="rgb(221,218,10)" rx="2" ry="2" />
<text  x="1153.38" y="799.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (17 samples, 0.03%)</title><rect x="1134.1" y="661" width="0.3" height="15.0" fill="rgb(245,210,26)" rx="2" ry="2" />
<text  x="1137.09" y="671.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (21 samples, 0.04%)</title><rect x="198.9" y="1189" width="0.5" height="15.0" fill="rgb(236,228,46)" rx="2" ry="2" />
<text  x="201.93" y="1199.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (7 samples, 0.01%)</title><rect x="790.0" y="1221" width="0.2" height="15.0" fill="rgb(254,134,19)" rx="2" ry="2" />
<text  x="793.03" y="1231.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_ptr (24 samples, 0.04%)</title><rect x="1098.3" y="869" width="0.5" height="15.0" fill="rgb(241,56,41)" rx="2" ry="2" />
<text  x="1101.33" y="879.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (12 samples, 0.02%)</title><rect x="1036.7" y="1301" width="0.2" height="15.0" fill="rgb(210,114,13)" rx="2" ry="2" />
<text  x="1039.65" y="1311.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (13 samples, 0.02%)</title><rect x="723.9" y="1269" width="0.3" height="15.0" fill="rgb(221,82,21)" rx="2" ry="2" />
<text  x="726.93" y="1279.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::stream::Stream&gt;::poll (52 samples, 0.09%)</title><rect x="1054.3" y="1285" width="1.1" height="15.0" fill="rgb(227,17,49)" rx="2" ry="2" />
<text  x="1057.28" y="1295.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (13 samples, 0.02%)</title><rect x="1033.4" y="1269" width="0.3" height="15.0" fill="rgb(228,16,42)" rx="2" ry="2" />
<text  x="1036.41" y="1279.5" ></text>
</g>
<g >
<title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (9 samples, 0.02%)</title><rect x="199.5" y="1173" width="0.2" height="15.0" fill="rgb(247,172,4)" rx="2" ry="2" />
<text  x="202.46" y="1183.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (60 samples, 0.11%)</title><rect x="998.7" y="1365" width="1.3" height="15.0" fill="rgb(220,29,49)" rx="2" ry="2" />
<text  x="1001.71" y="1375.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (40 samples, 0.07%)</title><rect x="250.3" y="1269" width="0.8" height="15.0" fill="rgb(253,115,51)" rx="2" ry="2" />
<text  x="253.28" y="1279.5" ></text>
</g>
<g >
<title>&lt;tokio_tcp::stream::TcpStream as tokio_io::async_read::AsyncRead&gt;::read_buf (5 samples, 0.01%)</title><rect x="1031.0" y="645" width="0.2" height="15.0" fill="rgb(248,47,1)" rx="2" ry="2" />
<text  x="1034.05" y="655.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 0.02%)</title><rect x="1027.7" y="1237" width="0.3" height="15.0" fill="rgb(206,217,11)" rx="2" ry="2" />
<text  x="1030.74" y="1247.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (104 samples, 0.19%)</title><rect x="1150.4" y="693" width="2.2" height="15.0" fill="rgb(227,183,37)" rx="2" ry="2" />
<text  x="1153.43" y="703.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_and (8 samples, 0.01%)</title><rect x="1075.3" y="917" width="0.2" height="15.0" fill="rgb(227,23,25)" rx="2" ry="2" />
<text  x="1078.31" y="927.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (19 samples, 0.03%)</title><rect x="1071.0" y="1029" width="0.4" height="15.0" fill="rgb(225,223,2)" rx="2" ry="2" />
<text  x="1073.98" y="1039.5" ></text>
</g>
<g >
<title>&lt;jemallocator::Jemalloc as core::alloc::GlobalAlloc&gt;::dealloc (85 samples, 0.15%)</title><rect x="890.5" y="1253" width="1.8" height="15.0" fill="rgb(228,147,39)" rx="2" ry="2" />
<text  x="893.45" y="1263.5" ></text>
</g>
<g >
<title>noria::controller::SyncControllerHandle&lt;A,E&gt;::run (5 samples, 0.01%)</title><rect x="989.4" y="1301" width="0.1" height="15.0" fill="rgb(219,26,20)" rx="2" ry="2" />
<text  x="992.40" y="1311.5" ></text>
</g>
<g >
<title>schedule (108 samples, 0.19%)</title><rect x="1063.5" y="1013" width="2.3" height="15.0" fill="rgb(213,147,12)" rx="2" ry="2" />
<text  x="1066.51" y="1023.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (6,084 samples, 10.94%)</title><rect x="1060.6" y="1445" width="129.1" height="15.0" fill="rgb(250,202,10)" rx="2" ry="2" />
<text  x="1063.61" y="1455.5" >std::panicking::..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (42 samples, 0.08%)</title><rect x="659.5" y="1269" width="0.9" height="15.0" fill="rgb(218,109,49)" rx="2" ry="2" />
<text  x="662.51" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.02%)</title><rect x="982.2" y="1077" width="0.2" height="15.0" fill="rgb(232,150,23)" rx="2" ry="2" />
<text  x="985.20" y="1087.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (8 samples, 0.01%)</title><rect x="1037.8" y="1301" width="0.2" height="15.0" fill="rgb(253,98,21)" rx="2" ry="2" />
<text  x="1040.82" y="1311.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (48 samples, 0.09%)</title><rect x="1014.2" y="1493" width="1.0" height="15.0" fill="rgb(221,1,18)" rx="2" ry="2" />
<text  x="1017.16" y="1503.5" ></text>
</g>
<g >
<title>&lt;hyper::client::pool::Checkout&lt;T&gt; as futures::future::Future&gt;::poll (13 samples, 0.02%)</title><rect x="995.7" y="1557" width="0.3" height="15.0" fill="rgb(229,49,10)" rx="2" ry="2" />
<text  x="998.68" y="1567.5" ></text>
</g>
<g >
<title>tower_buffer::worker::Worker&lt;T,Request&gt;::poll_next_msg (10 samples, 0.02%)</title><rect x="1015.0" y="1381" width="0.2" height="15.0" fill="rgb(244,170,24)" rx="2" ry="2" />
<text  x="1017.97" y="1391.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (64 samples, 0.12%)</title><rect x="1050.0" y="1093" width="1.4" height="15.0" fill="rgb(223,134,13)" rx="2" ry="2" />
<text  x="1053.02" y="1103.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNotInner&lt;T&gt;&gt;::serialize (19 samples, 0.03%)</title><rect x="1045.8" y="1157" width="0.4" height="15.0" fill="rgb(217,181,36)" rx="2" ry="2" />
<text  x="1048.80" y="1167.5" ></text>
</g>
<g >
<title>mio::poll::RegistrationInner::set_readiness (17 samples, 0.03%)</title><rect x="1106.2" y="949" width="0.3" height="15.0" fill="rgb(220,177,14)" rx="2" ry="2" />
<text  x="1109.19" y="959.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (6 samples, 0.01%)</title><rect x="669.8" y="1141" width="0.1" height="15.0" fill="rgb(253,161,11)" rx="2" ry="2" />
<text  x="672.80" y="1151.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::swap (156 samples, 0.28%)</title><rect x="563.5" y="1285" width="3.3" height="15.0" fill="rgb(220,94,17)" rx="2" ry="2" />
<text  x="566.54" y="1295.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_enum (24 samples, 0.04%)</title><rect x="1046.6" y="1061" width="0.5" height="15.0" fill="rgb(218,204,27)" rx="2" ry="2" />
<text  x="1049.60" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (265 samples, 0.48%)</title><rect x="597.1" y="1157" width="5.6" height="15.0" fill="rgb(235,75,10)" rx="2" ry="2" />
<text  x="600.10" y="1167.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::as_mut_ptr (24 samples, 0.04%)</title><rect x="787.8" y="1173" width="0.5" height="15.0" fill="rgb(220,83,44)" rx="2" ry="2" />
<text  x="790.78" y="1183.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (16 samples, 0.03%)</title><rect x="923.9" y="1285" width="0.4" height="15.0" fill="rgb(236,213,46)" rx="2" ry="2" />
<text  x="926.92" y="1295.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="978.7" y="1221" width="0.1" height="15.0" fill="rgb(240,174,46)" rx="2" ry="2" />
<text  x="981.70" y="1231.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_bytes (5 samples, 0.01%)</title><rect x="1047.3" y="1205" width="0.2" height="15.0" fill="rgb(211,3,51)" rx="2" ry="2" />
<text  x="1050.35" y="1215.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (20 samples, 0.04%)</title><rect x="1029.0" y="1125" width="0.4" height="15.0" fill="rgb(219,110,35)" rx="2" ry="2" />
<text  x="1031.97" y="1135.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8&gt;&gt;::write_all (10 samples, 0.02%)</title><rect x="988.2" y="1125" width="0.2" height="15.0" fill="rgb(236,88,32)" rx="2" ry="2" />
<text  x="991.23" y="1135.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::write (26 samples, 0.05%)</title><rect x="1028.4" y="853" width="0.6" height="15.0" fill="rgb(228,123,14)" rx="2" ry="2" />
<text  x="1031.42" y="863.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::remove (44 samples, 0.08%)</title><rect x="1009.8" y="1525" width="1.0" height="15.0" fill="rgb(252,185,49)" rx="2" ry="2" />
<text  x="1012.83" y="1535.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.02%)</title><rect x="1045.9" y="949" width="0.3" height="15.0" fill="rgb(225,200,10)" rx="2" ry="2" />
<text  x="1048.90" y="959.5" ></text>
</g>
<g >
<title>&lt;usize as rand::distributions::range::SampleRange&gt;::construct_range (118 samples, 0.21%)</title><rect x="603.5" y="1253" width="2.5" height="15.0" fill="rgb(236,61,2)" rx="2" ry="2" />
<text  x="606.49" y="1263.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.17 (44 samples, 0.08%)</title><rect x="1104.1" y="821" width="1.0" height="15.0" fill="rgb(209,136,31)" rx="2" ry="2" />
<text  x="1107.13" y="831.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (12 samples, 0.02%)</title><rect x="1029.9" y="1237" width="0.3" height="15.0" fill="rgb(250,222,14)" rx="2" ry="2" />
<text  x="1032.95" y="1247.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (8 samples, 0.01%)</title><rect x="1037.8" y="1333" width="0.2" height="15.0" fill="rgb(234,117,41)" rx="2" ry="2" />
<text  x="1040.82" y="1343.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (6 samples, 0.01%)</title><rect x="1010.3" y="1445" width="0.1" height="15.0" fill="rgb(249,74,48)" rx="2" ry="2" />
<text  x="1013.28" y="1455.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (7 samples, 0.01%)</title><rect x="1034.2" y="1509" width="0.1" height="15.0" fill="rgb(212,193,54)" rx="2" ry="2" />
<text  x="1037.19" y="1519.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (8 samples, 0.01%)</title><rect x="1037.8" y="1413" width="0.2" height="15.0" fill="rgb(231,148,28)" rx="2" ry="2" />
<text  x="1040.82" y="1423.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (6 samples, 0.01%)</title><rect x="194.7" y="1237" width="0.1" height="15.0" fill="rgb(250,137,48)" rx="2" ry="2" />
<text  x="197.71" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::signal_work (9 samples, 0.02%)</title><rect x="1047.6" y="1093" width="0.1" height="15.0" fill="rgb(248,202,9)" rx="2" ry="2" />
<text  x="1050.56" y="1103.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Shared&lt;T&gt;::as_ref (13 samples, 0.02%)</title><rect x="1187.3" y="853" width="0.3" height="15.0" fill="rgb(218,118,18)" rx="2" ry="2" />
<text  x="1190.35" y="863.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (21 samples, 0.04%)</title><rect x="1134.5" y="645" width="0.4" height="15.0" fill="rgb(207,25,36)" rx="2" ry="2" />
<text  x="1137.47" y="655.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::h21cd600e9f97af32 (17 samples, 0.03%)</title><rect x="1025.4" y="1317" width="0.4" height="15.0" fill="rgb(237,5,39)" rx="2" ry="2" />
<text  x="1028.43" y="1327.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::reserve_one (12 samples, 0.02%)</title><rect x="1021.5" y="1461" width="0.3" height="15.0" fill="rgb(249,127,5)" rx="2" ry="2" />
<text  x="1024.50" y="1471.5" ></text>
</g>
<g >
<title>sys_write (25 samples, 0.04%)</title><rect x="185.3" y="917" width="0.5" height="15.0" fill="rgb(254,127,30)" rx="2" ry="2" />
<text  x="188.27" y="927.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::last_leaf_edge (121 samples, 0.22%)</title><rect x="426.9" y="1285" width="2.6" height="15.0" fill="rgb(214,40,15)" rx="2" ry="2" />
<text  x="429.91" y="1295.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::position (6 samples, 0.01%)</title><rect x="1043.3" y="949" width="0.1" height="15.0" fill="rgb(240,3,53)" rx="2" ry="2" />
<text  x="1046.27" y="959.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNotInner&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1044.5" y="1269" width="0.1" height="15.0" fill="rgb(232,197,23)" rx="2" ry="2" />
<text  x="1047.48" y="1279.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Sender&lt;T&gt;::send (6 samples, 0.01%)</title><rect x="1026.7" y="885" width="0.1" height="15.0" fill="rgb(206,101,15)" rx="2" ry="2" />
<text  x="1029.72" y="895.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (84 samples, 0.15%)</title><rect x="610.8" y="1253" width="1.8" height="15.0" fill="rgb(247,114,44)" rx="2" ry="2" />
<text  x="613.81" y="1263.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (47 samples, 0.08%)</title><rect x="577.9" y="1077" width="1.0" height="15.0" fill="rgb(226,139,51)" rx="2" ry="2" />
<text  x="580.86" y="1087.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (61 samples, 0.11%)</title><rect x="658.2" y="1237" width="1.3" height="15.0" fill="rgb(221,6,15)" rx="2" ry="2" />
<text  x="661.21" y="1247.5" ></text>
</g>
<g >
<title>std::panicking::try (7 samples, 0.01%)</title><rect x="1056.9" y="1493" width="0.2" height="15.0" fill="rgb(224,87,44)" rx="2" ry="2" />
<text  x="1059.94" y="1503.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (13 samples, 0.02%)</title><rect x="194.1" y="1541" width="0.2" height="15.0" fill="rgb(252,6,27)" rx="2" ry="2" />
<text  x="197.07" y="1551.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (15 samples, 0.03%)</title><rect x="194.7" y="1397" width="0.3" height="15.0" fill="rgb(229,222,27)" rx="2" ry="2" />
<text  x="197.71" y="1407.5" ></text>
</g>
<g >
<title>jemallocator::layout_to_flags (15 samples, 0.03%)</title><rect x="213.1" y="1253" width="0.3" height="15.0" fill="rgb(218,35,39)" rx="2" ry="2" />
<text  x="216.13" y="1263.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (15 samples, 0.03%)</title><rect x="1034.9" y="1381" width="0.3" height="15.0" fill="rgb(211,144,8)" rx="2" ry="2" />
<text  x="1037.87" y="1391.5" ></text>
</g>
<g >
<title>try_to_wake_up (15 samples, 0.03%)</title><rect x="202.2" y="1173" width="0.3" height="15.0" fill="rgb(209,207,1)" rx="2" ry="2" />
<text  x="205.16" y="1183.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (46 samples, 0.08%)</title><rect x="1029.0" y="1221" width="0.9" height="15.0" fill="rgb(209,183,35)" rx="2" ry="2" />
<text  x="1031.97" y="1231.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="992.8" y="1525" width="0.1" height="15.0" fill="rgb(249,107,30)" rx="2" ry="2" />
<text  x="995.81" y="1535.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (16 samples, 0.03%)</title><rect x="401.4" y="1269" width="0.4" height="15.0" fill="rgb(227,93,50)" rx="2" ry="2" />
<text  x="404.44" y="1279.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (7 samples, 0.01%)</title><rect x="1019.3" y="1573" width="0.1" height="15.0" fill="rgb(206,212,39)" rx="2" ry="2" />
<text  x="1022.27" y="1583.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (17 samples, 0.03%)</title><rect x="1044.4" y="1541" width="0.4" height="15.0" fill="rgb(218,6,9)" rx="2" ry="2" />
<text  x="1047.44" y="1551.5" ></text>
</g>
<g >
<title>arena_sdalloc (12 samples, 0.02%)</title><rect x="990.5" y="1557" width="0.3" height="15.0" fill="rgb(229,73,22)" rx="2" ry="2" />
<text  x="993.54" y="1567.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (6 samples, 0.01%)</title><rect x="1026.7" y="789" width="0.1" height="15.0" fill="rgb(244,137,35)" rx="2" ry="2" />
<text  x="1029.72" y="799.5" ></text>
</g>
<g >
<title>tokio_sync::loom::sync::CausalCell&lt;T&gt;::with_mut (5 samples, 0.01%)</title><rect x="1003.6" y="1493" width="0.1" height="15.0" fill="rgb(230,28,17)" rx="2" ry="2" />
<text  x="1006.64" y="1503.5" ></text>
</g>
<g >
<title>tsd_get (28 samples, 0.05%)</title><rect x="86.5" y="1525" width="0.6" height="15.0" fill="rgb(214,8,16)" rx="2" ry="2" />
<text  x="89.52" y="1535.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (10 samples, 0.02%)</title><rect x="1051.4" y="1365" width="0.2" height="15.0" fill="rgb(247,210,18)" rx="2" ry="2" />
<text  x="1054.38" y="1375.5" ></text>
</g>
<g >
<title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (12 samples, 0.02%)</title><rect x="301.9" y="1269" width="0.2" height="15.0" fill="rgb(249,11,34)" rx="2" ry="2" />
<text  x="304.89" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (22 samples, 0.04%)</title><rect x="1059.9" y="1285" width="0.5" height="15.0" fill="rgb(234,148,38)" rx="2" ry="2" />
<text  x="1062.89" y="1295.5" ></text>
</g>
<g >
<title>gen::do_every::_$u7b$$u7b$closure$u7d$$u7d$::h9d2523559727b32f (189 samples, 0.34%)</title><rect x="985.8" y="1333" width="4.0" height="15.0" fill="rgb(206,55,9)" rx="2" ry="2" />
<text  x="988.81" y="1343.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (14 samples, 0.03%)</title><rect x="1032.5" y="1077" width="0.3" height="15.0" fill="rgb(228,222,42)" rx="2" ry="2" />
<text  x="1035.47" y="1087.5" ></text>
</g>
<g >
<title>std::rt::lang_start_internal (8 samples, 0.01%)</title><rect x="990.9" y="1541" width="0.2" height="15.0" fill="rgb(231,145,53)" rx="2" ry="2" />
<text  x="993.92" y="1551.5" ></text>
</g>
<g >
<title>core::mem::drop (2,845 samples, 5.12%)</title><rect x="792.5" y="1173" width="60.3" height="15.0" fill="rgb(211,86,44)" rx="2" ry="2" />
<text  x="795.47" y="1183.5" >core::..</text>
</g>
<g >
<title>indexmap::map::hash_elem_using (11 samples, 0.02%)</title><rect x="1010.2" y="1461" width="0.2" height="15.0" fill="rgb(253,102,13)" rx="2" ry="2" />
<text  x="1013.17" y="1471.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (10 samples, 0.02%)</title><rect x="999.6" y="933" width="0.2" height="15.0" fill="rgb(235,117,39)" rx="2" ry="2" />
<text  x="1002.60" y="943.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::Thread::new::thread_start (17 samples, 0.03%)</title><rect x="1025.4" y="1573" width="0.4" height="15.0" fill="rgb(220,202,51)" rx="2" ry="2" />
<text  x="1028.43" y="1583.5" ></text>
</g>
<g >
<title>log::max_level (10 samples, 0.02%)</title><rect x="1089.0" y="965" width="0.2" height="15.0" fill="rgb(225,147,5)" rx="2" ry="2" />
<text  x="1091.98" y="975.5" ></text>
</g>
<g >
<title>std::panicking::update_panic_count::PANIC_COUNT::__getit (19 samples, 0.03%)</title><rect x="456.5" y="1125" width="0.4" height="15.0" fill="rgb(206,198,0)" rx="2" ry="2" />
<text  x="459.47" y="1135.5" ></text>
</g>
<g >
<title>core::mem::swap (5 samples, 0.01%)</title><rect x="1006.4" y="1429" width="0.1" height="15.0" fill="rgb(223,165,42)" rx="2" ry="2" />
<text  x="1009.41" y="1439.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (11 samples, 0.02%)</title><rect x="1053.4" y="1109" width="0.3" height="15.0" fill="rgb(222,224,14)" rx="2" ry="2" />
<text  x="1056.44" y="1119.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::get (9 samples, 0.02%)</title><rect x="849.4" y="1061" width="0.1" height="15.0" fill="rgb(230,152,20)" rx="2" ry="2" />
<text  x="852.35" y="1071.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Selector::select (75 samples, 0.13%)</title><rect x="1112.0" y="917" width="1.6" height="15.0" fill="rgb(228,11,26)" rx="2" ry="2" />
<text  x="1114.98" y="927.5" ></text>
</g>
<g >
<title>std::panicking::try (12 samples, 0.02%)</title><rect x="997.4" y="1141" width="0.2" height="15.0" fill="rgb(220,5,23)" rx="2" ry="2" />
<text  x="1000.35" y="1151.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (23 samples, 0.04%)</title><rect x="1111.5" y="869" width="0.5" height="15.0" fill="rgb(233,2,43)" rx="2" ry="2" />
<text  x="1114.49" y="879.5" ></text>
</g>
<g >
<title>mio::sys::unix::awakener::pipe::Awakener::wakeup (22 samples, 0.04%)</title><rect x="1024.0" y="1093" width="0.5" height="15.0" fill="rgb(221,210,44)" rx="2" ry="2" />
<text  x="1027.01" y="1103.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::wakeup (30 samples, 0.05%)</title><rect x="185.2" y="1061" width="0.6" height="15.0" fill="rgb(228,55,49)" rx="2" ry="2" />
<text  x="188.18" y="1071.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (17 samples, 0.03%)</title><rect x="1036.1" y="1349" width="0.4" height="15.0" fill="rgb(213,15,52)" rx="2" ry="2" />
<text  x="1039.12" y="1359.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (5 samples, 0.01%)</title><rect x="557.7" y="1237" width="0.1" height="15.0" fill="rgb(253,69,3)" rx="2" ry="2" />
<text  x="560.72" y="1247.5" ></text>
</g>
<g >
<title>std::sys::unix::condvar::Condvar::wait (18 samples, 0.03%)</title><rect x="192.1" y="1237" width="0.4" height="15.0" fill="rgb(216,37,34)" rx="2" ry="2" />
<text  x="195.10" y="1247.5" ></text>
</g>
<g >
<title>futures::future::Future::wait (5 samples, 0.01%)</title><rect x="192.5" y="1397" width="0.1" height="15.0" fill="rgb(214,215,25)" rx="2" ry="2" />
<text  x="195.48" y="1407.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (22 samples, 0.04%)</title><rect x="1059.9" y="1237" width="0.5" height="15.0" fill="rgb(212,64,4)" rx="2" ry="2" />
<text  x="1062.89" y="1247.5" ></text>
</g>
<g >
<title>&lt;tokio_tcp::stream::TcpStream as std::io::Write&gt;::write (21 samples, 0.04%)</title><rect x="1057.1" y="1205" width="0.5" height="15.0" fill="rgb(212,1,16)" rx="2" ry="2" />
<text  x="1060.15" y="1215.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (13 samples, 0.02%)</title><rect x="1026.6" y="1077" width="0.3" height="15.0" fill="rgb(220,25,25)" rx="2" ry="2" />
<text  x="1029.64" y="1087.5" ></text>
</g>
<g >
<title>new_sync_write (16 samples, 0.03%)</title><rect x="185.3" y="869" width="0.4" height="15.0" fill="rgb(230,224,33)" rx="2" ry="2" />
<text  x="188.33" y="879.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.01%)</title><rect x="996.3" y="1205" width="0.1" height="15.0" fill="rgb(224,181,7)" rx="2" ry="2" />
<text  x="999.27" y="1215.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (17 samples, 0.03%)</title><rect x="1025.4" y="1173" width="0.4" height="15.0" fill="rgb(227,7,37)" rx="2" ry="2" />
<text  x="1028.43" y="1183.5" ></text>
</g>
<g >
<title>mio::poll::SetReadiness::set_readiness (5 samples, 0.01%)</title><rect x="996.3" y="1077" width="0.1" height="15.0" fill="rgb(250,149,6)" rx="2" ry="2" />
<text  x="999.27" y="1087.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::get (7 samples, 0.01%)</title><rect x="1066.5" y="1061" width="0.1" height="15.0" fill="rgb(206,95,34)" rx="2" ry="2" />
<text  x="1069.46" y="1071.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (14 samples, 0.03%)</title><rect x="1032.5" y="1157" width="0.3" height="15.0" fill="rgb(208,200,50)" rx="2" ry="2" />
<text  x="1035.47" y="1167.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::get (18 samples, 0.03%)</title><rect x="561.4" y="1253" width="0.4" height="15.0" fill="rgb(241,195,44)" rx="2" ry="2" />
<text  x="564.41" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (33 samples, 0.06%)</title><rect x="10.4" y="1445" width="0.7" height="15.0" fill="rgb(209,126,23)" rx="2" ry="2" />
<text  x="13.40" y="1455.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="1049.7" y="1029" width="0.2" height="15.0" fill="rgb(236,139,32)" rx="2" ry="2" />
<text  x="1052.74" y="1039.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get (16 samples, 0.03%)</title><rect x="1088.5" y="917" width="0.4" height="15.0" fill="rgb(209,142,39)" rx="2" ry="2" />
<text  x="1091.53" y="927.5" ></text>
</g>
<g >
<title>tokio_io::async_write::AsyncWrite::poll_write (52 samples, 0.09%)</title><rect x="1041.6" y="901" width="1.1" height="15.0" fill="rgb(224,191,4)" rx="2" ry="2" />
<text  x="1044.64" y="911.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (6 samples, 0.01%)</title><rect x="1014.2" y="1269" width="0.1" height="15.0" fill="rgb(237,187,35)" rx="2" ry="2" />
<text  x="1017.20" y="1279.5" ></text>
</g>
<g >
<title>sys_sendto (46 samples, 0.08%)</title><rect x="1050.1" y="805" width="1.0" height="15.0" fill="rgb(224,6,4)" rx="2" ry="2" />
<text  x="1053.08" y="815.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (11 samples, 0.02%)</title><rect x="1035.9" y="1189" width="0.2" height="15.0" fill="rgb(230,128,2)" rx="2" ry="2" />
<text  x="1038.89" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::std::BorrowedUnpark::to_owned (12 samples, 0.02%)</title><rect x="1058.8" y="1189" width="0.2" height="15.0" fill="rgb(211,220,43)" rx="2" ry="2" />
<text  x="1061.78" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (67 samples, 0.12%)</title><rect x="187.0" y="1573" width="1.5" height="15.0" fill="rgb(226,83,43)" rx="2" ry="2" />
<text  x="190.05" y="1583.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (15 samples, 0.03%)</title><rect x="1034.9" y="1173" width="0.3" height="15.0" fill="rgb(222,203,46)" rx="2" ry="2" />
<text  x="1037.87" y="1183.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.02%)</title><rect x="1031.4" y="821" width="0.2" height="15.0" fill="rgb(228,129,24)" rx="2" ry="2" />
<text  x="1034.37" y="831.5" ></text>
</g>
<g >
<title>&lt;chrono::naive::date::NaiveDate as core::fmt::Debug&gt;::fmt (19 samples, 0.03%)</title><rect x="998.1" y="981" width="0.4" height="15.0" fill="rgb(211,144,51)" rx="2" ry="2" />
<text  x="1001.08" y="991.5" ></text>
</g>
<g >
<title>&lt;jemallocator::Jemalloc as core::alloc::GlobalAlloc&gt;::dealloc (186 samples, 0.33%)</title><rect x="911.4" y="1221" width="3.9" height="15.0" fill="rgb(228,101,36)" rx="2" ry="2" />
<text  x="914.40" y="1231.5" ></text>
</g>
<g >
<title>core::mem::drop (5 samples, 0.01%)</title><rect x="1020.4" y="1461" width="0.1" height="15.0" fill="rgb(250,110,26)" rx="2" ry="2" />
<text  x="1023.40" y="1471.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1031.0" y="869" width="0.2" height="15.0" fill="rgb(220,96,13)" rx="2" ry="2" />
<text  x="1034.05" y="879.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (17 samples, 0.03%)</title><rect x="1031.3" y="853" width="0.4" height="15.0" fill="rgb(252,215,40)" rx="2" ry="2" />
<text  x="1034.30" y="863.5" ></text>
</g>
<g >
<title>__sched_text_start (34 samples, 0.06%)</title><rect x="1105.2" y="773" width="0.7" height="15.0" fill="rgb(241,141,28)" rx="2" ry="2" />
<text  x="1108.17" y="783.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (11 samples, 0.02%)</title><rect x="1045.6" y="1157" width="0.2" height="15.0" fill="rgb(209,111,18)" rx="2" ry="2" />
<text  x="1048.56" y="1167.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (17 samples, 0.03%)</title><rect x="728.1" y="1253" width="0.4" height="15.0" fill="rgb(247,155,22)" rx="2" ry="2" />
<text  x="731.11" y="1263.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (36 samples, 0.06%)</title><rect x="1032.5" y="1477" width="0.7" height="15.0" fill="rgb(206,126,43)" rx="2" ry="2" />
<text  x="1035.47" y="1487.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (21 samples, 0.04%)</title><rect x="1033.2" y="1429" width="0.5" height="15.0" fill="rgb(239,58,9)" rx="2" ry="2" />
<text  x="1036.24" y="1439.5" ></text>
</g>
<g >
<title>sys_read (74 samples, 0.13%)</title><rect x="1096.0" y="789" width="1.5" height="15.0" fill="rgb(242,218,49)" rx="2" ry="2" />
<text  x="1098.96" y="799.5" ></text>
</g>
<g >
<title>futures::task_impl::std::&lt;impl futures::task_impl::Spawn&lt;F&gt;&gt;::wait_future (15 samples, 0.03%)</title><rect x="188.6" y="1509" width="0.4" height="15.0" fill="rgb(228,73,9)" rx="2" ry="2" />
<text  x="191.64" y="1519.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::Clock::now (20 samples, 0.04%)</title><rect x="1114.7" y="981" width="0.4" height="15.0" fill="rgb(207,117,29)" rx="2" ry="2" />
<text  x="1117.72" y="991.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (13 samples, 0.02%)</title><rect x="1033.4" y="1109" width="0.3" height="15.0" fill="rgb(238,131,23)" rx="2" ry="2" />
<text  x="1036.41" y="1119.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::poll_complete (8 samples, 0.01%)</title><rect x="1051.9" y="1205" width="0.2" height="15.0" fill="rgb(224,91,19)" rx="2" ry="2" />
<text  x="1054.89" y="1215.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (5 samples, 0.01%)</title><rect x="1021.0" y="1557" width="0.1" height="15.0" fill="rgb(211,87,13)" rx="2" ry="2" />
<text  x="1024.01" y="1567.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (13 samples, 0.02%)</title><rect x="1026.6" y="965" width="0.3" height="15.0" fill="rgb(235,101,47)" rx="2" ry="2" />
<text  x="1029.64" y="975.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::InternalAsyncWriter&lt;S,T,D&gt; as std::io::Read&gt;::read (17 samples, 0.03%)</title><rect x="1031.3" y="981" width="0.4" height="15.0" fill="rgb(216,225,30)" rx="2" ry="2" />
<text  x="1034.30" y="991.5" ></text>
</g>
<g >
<title>__rg_dealloc (292 samples, 0.53%)</title><rect x="910.8" y="1237" width="6.2" height="15.0" fill="rgb(222,34,31)" rx="2" ry="2" />
<text  x="913.76" y="1247.5" ></text>
</g>
<g >
<title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="991.8" y="1525" width="0.1" height="15.0" fill="rgb(250,68,15)" rx="2" ry="2" />
<text  x="994.77" y="1535.5" ></text>
</g>
<g >
<title>[gen] (5 samples, 0.01%)</title><rect x="785.9" y="1157" width="0.1" height="15.0" fill="rgb(246,205,31)" rx="2" ry="2" />
<text  x="788.89" y="1167.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (6 samples, 0.01%)</title><rect x="436.1" y="1237" width="0.1" height="15.0" fill="rgb(214,13,40)" rx="2" ry="2" />
<text  x="439.12" y="1247.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (8 samples, 0.01%)</title><rect x="193.9" y="1141" width="0.2" height="15.0" fill="rgb(219,190,12)" rx="2" ry="2" />
<text  x="196.90" y="1151.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (6 samples, 0.01%)</title><rect x="922.3" y="1285" width="0.2" height="15.0" fill="rgb(231,18,34)" rx="2" ry="2" />
<text  x="925.32" y="1295.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.01%)</title><rect x="1027.4" y="1189" width="0.2" height="15.0" fill="rgb(246,161,27)" rx="2" ry="2" />
<text  x="1030.44" y="1199.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (13 samples, 0.02%)</title><rect x="1054.0" y="1029" width="0.3" height="15.0" fill="rgb(229,66,18)" rx="2" ry="2" />
<text  x="1057.01" y="1039.5" ></text>
</g>
<g >
<title>bincode::config::legacy::Config::serialize_into (41 samples, 0.07%)</title><rect x="1044.9" y="1253" width="0.9" height="15.0" fill="rgb(208,175,49)" rx="2" ry="2" />
<text  x="1047.93" y="1263.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (21 samples, 0.04%)</title><rect x="997.2" y="1301" width="0.4" height="15.0" fill="rgb(214,110,32)" rx="2" ry="2" />
<text  x="1000.16" y="1311.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.01%)</title><rect x="199.5" y="1109" width="0.1" height="15.0" fill="rgb(241,174,12)" rx="2" ry="2" />
<text  x="202.53" y="1119.5" ></text>
</g>
<g >
<title>futex_wake (5 samples, 0.01%)</title><rect x="1134.6" y="501" width="0.1" height="15.0" fill="rgb(214,219,9)" rx="2" ry="2" />
<text  x="1137.60" y="511.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (114 samples, 0.20%)</title><rect x="1150.4" y="741" width="2.4" height="15.0" fill="rgb(212,111,20)" rx="2" ry="2" />
<text  x="1153.43" y="751.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (126 samples, 0.23%)</title><rect x="1038.4" y="1013" width="2.7" height="15.0" fill="rgb(246,165,9)" rx="2" ry="2" />
<text  x="1041.41" y="1023.5" ></text>
</g>
<g >
<title>__libc_write (83 samples, 0.15%)</title><rect x="1144.5" y="789" width="1.8" height="15.0" fill="rgb(223,161,26)" rx="2" ry="2" />
<text  x="1147.51" y="799.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (31 samples, 0.06%)</title><rect x="548.2" y="1189" width="0.6" height="15.0" fill="rgb(231,185,9)" rx="2" ry="2" />
<text  x="551.17" y="1199.5" ></text>
</g>
<g >
<title>noria::table::SyncTable::insert (30 samples, 0.05%)</title><rect x="191.8" y="1445" width="0.7" height="15.0" fill="rgb(217,51,52)" rx="2" ry="2" />
<text  x="194.85" y="1455.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::offset (41 samples, 0.07%)</title><rect x="968.5" y="1221" width="0.9" height="15.0" fill="rgb(205,128,8)" rx="2" ry="2" />
<text  x="971.54" y="1231.5" ></text>
</g>
<g >
<title>tsd_witness_tsdp_get_unsafe (43 samples, 0.08%)</title><rect x="157.5" y="1509" width="0.9" height="15.0" fill="rgb(226,20,35)" rx="2" ry="2" />
<text  x="160.49" y="1519.5" ></text>
</g>
<g >
<title>futures::future::Future::wait (5 samples, 0.01%)</title><rect x="986.3" y="1285" width="0.1" height="15.0" fill="rgb(235,144,9)" rx="2" ry="2" />
<text  x="989.26" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (216 samples, 0.39%)</title><rect x="1044.8" y="1397" width="4.6" height="15.0" fill="rgb(252,82,53)" rx="2" ry="2" />
<text  x="1047.80" y="1407.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (9 samples, 0.02%)</title><rect x="874.8" y="1253" width="0.2" height="15.0" fill="rgb(222,210,30)" rx="2" ry="2" />
<text  x="877.84" y="1263.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::DropNotifyService&lt;Svc&gt; as tower_service::Service&lt;Request&gt;&gt;::call (20 samples, 0.04%)</title><rect x="1040.6" y="933" width="0.5" height="15.0" fill="rgb(217,87,18)" rx="2" ry="2" />
<text  x="1043.64" y="943.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (6 samples, 0.01%)</title><rect x="1030.2" y="1333" width="0.1" height="15.0" fill="rgb(224,76,30)" rx="2" ry="2" />
<text  x="1033.20" y="1343.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (12 samples, 0.02%)</title><rect x="1036.7" y="1093" width="0.2" height="15.0" fill="rgb(243,208,46)" rx="2" ry="2" />
<text  x="1039.65" y="1103.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current (5 samples, 0.01%)</title><rect x="997.0" y="1253" width="0.1" height="15.0" fill="rgb(235,68,41)" rx="2" ry="2" />
<text  x="999.95" y="1263.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (59 samples, 0.11%)</title><rect x="267.7" y="1317" width="1.3" height="15.0" fill="rgb(237,33,5)" rx="2" ry="2" />
<text  x="270.72" y="1327.5" ></text>
</g>
<g >
<title>serde::ser::impls::_$LT$impl$u20$serde..ser..Serialize$u20$for$u20$$u5b$T$u3b$$u20$_$u5d$$GT$::serialize::he70076c4b09e12fc (10 samples, 0.02%)</title><rect x="1045.6" y="997" width="0.2" height="15.0" fill="rgb(247,49,5)" rx="2" ry="2" />
<text  x="1048.58" y="1007.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (213 samples, 0.38%)</title><rect x="878.8" y="1237" width="4.5" height="15.0" fill="rgb(209,208,29)" rx="2" ry="2" />
<text  x="881.83" y="1247.5" ></text>
</g>
<g >
<title>&lt;tower_balance::p2c::service::Balance&lt;D,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::poll_ready (26 samples, 0.05%)</title><rect x="1003.5" y="1573" width="0.6" height="15.0" fill="rgb(208,145,39)" rx="2" ry="2" />
<text  x="1006.53" y="1583.5" ></text>
</g>
<g >
<title>core::mem::replace (228 samples, 0.41%)</title><rect x="813.0" y="1077" width="4.8" height="15.0" fill="rgb(217,60,13)" rx="2" ry="2" />
<text  x="815.96" y="1087.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (49 samples, 0.09%)</title><rect x="1053.2" y="1269" width="1.1" height="15.0" fill="rgb(230,23,16)" rx="2" ry="2" />
<text  x="1056.24" y="1279.5" ></text>
</g>
<g >
<title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (6 samples, 0.01%)</title><rect x="191.5" y="1525" width="0.1" height="15.0" fill="rgb(212,193,9)" rx="2" ry="2" />
<text  x="194.51" y="1535.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (82 samples, 0.15%)</title><rect x="716.6" y="1269" width="1.8" height="15.0" fill="rgb(225,115,1)" rx="2" ry="2" />
<text  x="719.63" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (174 samples, 0.31%)</title><rect x="1053.0" y="1349" width="3.7" height="15.0" fill="rgb(235,51,50)" rx="2" ry="2" />
<text  x="1056.01" y="1359.5" ></text>
</g>
<g >
<title>gen::main::_$u7b$$u7b$closure$u7d$$u7d$::ha3f38d0bb5274a86 (399 samples, 0.72%)</title><rect x="977.3" y="1381" width="8.5" height="15.0" fill="rgb(230,56,13)" rx="2" ry="2" />
<text  x="980.30" y="1391.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfb347edd97d33f3d (33 samples, 0.06%)</title><rect x="1030.5" y="1317" width="0.7" height="15.0" fill="rgb(227,99,5)" rx="2" ry="2" />
<text  x="1033.48" y="1327.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (7 samples, 0.01%)</title><rect x="1030.3" y="1381" width="0.2" height="15.0" fill="rgb(245,208,9)" rx="2" ry="2" />
<text  x="1033.33" y="1391.5" ></text>
</g>
<g >
<title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (19 samples, 0.03%)</title><rect x="997.6" y="1029" width="0.4" height="15.0" fill="rgb(233,141,39)" rx="2" ry="2" />
<text  x="1000.61" y="1039.5" ></text>
</g>
<g >
<title>sz_s2u_lookup (310 samples, 0.56%)</title><rect x="112.5" y="1541" width="6.6" height="15.0" fill="rgb(223,160,45)" rx="2" ry="2" />
<text  x="115.49" y="1551.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.01%)</title><rect x="986.3" y="1237" width="0.1" height="15.0" fill="rgb(209,169,15)" rx="2" ry="2" />
<text  x="989.26" y="1247.5" ></text>
</g>
<g >
<title>&lt;usize as core::iter::range::Step&gt;::add_usize (11 samples, 0.02%)</title><rect x="1120.0" y="965" width="0.2" height="15.0" fill="rgb(210,136,14)" rx="2" ry="2" />
<text  x="1123.00" y="975.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (6 samples, 0.01%)</title><rect x="1030.2" y="1381" width="0.1" height="15.0" fill="rgb(207,215,38)" rx="2" ry="2" />
<text  x="1033.20" y="1391.5" ></text>
</g>
<g >
<title>std::panicking::try (7 samples, 0.01%)</title><rect x="1049.4" y="1333" width="0.1" height="15.0" fill="rgb(250,45,34)" rx="2" ry="2" />
<text  x="1052.38" y="1343.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (7 samples, 0.01%)</title><rect x="194.4" y="1509" width="0.1" height="15.0" fill="rgb(220,219,13)" rx="2" ry="2" />
<text  x="197.39" y="1519.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (14 samples, 0.03%)</title><rect x="998.8" y="901" width="0.3" height="15.0" fill="rgb(210,170,3)" rx="2" ry="2" />
<text  x="1001.84" y="911.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (20 samples, 0.04%)</title><rect x="1038.0" y="1125" width="0.4" height="15.0" fill="rgb(213,84,1)" rx="2" ry="2" />
<text  x="1040.99" y="1135.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (13 samples, 0.02%)</title><rect x="1071.7" y="1029" width="0.3" height="15.0" fill="rgb(224,162,19)" rx="2" ry="2" />
<text  x="1074.68" y="1039.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (7 samples, 0.01%)</title><rect x="1090.2" y="885" width="0.2" height="15.0" fill="rgb(206,214,18)" rx="2" ry="2" />
<text  x="1093.23" y="895.5" ></text>
</g>
<g >
<title>futures::task_impl::with (13 samples, 0.02%)</title><rect x="1012.7" y="1397" width="0.3" height="15.0" fill="rgb(216,102,23)" rx="2" ry="2" />
<text  x="1015.74" y="1407.5" ></text>
</g>
<g >
<title>tokio_timer::timer::Timer&lt;T,N&gt;::process_queue (38 samples, 0.07%)</title><rect x="1083.0" y="997" width="0.8" height="15.0" fill="rgb(229,85,27)" rx="2" ry="2" />
<text  x="1085.95" y="1007.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (8 samples, 0.01%)</title><rect x="983.8" y="1109" width="0.1" height="15.0" fill="rgb(206,37,52)" rx="2" ry="2" />
<text  x="986.75" y="1119.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (17 samples, 0.03%)</title><rect x="1025.4" y="1109" width="0.4" height="15.0" fill="rgb(232,82,17)" rx="2" ry="2" />
<text  x="1028.43" y="1119.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (20 samples, 0.04%)</title><rect x="1059.3" y="1445" width="0.4" height="15.0" fill="rgb(249,84,29)" rx="2" ry="2" />
<text  x="1062.29" y="1455.5" ></text>
</g>
<g >
<title>core::ptr::read (116 samples, 0.21%)</title><rect x="815.1" y="1029" width="2.5" height="15.0" fill="rgb(254,31,18)" rx="2" ry="2" />
<text  x="818.13" y="1039.5" ></text>
</g>
<g >
<title>urandom_read (9 samples, 0.02%)</title><rect x="189.9" y="1413" width="0.2" height="15.0" fill="rgb(212,50,23)" rx="2" ry="2" />
<text  x="192.87" y="1423.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::dequeue_node (26 samples, 0.05%)</title><rect x="1123.5" y="901" width="0.5" height="15.0" fill="rgb(227,43,39)" rx="2" ry="2" />
<text  x="1126.46" y="911.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (13 samples, 0.02%)</title><rect x="277.0" y="1205" width="0.3" height="15.0" fill="rgb(238,69,6)" rx="2" ry="2" />
<text  x="280.04" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (14 samples, 0.03%)</title><rect x="1032.5" y="1093" width="0.3" height="15.0" fill="rgb(248,170,3)" rx="2" ry="2" />
<text  x="1035.47" y="1103.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (15 samples, 0.03%)</title><rect x="202.2" y="1157" width="0.3" height="15.0" fill="rgb(232,160,23)" rx="2" ry="2" />
<text  x="205.16" y="1167.5" ></text>
</g>
<g >
<title>core::fmt::write (57 samples, 0.10%)</title><rect x="998.7" y="997" width="1.2" height="15.0" fill="rgb(235,228,38)" rx="2" ry="2" />
<text  x="1001.71" y="1007.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.02%)</title><rect x="10.7" y="981" width="0.3" height="15.0" fill="rgb(245,23,29)" rx="2" ry="2" />
<text  x="13.70" y="991.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (32 samples, 0.06%)</title><rect x="1141.8" y="965" width="0.7" height="15.0" fill="rgb(232,135,47)" rx="2" ry="2" />
<text  x="1144.81" y="975.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (9 samples, 0.02%)</title><rect x="1026.0" y="1093" width="0.2" height="15.0" fill="rgb(215,111,2)" rx="2" ry="2" />
<text  x="1028.98" y="1103.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (52 samples, 0.09%)</title><rect x="815.8" y="1013" width="1.1" height="15.0" fill="rgb(251,199,51)" rx="2" ry="2" />
<text  x="818.76" y="1023.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNotInner&lt;T&gt;&gt;::serialize (8 samples, 0.01%)</title><rect x="1027.6" y="1189" width="0.1" height="15.0" fill="rgb(220,98,40)" rx="2" ry="2" />
<text  x="1030.57" y="1199.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="1049.6" y="1109" width="0.1" height="15.0" fill="rgb(240,16,37)" rx="2" ry="2" />
<text  x="1052.55" y="1119.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::notify (15 samples, 0.03%)</title><rect x="1028.1" y="1237" width="0.3" height="15.0" fill="rgb(243,123,33)" rx="2" ry="2" />
<text  x="1031.06" y="1247.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (33 samples, 0.06%)</title><rect x="1030.5" y="1189" width="0.7" height="15.0" fill="rgb(251,196,0)" rx="2" ry="2" />
<text  x="1033.48" y="1199.5" ></text>
</g>
<g >
<title>http::request::Builder::uri (5 samples, 0.01%)</title><rect x="1056.1" y="1237" width="0.1" height="15.0" fill="rgb(241,127,34)" rx="2" ry="2" />
<text  x="1059.11" y="1247.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (7 samples, 0.01%)</title><rect x="1132.4" y="709" width="0.1" height="15.0" fill="rgb(228,111,37)" rx="2" ry="2" />
<text  x="1135.37" y="719.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (5 samples, 0.01%)</title><rect x="192.5" y="1269" width="0.1" height="15.0" fill="rgb(216,228,1)" rx="2" ry="2" />
<text  x="195.48" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (116 samples, 0.21%)</title><rect x="1107.2" y="901" width="2.4" height="15.0" fill="rgb(253,189,51)" rx="2" ry="2" />
<text  x="1110.16" y="911.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h3169cfffdbef5731 (22 samples, 0.04%)</title><rect x="189.4" y="1365" width="0.5" height="15.0" fill="rgb(227,213,0)" rx="2" ry="2" />
<text  x="192.38" y="1375.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (9 samples, 0.02%)</title><rect x="1025.8" y="1397" width="0.2" height="15.0" fill="rgb(224,152,34)" rx="2" ry="2" />
<text  x="1028.79" y="1407.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (8 samples, 0.01%)</title><rect x="751.4" y="1141" width="0.2" height="15.0" fill="rgb(236,168,8)" rx="2" ry="2" />
<text  x="754.39" y="1151.5" ></text>
</g>
<g >
<title>core::cmp::min (6 samples, 0.01%)</title><rect x="1124.9" y="869" width="0.1" height="15.0" fill="rgb(242,150,38)" rx="2" ry="2" />
<text  x="1127.86" y="879.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (50 samples, 0.09%)</title><rect x="870.8" y="1285" width="1.1" height="15.0" fill="rgb(246,81,10)" rx="2" ry="2" />
<text  x="873.83" y="1295.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (46 samples, 0.08%)</title><rect x="1029.0" y="1509" width="0.9" height="15.0" fill="rgb(241,175,19)" rx="2" ry="2" />
<text  x="1031.97" y="1519.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::stream::Stream&gt;::poll (144 samples, 0.26%)</title><rect x="1000.0" y="1573" width="3.0" height="15.0" fill="rgb(208,121,16)" rx="2" ry="2" />
<text  x="1002.99" y="1583.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (44 samples, 0.08%)</title><rect x="977.9" y="1301" width="0.9" height="15.0" fill="rgb(236,193,2)" rx="2" ry="2" />
<text  x="980.90" y="1311.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (23 samples, 0.04%)</title><rect x="1014.5" y="1285" width="0.4" height="15.0" fill="rgb(233,45,35)" rx="2" ry="2" />
<text  x="1017.46" y="1295.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (10 samples, 0.02%)</title><rect x="1051.4" y="1397" width="0.2" height="15.0" fill="rgb(207,86,33)" rx="2" ry="2" />
<text  x="1054.38" y="1407.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::list::Rx&lt;T&gt;::pop (16 samples, 0.03%)</title><rect x="1011.2" y="1493" width="0.3" height="15.0" fill="rgb(243,45,35)" rx="2" ry="2" />
<text  x="1014.21" y="1503.5" ></text>
</g>
<g >
<title>std::sys_common::poison::Flag::done (127 samples, 0.23%)</title><rect x="486.0" y="1221" width="2.7" height="15.0" fill="rgb(217,176,20)" rx="2" ry="2" />
<text  x="488.98" y="1231.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (30 samples, 0.05%)</title><rect x="1059.7" y="1557" width="0.7" height="15.0" fill="rgb(217,135,21)" rx="2" ry="2" />
<text  x="1062.72" y="1567.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (64 samples, 0.12%)</title><rect x="1050.0" y="1061" width="1.4" height="15.0" fill="rgb(244,63,11)" rx="2" ry="2" />
<text  x="1053.02" y="1071.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (17 samples, 0.03%)</title><rect x="1023.0" y="1157" width="0.3" height="15.0" fill="rgb(226,106,17)" rx="2" ry="2" />
<text  x="1025.97" y="1167.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (8 samples, 0.01%)</title><rect x="1036.5" y="1205" width="0.2" height="15.0" fill="rgb(223,205,11)" rx="2" ry="2" />
<text  x="1039.48" y="1215.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::pool::state::Lifecycle as core::cmp::PartialEq&gt;::eq (9 samples, 0.02%)</title><rect x="1067.0" y="1045" width="0.2" height="15.0" fill="rgb(247,216,7)" rx="2" ry="2" />
<text  x="1069.97" y="1055.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.01%)</title><rect x="997.0" y="1237" width="0.1" height="15.0" fill="rgb(224,46,1)" rx="2" ry="2" />
<text  x="999.95" y="1247.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (1,349 samples, 2.43%)</title><rect x="752.8" y="1189" width="28.6" height="15.0" fill="rgb(223,136,2)" rx="2" ry="2" />
<text  x="755.79" y="1199.5" >al..</text>
</g>
<g >
<title>core::fmt::Formatter::run (6 samples, 0.01%)</title><rect x="997.8" y="917" width="0.1" height="15.0" fill="rgb(239,189,18)" rx="2" ry="2" />
<text  x="1000.78" y="927.5" ></text>
</g>
<g >
<title>ip_local_deliver (16 samples, 0.03%)</title><rect x="1050.4" y="405" width="0.4" height="15.0" fill="rgb(238,224,8)" rx="2" ry="2" />
<text  x="1053.44" y="415.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (60 samples, 0.11%)</title><rect x="1014.2" y="1573" width="1.2" height="15.0" fill="rgb(239,227,45)" rx="2" ry="2" />
<text  x="1017.16" y="1583.5" ></text>
</g>
<g >
<title>core::mem::forget (36 samples, 0.06%)</title><rect x="280.0" y="1253" width="0.7" height="15.0" fill="rgb(233,219,53)" rx="2" ry="2" />
<text  x="282.97" y="1263.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (13 samples, 0.02%)</title><rect x="1051.6" y="1461" width="0.3" height="15.0" fill="rgb(241,129,38)" rx="2" ry="2" />
<text  x="1054.59" y="1471.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (12 samples, 0.02%)</title><rect x="193.4" y="1157" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="196.35" y="1167.5" ></text>
</g>
<g >
<title>tsdn_tsd (8 samples, 0.01%)</title><rect x="159.6" y="1525" width="0.2" height="15.0" fill="rgb(252,200,5)" rx="2" ry="2" />
<text  x="162.64" y="1535.5" ></text>
</g>
<g >
<title>futures::task_impl::with (5 samples, 0.01%)</title><rect x="1003.4" y="1381" width="0.1" height="15.0" fill="rgb(249,167,21)" rx="2" ry="2" />
<text  x="1006.42" y="1391.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.01%)</title><rect x="841.9" y="1109" width="0.2" height="15.0" fill="rgb(237,42,32)" rx="2" ry="2" />
<text  x="844.95" y="1119.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_and_swap (5 samples, 0.01%)</title><rect x="1091.4" y="869" width="0.1" height="15.0" fill="rgb(209,62,4)" rx="2" ry="2" />
<text  x="1094.44" y="879.5" ></text>
</g>
<g >
<title>std::panicking::try (8 samples, 0.01%)</title><rect x="193.9" y="1557" width="0.2" height="15.0" fill="rgb(221,223,13)" rx="2" ry="2" />
<text  x="196.90" y="1567.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (5 samples, 0.01%)</title><rect x="863.5" y="1237" width="0.1" height="15.0" fill="rgb(243,44,14)" rx="2" ry="2" />
<text  x="866.53" y="1247.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (21 samples, 0.04%)</title><rect x="1042.0" y="389" width="0.5" height="15.0" fill="rgb(250,50,3)" rx="2" ry="2" />
<text  x="1045.02" y="399.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (7 samples, 0.01%)</title><rect x="1030.3" y="1333" width="0.2" height="15.0" fill="rgb(218,47,50)" rx="2" ry="2" />
<text  x="1033.33" y="1343.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.02%)</title><rect x="192.3" y="1157" width="0.2" height="15.0" fill="rgb(207,12,32)" rx="2" ry="2" />
<text  x="195.27" y="1167.5" ></text>
</g>
<g >
<title>arena_slab_alloc (5 samples, 0.01%)</title><rect x="1016.2" y="1413" width="0.1" height="15.0" fill="rgb(220,131,5)" rx="2" ry="2" />
<text  x="1019.20" y="1423.5" ></text>
</g>
<g >
<title>gen::do_every (46 samples, 0.08%)</title><rect x="991.1" y="1605" width="1.0" height="15.0" fill="rgb(249,190,38)" rx="2" ry="2" />
<text  x="994.14" y="1615.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (7 samples, 0.01%)</title><rect x="1108.7" y="373" width="0.1" height="15.0" fill="rgb(248,137,14)" rx="2" ry="2" />
<text  x="1111.69" y="383.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (9 samples, 0.02%)</title><rect x="997.2" y="1221" width="0.2" height="15.0" fill="rgb(214,207,31)" rx="2" ry="2" />
<text  x="1000.16" y="1231.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="1029.9" y="789" width="0.2" height="15.0" fill="rgb(222,79,17)" rx="2" ry="2" />
<text  x="1032.95" y="799.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (5 samples, 0.01%)</title><rect x="1022.3" y="1221" width="0.1" height="15.0" fill="rgb(247,70,14)" rx="2" ry="2" />
<text  x="1025.33" y="1231.5" ></text>
</g>
<g >
<title>std::sync::mpsc::sync::Packet&lt;T&gt;::new (6 samples, 0.01%)</title><rect x="1004.5" y="1461" width="0.2" height="15.0" fill="rgb(221,21,45)" rx="2" ry="2" />
<text  x="1007.53" y="1471.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner$LT$T$GT$::complete::_$u7b$$u7b$closure$u7d$$u7d$::hc97a7b3bae4cba5e (6 samples, 0.01%)</title><rect x="1026.7" y="837" width="0.1" height="15.0" fill="rgb(237,25,18)" rx="2" ry="2" />
<text  x="1029.72" y="847.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (6 samples, 0.01%)</title><rect x="650.0" y="1109" width="0.1" height="15.0" fill="rgb(222,56,35)" rx="2" ry="2" />
<text  x="653.00" y="1119.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (19 samples, 0.03%)</title><rect x="997.6" y="1381" width="0.4" height="15.0" fill="rgb(213,133,36)" rx="2" ry="2" />
<text  x="1000.61" y="1391.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (60 samples, 0.11%)</title><rect x="998.7" y="1237" width="1.3" height="15.0" fill="rgb(236,103,44)" rx="2" ry="2" />
<text  x="1001.71" y="1247.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.02%)</title><rect x="1043.8" y="757" width="0.3" height="15.0" fill="rgb(232,82,16)" rx="2" ry="2" />
<text  x="1046.82" y="767.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::entry (14 samples, 0.03%)</title><rect x="1021.5" y="1509" width="0.3" height="15.0" fill="rgb(223,15,1)" rx="2" ry="2" />
<text  x="1024.46" y="1519.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (9 samples, 0.02%)</title><rect x="1049.5" y="1397" width="0.2" height="15.0" fill="rgb(207,215,5)" rx="2" ry="2" />
<text  x="1052.53" y="1407.5" ></text>
</g>
<g >
<title>hyper::client::Client$LT$C$C$B$GT$::send_request::_$u7b$$u7b$closure$u7d$$u7d$::h293c74bdbc0b0cee (6 samples, 0.01%)</title><rect x="1024.8" y="1589" width="0.1" height="15.0" fill="rgb(210,225,31)" rx="2" ry="2" />
<text  x="1027.79" y="1599.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (8 samples, 0.01%)</title><rect x="194.5" y="1429" width="0.2" height="15.0" fill="rgb(208,70,17)" rx="2" ry="2" />
<text  x="197.54" y="1439.5" ></text>
</g>
<g >
<title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (6 samples, 0.01%)</title><rect x="566.5" y="1237" width="0.1" height="15.0" fill="rgb(236,30,51)" rx="2" ry="2" />
<text  x="569.48" y="1247.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::chan::Tx&lt;T,S&gt;::try_send (5 samples, 0.01%)</title><rect x="989.0" y="1237" width="0.1" height="15.0" fill="rgb(211,94,7)" rx="2" ry="2" />
<text  x="992.02" y="1247.5" ></text>
</g>
<g >
<title>noria::trace_next_op (5 samples, 0.01%)</title><rect x="184.7" y="1477" width="0.1" height="15.0" fill="rgb(223,141,41)" rx="2" ry="2" />
<text  x="187.67" y="1487.5" ></text>
</g>
<g >
<title>core::mem::take (6 samples, 0.01%)</title><rect x="1006.4" y="1461" width="0.1" height="15.0" fill="rgb(206,204,16)" rx="2" ry="2" />
<text  x="1009.39" y="1471.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (64 samples, 0.12%)</title><rect x="1050.0" y="1189" width="1.4" height="15.0" fill="rgb(243,30,40)" rx="2" ry="2" />
<text  x="1053.02" y="1199.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (7 samples, 0.01%)</title><rect x="452.6" y="1173" width="0.1" height="15.0" fill="rgb(246,109,5)" rx="2" ry="2" />
<text  x="455.56" y="1183.5" ></text>
</g>
<g >
<title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (595 samples, 1.07%)</title><rect x="711.6" y="1317" width="12.6" height="15.0" fill="rgb(221,183,9)" rx="2" ry="2" />
<text  x="714.62" y="1327.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit_external (16 samples, 0.03%)</title><rect x="180.1" y="1253" width="0.3" height="15.0" fill="rgb(215,8,31)" rx="2" ry="2" />
<text  x="183.07" y="1263.5" ></text>
</g>
<g >
<title>async_bincode::reader::AsyncBincodeReader&lt;R,T&gt;::fill (7 samples, 0.01%)</title><rect x="1033.0" y="949" width="0.1" height="15.0" fill="rgb(214,85,34)" rx="2" ry="2" />
<text  x="1035.96" y="959.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (16 samples, 0.03%)</title><rect x="982.6" y="1253" width="0.3" height="15.0" fill="rgb(213,148,18)" rx="2" ry="2" />
<text  x="985.56" y="1263.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (12 samples, 0.02%)</title><rect x="1024.1" y="869" width="0.2" height="15.0" fill="rgb(252,180,4)" rx="2" ry="2" />
<text  x="1027.09" y="879.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (5 samples, 0.01%)</title><rect x="1022.3" y="1125" width="0.1" height="15.0" fill="rgb(226,140,37)" rx="2" ry="2" />
<text  x="1025.33" y="1135.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::h1adb2f04ac003c70 (23 samples, 0.04%)</title><rect x="186.6" y="1445" width="0.4" height="15.0" fill="rgb(213,161,48)" rx="2" ry="2" />
<text  x="189.56" y="1455.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::Pool&lt;MS,Target,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (47 samples, 0.08%)</title><rect x="1048.0" y="1333" width="1.0" height="15.0" fill="rgb(253,106,23)" rx="2" ry="2" />
<text  x="1050.96" y="1343.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::h21cd600e9f97af32 (12 samples, 0.02%)</title><rect x="1033.7" y="1557" width="0.2" height="15.0" fill="rgb(243,7,13)" rx="2" ry="2" />
<text  x="1036.68" y="1567.5" ></text>
</g>
<g >
<title>__libc_write (11 samples, 0.02%)</title><rect x="984.0" y="1141" width="0.2" height="15.0" fill="rgb(239,177,27)" rx="2" ry="2" />
<text  x="986.97" y="1151.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (5 samples, 0.01%)</title><rect x="1053.9" y="1109" width="0.1" height="15.0" fill="rgb(227,213,6)" rx="2" ry="2" />
<text  x="1056.90" y="1119.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::_$u7b$$u7b$closure$u7d$$u7d$::hadfb021817bce3f6 (29 samples, 0.05%)</title><rect x="977.9" y="1253" width="0.7" height="15.0" fill="rgb(220,108,22)" rx="2" ry="2" />
<text  x="980.94" y="1263.5" ></text>
</g>
<g >
<title>serde::de::VariantAccess::newtype_variant (24 samples, 0.04%)</title><rect x="1046.6" y="1029" width="0.5" height="15.0" fill="rgb(213,146,3)" rx="2" ry="2" />
<text  x="1049.60" y="1039.5" ></text>
</g>
<g >
<title>crossbeam_deque::Buffer&lt;T&gt;::read (5 samples, 0.01%)</title><rect x="1164.3" y="1013" width="0.2" height="15.0" fill="rgb(242,207,6)" rx="2" ry="2" />
<text  x="1167.35" y="1023.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::TaskUnpark as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="1055.8" y="1221" width="0.1" height="15.0" fill="rgb(221,90,42)" rx="2" ry="2" />
<text  x="1058.79" y="1231.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::notify (15 samples, 0.03%)</title><rect x="1040.7" y="885" width="0.4" height="15.0" fill="rgb(209,26,7)" rx="2" ry="2" />
<text  x="1043.75" y="895.5" ></text>
</g>
<g >
<title>inallocx (437 samples, 0.79%)</title><rect x="109.8" y="1573" width="9.3" height="15.0" fill="rgb(217,173,2)" rx="2" ry="2" />
<text  x="112.79" y="1583.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *const T&gt;::is_null (18 samples, 0.03%)</title><rect x="551.2" y="1221" width="0.4" height="15.0" fill="rgb(233,47,42)" rx="2" ry="2" />
<text  x="554.25" y="1231.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::unwrap (59 samples, 0.11%)</title><rect x="445.8" y="1253" width="1.3" height="15.0" fill="rgb(212,75,28)" rx="2" ry="2" />
<text  x="448.83" y="1263.5" ></text>
</g>
<g >
<title>core::intrinsics::copy (24 samples, 0.04%)</title><rect x="564.7" y="1253" width="0.6" height="15.0" fill="rgb(249,206,48)" rx="2" ry="2" />
<text  x="567.74" y="1263.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.01%)</title><rect x="1005.0" y="1365" width="0.1" height="15.0" fill="rgb(214,9,45)" rx="2" ry="2" />
<text  x="1007.97" y="1375.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (13 samples, 0.02%)</title><rect x="1031.9" y="1045" width="0.3" height="15.0" fill="rgb(253,160,13)" rx="2" ry="2" />
<text  x="1034.88" y="1055.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::stream::Stream&gt;::poll (7 samples, 0.01%)</title><rect x="1051.1" y="997" width="0.2" height="15.0" fill="rgb(215,80,40)" rx="2" ry="2" />
<text  x="1054.14" y="1007.5" ></text>
</g>
<g >
<title>__sched_text_start (9 samples, 0.02%)</title><rect x="1113.3" y="773" width="0.2" height="15.0" fill="rgb(216,63,25)" rx="2" ry="2" />
<text  x="1116.29" y="783.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (18 samples, 0.03%)</title><rect x="589.6" y="1093" width="0.4" height="15.0" fill="rgb(244,222,17)" rx="2" ry="2" />
<text  x="592.57" y="1103.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (25 samples, 0.04%)</title><rect x="1084.3" y="965" width="0.5" height="15.0" fill="rgb(229,100,8)" rx="2" ry="2" />
<text  x="1087.27" y="975.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (5 samples, 0.01%)</title><rect x="980.4" y="1125" width="0.1" height="15.0" fill="rgb(253,0,0)" rx="2" ry="2" />
<text  x="983.36" y="1135.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (68 samples, 0.12%)</title><rect x="770.3" y="1125" width="1.5" height="15.0" fill="rgb(215,134,51)" rx="2" ry="2" />
<text  x="773.31" y="1135.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h1e333f0842b39e4b (5 samples, 0.01%)</title><rect x="1055.7" y="1093" width="0.1" height="15.0" fill="rgb(225,113,6)" rx="2" ry="2" />
<text  x="1058.68" y="1103.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (46 samples, 0.08%)</title><rect x="1029.0" y="1269" width="0.9" height="15.0" fill="rgb(227,6,41)" rx="2" ry="2" />
<text  x="1031.97" y="1279.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (29 samples, 0.05%)</title><rect x="392.8" y="1285" width="0.6" height="15.0" fill="rgb(253,206,37)" rx="2" ry="2" />
<text  x="395.83" y="1295.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (26 samples, 0.05%)</title><rect x="1185.6" y="869" width="0.6" height="15.0" fill="rgb(236,29,29)" rx="2" ry="2" />
<text  x="1188.63" y="879.5" ></text>
</g>
<g >
<title>mio::poll::SetReadiness::set_readiness (37 samples, 0.07%)</title><rect x="1048.0" y="965" width="0.8" height="15.0" fill="rgb(214,129,2)" rx="2" ry="2" />
<text  x="1050.98" y="975.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (16 samples, 0.03%)</title><rect x="1045.2" y="1013" width="0.4" height="15.0" fill="rgb(213,2,7)" rx="2" ry="2" />
<text  x="1048.22" y="1023.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (126 samples, 0.23%)</title><rect x="1038.4" y="1029" width="2.7" height="15.0" fill="rgb(254,42,42)" rx="2" ry="2" />
<text  x="1041.41" y="1039.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfb347edd97d33f3d (6,082 samples, 10.94%)</title><rect x="1060.7" y="1237" width="129.0" height="15.0" fill="rgb(243,65,40)" rx="2" ry="2" />
<text  x="1063.65" y="1247.5" >tokio_threadpool..</text>
</g>
<g >
<title>crossbeam_utils::atomic::atomic_cell::AtomicCell&lt;T&gt;::swap (21 samples, 0.04%)</title><rect x="1047.1" y="1301" width="0.5" height="15.0" fill="rgb(226,66,48)" rx="2" ry="2" />
<text  x="1050.11" y="1311.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (237 samples, 0.43%)</title><rect x="942.0" y="1285" width="5.0" height="15.0" fill="rgb(234,90,51)" rx="2" ry="2" />
<text  x="944.97" y="1295.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (10 samples, 0.02%)</title><rect x="1084.6" y="949" width="0.2" height="15.0" fill="rgb(205,131,13)" rx="2" ry="2" />
<text  x="1087.58" y="959.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1026.2" y="1269" width="0.1" height="15.0" fill="rgb(252,64,30)" rx="2" ry="2" />
<text  x="1029.19" y="1279.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (14 samples, 0.03%)</title><rect x="197.4" y="1189" width="0.3" height="15.0" fill="rgb(212,185,2)" rx="2" ry="2" />
<text  x="200.38" y="1199.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (7 samples, 0.01%)</title><rect x="1050.2" y="581" width="0.1" height="15.0" fill="rgb(227,51,21)" rx="2" ry="2" />
<text  x="1053.17" y="591.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11 samples, 0.02%)</title><rect x="1055.2" y="1173" width="0.2" height="15.0" fill="rgb(224,207,43)" rx="2" ry="2" />
<text  x="1058.15" y="1183.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (15 samples, 0.03%)</title><rect x="602.7" y="1269" width="0.3" height="15.0" fill="rgb(218,187,7)" rx="2" ry="2" />
<text  x="605.73" y="1279.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (17 samples, 0.03%)</title><rect x="1025.4" y="1445" width="0.4" height="15.0" fill="rgb(241,173,44)" rx="2" ry="2" />
<text  x="1028.43" y="1455.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (8 samples, 0.01%)</title><rect x="1059.7" y="1365" width="0.2" height="15.0" fill="rgb(222,8,1)" rx="2" ry="2" />
<text  x="1062.72" y="1375.5" ></text>
</g>
<g >
<title>tower_balance::p2c::service::Balance&lt;D,Req&gt;::push_unready (6 samples, 0.01%)</title><rect x="1025.5" y="725" width="0.1" height="15.0" fill="rgb(247,86,52)" rx="2" ry="2" />
<text  x="1028.49" y="735.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::DataType&gt;::serialize (19 samples, 0.03%)</title><rect x="997.6" y="1173" width="0.4" height="15.0" fill="rgb(221,18,14)" rx="2" ry="2" />
<text  x="1000.61" y="1183.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (7 samples, 0.01%)</title><rect x="1022.5" y="821" width="0.1" height="15.0" fill="rgb(246,213,40)" rx="2" ry="2" />
<text  x="1025.48" y="831.5" ></text>
</g>
<g >
<title>&lt;tracing_core::dispatcher::DefaultGuard as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="979.5" y="1301" width="0.3" height="15.0" fill="rgb(221,33,42)" rx="2" ry="2" />
<text  x="982.51" y="1311.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (5 samples, 0.01%)</title><rect x="997.8" y="837" width="0.1" height="15.0" fill="rgb(226,145,41)" rx="2" ry="2" />
<text  x="1000.78" y="847.5" ></text>
</g>
<g >
<title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (7 samples, 0.01%)</title><rect x="529.9" y="1237" width="0.1" height="15.0" fill="rgb(211,68,25)" rx="2" ry="2" />
<text  x="532.86" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (7 samples, 0.01%)</title><rect x="1056.9" y="1365" width="0.2" height="15.0" fill="rgb(210,143,9)" rx="2" ry="2" />
<text  x="1059.94" y="1375.5" ></text>
</g>
<g >
<title>alloc::alloc::box_free (293 samples, 0.53%)</title><rect x="846.6" y="1141" width="6.2" height="15.0" fill="rgb(220,59,14)" rx="2" ry="2" />
<text  x="849.62" y="1151.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (134 samples, 0.24%)</title><rect x="748.7" y="1189" width="2.9" height="15.0" fill="rgb(223,104,18)" rx="2" ry="2" />
<text  x="751.71" y="1199.5" ></text>
</g>
<g >
<title>tokio_sync::task::atomic_task::AtomicTask::notify (5 samples, 0.01%)</title><rect x="985.9" y="1221" width="0.1" height="15.0" fill="rgb(234,197,50)" rx="2" ry="2" />
<text  x="988.94" y="1231.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (9 samples, 0.02%)</title><rect x="982.7" y="1237" width="0.2" height="15.0" fill="rgb(233,79,35)" rx="2" ry="2" />
<text  x="985.71" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (28 samples, 0.05%)</title><rect x="1035.9" y="1429" width="0.6" height="15.0" fill="rgb(218,147,48)" rx="2" ry="2" />
<text  x="1038.89" y="1439.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13 samples, 0.02%)</title><rect x="254.8" y="1205" width="0.3" height="15.0" fill="rgb(207,175,7)" rx="2" ry="2" />
<text  x="257.80" y="1215.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::block::Block&lt;T&gt;::read (6 samples, 0.01%)</title><rect x="1011.3" y="1477" width="0.1" height="15.0" fill="rgb(236,80,17)" rx="2" ry="2" />
<text  x="1014.30" y="1487.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (23 samples, 0.04%)</title><rect x="1014.5" y="1189" width="0.4" height="15.0" fill="rgb(234,26,9)" rx="2" ry="2" />
<text  x="1017.46" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::register (31 samples, 0.06%)</title><rect x="1058.4" y="1253" width="0.6" height="15.0" fill="rgb(253,110,41)" rx="2" ry="2" />
<text  x="1061.38" y="1263.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (48 samples, 0.09%)</title><rect x="714.7" y="1285" width="1.0" height="15.0" fill="rgb(250,79,31)" rx="2" ry="2" />
<text  x="717.70" y="1295.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::enqueue_node (13 samples, 0.02%)</title><rect x="1076.9" y="869" width="0.3" height="15.0" fill="rgb(220,191,45)" rx="2" ry="2" />
<text  x="1079.95" y="879.5" ></text>
</g>
<g >
<title>core::ptr::replace (8 samples, 0.01%)</title><rect x="1047.3" y="1269" width="0.2" height="15.0" fill="rgb(222,35,21)" rx="2" ry="2" />
<text  x="1050.28" y="1279.5" ></text>
</g>
<g >
<title>serde::de::VariantAccess::newtype_variant (24 samples, 0.04%)</title><rect x="1046.6" y="933" width="0.5" height="15.0" fill="rgb(251,8,53)" rx="2" ry="2" />
<text  x="1049.60" y="943.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (7 samples, 0.01%)</title><rect x="1046.9" y="757" width="0.2" height="15.0" fill="rgb(212,201,29)" rx="2" ry="2" />
<text  x="1049.94" y="767.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.01%)</title><rect x="998.3" y="869" width="0.1" height="15.0" fill="rgb(219,90,10)" rx="2" ry="2" />
<text  x="1001.27" y="879.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (30 samples, 0.05%)</title><rect x="1059.7" y="1589" width="0.7" height="15.0" fill="rgb(240,58,6)" rx="2" ry="2" />
<text  x="1062.72" y="1599.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (7 samples, 0.01%)</title><rect x="1030.3" y="1301" width="0.2" height="15.0" fill="rgb(244,66,43)" rx="2" ry="2" />
<text  x="1033.33" y="1311.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (11 samples, 0.02%)</title><rect x="1059.1" y="1445" width="0.2" height="15.0" fill="rgb(223,35,46)" rx="2" ry="2" />
<text  x="1062.06" y="1455.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (39 samples, 0.07%)</title><rect x="1041.8" y="597" width="0.8" height="15.0" fill="rgb(213,214,45)" rx="2" ry="2" />
<text  x="1044.79" y="607.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (13 samples, 0.02%)</title><rect x="1051.6" y="1397" width="0.3" height="15.0" fill="rgb(222,211,31)" rx="2" ry="2" />
<text  x="1054.59" y="1407.5" ></text>
</g>
<g >
<title>&lt;&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple::Access&lt;R,O&gt; as serde::de::SeqAccess&gt;::next_element_seed (144 samples, 0.26%)</title><rect x="1000.0" y="949" width="3.0" height="15.0" fill="rgb(253,206,14)" rx="2" ry="2" />
<text  x="1002.99" y="959.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default (33 samples, 0.06%)</title><rect x="1030.5" y="1381" width="0.7" height="15.0" fill="rgb(218,104,25)" rx="2" ry="2" />
<text  x="1033.48" y="1391.5" ></text>
</g>
<g >
<title>tcp_ack (6 samples, 0.01%)</title><rect x="1042.1" y="261" width="0.2" height="15.0" fill="rgb(222,211,39)" rx="2" ry="2" />
<text  x="1045.15" y="271.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (7 samples, 0.01%)</title><rect x="1034.2" y="1269" width="0.1" height="15.0" fill="rgb(233,1,29)" rx="2" ry="2" />
<text  x="1037.19" y="1279.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (61 samples, 0.11%)</title><rect x="1031.2" y="1525" width="1.3" height="15.0" fill="rgb(238,26,22)" rx="2" ry="2" />
<text  x="1034.18" y="1535.5" ></text>
</g>
<g >
<title>noria::table::_::&lt;impl serde::ser::Serialize for noria::table::Input&gt;::serialize (5 samples, 0.01%)</title><rect x="1026.2" y="1173" width="0.1" height="15.0" fill="rgb(219,224,7)" rx="2" ry="2" />
<text  x="1029.19" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (6 samples, 0.01%)</title><rect x="348.0" y="1269" width="0.1" height="15.0" fill="rgb(243,101,30)" rx="2" ry="2" />
<text  x="350.95" y="1279.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (5 samples, 0.01%)</title><rect x="1022.3" y="1077" width="0.1" height="15.0" fill="rgb(221,93,29)" rx="2" ry="2" />
<text  x="1025.33" y="1087.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::worker::Worker&lt;T,Request&gt; as futures::future::Future&gt;::poll (21 samples, 0.04%)</title><rect x="1040.6" y="981" width="0.5" height="15.0" fill="rgb(214,227,52)" rx="2" ry="2" />
<text  x="1043.64" y="991.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.01%)</title><rect x="1026.3" y="1013" width="0.2" height="15.0" fill="rgb(222,97,50)" rx="2" ry="2" />
<text  x="1029.34" y="1023.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h3d3457b86cb67885 (12 samples, 0.02%)</title><rect x="995.3" y="1461" width="0.3" height="15.0" fill="rgb(215,154,44)" rx="2" ry="2" />
<text  x="998.32" y="1471.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::is_shared_root (136 samples, 0.24%)</title><rect x="725.6" y="1269" width="2.9" height="15.0" fill="rgb(216,33,33)" rx="2" ry="2" />
<text  x="728.58" y="1279.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::with_default (22 samples, 0.04%)</title><rect x="189.4" y="1573" width="0.5" height="15.0" fill="rgb(236,36,43)" rx="2" ry="2" />
<text  x="192.38" y="1583.5" ></text>
</g>
<g >
<title>bincode::internal::serialized_size (5 samples, 0.01%)</title><rect x="1022.3" y="1397" width="0.1" height="15.0" fill="rgb(235,4,32)" rx="2" ry="2" />
<text  x="1025.33" y="1407.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default (20 samples, 0.04%)</title><rect x="1036.5" y="1589" width="0.4" height="15.0" fill="rgb(215,147,9)" rx="2" ry="2" />
<text  x="1039.48" y="1599.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (144 samples, 0.26%)</title><rect x="1000.0" y="1269" width="3.0" height="15.0" fill="rgb(252,127,17)" rx="2" ry="2" />
<text  x="1002.99" y="1279.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (10 samples, 0.02%)</title><rect x="1041.1" y="901" width="0.2" height="15.0" fill="rgb(242,142,12)" rx="2" ry="2" />
<text  x="1044.09" y="911.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::h47f99dfff848d3aa (11 samples, 0.02%)</title><rect x="977.1" y="1509" width="0.2" height="15.0" fill="rgb(241,76,8)" rx="2" ry="2" />
<text  x="980.07" y="1519.5" ></text>
</g>
<g >
<title>futex_wake (5 samples, 0.01%)</title><rect x="1044.1" y="773" width="0.1" height="15.0" fill="rgb(219,19,37)" rx="2" ry="2" />
<text  x="1047.12" y="783.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::now (19 samples, 0.03%)</title><rect x="1114.7" y="933" width="0.4" height="15.0" fill="rgb(221,71,6)" rx="2" ry="2" />
<text  x="1117.74" y="943.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts (118 samples, 0.21%)</title><rect x="323.5" y="1237" width="2.5" height="15.0" fill="rgb(223,168,15)" rx="2" ry="2" />
<text  x="326.51" y="1247.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::len (6 samples, 0.01%)</title><rect x="438.0" y="1269" width="0.2" height="15.0" fill="rgb(238,178,33)" rx="2" ry="2" />
<text  x="441.05" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (22 samples, 0.04%)</title><rect x="1059.9" y="1317" width="0.5" height="15.0" fill="rgb(231,4,17)" rx="2" ry="2" />
<text  x="1062.89" y="1327.5" ></text>
</g>
<g >
<title>tokio_reactor::poll_evented::PollEvented&lt;E&gt;::poll_read_ready (7 samples, 0.01%)</title><rect x="1046.5" y="1189" width="0.1" height="15.0" fill="rgb(241,66,17)" rx="2" ry="2" />
<text  x="1049.45" y="1199.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::DropNotifyService&lt;Svc&gt; as tower_service::Service&lt;Request&gt;&gt;::call (47 samples, 0.08%)</title><rect x="1048.0" y="1301" width="1.0" height="15.0" fill="rgb(238,49,44)" rx="2" ry="2" />
<text  x="1050.96" y="1311.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current (21 samples, 0.04%)</title><rect x="1056.3" y="1093" width="0.4" height="15.0" fill="rgb(217,222,46)" rx="2" ry="2" />
<text  x="1059.26" y="1103.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="180.5" y="1189" width="0.1" height="15.0" fill="rgb(224,33,18)" rx="2" ry="2" />
<text  x="183.45" y="1199.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (15 samples, 0.03%)</title><rect x="242.0" y="1285" width="0.3" height="15.0" fill="rgb(227,113,10)" rx="2" ry="2" />
<text  x="244.99" y="1295.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::new (110 samples, 0.20%)</title><rect x="404.9" y="1301" width="2.4" height="15.0" fill="rgb(229,43,49)" rx="2" ry="2" />
<text  x="407.92" y="1311.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (33 samples, 0.06%)</title><rect x="506.2" y="1285" width="0.7" height="15.0" fill="rgb(251,145,47)" rx="2" ry="2" />
<text  x="509.20" y="1295.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNotInner&lt;T&gt;&gt;::serialize (13 samples, 0.02%)</title><rect x="1044.9" y="1141" width="0.3" height="15.0" fill="rgb(206,88,32)" rx="2" ry="2" />
<text  x="1047.93" y="1151.5" ></text>
</g>
<g >
<title>bincode::config::legacy::Config::serialize_into (14 samples, 0.03%)</title><rect x="1057.6" y="1205" width="0.3" height="15.0" fill="rgb(224,148,19)" rx="2" ry="2" />
<text  x="1060.59" y="1215.5" ></text>
</g>
<g >
<title>sys_write (6 samples, 0.01%)</title><rect x="983.5" y="1045" width="0.1" height="15.0" fill="rgb(207,72,23)" rx="2" ry="2" />
<text  x="986.52" y="1055.5" ></text>
</g>
<g >
<title>&lt;futures::future::either::Either&lt;A,B&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="194.7" y="1269" width="0.1" height="15.0" fill="rgb(225,65,40)" rx="2" ry="2" />
<text  x="197.71" y="1279.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (17 samples, 0.03%)</title><rect x="805.4" y="1061" width="0.3" height="15.0" fill="rgb(253,193,4)" rx="2" ry="2" />
<text  x="808.37" y="1071.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (89 samples, 0.16%)</title><rect x="1057.1" y="1285" width="1.9" height="15.0" fill="rgb(217,14,14)" rx="2" ry="2" />
<text  x="1060.15" y="1295.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (51 samples, 0.09%)</title><rect x="977.9" y="1333" width="1.1" height="15.0" fill="rgb(250,145,7)" rx="2" ry="2" />
<text  x="980.88" y="1343.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (32 samples, 0.06%)</title><rect x="1037.1" y="1397" width="0.7" height="15.0" fill="rgb(252,40,43)" rx="2" ry="2" />
<text  x="1040.14" y="1407.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (230 samples, 0.41%)</title><rect x="1130.5" y="949" width="4.9" height="15.0" fill="rgb(209,119,18)" rx="2" ry="2" />
<text  x="1133.52" y="959.5" ></text>
</g>
<g >
<title>serde::ser::impls::_$LT$impl$u20$serde..ser..Serialize$u20$for$u20$$u5b$T$u3b$$u20$_$u5d$$GT$::serialize::he70076c4b09e12fc (5 samples, 0.01%)</title><rect x="1022.2" y="1061" width="0.1" height="15.0" fill="rgb(225,115,43)" rx="2" ry="2" />
<text  x="1025.22" y="1071.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (126 samples, 0.23%)</title><rect x="1038.4" y="1173" width="2.7" height="15.0" fill="rgb(251,24,12)" rx="2" ry="2" />
<text  x="1041.41" y="1183.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueue::poll (61 samples, 0.11%)</title><rect x="1123.2" y="917" width="1.3" height="15.0" fill="rgb(209,138,52)" rx="2" ry="2" />
<text  x="1126.22" y="927.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (16 samples, 0.03%)</title><rect x="1026.2" y="1333" width="0.3" height="15.0" fill="rgb(228,8,23)" rx="2" ry="2" />
<text  x="1029.19" y="1343.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.01%)</title><rect x="1023.8" y="1221" width="0.1" height="15.0" fill="rgb(218,177,40)" rx="2" ry="2" />
<text  x="1026.81" y="1231.5" ></text>
</g>
<g >
<title>core::mem::replace (265 samples, 0.48%)</title><rect x="877.7" y="1269" width="5.6" height="15.0" fill="rgb(213,108,1)" rx="2" ry="2" />
<text  x="880.72" y="1279.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_key (7 samples, 0.01%)</title><rect x="1004.9" y="1445" width="0.2" height="15.0" fill="rgb(254,104,28)" rx="2" ry="2" />
<text  x="1007.93" y="1455.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current (50 samples, 0.09%)</title><rect x="192.8" y="1349" width="1.1" height="15.0" fill="rgb(218,83,42)" rx="2" ry="2" />
<text  x="195.84" y="1359.5" ></text>
</g>
<g >
<title>__rg_alloc (69 samples, 0.12%)</title><rect x="276.6" y="1237" width="1.4" height="15.0" fill="rgb(218,141,46)" rx="2" ry="2" />
<text  x="279.55" y="1247.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (9 samples, 0.02%)</title><rect x="998.9" y="853" width="0.2" height="15.0" fill="rgb(228,12,39)" rx="2" ry="2" />
<text  x="1001.86" y="863.5" ></text>
</g>
<g >
<title>tokio_sync::semaphore::Semaphore::add_permits (6 samples, 0.01%)</title><rect x="1011.0" y="1477" width="0.1" height="15.0" fill="rgb(229,7,15)" rx="2" ry="2" />
<text  x="1014.02" y="1487.5" ></text>
</g>
<g >
<title>tower_balance::p2c::service::Balance&lt;D,Req&gt;::poll_discover (5 samples, 0.01%)</title><rect x="1005.2" y="1541" width="0.1" height="15.0" fill="rgb(244,18,13)" rx="2" ry="2" />
<text  x="1008.21" y="1551.5" ></text>
</g>
<g >
<title>std::panicking::try (222 samples, 0.40%)</title><rect x="1149.6" y="981" width="4.7" height="15.0" fill="rgb(216,111,25)" rx="2" ry="2" />
<text  x="1152.62" y="991.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (6 samples, 0.01%)</title><rect x="1014.2" y="965" width="0.1" height="15.0" fill="rgb(227,76,25)" rx="2" ry="2" />
<text  x="1017.20" y="975.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::poll_complete (8 samples, 0.01%)</title><rect x="1051.9" y="1237" width="0.2" height="15.0" fill="rgb(246,45,46)" rx="2" ry="2" />
<text  x="1054.89" y="1247.5" ></text>
</g>
<g >
<title>bincode::config::legacy::Config::serialize_into (5 samples, 0.01%)</title><rect x="1031.9" y="997" width="0.1" height="15.0" fill="rgb(253,143,41)" rx="2" ry="2" />
<text  x="1034.88" y="1007.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (22 samples, 0.04%)</title><rect x="705.6" y="1269" width="0.4" height="15.0" fill="rgb(251,157,21)" rx="2" ry="2" />
<text  x="708.55" y="1279.5" ></text>
</g>
<g >
<title>futures::future::option::&lt;impl futures::future::Future for core::option::Option&lt;F&gt;&gt;::poll (34 samples, 0.06%)</title><rect x="1131.0" y="741" width="0.8" height="15.0" fill="rgb(210,68,14)" rx="2" ry="2" />
<text  x="1134.03" y="751.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (7 samples, 0.01%)</title><rect x="1136.8" y="997" width="0.2" height="15.0" fill="rgb(240,5,45)" rx="2" ry="2" />
<text  x="1139.83" y="1007.5" ></text>
</g>
<g >
<title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::try_pop_if (15 samples, 0.03%)</title><rect x="1019.5" y="1445" width="0.3" height="15.0" fill="rgb(240,218,48)" rx="2" ry="2" />
<text  x="1022.51" y="1455.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1044.5" y="1109" width="0.1" height="15.0" fill="rgb(229,17,0)" rx="2" ry="2" />
<text  x="1047.48" y="1119.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::TaskUnpark as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="1007.0" y="1461" width="0.1" height="15.0" fill="rgb(227,193,33)" rx="2" ry="2" />
<text  x="1010.03" y="1471.5" ></text>
</g>
<g >
<title>ip_output (30 samples, 0.05%)</title><rect x="1041.9" y="549" width="0.7" height="15.0" fill="rgb(235,220,41)" rx="2" ry="2" />
<text  x="1044.94" y="559.5" ></text>
</g>
<g >
<title>&lt;tokio_tcp::stream::TcpStream as std::io::Read&gt;::read (6 samples, 0.01%)</title><rect x="1052.7" y="1205" width="0.1" height="15.0" fill="rgb(224,218,3)" rx="2" ry="2" />
<text  x="1055.71" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (18 samples, 0.03%)</title><rect x="180.0" y="1445" width="0.4" height="15.0" fill="rgb(244,63,8)" rx="2" ry="2" />
<text  x="183.03" y="1455.5" ></text>
</g>
<g >
<title>sz_size2index (170 samples, 0.31%)</title><rect x="133.9" y="1525" width="3.6" height="15.0" fill="rgb(213,36,53)" rx="2" ry="2" />
<text  x="136.88" y="1535.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::TryFrom&lt;U&gt;&gt;::try_from (18 samples, 0.03%)</title><rect x="1100.1" y="869" width="0.3" height="15.0" fill="rgb(234,218,10)" rx="2" ry="2" />
<text  x="1103.05" y="879.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.02%)</title><rect x="1088.0" y="933" width="0.2" height="15.0" fill="rgb(207,211,26)" rx="2" ry="2" />
<text  x="1090.98" y="943.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::write (83 samples, 0.15%)</title><rect x="1144.5" y="821" width="1.8" height="15.0" fill="rgb(215,169,6)" rx="2" ry="2" />
<text  x="1147.51" y="831.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="565.1" y="1237" width="0.2" height="15.0" fill="rgb(238,65,46)" rx="2" ry="2" />
<text  x="568.13" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (7 samples, 0.01%)</title><rect x="194.4" y="1493" width="0.1" height="15.0" fill="rgb(207,193,47)" rx="2" ry="2" />
<text  x="197.39" y="1503.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.01%)</title><rect x="488.5" y="1157" width="0.2" height="15.0" fill="rgb(231,45,49)" rx="2" ry="2" />
<text  x="491.53" y="1167.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (6 samples, 0.01%)</title><rect x="1033.8" y="1109" width="0.1" height="15.0" fill="rgb(224,165,29)" rx="2" ry="2" />
<text  x="1036.81" y="1119.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.02%)</title><rect x="1093.7" y="901" width="0.2" height="15.0" fill="rgb(237,98,0)" rx="2" ry="2" />
<text  x="1096.71" y="911.5" ></text>
</g>
<g >
<title>rand::thread_rng (1,132 samples, 2.04%)</title><rect x="606.2" y="1301" width="24.0" height="15.0" fill="rgb(242,121,7)" rx="2" ry="2" />
<text  x="609.19" y="1311.5" >r..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8&gt;&gt;::write_all (13 samples, 0.02%)</title><rect x="988.5" y="1125" width="0.2" height="15.0" fill="rgb(228,189,30)" rx="2" ry="2" />
<text  x="991.46" y="1135.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc (5 samples, 0.01%)</title><rect x="999.2" y="757" width="0.1" height="15.0" fill="rgb(243,6,52)" rx="2" ry="2" />
<text  x="1002.24" y="767.5" ></text>
</g>
<g >
<title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.03%)</title><rect x="987.6" y="1141" width="0.3" height="15.0" fill="rgb(223,139,44)" rx="2" ry="2" />
<text  x="990.55" y="1151.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::BoxedNode&lt;K,V&gt;::as_ptr (47 samples, 0.08%)</title><rect x="951.7" y="1269" width="1.0" height="15.0" fill="rgb(247,93,28)" rx="2" ry="2" />
<text  x="954.71" y="1279.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (21 samples, 0.04%)</title><rect x="1033.2" y="1509" width="0.5" height="15.0" fill="rgb(243,91,53)" rx="2" ry="2" />
<text  x="1036.24" y="1519.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::steal_tasks (1,645 samples, 2.96%)</title><rect x="1154.8" y="1045" width="34.9" height="15.0" fill="rgb(221,164,29)" rx="2" ry="2" />
<text  x="1157.80" y="1055.5" >to..</text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h3169cfffdbef5731 (8 samples, 0.01%)</title><rect x="193.9" y="1205" width="0.2" height="15.0" fill="rgb(244,191,52)" rx="2" ry="2" />
<text  x="196.90" y="1215.5" ></text>
</g>
<g >
<title>noria::table::_::&lt;impl serde::ser::Serialize for noria::table::Input&gt;::serialize (6 samples, 0.01%)</title><rect x="1057.9" y="1077" width="0.1" height="15.0" fill="rgb(227,173,25)" rx="2" ry="2" />
<text  x="1060.89" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::is_null (22 samples, 0.04%)</title><rect x="265.8" y="1301" width="0.5" height="15.0" fill="rgb(244,210,21)" rx="2" ry="2" />
<text  x="268.81" y="1311.5" ></text>
</g>
<g >
<title>core::mem::align_of (5 samples, 0.01%)</title><rect x="692.3" y="1221" width="0.1" height="15.0" fill="rgb(211,63,17)" rx="2" ry="2" />
<text  x="695.29" y="1231.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (9 samples, 0.02%)</title><rect x="1025.4" y="885" width="0.2" height="15.0" fill="rgb(254,144,49)" rx="2" ry="2" />
<text  x="1028.43" y="895.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (11 samples, 0.02%)</title><rect x="199.0" y="1141" width="0.2" height="15.0" fill="rgb(246,199,53)" rx="2" ry="2" />
<text  x="201.97" y="1151.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.01%)</title><rect x="1030.2" y="1461" width="0.1" height="15.0" fill="rgb(252,1,27)" rx="2" ry="2" />
<text  x="1033.20" y="1471.5" ></text>
</g>
<g >
<title>zookeeper::io::ZkIo::run (5 samples, 0.01%)</title><rect x="992.8" y="1445" width="0.1" height="15.0" fill="rgb(226,15,43)" rx="2" ry="2" />
<text  x="995.81" y="1455.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.01%)</title><rect x="1044.5" y="1221" width="0.1" height="15.0" fill="rgb(248,166,2)" rx="2" ry="2" />
<text  x="1047.48" y="1231.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (7 samples, 0.01%)</title><rect x="1056.9" y="1333" width="0.2" height="15.0" fill="rgb(214,204,52)" rx="2" ry="2" />
<text  x="1059.94" y="1343.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (8 samples, 0.01%)</title><rect x="1059.7" y="1477" width="0.2" height="15.0" fill="rgb(221,11,1)" rx="2" ry="2" />
<text  x="1062.72" y="1487.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (109 samples, 0.20%)</title><rect x="986.4" y="1189" width="2.3" height="15.0" fill="rgb(249,117,22)" rx="2" ry="2" />
<text  x="989.43" y="1199.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default::_$u7b$$u7b$closure$u7d$$u7d$::ha80fbdab9b554b03 (6 samples, 0.01%)</title><rect x="1030.2" y="1445" width="0.1" height="15.0" fill="rgb(218,37,42)" rx="2" ry="2" />
<text  x="1033.20" y="1455.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.01%)</title><rect x="998.5" y="885" width="0.1" height="15.0" fill="rgb(252,156,11)" rx="2" ry="2" />
<text  x="1001.48" y="895.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (11 samples, 0.02%)</title><rect x="977.1" y="1445" width="0.2" height="15.0" fill="rgb(241,186,25)" rx="2" ry="2" />
<text  x="980.07" y="1455.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (19 samples, 0.03%)</title><rect x="997.6" y="1461" width="0.4" height="15.0" fill="rgb(220,7,17)" rx="2" ry="2" />
<text  x="1000.61" y="1471.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (5 samples, 0.01%)</title><rect x="11.1" y="1413" width="0.1" height="15.0" fill="rgb(248,221,36)" rx="2" ry="2" />
<text  x="14.10" y="1423.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="997.4" y="917" width="0.2" height="15.0" fill="rgb(240,210,43)" rx="2" ry="2" />
<text  x="1000.40" y="927.5" ></text>
</g>
<g >
<title>new_sync_read (43 samples, 0.08%)</title><rect x="1096.2" y="741" width="0.9" height="15.0" fill="rgb(231,147,50)" rx="2" ry="2" />
<text  x="1099.23" y="751.5" ></text>
</g>
<g >
<title>bincode::config::legacy::Config::serialized_size (13 samples, 0.02%)</title><rect x="1027.7" y="1285" width="0.3" height="15.0" fill="rgb(237,151,21)" rx="2" ry="2" />
<text  x="1030.74" y="1295.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::starts_with (16 samples, 0.03%)</title><rect x="1001.6" y="565" width="0.4" height="15.0" fill="rgb(235,67,4)" rx="2" ry="2" />
<text  x="1004.64" y="575.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Events::capacity (5 samples, 0.01%)</title><rect x="1092.6" y="901" width="0.1" height="15.0" fill="rgb(216,16,8)" rx="2" ry="2" />
<text  x="1095.56" y="911.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (95 samples, 0.17%)</title><rect x="309.9" y="1253" width="2.0" height="15.0" fill="rgb(232,148,13)" rx="2" ry="2" />
<text  x="312.91" y="1263.5" ></text>
</g>
<g >
<title>serde::de::VariantAccess::newtype_variant (144 samples, 0.26%)</title><rect x="1000.0" y="1189" width="3.0" height="15.0" fill="rgb(211,221,15)" rx="2" ry="2" />
<text  x="1002.99" y="1199.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.01%)</title><rect x="1053.9" y="1141" width="0.1" height="15.0" fill="rgb(252,151,7)" rx="2" ry="2" />
<text  x="1056.90" y="1151.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (11 samples, 0.02%)</title><rect x="1059.1" y="1333" width="0.2" height="15.0" fill="rgb(226,117,45)" rx="2" ry="2" />
<text  x="1062.06" y="1343.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::fmt_u64 (7 samples, 0.01%)</title><rect x="983.5" y="1189" width="0.1" height="15.0" fill="rgb(217,32,54)" rx="2" ry="2" />
<text  x="986.50" y="1199.5" ></text>
</g>
<g >
<title>noria::view::SyncView::lookup::_$u7b$$u7b$closure$u7d$$u7d$::h339f90ccab48f6ba (5 samples, 0.01%)</title><rect x="192.7" y="1429" width="0.1" height="15.0" fill="rgb(218,211,46)" rx="2" ry="2" />
<text  x="195.69" y="1439.5" ></text>
</g>
<g >
<title>bincode::config::legacy::Config::serialize_into (13 samples, 0.02%)</title><rect x="1026.2" y="1317" width="0.3" height="15.0" fill="rgb(250,224,17)" rx="2" ry="2" />
<text  x="1029.19" y="1327.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="1034.6" y="1173" width="0.1" height="15.0" fill="rgb(240,191,40)" rx="2" ry="2" />
<text  x="1037.57" y="1183.5" ></text>
</g>
<g >
<title>noria::table::Table::quick_n_dirty::_$u7b$$u7b$closure$u7d$$u7d$::h3f374431d27411e4 (33 samples, 0.06%)</title><rect x="10.4" y="1573" width="0.7" height="15.0" fill="rgb(224,75,52)" rx="2" ry="2" />
<text  x="13.40" y="1583.5" ></text>
</g>
<g >
<title>&lt;futures::future::either::Either&lt;A,B&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1025.6" y="613" width="0.1" height="15.0" fill="rgb(221,59,36)" rx="2" ry="2" />
<text  x="1028.62" y="623.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Events::get (43 samples, 0.08%)</title><rect x="1088.0" y="949" width="0.9" height="15.0" fill="rgb(230,146,7)" rx="2" ry="2" />
<text  x="1090.96" y="959.5" ></text>
</g>
<g >
<title>vfs_read (65 samples, 0.12%)</title><rect x="1096.1" y="773" width="1.4" height="15.0" fill="rgb(229,152,12)" rx="2" ry="2" />
<text  x="1099.15" y="783.5" ></text>
</g>
<g >
<title>&lt;usize as core::default::Default&gt;::default (5 samples, 0.01%)</title><rect x="1186.4" y="869" width="0.1" height="15.0" fill="rgb(253,47,49)" rx="2" ry="2" />
<text  x="1189.35" y="879.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (32 samples, 0.06%)</title><rect x="1037.1" y="1445" width="0.7" height="15.0" fill="rgb(236,37,41)" rx="2" ry="2" />
<text  x="1040.14" y="1455.5" ></text>
</g>
<g >
<title>futures::task_impl::std::_$LT$impl$u20$futures..task_impl..Spawn$LT$F$GT$$GT$::wait_future::_$u7b$$u7b$closure$u7d$$u7d$::h0c37c32294d0b15f (5 samples, 0.01%)</title><rect x="986.3" y="1189" width="0.1" height="15.0" fill="rgb(228,4,18)" rx="2" ry="2" />
<text  x="989.26" y="1199.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (9 samples, 0.02%)</title><rect x="997.2" y="1189" width="0.2" height="15.0" fill="rgb(243,73,35)" rx="2" ry="2" />
<text  x="1000.16" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (17 samples, 0.03%)</title><rect x="1036.1" y="1157" width="0.4" height="15.0" fill="rgb(246,202,32)" rx="2" ry="2" />
<text  x="1039.12" y="1167.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::unpark (23 samples, 0.04%)</title><rect x="1014.5" y="1109" width="0.4" height="15.0" fill="rgb(247,113,7)" rx="2" ry="2" />
<text  x="1017.46" y="1119.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.01%)</title><rect x="1127.7" y="965" width="0.2" height="15.0" fill="rgb(246,101,15)" rx="2" ry="2" />
<text  x="1130.72" y="975.5" ></text>
</g>
<g >
<title>rand::thread_rng::THREAD_RNG_KEY::__getit (140 samples, 0.25%)</title><rect x="613.0" y="1253" width="3.0" height="15.0" fill="rgb(221,79,7)" rx="2" ry="2" />
<text  x="616.00" y="1263.5" ></text>
</g>
<g >
<title>std::panicking::try (29 samples, 0.05%)</title><rect x="1031.2" y="1301" width="0.6" height="15.0" fill="rgb(215,190,19)" rx="2" ry="2" />
<text  x="1034.18" y="1311.5" ></text>
</g>
<g >
<title>tokio_sync::task::atomic_task::AtomicTask::notify (8 samples, 0.01%)</title><rect x="184.0" y="1429" width="0.2" height="15.0" fill="rgb(221,171,54)" rx="2" ry="2" />
<text  x="187.04" y="1439.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::entry2 (13 samples, 0.02%)</title><rect x="1021.5" y="1477" width="0.3" height="15.0" fill="rgb(223,125,16)" rx="2" ry="2" />
<text  x="1024.48" y="1487.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (6 samples, 0.01%)</title><rect x="1022.2" y="1253" width="0.1" height="15.0" fill="rgb(210,41,21)" rx="2" ry="2" />
<text  x="1025.20" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::std::_$LT$impl$u20$futures..task_impl..Spawn$LT$F$GT$$GT$::wait_future::_$u7b$$u7b$closure$u7d$$u7d$::hd0f6d5cc3fe9bd86 (5 samples, 0.01%)</title><rect x="192.5" y="1301" width="0.1" height="15.0" fill="rgb(219,223,43)" rx="2" ry="2" />
<text  x="195.48" y="1311.5" ></text>
</g>
<g >
<title>tsd_tsdn (18 samples, 0.03%)</title><rect x="81.4" y="1541" width="0.3" height="15.0" fill="rgb(252,39,18)" rx="2" ry="2" />
<text  x="84.36" y="1551.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Sender&lt;T&gt;::send (65 samples, 0.12%)</title><rect x="1133.6" y="757" width="1.4" height="15.0" fill="rgb(241,226,54)" rx="2" ry="2" />
<text  x="1136.64" y="767.5" ></text>
</g>
<g >
<title>__libc_recv (16 samples, 0.03%)</title><rect x="1031.3" y="837" width="0.3" height="15.0" fill="rgb(213,192,22)" rx="2" ry="2" />
<text  x="1034.30" y="847.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (25 samples, 0.04%)</title><rect x="867.7" y="1285" width="0.6" height="15.0" fill="rgb(205,144,6)" rx="2" ry="2" />
<text  x="870.75" y="1295.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (13 samples, 0.02%)</title><rect x="1066.6" y="1061" width="0.3" height="15.0" fill="rgb(225,149,25)" rx="2" ry="2" />
<text  x="1069.61" y="1071.5" ></text>
</g>
<g >
<title>__rg_dealloc (193 samples, 0.35%)</title><rect x="801.6" y="1093" width="4.1" height="15.0" fill="rgb(222,2,45)" rx="2" ry="2" />
<text  x="804.63" y="1103.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (45 samples, 0.08%)</title><rect x="1145.0" y="661" width="1.0" height="15.0" fill="rgb(231,187,54)" rx="2" ry="2" />
<text  x="1148.04" y="671.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (329 samples, 0.59%)</title><rect x="876.5" y="1301" width="7.0" height="15.0" fill="rgb(213,195,21)" rx="2" ry="2" />
<text  x="879.49" y="1311.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (465 samples, 0.84%)</title><rect x="478.8" y="1253" width="9.9" height="15.0" fill="rgb(239,206,9)" rx="2" ry="2" />
<text  x="481.81" y="1263.5" ></text>
</g>
<g >
<title>&lt;async_bincode::reader::AsyncBincodeReader&lt;R,T&gt; as futures::stream::Stream&gt;::poll (8 samples, 0.01%)</title><rect x="1058.1" y="1237" width="0.2" height="15.0" fill="rgb(250,9,26)" rx="2" ry="2" />
<text  x="1061.08" y="1247.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default (7 samples, 0.01%)</title><rect x="1030.3" y="1477" width="0.2" height="15.0" fill="rgb(212,121,9)" rx="2" ry="2" />
<text  x="1033.33" y="1487.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_and_swap (110 samples, 0.20%)</title><rect x="1182.8" y="885" width="2.3" height="15.0" fill="rgb(214,114,10)" rx="2" ry="2" />
<text  x="1185.81" y="895.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (17 samples, 0.03%)</title><rect x="1023.0" y="1093" width="0.3" height="15.0" fill="rgb(232,153,39)" rx="2" ry="2" />
<text  x="1025.97" y="1103.5" ></text>
</g>
<g >
<title>&lt;tokio_timer::timer::Timer&lt;T,N&gt; as tokio_executor::park::Park&gt;::park_timeout (567 samples, 1.02%)</title><rect x="1073.9" y="1013" width="12.0" height="15.0" fill="rgb(223,67,11)" rx="2" ry="2" />
<text  x="1076.91" y="1023.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (2,889 samples, 5.20%)</title><rect x="1128.4" y="1077" width="61.3" height="15.0" fill="rgb(208,56,11)" rx="2" ry="2" />
<text  x="1131.40" y="1087.5" >tokio_..</text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="187.0" y="1237" width="0.2" height="15.0" fill="rgb(216,146,8)" rx="2" ry="2" />
<text  x="190.05" y="1247.5" ></text>
</g>
<g >
<title>crossbeam_deque::Worker&lt;T&gt;::pop (23 samples, 0.04%)</title><rect x="1164.5" y="1013" width="0.4" height="15.0" fill="rgb(234,217,28)" rx="2" ry="2" />
<text  x="1167.45" y="1023.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::uninit (12 samples, 0.02%)</title><rect x="503.5" y="1189" width="0.3" height="15.0" fill="rgb(233,103,28)" rx="2" ry="2" />
<text  x="506.53" y="1199.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (17 samples, 0.03%)</title><rect x="1023.0" y="1317" width="0.3" height="15.0" fill="rgb(252,7,18)" rx="2" ry="2" />
<text  x="1025.97" y="1327.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (9 samples, 0.02%)</title><rect x="1025.8" y="1413" width="0.2" height="15.0" fill="rgb(247,44,36)" rx="2" ry="2" />
<text  x="1028.79" y="1423.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (158 samples, 0.28%)</title><rect x="1041.1" y="1173" width="3.3" height="15.0" fill="rgb(214,104,29)" rx="2" ry="2" />
<text  x="1044.09" y="1183.5" ></text>
</g>
<g >
<title>&lt;futures::future::result_::FutureResult&lt;T,E&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="183.3" y="1541" width="0.2" height="15.0" fill="rgb(233,79,51)" rx="2" ry="2" />
<text  x="186.27" y="1551.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (12 samples, 0.02%)</title><rect x="1037.4" y="965" width="0.2" height="15.0" fill="rgb(221,104,43)" rx="2" ry="2" />
<text  x="1040.39" y="975.5" ></text>
</g>
<g >
<title>futures::task_impl::current (6 samples, 0.01%)</title><rect x="181.7" y="1365" width="0.2" height="15.0" fill="rgb(231,187,7)" rx="2" ry="2" />
<text  x="184.75" y="1375.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (8 samples, 0.01%)</title><rect x="1085.1" y="933" width="0.2" height="15.0" fill="rgb(250,142,15)" rx="2" ry="2" />
<text  x="1088.09" y="943.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::stream::Stream&gt;::poll (23 samples, 0.04%)</title><rect x="1035.4" y="1109" width="0.4" height="15.0" fill="rgb(221,222,22)" rx="2" ry="2" />
<text  x="1038.36" y="1119.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (44 samples, 0.08%)</title><rect x="1023.7" y="1541" width="0.9" height="15.0" fill="rgb(242,169,53)" rx="2" ry="2" />
<text  x="1026.71" y="1551.5" ></text>
</g>
<g >
<title>core::mem::align_of_val (93 samples, 0.17%)</title><rect x="836.0" y="1109" width="2.0" height="15.0" fill="rgb(254,73,13)" rx="2" ry="2" />
<text  x="839.03" y="1119.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::clone_id (5 samples, 0.01%)</title><rect x="1012.9" y="1317" width="0.1" height="15.0" fill="rgb(247,106,30)" rx="2" ry="2" />
<text  x="1015.87" y="1327.5" ></text>
</g>
<g >
<title>noria::table::_::&lt;impl serde::ser::Serialize for noria::table::Input&gt;::serialize (8 samples, 0.01%)</title><rect x="1027.6" y="1157" width="0.1" height="15.0" fill="rgb(236,130,40)" rx="2" ry="2" />
<text  x="1030.57" y="1167.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (6,084 samples, 10.94%)</title><rect x="1060.6" y="1429" width="129.1" height="15.0" fill="rgb(235,176,22)" rx="2" ry="2" />
<text  x="1063.61" y="1439.5" >&lt;std::panic::Ass..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 0.02%)</title><rect x="1044.9" y="1029" width="0.3" height="15.0" fill="rgb(240,21,48)" rx="2" ry="2" />
<text  x="1047.93" y="1039.5" ></text>
</g>
<g >
<title>do_syscall_64 (9 samples, 0.02%)</title><rect x="981.6" y="1045" width="0.2" height="15.0" fill="rgb(221,192,29)" rx="2" ry="2" />
<text  x="984.59" y="1055.5" ></text>
</g>
<g >
<title>crossbeam_deque::Stealer&lt;T&gt;::steal_batch_and_pop (15 samples, 0.03%)</title><rect x="1019.5" y="1589" width="0.3" height="15.0" fill="rgb(218,152,44)" rx="2" ry="2" />
<text  x="1022.51" y="1599.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (10 samples, 0.02%)</title><rect x="1026.0" y="1173" width="0.2" height="15.0" fill="rgb(244,176,12)" rx="2" ry="2" />
<text  x="1028.98" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (6 samples, 0.01%)</title><rect x="547.6" y="1173" width="0.1" height="15.0" fill="rgb(223,44,38)" rx="2" ry="2" />
<text  x="550.56" y="1183.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (16 samples, 0.03%)</title><rect x="1049.4" y="1445" width="0.3" height="15.0" fill="rgb(214,60,40)" rx="2" ry="2" />
<text  x="1052.38" y="1455.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (36,502 samples, 65.64%)</title><rect x="202.5" y="1493" width="774.6" height="15.0" fill="rgb(209,88,54)" rx="2" ry="2" />
<text  x="205.54" y="1503.5" >std::panic::catch_unwind</text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="1164.6" y="997" width="0.1" height="15.0" fill="rgb(209,57,43)" rx="2" ry="2" />
<text  x="1167.64" y="1007.5" ></text>
</g>
<g >
<title>futures::task_impl::with_notify (56 samples, 0.10%)</title><rect x="1007.8" y="1509" width="1.2" height="15.0" fill="rgb(212,99,36)" rx="2" ry="2" />
<text  x="1010.77" y="1519.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (12 samples, 0.02%)</title><rect x="1029.9" y="1013" width="0.3" height="15.0" fill="rgb(227,216,50)" rx="2" ry="2" />
<text  x="1032.95" y="1023.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::service::Buffer&lt;T,Request&gt; as tower_service::Service&lt;Request&gt;&gt;::call (10 samples, 0.02%)</title><rect x="985.9" y="1269" width="0.2" height="15.0" fill="rgb(240,21,6)" rx="2" ry="2" />
<text  x="988.90" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (8 samples, 0.01%)</title><rect x="1037.8" y="1237" width="0.2" height="15.0" fill="rgb(254,147,27)" rx="2" ry="2" />
<text  x="1040.82" y="1247.5" ></text>
</g>
<g >
<title>std::sync::mpsc::stream::Packet&lt;T&gt;::send (26 samples, 0.05%)</title><rect x="202.0" y="1333" width="0.5" height="15.0" fill="rgb(207,116,34)" rx="2" ry="2" />
<text  x="204.99" y="1343.5" ></text>
</g>
<g >
<title>core::mem::swap (7 samples, 0.01%)</title><rect x="1135.5" y="949" width="0.2" height="15.0" fill="rgb(252,102,28)" rx="2" ry="2" />
<text  x="1138.51" y="959.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (126 samples, 0.23%)</title><rect x="1038.4" y="1205" width="2.7" height="15.0" fill="rgb(206,21,30)" rx="2" ry="2" />
<text  x="1041.41" y="1215.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfb347edd97d33f3d (6 samples, 0.01%)</title><rect x="1030.2" y="1429" width="0.1" height="15.0" fill="rgb(206,134,17)" rx="2" ry="2" />
<text  x="1033.20" y="1439.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (6 samples, 0.01%)</title><rect x="1033.7" y="1109" width="0.1" height="15.0" fill="rgb(248,18,42)" rx="2" ry="2" />
<text  x="1036.68" y="1119.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (36 samples, 0.06%)</title><rect x="1032.5" y="1397" width="0.7" height="15.0" fill="rgb(232,65,28)" rx="2" ry="2" />
<text  x="1035.47" y="1407.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::is_power_of_two (39 samples, 0.07%)</title><rect x="691.5" y="1205" width="0.8" height="15.0" fill="rgb(237,88,51)" rx="2" ry="2" />
<text  x="694.46" y="1215.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::Handle as tokio_executor::park::Unpark&gt;::unpark (23 samples, 0.04%)</title><rect x="1014.5" y="1093" width="0.4" height="15.0" fill="rgb(227,143,4)" rx="2" ry="2" />
<text  x="1017.46" y="1103.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="1051.6" y="1269" width="0.2" height="15.0" fill="rgb(219,152,10)" rx="2" ry="2" />
<text  x="1054.59" y="1279.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (9 samples, 0.02%)</title><rect x="1025.4" y="965" width="0.2" height="15.0" fill="rgb(224,58,38)" rx="2" ry="2" />
<text  x="1028.43" y="975.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (48 samples, 0.09%)</title><rect x="1014.2" y="1429" width="1.0" height="15.0" fill="rgb(212,175,5)" rx="2" ry="2" />
<text  x="1017.16" y="1439.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="194.1" y="1349" width="0.2" height="15.0" fill="rgb(213,23,46)" rx="2" ry="2" />
<text  x="197.07" y="1359.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (52 samples, 0.09%)</title><rect x="1167.2" y="949" width="1.1" height="15.0" fill="rgb(243,169,29)" rx="2" ry="2" />
<text  x="1170.19" y="959.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (22 samples, 0.04%)</title><rect x="1032.8" y="1253" width="0.4" height="15.0" fill="rgb(232,59,46)" rx="2" ry="2" />
<text  x="1035.77" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (47 samples, 0.08%)</title><rect x="1048.0" y="1221" width="1.0" height="15.0" fill="rgb(221,40,23)" rx="2" ry="2" />
<text  x="1050.96" y="1231.5" ></text>
</g>
<g >
<title>tsd_fetch_impl (213 samples, 0.38%)</title><rect x="172.3" y="1557" width="4.5" height="15.0" fill="rgb(205,13,54)" rx="2" ry="2" />
<text  x="175.32" y="1567.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (24 samples, 0.04%)</title><rect x="1181.4" y="885" width="0.5" height="15.0" fill="rgb(232,114,48)" rx="2" ry="2" />
<text  x="1184.43" y="895.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (12 samples, 0.02%)</title><rect x="641.2" y="1205" width="0.2" height="15.0" fill="rgb(242,40,5)" rx="2" ry="2" />
<text  x="644.15" y="1215.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::push_sleeper (25 samples, 0.04%)</title><rect x="1070.3" y="1061" width="0.6" height="15.0" fill="rgb(245,154,22)" rx="2" ry="2" />
<text  x="1073.33" y="1071.5" ></text>
</g>
<g >
<title>crossbeam_epoch::epoch::AtomicEpoch::store (38 samples, 0.07%)</title><rect x="1161.9" y="965" width="0.8" height="15.0" fill="rgb(234,46,50)" rx="2" ry="2" />
<text  x="1164.89" y="975.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (33 samples, 0.06%)</title><rect x="10.4" y="1413" width="0.7" height="15.0" fill="rgb(248,175,4)" rx="2" ry="2" />
<text  x="13.40" y="1423.5" ></text>
</g>
<g >
<title>std::panicking::try (7 samples, 0.01%)</title><rect x="1034.2" y="1429" width="0.1" height="15.0" fill="rgb(206,40,4)" rx="2" ry="2" />
<text  x="1037.19" y="1439.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts_mut (63 samples, 0.11%)</title><rect x="353.8" y="1237" width="1.3" height="15.0" fill="rgb(237,61,49)" rx="2" ry="2" />
<text  x="356.79" y="1247.5" ></text>
</g>
<g >
<title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (7 samples, 0.01%)</title><rect x="855.4" y="1237" width="0.1" height="15.0" fill="rgb(231,141,2)" rx="2" ry="2" />
<text  x="858.36" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::notify (23 samples, 0.04%)</title><rect x="1014.5" y="1125" width="0.4" height="15.0" fill="rgb(222,2,0)" rx="2" ry="2" />
<text  x="1017.46" y="1135.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (37,453 samples, 67.35%)</title><rect x="195.2" y="1541" width="794.7" height="15.0" fill="rgb(245,0,13)" rx="2" ry="2" />
<text  x="198.16" y="1551.5" >&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (12 samples, 0.02%)</title><rect x="1033.7" y="1317" width="0.2" height="15.0" fill="rgb(223,162,30)" rx="2" ry="2" />
<text  x="1036.68" y="1327.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (33 samples, 0.06%)</title><rect x="10.4" y="1317" width="0.7" height="15.0" fill="rgb(217,106,1)" rx="2" ry="2" />
<text  x="13.40" y="1327.5" ></text>
</g>
<g >
<title>core::ptr::read (7 samples, 0.01%)</title><rect x="1112.6" y="853" width="0.2" height="15.0" fill="rgb(240,56,39)" rx="2" ry="2" />
<text  x="1115.64" y="863.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (7 samples, 0.01%)</title><rect x="1049.4" y="1365" width="0.1" height="15.0" fill="rgb(206,68,6)" rx="2" ry="2" />
<text  x="1052.38" y="1375.5" ></text>
</g>
<g >
<title>tty_write (6 samples, 0.01%)</title><rect x="989.7" y="933" width="0.1" height="15.0" fill="rgb(253,198,23)" rx="2" ry="2" />
<text  x="992.69" y="943.5" ></text>
</g>
<g >
<title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (12 samples, 0.02%)</title><rect x="1025.1" y="1525" width="0.3" height="15.0" fill="rgb(246,141,30)" rx="2" ry="2" />
<text  x="1028.11" y="1535.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (29 samples, 0.05%)</title><rect x="1031.2" y="1189" width="0.6" height="15.0" fill="rgb(238,18,26)" rx="2" ry="2" />
<text  x="1034.18" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::register (37 samples, 0.07%)</title><rect x="1007.0" y="1509" width="0.8" height="15.0" fill="rgb(242,162,52)" rx="2" ry="2" />
<text  x="1009.99" y="1519.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.03%)</title><rect x="1087.4" y="965" width="0.4" height="15.0" fill="rgb(216,211,10)" rx="2" ry="2" />
<text  x="1090.45" y="975.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (26 samples, 0.05%)</title><rect x="1029.4" y="1013" width="0.5" height="15.0" fill="rgb(209,54,45)" rx="2" ry="2" />
<text  x="1032.39" y="1023.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current (56 samples, 0.10%)</title><rect x="184.8" y="1317" width="1.2" height="15.0" fill="rgb(215,49,32)" rx="2" ry="2" />
<text  x="187.80" y="1327.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (102 samples, 0.18%)</title><rect x="993.2" y="1397" width="2.1" height="15.0" fill="rgb(226,35,5)" rx="2" ry="2" />
<text  x="996.15" y="1407.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Write&gt;::write (11 samples, 0.02%)</title><rect x="984.0" y="1189" width="0.2" height="15.0" fill="rgb(205,101,20)" rx="2" ry="2" />
<text  x="986.97" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (29 samples, 0.05%)</title><rect x="1031.2" y="1173" width="0.6" height="15.0" fill="rgb(222,38,18)" rx="2" ry="2" />
<text  x="1034.18" y="1183.5" ></text>
</g>
<g >
<title>serde::de::SeqAccess::next_element (24 samples, 0.04%)</title><rect x="1046.6" y="1125" width="0.5" height="15.0" fill="rgb(247,165,31)" rx="2" ry="2" />
<text  x="1049.60" y="1135.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_ptr (7 samples, 0.01%)</title><rect x="329.8" y="1253" width="0.2" height="15.0" fill="rgb(254,192,32)" rx="2" ry="2" />
<text  x="332.81" y="1263.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (16 samples, 0.03%)</title><rect x="1049.4" y="1573" width="0.3" height="15.0" fill="rgb(220,174,25)" rx="2" ry="2" />
<text  x="1052.38" y="1583.5" ></text>
</g>
<g >
<title>&lt;futures::future::either::Either&lt;A,B&gt; as futures::future::Future&gt;::poll (23 samples, 0.04%)</title><rect x="187.0" y="1397" width="0.5" height="15.0" fill="rgb(227,148,43)" rx="2" ry="2" />
<text  x="190.05" y="1407.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_enum (144 samples, 0.26%)</title><rect x="1000.0" y="1317" width="3.0" height="15.0" fill="rgb(229,227,0)" rx="2" ry="2" />
<text  x="1002.99" y="1327.5" ></text>
</g>
<g >
<title>tokio_reactor::HandlePriv::wakeup (27 samples, 0.05%)</title><rect x="10.5" y="1189" width="0.6" height="15.0" fill="rgb(236,190,41)" rx="2" ry="2" />
<text  x="13.49" y="1199.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (60 samples, 0.11%)</title><rect x="998.7" y="1349" width="1.3" height="15.0" fill="rgb(222,89,36)" rx="2" ry="2" />
<text  x="1001.71" y="1359.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (6 samples, 0.01%)</title><rect x="996.3" y="1301" width="0.1" height="15.0" fill="rgb(218,2,5)" rx="2" ry="2" />
<text  x="999.27" y="1311.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::DataType&gt;::serialize (5 samples, 0.01%)</title><rect x="1044.5" y="1045" width="0.1" height="15.0" fill="rgb(209,163,30)" rx="2" ry="2" />
<text  x="1047.48" y="1055.5" ></text>
</g>
<g >
<title>noria::view::_::&lt;impl serde::de::Deserialize for noria::view::ReadReply&gt;::deserialize (7 samples, 0.01%)</title><rect x="1022.5" y="1237" width="0.1" height="15.0" fill="rgb(215,142,15)" rx="2" ry="2" />
<text  x="1025.48" y="1247.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (40 samples, 0.07%)</title><rect x="1050.1" y="661" width="0.9" height="15.0" fill="rgb(213,65,44)" rx="2" ry="2" />
<text  x="1053.10" y="671.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (17 samples, 0.03%)</title><rect x="1036.1" y="1173" width="0.4" height="15.0" fill="rgb(208,27,13)" rx="2" ry="2" />
<text  x="1039.12" y="1183.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::with_default (49 samples, 0.09%)</title><rect x="200.2" y="1333" width="1.0" height="15.0" fill="rgb(214,152,10)" rx="2" ry="2" />
<text  x="203.16" y="1343.5" ></text>
</g>
<g >
<title>hyper::client::conn::SendRequest&lt;B&gt;::send_request_retryable (6 samples, 0.01%)</title><rect x="1024.8" y="1557" width="0.1" height="15.0" fill="rgb(237,40,12)" rx="2" ry="2" />
<text  x="1027.79" y="1567.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (12 samples, 0.02%)</title><rect x="997.4" y="1157" width="0.2" height="15.0" fill="rgb(208,22,6)" rx="2" ry="2" />
<text  x="1000.35" y="1167.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (12 samples, 0.02%)</title><rect x="1029.9" y="885" width="0.3" height="15.0" fill="rgb(228,116,34)" rx="2" ry="2" />
<text  x="1032.95" y="895.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::wrapping_sub (33 samples, 0.06%)</title><rect x="605.3" y="1221" width="0.7" height="15.0" fill="rgb(210,90,0)" rx="2" ry="2" />
<text  x="608.29" y="1231.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (9 samples, 0.02%)</title><rect x="1049.5" y="1317" width="0.2" height="15.0" fill="rgb(249,167,28)" rx="2" ry="2" />
<text  x="1052.53" y="1327.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (27 samples, 0.05%)</title><rect x="1030.5" y="1013" width="0.5" height="15.0" fill="rgb(240,47,26)" rx="2" ry="2" />
<text  x="1033.48" y="1023.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (741 samples, 1.33%)</title><rect x="660.4" y="1269" width="15.7" height="15.0" fill="rgb(220,196,54)" rx="2" ry="2" />
<text  x="663.40" y="1279.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (7 samples, 0.01%)</title><rect x="1049.4" y="1269" width="0.1" height="15.0" fill="rgb(205,58,28)" rx="2" ry="2" />
<text  x="1052.38" y="1279.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::stack::Stack::pop (8 samples, 0.01%)</title><rect x="180.2" y="1221" width="0.2" height="15.0" fill="rgb(238,159,29)" rx="2" ry="2" />
<text  x="183.24" y="1231.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (144 samples, 0.26%)</title><rect x="1000.0" y="981" width="3.0" height="15.0" fill="rgb(230,44,27)" rx="2" ry="2" />
<text  x="1002.99" y="991.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (12 samples, 0.02%)</title><rect x="997.4" y="981" width="0.2" height="15.0" fill="rgb(231,60,32)" rx="2" ry="2" />
<text  x="1000.35" y="991.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (18 samples, 0.03%)</title><rect x="1053.9" y="1173" width="0.4" height="15.0" fill="rgb(238,124,22)" rx="2" ry="2" />
<text  x="1056.90" y="1183.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNot&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1022.3" y="1349" width="0.1" height="15.0" fill="rgb(239,122,1)" rx="2" ry="2" />
<text  x="1025.33" y="1359.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="1037.8" y="1125" width="0.2" height="15.0" fill="rgb(244,169,49)" rx="2" ry="2" />
<text  x="1040.82" y="1135.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (28 samples, 0.05%)</title><rect x="1035.9" y="1557" width="0.6" height="15.0" fill="rgb(237,164,21)" rx="2" ry="2" />
<text  x="1038.89" y="1567.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (61 samples, 0.11%)</title><rect x="1031.2" y="1477" width="1.3" height="15.0" fill="rgb(239,139,51)" rx="2" ry="2" />
<text  x="1034.18" y="1487.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (12 samples, 0.02%)</title><rect x="1036.7" y="1333" width="0.2" height="15.0" fill="rgb(223,181,49)" rx="2" ry="2" />
<text  x="1039.65" y="1343.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.01%)</title><rect x="1027.6" y="1077" width="0.1" height="15.0" fill="rgb(216,139,38)" rx="2" ry="2" />
<text  x="1030.57" y="1087.5" ></text>
</g>
<g >
<title>__tz_convert (5 samples, 0.01%)</title><rect x="196.8" y="1285" width="0.1" height="15.0" fill="rgb(223,92,8)" rx="2" ry="2" />
<text  x="199.77" y="1295.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (32 samples, 0.06%)</title><rect x="761.6" y="1125" width="0.7" height="15.0" fill="rgb(243,215,15)" rx="2" ry="2" />
<text  x="764.61" y="1135.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::stream::Stream&gt;::poll (23 samples, 0.04%)</title><rect x="1035.4" y="1125" width="0.4" height="15.0" fill="rgb(216,209,48)" rx="2" ry="2" />
<text  x="1038.36" y="1135.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner$LT$T$GT$::set_rx_task::_$u7b$$u7b$closure$u7d$$u7d$::hab5440bf78fb072d (15 samples, 0.03%)</title><rect x="182.8" y="1429" width="0.3" height="15.0" fill="rgb(250,160,47)" rx="2" ry="2" />
<text  x="185.83" y="1439.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (6 samples, 0.01%)</title><rect x="1014.2" y="1045" width="0.1" height="15.0" fill="rgb(250,30,4)" rx="2" ry="2" />
<text  x="1017.20" y="1055.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (7 samples, 0.01%)</title><rect x="1056.7" y="1365" width="0.2" height="15.0" fill="rgb(205,98,54)" rx="2" ry="2" />
<text  x="1059.70" y="1375.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (11 samples, 0.02%)</title><rect x="1036.9" y="1205" width="0.2" height="15.0" fill="rgb(245,44,20)" rx="2" ry="2" />
<text  x="1039.91" y="1215.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (865 samples, 1.56%)</title><rect x="678.9" y="1253" width="18.3" height="15.0" fill="rgb(234,44,47)" rx="2" ry="2" />
<text  x="681.86" y="1263.5" ></text>
</g>
<g >
<title>&lt;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (22 samples, 0.04%)</title><rect x="302.1" y="1269" width="0.5" height="15.0" fill="rgb(238,108,44)" rx="2" ry="2" />
<text  x="305.14" y="1279.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (12 samples, 0.02%)</title><rect x="1154.0" y="805" width="0.3" height="15.0" fill="rgb(209,209,48)" rx="2" ry="2" />
<text  x="1157.01" y="815.5" ></text>
</g>
<g >
<title>std::panicking::try (8 samples, 0.01%)</title><rect x="1059.7" y="1445" width="0.2" height="15.0" fill="rgb(243,220,25)" rx="2" ry="2" />
<text  x="1062.72" y="1455.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner$LT$T$GT$::complete::_$u7b$$u7b$closure$u7d$$u7d$::h57ec2f20ad4899cb (22 samples, 0.04%)</title><rect x="1043.6" y="901" width="0.5" height="15.0" fill="rgb(210,191,29)" rx="2" ry="2" />
<text  x="1046.63" y="911.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (6 samples, 0.01%)</title><rect x="1033.8" y="1125" width="0.1" height="15.0" fill="rgb(225,183,23)" rx="2" ry="2" />
<text  x="1036.81" y="1135.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (38 samples, 0.07%)</title><rect x="1026.6" y="1429" width="0.8" height="15.0" fill="rgb(206,36,7)" rx="2" ry="2" />
<text  x="1029.64" y="1439.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (15 samples, 0.03%)</title><rect x="306.1" y="1237" width="0.3" height="15.0" fill="rgb(242,166,36)" rx="2" ry="2" />
<text  x="309.09" y="1247.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (5 samples, 0.01%)</title><rect x="1047.3" y="1237" width="0.2" height="15.0" fill="rgb(254,199,41)" rx="2" ry="2" />
<text  x="1050.35" y="1247.5" ></text>
</g>
<g >
<title>&lt;tokio_sync::oneshot::Receiver&lt;T&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="1008.4" y="1413" width="0.1" height="15.0" fill="rgb(246,96,48)" rx="2" ry="2" />
<text  x="1011.43" y="1423.5" ></text>
</g>
<g >
<title>arena_sdalloc (20 samples, 0.04%)</title><rect x="1018.7" y="1541" width="0.5" height="15.0" fill="rgb(252,146,51)" rx="2" ry="2" />
<text  x="1021.74" y="1551.5" ></text>
</g>
<g >
<title>tsd_assert_fast (14 samples, 0.03%)</title><rect x="86.2" y="1525" width="0.3" height="15.0" fill="rgb(229,162,0)" rx="2" ry="2" />
<text  x="89.22" y="1535.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for core::result::Result&lt;T,E&gt;&gt;::deserialize (24 samples, 0.04%)</title><rect x="1046.6" y="981" width="0.5" height="15.0" fill="rgb(221,216,17)" rx="2" ry="2" />
<text  x="1049.60" y="991.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::is_null (6 samples, 0.01%)</title><rect x="660.1" y="1237" width="0.2" height="15.0" fill="rgb(236,195,3)" rx="2" ry="2" />
<text  x="663.14" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (32 samples, 0.06%)</title><rect x="1031.8" y="1221" width="0.7" height="15.0" fill="rgb(218,47,52)" rx="2" ry="2" />
<text  x="1034.79" y="1231.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (12 samples, 0.02%)</title><rect x="274.9" y="1237" width="0.2" height="15.0" fill="rgb(232,37,27)" rx="2" ry="2" />
<text  x="277.87" y="1247.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_ptr (14 samples, 0.03%)</title><rect x="375.9" y="1269" width="0.3" height="15.0" fill="rgb(211,106,33)" rx="2" ry="2" />
<text  x="378.94" y="1279.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (284 samples, 0.51%)</title><rect x="1038.4" y="1365" width="6.0" height="15.0" fill="rgb(239,224,14)" rx="2" ry="2" />
<text  x="1041.41" y="1375.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (26 samples, 0.05%)</title><rect x="1007.8" y="1461" width="0.6" height="15.0" fill="rgb(251,67,53)" rx="2" ry="2" />
<text  x="1010.82" y="1471.5" ></text>
</g>
<g >
<title>tsdn_tsd (79 samples, 0.14%)</title><rect x="66.3" y="1493" width="1.6" height="15.0" fill="rgb(228,127,36)" rx="2" ry="2" />
<text  x="69.25" y="1503.5" ></text>
</g>
<g >
<title>&lt;http::header::name::HeaderName as http::header::map::as_header_name::Sealed&gt;::entry (14 samples, 0.03%)</title><rect x="1021.5" y="1493" width="0.3" height="15.0" fill="rgb(212,229,52)" rx="2" ry="2" />
<text  x="1024.46" y="1503.5" ></text>
</g>
<g >
<title>tokio_tower::mediator::Receiver&lt;T&gt;::try_recv (15 samples, 0.03%)</title><rect x="1028.1" y="1349" width="0.3" height="15.0" fill="rgb(230,103,35)" rx="2" ry="2" />
<text  x="1031.06" y="1359.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (5 samples, 0.01%)</title><rect x="180.7" y="1429" width="0.1" height="15.0" fill="rgb(220,32,47)" rx="2" ry="2" />
<text  x="183.73" y="1439.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u32&gt;::wrapping_shl (6 samples, 0.01%)</title><rect x="1143.0" y="965" width="0.1" height="15.0" fill="rgb(211,188,29)" rx="2" ry="2" />
<text  x="1146.02" y="975.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (20 samples, 0.04%)</title><rect x="1059.3" y="1205" width="0.4" height="15.0" fill="rgb(206,198,12)" rx="2" ry="2" />
<text  x="1062.29" y="1215.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (12 samples, 0.02%)</title><rect x="997.4" y="1125" width="0.2" height="15.0" fill="rgb(240,54,16)" rx="2" ry="2" />
<text  x="1000.35" y="1135.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap_or (8 samples, 0.01%)</title><rect x="1102.1" y="901" width="0.2" height="15.0" fill="rgb(246,72,23)" rx="2" ry="2" />
<text  x="1105.11" y="911.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (7 samples, 0.01%)</title><rect x="1056.9" y="1509" width="0.2" height="15.0" fill="rgb(236,84,44)" rx="2" ry="2" />
<text  x="1059.94" y="1519.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (5 samples, 0.01%)</title><rect x="1026.2" y="1061" width="0.1" height="15.0" fill="rgb(247,96,16)" rx="2" ry="2" />
<text  x="1029.19" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::is_null (6 samples, 0.01%)</title><rect x="1116.9" y="917" width="0.2" height="15.0" fill="rgb(248,98,33)" rx="2" ry="2" />
<text  x="1119.94" y="927.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (13 samples, 0.02%)</title><rect x="1026.6" y="1045" width="0.3" height="15.0" fill="rgb(223,7,46)" rx="2" ry="2" />
<text  x="1029.64" y="1055.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (26 samples, 0.05%)</title><rect x="1029.4" y="1045" width="0.5" height="15.0" fill="rgb(210,68,46)" rx="2" ry="2" />
<text  x="1032.39" y="1055.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts (27 samples, 0.05%)</title><rect x="668.7" y="1157" width="0.5" height="15.0" fill="rgb(235,114,44)" rx="2" ry="2" />
<text  x="671.65" y="1167.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (27 samples, 0.05%)</title><rect x="1045.2" y="1221" width="0.6" height="15.0" fill="rgb(225,223,53)" rx="2" ry="2" />
<text  x="1048.22" y="1231.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (15 samples, 0.03%)</title><rect x="523.1" y="1237" width="0.3" height="15.0" fill="rgb(228,12,4)" rx="2" ry="2" />
<text  x="526.07" y="1247.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (15 samples, 0.03%)</title><rect x="687.1" y="1189" width="0.3" height="15.0" fill="rgb(230,64,14)" rx="2" ry="2" />
<text  x="690.09" y="1199.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (12 samples, 0.02%)</title><rect x="995.3" y="1125" width="0.3" height="15.0" fill="rgb(210,63,18)" rx="2" ry="2" />
<text  x="998.32" y="1135.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::and_then (9 samples, 0.02%)</title><rect x="198.0" y="1237" width="0.1" height="15.0" fill="rgb(206,203,46)" rx="2" ry="2" />
<text  x="200.96" y="1247.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (14 samples, 0.03%)</title><rect x="1023.0" y="949" width="0.3" height="15.0" fill="rgb(241,179,43)" rx="2" ry="2" />
<text  x="1026.03" y="959.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (9 samples, 0.02%)</title><rect x="863.6" y="1269" width="0.2" height="15.0" fill="rgb(217,98,13)" rx="2" ry="2" />
<text  x="866.63" y="1279.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (13 samples, 0.02%)</title><rect x="1051.6" y="1525" width="0.3" height="15.0" fill="rgb(212,162,6)" rx="2" ry="2" />
<text  x="1054.59" y="1535.5" ></text>
</g>
<g >
<title>&lt;noria::data::_::&lt;impl serde::de::Deserialize for noria::data::DataType&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (144 samples, 0.26%)</title><rect x="1000.0" y="773" width="3.0" height="15.0" fill="rgb(217,155,2)" rx="2" ry="2" />
<text  x="1002.99" y="783.5" ></text>
</g>
<g >
<title>&lt;mio::net::tcp::TcpStream as std::io::Write&gt;::write (47 samples, 0.08%)</title><rect x="1050.1" y="917" width="1.0" height="15.0" fill="rgb(246,228,1)" rx="2" ry="2" />
<text  x="1053.06" y="927.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (15 samples, 0.03%)</title><rect x="1034.9" y="1429" width="0.3" height="15.0" fill="rgb(219,199,38)" rx="2" ry="2" />
<text  x="1037.87" y="1439.5" ></text>
</g>
<g >
<title>ip_finish_output (29 samples, 0.05%)</title><rect x="1042.0" y="533" width="0.6" height="15.0" fill="rgb(235,115,35)" rx="2" ry="2" />
<text  x="1044.96" y="543.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (17 samples, 0.03%)</title><rect x="1025.4" y="1157" width="0.4" height="15.0" fill="rgb(240,84,42)" rx="2" ry="2" />
<text  x="1028.43" y="1167.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="1033.4" y="1077" width="0.3" height="15.0" fill="rgb(238,133,32)" rx="2" ry="2" />
<text  x="1036.41" y="1087.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h04f609b9c309f6af (10 samples, 0.02%)</title><rect x="10.0" y="1573" width="0.2" height="15.0" fill="rgb(225,109,20)" rx="2" ry="2" />
<text  x="13.00" y="1583.5" ></text>
</g>
<g >
<title>tokio_sync::loom::sync::CausalCell&lt;T&gt;::with_mut (22 samples, 0.04%)</title><rect x="1003.1" y="1445" width="0.4" height="15.0" fill="rgb(242,83,0)" rx="2" ry="2" />
<text  x="1006.06" y="1455.5" ></text>
</g>
<g >
<title>mio::poll::RegistrationInner::set_readiness (126 samples, 0.23%)</title><rect x="1143.7" y="949" width="2.7" height="15.0" fill="rgb(243,222,18)" rx="2" ry="2" />
<text  x="1146.70" y="959.5" ></text>
</g>
<g >
<title>crossbeam_epoch::default::with_handle (929 samples, 1.67%)</title><rect x="1170.0" y="997" width="19.7" height="15.0" fill="rgb(208,86,43)" rx="2" ry="2" />
<text  x="1172.99" y="1007.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (10 samples, 0.02%)</title><rect x="1026.0" y="1285" width="0.2" height="15.0" fill="rgb(227,207,47)" rx="2" ry="2" />
<text  x="1028.98" y="1295.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_bytes (12 samples, 0.02%)</title><rect x="1110.4" y="805" width="0.2" height="15.0" fill="rgb(229,213,31)" rx="2" ry="2" />
<text  x="1113.39" y="815.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_u8 (14 samples, 0.03%)</title><rect x="1023.0" y="997" width="0.3" height="15.0" fill="rgb(221,60,36)" rx="2" ry="2" />
<text  x="1026.03" y="1007.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::get (45 samples, 0.08%)</title><rect x="831.4" y="1109" width="1.0" height="15.0" fill="rgb(248,15,26)" rx="2" ry="2" />
<text  x="834.40" y="1119.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (16 samples, 0.03%)</title><rect x="996.8" y="1509" width="0.4" height="15.0" fill="rgb(213,169,41)" rx="2" ry="2" />
<text  x="999.82" y="1519.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (10 samples, 0.02%)</title><rect x="1026.0" y="1237" width="0.2" height="15.0" fill="rgb(254,128,31)" rx="2" ry="2" />
<text  x="1028.98" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (12 samples, 0.02%)</title><rect x="1036.7" y="1157" width="0.2" height="15.0" fill="rgb(221,102,8)" rx="2" ry="2" />
<text  x="1039.65" y="1167.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (13 samples, 0.02%)</title><rect x="1027.7" y="1029" width="0.3" height="15.0" fill="rgb(247,138,50)" rx="2" ry="2" />
<text  x="1030.74" y="1039.5" ></text>
</g>
<g >
<title>imalloc_body (48 samples, 0.09%)</title><rect x="1015.8" y="1557" width="1.0" height="15.0" fill="rgb(219,211,29)" rx="2" ry="2" />
<text  x="1018.77" y="1567.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (6 samples, 0.01%)</title><rect x="1087.7" y="933" width="0.1" height="15.0" fill="rgb(215,100,43)" rx="2" ry="2" />
<text  x="1090.66" y="943.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeTuple&gt;::serialize_element (14 samples, 0.03%)</title><rect x="1023.0" y="1029" width="0.3" height="15.0" fill="rgb(252,200,8)" rx="2" ry="2" />
<text  x="1026.03" y="1039.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::h3c294772b9273f11 (9 samples, 0.02%)</title><rect x="194.8" y="1301" width="0.2" height="15.0" fill="rgb(215,131,22)" rx="2" ry="2" />
<text  x="197.84" y="1311.5" ></text>
</g>
<g >
<title>imalloc_no_sample (24 samples, 0.04%)</title><rect x="990.0" y="1557" width="0.5" height="15.0" fill="rgb(233,56,49)" rx="2" ry="2" />
<text  x="992.99" y="1567.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (6 samples, 0.01%)</title><rect x="278.7" y="1237" width="0.1" height="15.0" fill="rgb(217,86,10)" rx="2" ry="2" />
<text  x="281.69" y="1247.5" ></text>
</g>
<g >
<title>noria::view::View::lookup (27 samples, 0.05%)</title><rect x="982.5" y="1301" width="0.6" height="15.0" fill="rgb(243,139,4)" rx="2" ry="2" />
<text  x="985.52" y="1311.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (17 samples, 0.03%)</title><rect x="1023.0" y="1221" width="0.3" height="15.0" fill="rgb(250,60,7)" rx="2" ry="2" />
<text  x="1025.97" y="1231.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.02%)</title><rect x="1055.2" y="965" width="0.2" height="15.0" fill="rgb(222,205,35)" rx="2" ry="2" />
<text  x="1058.18" y="975.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (36 samples, 0.06%)</title><rect x="865.9" y="1285" width="0.8" height="15.0" fill="rgb(226,119,37)" rx="2" ry="2" />
<text  x="868.90" y="1295.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (38 samples, 0.07%)</title><rect x="1026.6" y="1493" width="0.8" height="15.0" fill="rgb(212,108,43)" rx="2" ry="2" />
<text  x="1029.64" y="1503.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::notify (49 samples, 0.09%)</title><rect x="1108.1" y="741" width="1.1" height="15.0" fill="rgb(232,29,26)" rx="2" ry="2" />
<text  x="1111.14" y="751.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="1044.4" y="1445" width="0.3" height="15.0" fill="rgb(207,156,38)" rx="2" ry="2" />
<text  x="1047.44" y="1455.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (17 samples, 0.03%)</title><rect x="1113.1" y="821" width="0.4" height="15.0" fill="rgb(224,64,30)" rx="2" ry="2" />
<text  x="1116.12" y="831.5" ></text>
</g>
<g >
<title>&lt;T as alloc::vec::SpecFromElem&gt;::from_elem (7 samples, 0.01%)</title><rect x="1021.6" y="1429" width="0.1" height="15.0" fill="rgb(251,181,43)" rx="2" ry="2" />
<text  x="1024.56" y="1439.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (9 samples, 0.02%)</title><rect x="997.2" y="965" width="0.2" height="15.0" fill="rgb(207,168,49)" rx="2" ry="2" />
<text  x="1000.16" y="975.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (29 samples, 0.05%)</title><rect x="1031.2" y="1333" width="0.6" height="15.0" fill="rgb(231,167,23)" rx="2" ry="2" />
<text  x="1034.18" y="1343.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::worker::Worker&lt;T,Request&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="1024.5" y="1525" width="0.1" height="15.0" fill="rgb(249,11,3)" rx="2" ry="2" />
<text  x="1027.47" y="1535.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNot&lt;T&gt;&gt;::serialize (8 samples, 0.01%)</title><rect x="1027.6" y="1221" width="0.1" height="15.0" fill="rgb(218,124,12)" rx="2" ry="2" />
<text  x="1030.57" y="1231.5" ></text>
</g>
<g >
<title>noria::table::_::&lt;impl serde::ser::Serialize for noria::table::Input&gt;::serialize (11 samples, 0.02%)</title><rect x="1053.4" y="1093" width="0.3" height="15.0" fill="rgb(247,77,45)" rx="2" ry="2" />
<text  x="1056.44" y="1103.5" ></text>
</g>
<g >
<title>core::mem::size_of (5 samples, 0.01%)</title><rect x="547.7" y="1205" width="0.2" height="15.0" fill="rgb(210,153,10)" rx="2" ry="2" />
<text  x="550.75" y="1215.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner&lt;T&gt;::set_rx_task (5 samples, 0.01%)</title><rect x="1007.9" y="1381" width="0.1" height="15.0" fill="rgb(224,35,42)" rx="2" ry="2" />
<text  x="1010.90" y="1391.5" ></text>
</g>
<g >
<title>core::mem::replace (5 samples, 0.01%)</title><rect x="199.9" y="1301" width="0.1" height="15.0" fill="rgb(246,171,7)" rx="2" ry="2" />
<text  x="202.89" y="1311.5" ></text>
</g>
<g >
<title>tsd_reentrancy_levelp_get_unsafe (56 samples, 0.10%)</title><rect x="162.8" y="1525" width="1.2" height="15.0" fill="rgb(238,124,29)" rx="2" ry="2" />
<text  x="165.80" y="1535.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (50 samples, 0.09%)</title><rect x="898.7" y="1285" width="1.1" height="15.0" fill="rgb(222,166,45)" rx="2" ry="2" />
<text  x="901.73" y="1295.5" ></text>
</g>
<g >
<title>imalloc (26 samples, 0.05%)</title><rect x="990.0" y="1589" width="0.5" height="15.0" fill="rgb(227,111,37)" rx="2" ry="2" />
<text  x="992.97" y="1599.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (56 samples, 0.10%)</title><rect x="184.8" y="1557" width="1.2" height="15.0" fill="rgb(254,221,3)" rx="2" ry="2" />
<text  x="187.80" y="1567.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_mut (50 samples, 0.09%)</title><rect x="920.6" y="1301" width="1.0" height="15.0" fill="rgb(213,34,36)" rx="2" ry="2" />
<text  x="923.58" y="1311.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (7 samples, 0.01%)</title><rect x="200.0" y="1333" width="0.1" height="15.0" fill="rgb(230,92,7)" rx="2" ry="2" />
<text  x="202.99" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (92 samples, 0.17%)</title><rect x="1095.6" y="821" width="1.9" height="15.0" fill="rgb(236,150,18)" rx="2" ry="2" />
<text  x="1098.58" y="831.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (118 samples, 0.21%)</title><rect x="558.2" y="1253" width="2.5" height="15.0" fill="rgb(251,115,35)" rx="2" ry="2" />
<text  x="561.23" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (32 samples, 0.06%)</title><rect x="1037.1" y="1237" width="0.7" height="15.0" fill="rgb(208,108,49)" rx="2" ry="2" />
<text  x="1040.14" y="1247.5" ></text>
</g>
<g >
<title>tokio_tower::mediator::Receiver&lt;T&gt;::try_recv (6 samples, 0.01%)</title><rect x="1037.7" y="1141" width="0.1" height="15.0" fill="rgb(236,38,44)" rx="2" ry="2" />
<text  x="1040.69" y="1151.5" ></text>
</g>
<g >
<title>async_bincode::reader::AsyncBincodeReader&lt;R,T&gt;::fill (41 samples, 0.07%)</title><rect x="1054.3" y="1237" width="0.9" height="15.0" fill="rgb(251,42,24)" rx="2" ry="2" />
<text  x="1057.28" y="1247.5" ></text>
</g>
<g >
<title>tsd_thread_allocatedp_get_unsafe (25 samples, 0.04%)</title><rect x="80.8" y="1525" width="0.6" height="15.0" fill="rgb(243,223,15)" rx="2" ry="2" />
<text  x="83.83" y="1535.5" ></text>
</g>
<g >
<title>futures::task_impl::std::BorrowedUnpark::to_owned (5 samples, 0.01%)</title><rect x="1060.2" y="1125" width="0.1" height="15.0" fill="rgb(209,184,49)" rx="2" ry="2" />
<text  x="1063.23" y="1135.5" ></text>
</g>
<g >
<title>jemallocator::layout_to_flags (26 samples, 0.05%)</title><rect x="263.2" y="1253" width="0.5" height="15.0" fill="rgb(233,39,43)" rx="2" ry="2" />
<text  x="266.18" y="1263.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (11 samples, 0.02%)</title><rect x="1036.9" y="1333" width="0.2" height="15.0" fill="rgb(213,32,10)" rx="2" ry="2" />
<text  x="1039.91" y="1343.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer (566 samples, 1.02%)</title><rect x="859.9" y="1317" width="12.0" height="15.0" fill="rgb(229,203,3)" rx="2" ry="2" />
<text  x="862.88" y="1327.5" ></text>
</g>
<g >
<title>async_bincode::reader::AsyncBincodeReader&lt;R,T&gt;::fill (19 samples, 0.03%)</title><rect x="1046.2" y="1269" width="0.4" height="15.0" fill="rgb(218,39,13)" rx="2" ry="2" />
<text  x="1049.20" y="1279.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (22 samples, 0.04%)</title><rect x="1059.9" y="1397" width="0.5" height="15.0" fill="rgb(244,216,37)" rx="2" ry="2" />
<text  x="1062.89" y="1407.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::bounded::Sender&lt;T&gt;::try_send (19 samples, 0.03%)</title><rect x="180.0" y="1493" width="0.4" height="15.0" fill="rgb(221,63,38)" rx="2" ry="2" />
<text  x="183.03" y="1503.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (14 samples, 0.03%)</title><rect x="691.2" y="1205" width="0.3" height="15.0" fill="rgb(246,21,35)" rx="2" ry="2" />
<text  x="694.17" y="1215.5" ></text>
</g>
<g >
<title>bincode::internal::serialize_into (41 samples, 0.07%)</title><rect x="1044.9" y="1237" width="0.9" height="15.0" fill="rgb(222,159,46)" rx="2" ry="2" />
<text  x="1047.93" y="1247.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (7 samples, 0.01%)</title><rect x="657.3" y="1221" width="0.2" height="15.0" fill="rgb(254,98,53)" rx="2" ry="2" />
<text  x="660.34" y="1231.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (8 samples, 0.01%)</title><rect x="1033.2" y="1333" width="0.2" height="15.0" fill="rgb(215,124,37)" rx="2" ry="2" />
<text  x="1036.24" y="1343.5" ></text>
</g>
<g >
<title>bincode::internal::serialized_size (7 samples, 0.01%)</title><rect x="1052.1" y="1141" width="0.1" height="15.0" fill="rgb(212,20,17)" rx="2" ry="2" />
<text  x="1055.06" y="1151.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_mul (39 samples, 0.07%)</title><rect x="692.7" y="1221" width="0.8" height="15.0" fill="rgb(247,180,4)" rx="2" ry="2" />
<text  x="695.72" y="1231.5" ></text>
</g>
<g >
<title>bincode::config::legacy::Config::serialize_into (52 samples, 0.09%)</title><rect x="997.6" y="1509" width="1.1" height="15.0" fill="rgb(239,110,17)" rx="2" ry="2" />
<text  x="1000.61" y="1519.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (15 samples, 0.03%)</title><rect x="1034.9" y="1189" width="0.3" height="15.0" fill="rgb(249,36,10)" rx="2" ry="2" />
<text  x="1037.87" y="1199.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::InternalAsyncWriter&lt;S,T,D&gt; as std::io::Read&gt;::read (19 samples, 0.03%)</title><rect x="1046.2" y="1237" width="0.4" height="15.0" fill="rgb(222,55,26)" rx="2" ry="2" />
<text  x="1049.20" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::with (13 samples, 0.02%)</title><rect x="1007.5" y="1477" width="0.3" height="15.0" fill="rgb(214,212,22)" rx="2" ry="2" />
<text  x="1010.50" y="1487.5" ></text>
</g>
<g >
<title>jemallocator::layout_to_flags (12 samples, 0.02%)</title><rect x="277.5" y="1205" width="0.2" height="15.0" fill="rgb(232,40,16)" rx="2" ry="2" />
<text  x="280.48" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h5b3a67a18c04d66c (5 samples, 0.01%)</title><rect x="192.7" y="1333" width="0.1" height="15.0" fill="rgb(237,220,46)" rx="2" ry="2" />
<text  x="195.69" y="1343.5" ></text>
</g>
<g >
<title>sz_size2index_lookup (132 samples, 0.24%)</title><rect x="134.7" y="1509" width="2.8" height="15.0" fill="rgb(234,56,0)" rx="2" ry="2" />
<text  x="137.68" y="1519.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (64 samples, 0.12%)</title><rect x="1050.0" y="1269" width="1.4" height="15.0" fill="rgb(232,73,37)" rx="2" ry="2" />
<text  x="1053.02" y="1279.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (48 samples, 0.09%)</title><rect x="658.5" y="1221" width="1.0" height="15.0" fill="rgb(208,170,43)" rx="2" ry="2" />
<text  x="661.49" y="1231.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (243 samples, 0.44%)</title><rect x="180.8" y="1589" width="5.2" height="15.0" fill="rgb(207,121,28)" rx="2" ry="2" />
<text  x="183.83" y="1599.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (56 samples, 0.10%)</title><rect x="184.8" y="1381" width="1.2" height="15.0" fill="rgb(245,135,24)" rx="2" ry="2" />
<text  x="187.80" y="1391.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (5 samples, 0.01%)</title><rect x="659.4" y="1205" width="0.1" height="15.0" fill="rgb(226,114,37)" rx="2" ry="2" />
<text  x="662.40" y="1215.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner&lt;T&gt;::set_rx_task (16 samples, 0.03%)</title><rect x="182.8" y="1461" width="0.3" height="15.0" fill="rgb(242,229,9)" rx="2" ry="2" />
<text  x="185.81" y="1471.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (67 samples, 0.12%)</title><rect x="894.2" y="1301" width="1.4" height="15.0" fill="rgb(211,80,4)" rx="2" ry="2" />
<text  x="897.21" y="1311.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (6 samples, 0.01%)</title><rect x="1151.1" y="661" width="0.1" height="15.0" fill="rgb(249,213,32)" rx="2" ry="2" />
<text  x="1154.11" y="671.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.01%)</title><rect x="987.4" y="1141" width="0.2" height="15.0" fill="rgb(212,6,14)" rx="2" ry="2" />
<text  x="990.45" y="1151.5" ></text>
</g>
<g >
<title>&lt;rand::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand::Rng&gt;::next_u64 (724 samples, 1.30%)</title><rect x="572.4" y="1157" width="15.4" height="15.0" fill="rgb(231,138,25)" rx="2" ry="2" />
<text  x="575.40" y="1167.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (14 samples, 0.03%)</title><rect x="186.3" y="1445" width="0.3" height="15.0" fill="rgb(220,190,6)" rx="2" ry="2" />
<text  x="189.26" y="1455.5" ></text>
</g>
<g >
<title>tcache_flush_cache (10 samples, 0.02%)</title><rect x="1060.4" y="1493" width="0.2" height="15.0" fill="rgb(213,137,29)" rx="2" ry="2" />
<text  x="1063.40" y="1503.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.01%)</title><rect x="991.8" y="1477" width="0.1" height="15.0" fill="rgb(223,155,30)" rx="2" ry="2" />
<text  x="994.77" y="1487.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (52 samples, 0.09%)</title><rect x="501.4" y="1173" width="1.2" height="15.0" fill="rgb(216,122,48)" rx="2" ry="2" />
<text  x="504.45" y="1183.5" ></text>
</g>
<g >
<title>_$LT$tokio_sync..task..atomic_task..CurrentTask$u20$as$u20$tokio_sync..task..atomic_task..Register$GT$::register::_$u7b$$u7b$closure$u7d$$u7d$::h89fa247a6f6923ad (8 samples, 0.01%)</title><rect x="1003.1" y="1381" width="0.2" height="15.0" fill="rgb(236,44,8)" rx="2" ry="2" />
<text  x="1006.13" y="1391.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (10 samples, 0.02%)</title><rect x="995.3" y="933" width="0.2" height="15.0" fill="rgb(222,21,45)" rx="2" ry="2" />
<text  x="998.32" y="943.5" ></text>
</g>
<g >
<title>core::mem::swap (34 samples, 0.06%)</title><rect x="1117.9" y="949" width="0.8" height="15.0" fill="rgb(208,8,0)" rx="2" ry="2" />
<text  x="1120.94" y="959.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (10 samples, 0.02%)</title><rect x="999.6" y="885" width="0.2" height="15.0" fill="rgb(250,178,26)" rx="2" ry="2" />
<text  x="1002.60" y="895.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (10 samples, 0.02%)</title><rect x="10.0" y="1509" width="0.2" height="15.0" fill="rgb(251,212,24)" rx="2" ry="2" />
<text  x="13.00" y="1519.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (6 samples, 0.01%)</title><rect x="1034.6" y="1461" width="0.1" height="15.0" fill="rgb(217,18,47)" rx="2" ry="2" />
<text  x="1037.57" y="1471.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::chan::Rx&lt;T,S&gt;::recv (105 samples, 0.19%)</title><rect x="1010.9" y="1541" width="2.2" height="15.0" fill="rgb(215,13,10)" rx="2" ry="2" />
<text  x="1013.89" y="1551.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (9 samples, 0.02%)</title><rect x="1042.3" y="213" width="0.2" height="15.0" fill="rgb(249,50,14)" rx="2" ry="2" />
<text  x="1045.27" y="223.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (7 samples, 0.01%)</title><rect x="1056.9" y="1573" width="0.2" height="15.0" fill="rgb(208,141,50)" rx="2" ry="2" />
<text  x="1059.94" y="1583.5" ></text>
</g>
<g >
<title>serde::de::SeqAccess::next_element (7 samples, 0.01%)</title><rect x="1022.5" y="1285" width="0.1" height="15.0" fill="rgb(239,170,15)" rx="2" ry="2" />
<text  x="1025.48" y="1295.5" ></text>
</g>
<g >
<title>noria::view::View::multi_lookup::_$u7b$$u7b$closure$u7d$$u7d$::hfd25b5db07962f7a (44 samples, 0.08%)</title><rect x="187.5" y="1381" width="1.0" height="15.0" fill="rgb(206,116,8)" rx="2" ry="2" />
<text  x="190.54" y="1391.5" ></text>
</g>
<g >
<title>&lt;chrono::naive::time::NaiveTime as core::fmt::Debug&gt;::fmt (19 samples, 0.03%)</title><rect x="999.5" y="981" width="0.4" height="15.0" fill="rgb(245,177,47)" rx="2" ry="2" />
<text  x="1002.52" y="991.5" ></text>
</g>
<g >
<title>_rjem_je_arena_tcache_fill_small (5 samples, 0.01%)</title><rect x="1017.9" y="1477" width="0.1" height="15.0" fill="rgb(220,224,6)" rx="2" ry="2" />
<text  x="1020.89" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.03%)</title><rect x="1048.4" y="773" width="0.3" height="15.0" fill="rgb(237,192,13)" rx="2" ry="2" />
<text  x="1051.41" y="783.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="190.6" y="1509" width="0.2" height="15.0" fill="rgb(237,25,10)" rx="2" ry="2" />
<text  x="193.64" y="1519.5" ></text>
</g>
<g >
<title>tokio_reactor::sharded_rwlock::RwLock&lt;T&gt;::read (20 samples, 0.04%)</title><rect x="1109.7" y="949" width="0.5" height="15.0" fill="rgb(235,29,13)" rx="2" ry="2" />
<text  x="1112.73" y="959.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (114 samples, 0.20%)</title><rect x="967.2" y="1253" width="2.5" height="15.0" fill="rgb(209,115,17)" rx="2" ry="2" />
<text  x="970.24" y="1263.5" ></text>
</g>
<g >
<title>n_tty_write (5 samples, 0.01%)</title><rect x="989.7" y="917" width="0.1" height="15.0" fill="rgb(214,50,18)" rx="2" ry="2" />
<text  x="992.72" y="927.5" ></text>
</g>
<g >
<title>&lt;chan::ChannelId as core::clone::Clone&gt;::clone (21 samples, 0.04%)</title><rect x="675.7" y="1205" width="0.4" height="15.0" fill="rgb(240,112,53)" rx="2" ry="2" />
<text  x="678.68" y="1215.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::run (18 samples, 0.03%)</title><rect x="999.1" y="933" width="0.4" height="15.0" fill="rgb(231,89,34)" rx="2" ry="2" />
<text  x="1002.14" y="943.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (8 samples, 0.01%)</title><rect x="1026.3" y="1141" width="0.2" height="15.0" fill="rgb(211,151,38)" rx="2" ry="2" />
<text  x="1029.30" y="1151.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::DataType&gt;::serialize (5 samples, 0.01%)</title><rect x="1022.3" y="1093" width="0.1" height="15.0" fill="rgb(245,182,35)" rx="2" ry="2" />
<text  x="1025.33" y="1103.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (18 samples, 0.03%)</title><rect x="421.9" y="1301" width="0.4" height="15.0" fill="rgb(235,131,22)" rx="2" ry="2" />
<text  x="424.88" y="1311.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="880.1" y="1205" width="0.2" height="15.0" fill="rgb(205,1,52)" rx="2" ry="2" />
<text  x="883.12" y="1215.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::signal_work (17 samples, 0.03%)</title><rect x="1056.3" y="1013" width="0.3" height="15.0" fill="rgb(227,142,3)" rx="2" ry="2" />
<text  x="1059.26" y="1023.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (24 samples, 0.04%)</title><rect x="1046.6" y="1093" width="0.5" height="15.0" fill="rgb(251,181,51)" rx="2" ry="2" />
<text  x="1049.60" y="1103.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::drop_id (5 samples, 0.01%)</title><rect x="182.4" y="1285" width="0.1" height="15.0" fill="rgb(207,44,19)" rx="2" ry="2" />
<text  x="185.42" y="1295.5" ></text>
</g>
<g >
<title>&lt;rand::prng::isaac64::Isaac64Rng as rand::Rng&gt;::next_u64 (607 samples, 1.09%)</title><rect x="573.6" y="1125" width="12.9" height="15.0" fill="rgb(207,6,31)" rx="2" ry="2" />
<text  x="576.59" y="1135.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (8 samples, 0.01%)</title><rect x="1023.8" y="1445" width="0.1" height="15.0" fill="rgb(220,34,34)" rx="2" ry="2" />
<text  x="1026.77" y="1455.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (13 samples, 0.02%)</title><rect x="1044.9" y="997" width="0.3" height="15.0" fill="rgb(228,47,53)" rx="2" ry="2" />
<text  x="1047.93" y="1007.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="1074.6" y="917" width="0.1" height="15.0" fill="rgb(215,31,41)" rx="2" ry="2" />
<text  x="1077.57" y="927.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::is_null (9 samples, 0.02%)</title><rect x="641.4" y="1205" width="0.2" height="15.0" fill="rgb(235,49,18)" rx="2" ry="2" />
<text  x="644.41" y="1215.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::wrappers::ClientResponseFut&lt;T,E&gt; as futures::future::Future&gt;::poll (47 samples, 0.08%)</title><rect x="181.1" y="1477" width="1.0" height="15.0" fill="rgb(242,20,54)" rx="2" ry="2" />
<text  x="184.07" y="1487.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (8 samples, 0.01%)</title><rect x="1037.8" y="1285" width="0.2" height="15.0" fill="rgb(205,124,9)" rx="2" ry="2" />
<text  x="1040.82" y="1295.5" ></text>
</g>
<g >
<title>ticker_ticks (21 samples, 0.04%)</title><rect x="992.1" y="1589" width="0.5" height="15.0" fill="rgb(219,5,46)" rx="2" ry="2" />
<text  x="995.11" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (10 samples, 0.02%)</title><rect x="1014.6" y="725" width="0.2" height="15.0" fill="rgb(247,157,9)" rx="2" ry="2" />
<text  x="1017.63" y="735.5" ></text>
</g>
<g >
<title>core::mem::swap (238 samples, 0.43%)</title><rect x="253.7" y="1253" width="5.0" height="15.0" fill="rgb(235,164,24)" rx="2" ry="2" />
<text  x="256.66" y="1263.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::chan::Rx$LT$T$C$S$GT$::recv::_$u7b$$u7b$closure$u7d$$u7d$::h1504c93c8b2ccfac (41 samples, 0.07%)</title><rect x="1011.0" y="1509" width="0.8" height="15.0" fill="rgb(248,199,38)" rx="2" ry="2" />
<text  x="1013.98" y="1519.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (14 samples, 0.03%)</title><rect x="1032.5" y="1125" width="0.3" height="15.0" fill="rgb(240,13,12)" rx="2" ry="2" />
<text  x="1035.47" y="1135.5" ></text>
</g>
<g >
<title>sys_futex (5 samples, 0.01%)</title><rect x="1134.6" y="533" width="0.1" height="15.0" fill="rgb(211,221,43)" rx="2" ry="2" />
<text  x="1137.60" y="543.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::with_default (8 samples, 0.01%)</title><rect x="193.9" y="1413" width="0.2" height="15.0" fill="rgb(239,74,22)" rx="2" ry="2" />
<text  x="196.90" y="1423.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::right_edge (58 samples, 0.10%)</title><rect x="751.6" y="1189" width="1.2" height="15.0" fill="rgb(231,122,41)" rx="2" ry="2" />
<text  x="754.56" y="1199.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::get (25 samples, 0.04%)</title><rect x="884.6" y="1301" width="0.5" height="15.0" fill="rgb(234,5,9)" rx="2" ry="2" />
<text  x="887.60" y="1311.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 0.11%)</title><rect x="577.8" y="1093" width="1.3" height="15.0" fill="rgb(232,152,9)" rx="2" ry="2" />
<text  x="580.84" y="1103.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::InternalAsyncWriter&lt;S,T,D&gt; as std::io::Read&gt;::read (6 samples, 0.01%)</title><rect x="1052.7" y="1221" width="0.1" height="15.0" fill="rgb(217,44,48)" rx="2" ry="2" />
<text  x="1055.71" y="1231.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::get (7 samples, 0.01%)</title><rect x="1148.1" y="1029" width="0.1" height="15.0" fill="rgb(236,175,28)" rx="2" ry="2" />
<text  x="1151.09" y="1039.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (78 samples, 0.14%)</title><rect x="1049.7" y="1429" width="1.7" height="15.0" fill="rgb(228,11,18)" rx="2" ry="2" />
<text  x="1052.72" y="1439.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.01%)</title><rect x="198.0" y="1205" width="0.1" height="15.0" fill="rgb(218,44,29)" rx="2" ry="2" />
<text  x="200.96" y="1215.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::is_null (31 samples, 0.06%)</title><rect x="216.0" y="1301" width="0.7" height="15.0" fill="rgb(251,213,46)" rx="2" ry="2" />
<text  x="219.01" y="1311.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::enumerate (56 samples, 0.10%)</title><rect x="326.0" y="1269" width="1.2" height="15.0" fill="rgb(217,68,34)" rx="2" ry="2" />
<text  x="329.01" y="1279.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (16 samples, 0.03%)</title><rect x="665.0" y="1189" width="0.3" height="15.0" fill="rgb(220,136,43)" rx="2" ry="2" />
<text  x="667.96" y="1199.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (10 samples, 0.02%)</title><rect x="1045.6" y="869" width="0.2" height="15.0" fill="rgb(243,217,15)" rx="2" ry="2" />
<text  x="1048.58" y="879.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (27 samples, 0.05%)</title><rect x="1031.2" y="1077" width="0.6" height="15.0" fill="rgb(247,61,4)" rx="2" ry="2" />
<text  x="1034.18" y="1087.5" ></text>
</g>
<g >
<title>alloc::str::join_generic_copy::_$u7b$$u7b$closure$u7d$$u7d$::hcca18ad076aa2511 (9 samples, 0.02%)</title><rect x="198.0" y="1221" width="0.1" height="15.0" fill="rgb(247,206,54)" rx="2" ry="2" />
<text  x="200.96" y="1231.5" ></text>
</g>
<g >
<title>sys_futex (9 samples, 0.02%)</title><rect x="982.2" y="1045" width="0.2" height="15.0" fill="rgb(249,184,17)" rx="2" ry="2" />
<text  x="985.23" y="1055.5" ></text>
</g>
<g >
<title>__libc_write (18 samples, 0.03%)</title><rect x="1048.4" y="789" width="0.3" height="15.0" fill="rgb(205,148,11)" rx="2" ry="2" />
<text  x="1051.36" y="799.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (6 samples, 0.01%)</title><rect x="1034.6" y="1445" width="0.1" height="15.0" fill="rgb(210,16,18)" rx="2" ry="2" />
<text  x="1037.57" y="1455.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (8 samples, 0.01%)</title><rect x="1026.3" y="1061" width="0.2" height="15.0" fill="rgb(247,164,28)" rx="2" ry="2" />
<text  x="1029.30" y="1071.5" ></text>
</g>
<g >
<title>sys_futex (8 samples, 0.01%)</title><rect x="1134.2" y="533" width="0.1" height="15.0" fill="rgb(229,89,43)" rx="2" ry="2" />
<text  x="1137.17" y="543.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::unwrap (53 samples, 0.10%)</title><rect x="694.5" y="1221" width="1.1" height="15.0" fill="rgb(228,208,9)" rx="2" ry="2" />
<text  x="697.48" y="1231.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::Mutex::raw_unlock (22 samples, 0.04%)</title><rect x="981.3" y="1141" width="0.5" height="15.0" fill="rgb(223,0,17)" rx="2" ry="2" />
<text  x="984.33" y="1151.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::poll_evented::PollEvented&lt;E&gt; as std::io::Read&gt;::read (21 samples, 0.04%)</title><rect x="1035.4" y="1013" width="0.4" height="15.0" fill="rgb(225,135,14)" rx="2" ry="2" />
<text  x="1038.38" y="1023.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (16 samples, 0.03%)</title><rect x="996.8" y="1525" width="0.4" height="15.0" fill="rgb(224,203,45)" rx="2" ry="2" />
<text  x="999.82" y="1535.5" ></text>
</g>
<g >
<title>__pthread_cond_signal (22 samples, 0.04%)</title><rect x="202.0" y="1301" width="0.5" height="15.0" fill="rgb(249,8,13)" rx="2" ry="2" />
<text  x="205.01" y="1311.5" ></text>
</g>
<g >
<title>rand::thread_rng::_$u7b$$u7b$closure$u7d$$u7d$::hcc219b17c8404dbf (671 samples, 1.21%)</title><rect x="616.0" y="1253" width="14.2" height="15.0" fill="rgb(213,91,41)" rx="2" ry="2" />
<text  x="618.97" y="1263.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (15 samples, 0.03%)</title><rect x="370.3" y="1253" width="0.3" height="15.0" fill="rgb(209,74,21)" rx="2" ry="2" />
<text  x="373.30" y="1263.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner$LT$T$GT$::complete::_$u7b$$u7b$closure$u7d$$u7d$::h57ec2f20ad4899cb (5 samples, 0.01%)</title><rect x="1040.5" y="901" width="0.1" height="15.0" fill="rgb(208,61,12)" rx="2" ry="2" />
<text  x="1043.47" y="911.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::into_slices (229 samples, 0.41%)</title><rect x="648.3" y="1157" width="4.9" height="15.0" fill="rgb(220,88,49)" rx="2" ry="2" />
<text  x="651.35" y="1167.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (60 samples, 0.11%)</title><rect x="579.9" y="1077" width="1.3" height="15.0" fill="rgb(210,3,42)" rx="2" ry="2" />
<text  x="582.90" y="1087.5" ></text>
</g>
<g >
<title>__libc_write (26 samples, 0.05%)</title><rect x="1028.4" y="821" width="0.6" height="15.0" fill="rgb(212,147,40)" rx="2" ry="2" />
<text  x="1031.42" y="831.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (10 samples, 0.02%)</title><rect x="1026.0" y="1221" width="0.2" height="15.0" fill="rgb(214,68,26)" rx="2" ry="2" />
<text  x="1028.98" y="1231.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (13 samples, 0.02%)</title><rect x="431.4" y="1237" width="0.2" height="15.0" fill="rgb(215,212,22)" rx="2" ry="2" />
<text  x="434.36" y="1247.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (22 samples, 0.04%)</title><rect x="1059.9" y="1413" width="0.5" height="15.0" fill="rgb(247,184,4)" rx="2" ry="2" />
<text  x="1062.89" y="1423.5" ></text>
</g>
<g >
<title>alloc::rc::RcBoxPtr::strong (132 samples, 0.24%)</title><rect x="873.7" y="1301" width="2.8" height="15.0" fill="rgb(230,11,9)" rx="2" ry="2" />
<text  x="876.69" y="1311.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (11 samples, 0.02%)</title><rect x="1035.9" y="1365" width="0.2" height="15.0" fill="rgb(226,159,26)" rx="2" ry="2" />
<text  x="1038.89" y="1375.5" ></text>
</g>
<g >
<title>extract_crng (9 samples, 0.02%)</title><rect x="189.9" y="1397" width="0.2" height="15.0" fill="rgb(253,52,53)" rx="2" ry="2" />
<text  x="192.87" y="1407.5" ></text>
</g>
<g >
<title>&lt;tokio_sync::oneshot::Receiver&lt;T&gt; as futures::future::Future&gt;::poll (16 samples, 0.03%)</title><rect x="187.0" y="1269" width="0.4" height="15.0" fill="rgb(249,81,17)" rx="2" ry="2" />
<text  x="190.05" y="1279.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (35 samples, 0.06%)</title><rect x="191.8" y="1557" width="0.8" height="15.0" fill="rgb(205,68,24)" rx="2" ry="2" />
<text  x="194.85" y="1567.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (33 samples, 0.06%)</title><rect x="1030.5" y="1429" width="0.7" height="15.0" fill="rgb(225,42,41)" rx="2" ry="2" />
<text  x="1033.48" y="1439.5" ></text>
</g>
<g >
<title>&lt;tokio_tcp::stream::TcpStream as std::io::Read&gt;::read (41 samples, 0.07%)</title><rect x="1054.3" y="1189" width="0.9" height="15.0" fill="rgb(246,129,40)" rx="2" ry="2" />
<text  x="1057.28" y="1199.5" ></text>
</g>
<g >
<title>tower_balance::p2c::service::Balance&lt;D,Req&gt;::poll_discover (23 samples, 0.04%)</title><rect x="1003.0" y="1573" width="0.5" height="15.0" fill="rgb(245,12,9)" rx="2" ry="2" />
<text  x="1006.04" y="1583.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (112 samples, 0.20%)</title><rect x="997.6" y="1541" width="2.4" height="15.0" fill="rgb(233,66,8)" rx="2" ry="2" />
<text  x="1000.61" y="1551.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (7 samples, 0.01%)</title><rect x="1056.9" y="1317" width="0.2" height="15.0" fill="rgb(228,204,1)" rx="2" ry="2" />
<text  x="1059.94" y="1327.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (11 samples, 0.02%)</title><rect x="1034.3" y="1509" width="0.3" height="15.0" fill="rgb(246,60,54)" rx="2" ry="2" />
<text  x="1037.34" y="1519.5" ></text>
</g>
<g >
<title>alloc::rc::RcBoxPtr::dec_weak (451 samples, 0.81%)</title><rect x="817.9" y="1125" width="9.6" height="15.0" fill="rgb(250,58,52)" rx="2" ry="2" />
<text  x="820.95" y="1135.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (7 samples, 0.01%)</title><rect x="1108.7" y="341" width="0.1" height="15.0" fill="rgb(237,8,36)" rx="2" ry="2" />
<text  x="1111.69" y="351.5" ></text>
</g>
<g >
<title>tokio_sync::task::atomic_task::AtomicTask::do_register::_$u7b$$u7b$closure$u7d$$u7d$::h5cc89d43b8507865 (11 samples, 0.02%)</title><rect x="1011.6" y="1445" width="0.2" height="15.0" fill="rgb(212,100,8)" rx="2" ry="2" />
<text  x="1014.61" y="1455.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (33 samples, 0.06%)</title><rect x="998.0" y="1461" width="0.7" height="15.0" fill="rgb(207,69,49)" rx="2" ry="2" />
<text  x="1001.01" y="1471.5" ></text>
</g>
<g >
<title>bytes::bytes::Inner::split_off (7 samples, 0.01%)</title><rect x="1032.2" y="981" width="0.1" height="15.0" fill="rgb(225,168,32)" rx="2" ry="2" />
<text  x="1035.15" y="991.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (12 samples, 0.02%)</title><rect x="1029.9" y="1509" width="0.3" height="15.0" fill="rgb(250,13,37)" rx="2" ry="2" />
<text  x="1032.95" y="1519.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (5 samples, 0.01%)</title><rect x="977.6" y="1301" width="0.1" height="15.0" fill="rgb(225,31,25)" rx="2" ry="2" />
<text  x="980.64" y="1311.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_mut (85 samples, 0.15%)</title><rect x="223.9" y="1285" width="1.8" height="15.0" fill="rgb(247,32,39)" rx="2" ry="2" />
<text  x="226.86" y="1295.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (6 samples, 0.01%)</title><rect x="235.4" y="1253" width="0.1" height="15.0" fill="rgb(211,185,10)" rx="2" ry="2" />
<text  x="238.37" y="1263.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="194.1" y="1285" width="0.1" height="15.0" fill="rgb(254,143,47)" rx="2" ry="2" />
<text  x="197.07" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (12 samples, 0.02%)</title><rect x="995.3" y="1141" width="0.3" height="15.0" fill="rgb(220,170,17)" rx="2" ry="2" />
<text  x="998.32" y="1151.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (38 samples, 0.07%)</title><rect x="1026.6" y="1541" width="0.8" height="15.0" fill="rgb(219,26,6)" rx="2" ry="2" />
<text  x="1029.64" y="1551.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (5 samples, 0.01%)</title><rect x="1022.2" y="965" width="0.1" height="15.0" fill="rgb(212,184,47)" rx="2" ry="2" />
<text  x="1025.22" y="975.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (13 samples, 0.02%)</title><rect x="862.4" y="1237" width="0.3" height="15.0" fill="rgb(227,3,20)" rx="2" ry="2" />
<text  x="865.42" y="1247.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (29 samples, 0.05%)</title><rect x="201.3" y="1349" width="0.6" height="15.0" fill="rgb(241,24,11)" rx="2" ry="2" />
<text  x="204.33" y="1359.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_ptr (6 samples, 0.01%)</title><rect x="1119.7" y="949" width="0.1" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1122.66" y="959.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::signal_work (6 samples, 0.01%)</title><rect x="1024.8" y="1269" width="0.1" height="15.0" fill="rgb(209,211,20)" rx="2" ry="2" />
<text  x="1027.79" y="1279.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (12 samples, 0.02%)</title><rect x="1033.7" y="1525" width="0.2" height="15.0" fill="rgb(210,208,4)" rx="2" ry="2" />
<text  x="1036.68" y="1535.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::Client&lt;T,E&gt; as tower_service::Service&lt;&lt;T as futures::sink::Sink&gt;::SinkItem&gt;&gt;::poll_ready (31 samples, 0.06%)</title><rect x="1005.3" y="1509" width="0.7" height="15.0" fill="rgb(239,141,42)" rx="2" ry="2" />
<text  x="1008.31" y="1519.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (7 samples, 0.01%)</title><rect x="1150.2" y="821" width="0.2" height="15.0" fill="rgb(250,110,36)" rx="2" ry="2" />
<text  x="1153.21" y="831.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (19 samples, 0.03%)</title><rect x="1052.6" y="1349" width="0.4" height="15.0" fill="rgb(214,181,10)" rx="2" ry="2" />
<text  x="1055.61" y="1359.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (20 samples, 0.04%)</title><rect x="1036.5" y="1557" width="0.4" height="15.0" fill="rgb(220,151,0)" rx="2" ry="2" />
<text  x="1039.48" y="1567.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (12 samples, 0.02%)</title><rect x="1029.9" y="1141" width="0.3" height="15.0" fill="rgb(246,29,52)" rx="2" ry="2" />
<text  x="1032.95" y="1151.5" ></text>
</g>
<g >
<title>std::rt::lang_start_internal::_$u7b$$u7b$closure$u7d$$u7d$::h157dcfe4decb817a (8 samples, 0.01%)</title><rect x="990.9" y="1461" width="0.2" height="15.0" fill="rgb(206,87,32)" rx="2" ry="2" />
<text  x="993.92" y="1471.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="1025.6" y="949" width="0.2" height="15.0" fill="rgb(239,220,7)" rx="2" ry="2" />
<text  x="1028.62" y="959.5" ></text>
</g>
<g >
<title>&lt;tokio_timer::timer::atomic_stack::AtomicStackEntries as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="1083.4" y="965" width="0.2" height="15.0" fill="rgb(250,41,18)" rx="2" ry="2" />
<text  x="1086.40" y="975.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (21 samples, 0.04%)</title><rect x="1033.2" y="1477" width="0.5" height="15.0" fill="rgb(245,92,50)" rx="2" ry="2" />
<text  x="1036.24" y="1487.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (5 samples, 0.01%)</title><rect x="1131.4" y="149" width="0.1" height="15.0" fill="rgb(224,130,26)" rx="2" ry="2" />
<text  x="1134.37" y="159.5" ></text>
</g>
<g >
<title>chrono::format::scan::number (7 samples, 0.01%)</title><rect x="1001.0" y="549" width="0.2" height="15.0" fill="rgb(247,154,0)" rx="2" ry="2" />
<text  x="1004.03" y="559.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (39 samples, 0.07%)</title><rect x="959.8" y="1253" width="0.8" height="15.0" fill="rgb(210,33,41)" rx="2" ry="2" />
<text  x="962.82" y="1263.5" ></text>
</g>
<g >
<title>bincode::internal::serialized_size (9 samples, 0.02%)</title><rect x="1053.2" y="1189" width="0.2" height="15.0" fill="rgb(205,64,6)" rx="2" ry="2" />
<text  x="1056.24" y="1199.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (22 samples, 0.04%)</title><rect x="1059.9" y="1525" width="0.5" height="15.0" fill="rgb(206,125,8)" rx="2" ry="2" />
<text  x="1062.89" y="1535.5" ></text>
</g>
<g >
<title>&lt;futures::future::map::Map&lt;A,F&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="192.5" y="1189" width="0.1" height="15.0" fill="rgb(241,223,9)" rx="2" ry="2" />
<text  x="195.48" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (19 samples, 0.03%)</title><rect x="1043.7" y="853" width="0.4" height="15.0" fill="rgb(245,5,0)" rx="2" ry="2" />
<text  x="1046.70" y="863.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h3d3457b86cb67885 (12 samples, 0.02%)</title><rect x="1015.2" y="1541" width="0.2" height="15.0" fill="rgb(240,224,14)" rx="2" ry="2" />
<text  x="1018.18" y="1551.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (5 samples, 0.01%)</title><rect x="191.8" y="1205" width="0.2" height="15.0" fill="rgb(209,110,9)" rx="2" ry="2" />
<text  x="194.85" y="1215.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (15 samples, 0.03%)</title><rect x="999.1" y="917" width="0.4" height="15.0" fill="rgb(220,45,18)" rx="2" ry="2" />
<text  x="1002.14" y="927.5" ></text>
</g>
<g >
<title>&lt;tower_balance::p2c::service::Balance&lt;D,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::poll_ready (267 samples, 0.48%)</title><rect x="1005.2" y="1557" width="5.6" height="15.0" fill="rgb(218,136,23)" rx="2" ry="2" />
<text  x="1008.16" y="1567.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (14 samples, 0.03%)</title><rect x="180.4" y="1429" width="0.3" height="15.0" fill="rgb(253,211,31)" rx="2" ry="2" />
<text  x="183.43" y="1439.5" ></text>
</g>
<g >
<title>tokio_reactor::HandlePriv::inner (6 samples, 0.01%)</title><rect x="1146.4" y="965" width="0.1" height="15.0" fill="rgb(209,178,14)" rx="2" ry="2" />
<text  x="1149.37" y="975.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.01%)</title><rect x="994.3" y="1205" width="0.1" height="15.0" fill="rgb(244,150,33)" rx="2" ry="2" />
<text  x="997.30" y="1215.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::get (7 samples, 0.01%)</title><rect x="893.5" y="1253" width="0.2" height="15.0" fill="rgb(248,130,52)" rx="2" ry="2" />
<text  x="896.51" y="1263.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::as_mut_ptr (10 samples, 0.02%)</title><rect x="855.3" y="1253" width="0.2" height="15.0" fill="rgb(234,229,54)" rx="2" ry="2" />
<text  x="858.29" y="1263.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (35 samples, 0.06%)</title><rect x="1051.9" y="1509" width="0.7" height="15.0" fill="rgb(210,128,40)" rx="2" ry="2" />
<text  x="1054.87" y="1519.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="192.6" y="1557" width="0.2" height="15.0" fill="rgb(254,215,28)" rx="2" ry="2" />
<text  x="195.63" y="1567.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::worker::Worker&lt;T,Request&gt; as futures::future::Future&gt;::poll (30 samples, 0.05%)</title><rect x="1056.1" y="1317" width="0.6" height="15.0" fill="rgb(242,188,18)" rx="2" ry="2" />
<text  x="1059.07" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.03%)</title><rect x="202.1" y="1269" width="0.4" height="15.0" fill="rgb(241,17,36)" rx="2" ry="2" />
<text  x="205.07" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (9 samples, 0.02%)</title><rect x="1049.5" y="1221" width="0.2" height="15.0" fill="rgb(246,179,10)" rx="2" ry="2" />
<text  x="1052.53" y="1231.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::DataType&gt;::serialize (13 samples, 0.02%)</title><rect x="1027.7" y="965" width="0.3" height="15.0" fill="rgb(227,194,42)" rx="2" ry="2" />
<text  x="1030.74" y="975.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="1034.3" y="1221" width="0.3" height="15.0" fill="rgb(224,102,24)" rx="2" ry="2" />
<text  x="1037.34" y="1231.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::expect (51 samples, 0.09%)</title><rect x="596.0" y="1141" width="1.1" height="15.0" fill="rgb(244,217,34)" rx="2" ry="2" />
<text  x="599.02" y="1151.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="180.4" y="1285" width="0.2" height="15.0" fill="rgb(221,25,50)" rx="2" ry="2" />
<text  x="183.43" y="1295.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (11 samples, 0.02%)</title><rect x="188.7" y="1253" width="0.3" height="15.0" fill="rgb(237,6,2)" rx="2" ry="2" />
<text  x="191.73" y="1263.5" ></text>
</g>
<g >
<title>mio::poll::AtomicState::compare_and_swap (7 samples, 0.01%)</title><rect x="1048.0" y="933" width="0.2" height="15.0" fill="rgb(217,185,37)" rx="2" ry="2" />
<text  x="1051.02" y="943.5" ></text>
</g>
<g >
<title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.02%)</title><rect x="566.7" y="1237" width="0.1" height="15.0" fill="rgb(219,84,38)" rx="2" ry="2" />
<text  x="569.65" y="1247.5" ></text>
</g>
<g >
<title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (10 samples, 0.02%)</title><rect x="628.5" y="1093" width="0.3" height="15.0" fill="rgb(240,74,43)" rx="2" ry="2" />
<text  x="631.55" y="1103.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::get (7 samples, 0.01%)</title><rect x="264.9" y="1269" width="0.1" height="15.0" fill="rgb(208,203,11)" rx="2" ry="2" />
<text  x="267.86" y="1279.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (17 samples, 0.03%)</title><rect x="189.0" y="1525" width="0.4" height="15.0" fill="rgb(229,105,41)" rx="2" ry="2" />
<text  x="192.02" y="1535.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (17 samples, 0.03%)</title><rect x="1036.1" y="1333" width="0.4" height="15.0" fill="rgb(214,225,2)" rx="2" ry="2" />
<text  x="1039.12" y="1343.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::stream::Stream&gt;::poll (12 samples, 0.02%)</title><rect x="1040.1" y="933" width="0.2" height="15.0" fill="rgb(220,90,38)" rx="2" ry="2" />
<text  x="1043.09" y="943.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (5 samples, 0.01%)</title><rect x="997.0" y="1301" width="0.1" height="15.0" fill="rgb(236,75,46)" rx="2" ry="2" />
<text  x="999.95" y="1311.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::ok_or (19 samples, 0.03%)</title><rect x="612.6" y="1253" width="0.4" height="15.0" fill="rgb(245,38,2)" rx="2" ry="2" />
<text  x="615.59" y="1263.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::first_edge (58 samples, 0.10%)</title><rect x="713.5" y="1285" width="1.2" height="15.0" fill="rgb(249,162,24)" rx="2" ry="2" />
<text  x="716.47" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (11 samples, 0.02%)</title><rect x="1034.0" y="1525" width="0.2" height="15.0" fill="rgb(208,149,16)" rx="2" ry="2" />
<text  x="1036.96" y="1535.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1033.8" y="1013" width="0.1" height="15.0" fill="rgb(222,190,34)" rx="2" ry="2" />
<text  x="1036.81" y="1023.5" ></text>
</g>
<g >
<title>tokio_reactor::HandlePriv::wakeup (41 samples, 0.07%)</title><rect x="1048.0" y="981" width="0.9" height="15.0" fill="rgb(239,63,41)" rx="2" ry="2" />
<text  x="1050.98" y="991.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (6 samples, 0.01%)</title><rect x="1057.9" y="1045" width="0.1" height="15.0" fill="rgb(242,190,39)" rx="2" ry="2" />
<text  x="1060.89" y="1055.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::into_val_slice (82 samples, 0.15%)</title><rect x="669.2" y="1173" width="1.8" height="15.0" fill="rgb(241,156,53)" rx="2" ry="2" />
<text  x="672.23" y="1183.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at (8 samples, 0.01%)</title><rect x="1002.8" y="517" width="0.2" height="15.0" fill="rgb(238,147,51)" rx="2" ry="2" />
<text  x="1005.81" y="527.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h1e333f0842b39e4b (56 samples, 0.10%)</title><rect x="184.8" y="1269" width="1.2" height="15.0" fill="rgb(209,70,22)" rx="2" ry="2" />
<text  x="187.80" y="1279.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (144 samples, 0.26%)</title><rect x="1000.0" y="1045" width="3.0" height="15.0" fill="rgb(227,224,54)" rx="2" ry="2" />
<text  x="1002.99" y="1055.5" ></text>
</g>
<g >
<title>_$LT$futures..stream..futures_unordered..FuturesUnordered$LT$T$GT$$u20$as$u20$futures..stream..Stream$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::hd5357ab234bc62c4 (24 samples, 0.04%)</title><rect x="1007.8" y="1445" width="0.5" height="15.0" fill="rgb(224,27,3)" rx="2" ry="2" />
<text  x="1010.84" y="1455.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::enqueue_node_with_wakeup (5 samples, 0.01%)</title><rect x="1028.1" y="981" width="0.1" height="15.0" fill="rgb(217,101,10)" rx="2" ry="2" />
<text  x="1031.14" y="991.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (12 samples, 0.02%)</title><rect x="997.4" y="1029" width="0.2" height="15.0" fill="rgb(205,80,20)" rx="2" ry="2" />
<text  x="1000.35" y="1039.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (13 samples, 0.02%)</title><rect x="934.1" y="1269" width="0.2" height="15.0" fill="rgb(251,76,10)" rx="2" ry="2" />
<text  x="937.06" y="1279.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *const T&gt;::is_null (13 samples, 0.02%)</title><rect x="329.5" y="1253" width="0.3" height="15.0" fill="rgb(226,17,12)" rx="2" ry="2" />
<text  x="332.53" y="1263.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (11 samples, 0.02%)</title><rect x="1148.9" y="901" width="0.3" height="15.0" fill="rgb(254,115,45)" rx="2" ry="2" />
<text  x="1151.92" y="911.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.01%)</title><rect x="998.1" y="869" width="0.2" height="15.0" fill="rgb(218,159,3)" rx="2" ry="2" />
<text  x="1001.12" y="879.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (93 samples, 0.17%)</title><rect x="1057.1" y="1381" width="2.0" height="15.0" fill="rgb(253,23,44)" rx="2" ry="2" />
<text  x="1060.09" y="1391.5" ></text>
</g>
<g >
<title>std::panicking::try (193 samples, 0.35%)</title><rect x="985.8" y="1477" width="4.1" height="15.0" fill="rgb(242,181,24)" rx="2" ry="2" />
<text  x="988.77" y="1487.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (25 samples, 0.04%)</title><rect x="873.2" y="1285" width="0.5" height="15.0" fill="rgb(208,128,9)" rx="2" ry="2" />
<text  x="876.16" y="1295.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_enum::&lt;impl serde::de::EnumAccess for &amp;mut bincode::de::Deserializer&lt;R,O&gt;&gt;::variant_seed (9 samples, 0.02%)</title><rect x="1000.1" y="741" width="0.2" height="15.0" fill="rgb(208,41,39)" rx="2" ry="2" />
<text  x="1003.13" y="751.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15 samples, 0.03%)</title><rect x="1002.7" y="629" width="0.3" height="15.0" fill="rgb(214,20,36)" rx="2" ry="2" />
<text  x="1005.72" y="639.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::stack::Stack::pop (5 samples, 0.01%)</title><rect x="1073.5" y="1029" width="0.1" height="15.0" fill="rgb(234,20,48)" rx="2" ry="2" />
<text  x="1076.47" y="1039.5" ></text>
</g>
<g >
<title>tokio_timer::wheel::Wheel&lt;T&gt;::poll (28 samples, 0.05%)</title><rect x="1126.6" y="997" width="0.6" height="15.0" fill="rgb(246,62,3)" rx="2" ry="2" />
<text  x="1129.62" y="1007.5" ></text>
</g>
<g >
<title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (33 samples, 0.06%)</title><rect x="292.8" y="1285" width="0.7" height="15.0" fill="rgb(230,41,7)" rx="2" ry="2" />
<text  x="295.80" y="1295.5" ></text>
</g>
<g >
<title>&lt;chrono::naive::datetime::NaiveDateTime as core::fmt::Debug&gt;::fmt (33 samples, 0.06%)</title><rect x="998.0" y="1029" width="0.7" height="15.0" fill="rgb(206,137,49)" rx="2" ry="2" />
<text  x="1001.01" y="1039.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.01%)</title><rect x="198.0" y="1189" width="0.1" height="15.0" fill="rgb(253,55,32)" rx="2" ry="2" />
<text  x="200.98" y="1199.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (19 samples, 0.03%)</title><rect x="730.7" y="1221" width="0.4" height="15.0" fill="rgb(233,145,2)" rx="2" ry="2" />
<text  x="733.65" y="1231.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h5b3a67a18c04d66c (17 samples, 0.03%)</title><rect x="189.0" y="1493" width="0.4" height="15.0" fill="rgb(217,20,41)" rx="2" ry="2" />
<text  x="192.02" y="1503.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (13 samples, 0.02%)</title><rect x="855.5" y="1253" width="0.3" height="15.0" fill="rgb(241,189,27)" rx="2" ry="2" />
<text  x="858.51" y="1263.5" ></text>
</g>
<g >
<title>&lt;bincode::de::read::SliceReader as std::io::Read&gt;::read (11 samples, 0.02%)</title><rect x="1002.7" y="533" width="0.3" height="15.0" fill="rgb(254,87,45)" rx="2" ry="2" />
<text  x="1005.74" y="543.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (11 samples, 0.02%)</title><rect x="1059.1" y="1493" width="0.2" height="15.0" fill="rgb(234,29,12)" rx="2" ry="2" />
<text  x="1062.06" y="1503.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (17 samples, 0.03%)</title><rect x="189.0" y="1445" width="0.4" height="15.0" fill="rgb(225,211,43)" rx="2" ry="2" />
<text  x="192.02" y="1455.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (60 samples, 0.11%)</title><rect x="1151.3" y="533" width="1.3" height="15.0" fill="rgb(247,124,47)" rx="2" ry="2" />
<text  x="1154.32" y="543.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (5 samples, 0.01%)</title><rect x="192.7" y="1253" width="0.1" height="15.0" fill="rgb(230,103,23)" rx="2" ry="2" />
<text  x="195.69" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (25 samples, 0.04%)</title><rect x="1026.9" y="965" width="0.5" height="15.0" fill="rgb(220,20,30)" rx="2" ry="2" />
<text  x="1029.91" y="975.5" ></text>
</g>
<g >
<title>tower_buffer::worker::Worker&lt;T,Request&gt;::poll_next_msg (11 samples, 0.02%)</title><rect x="1022.7" y="1493" width="0.2" height="15.0" fill="rgb(218,105,25)" rx="2" ry="2" />
<text  x="1025.67" y="1503.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (25 samples, 0.04%)</title><rect x="1026.9" y="1077" width="0.5" height="15.0" fill="rgb(218,134,7)" rx="2" ry="2" />
<text  x="1029.91" y="1087.5" ></text>
</g>
<g >
<title>tokio_tower::mediator::Sender&lt;T&gt;::poll_ready (31 samples, 0.06%)</title><rect x="1005.3" y="1493" width="0.7" height="15.0" fill="rgb(228,190,48)" rx="2" ry="2" />
<text  x="1008.31" y="1503.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (11 samples, 0.02%)</title><rect x="1034.3" y="1413" width="0.3" height="15.0" fill="rgb(215,53,40)" rx="2" ry="2" />
<text  x="1037.34" y="1423.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (33 samples, 0.06%)</title><rect x="1030.5" y="1573" width="0.7" height="15.0" fill="rgb(241,178,26)" rx="2" ry="2" />
<text  x="1033.48" y="1583.5" ></text>
</g>
<g >
<title>sys_write (6 samples, 0.01%)</title><rect x="989.7" y="981" width="0.1" height="15.0" fill="rgb(239,89,34)" rx="2" ry="2" />
<text  x="992.69" y="991.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.01%)</title><rect x="1026.3" y="1237" width="0.2" height="15.0" fill="rgb(210,181,10)" rx="2" ry="2" />
<text  x="1029.30" y="1247.5" ></text>
</g>
<g >
<title>fake::faker::impls::lorem::&lt;impl fake::Dummy&lt;fake::faker::lorem::raw::Sentence&lt;L&gt;&gt; for alloc::string::String&gt;::dummy_with_rng (113 samples, 0.20%)</title><rect x="197.3" y="1301" width="2.4" height="15.0" fill="rgb(246,132,37)" rx="2" ry="2" />
<text  x="200.26" y="1311.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (33 samples, 0.06%)</title><rect x="1030.5" y="1269" width="0.7" height="15.0" fill="rgb(235,88,12)" rx="2" ry="2" />
<text  x="1033.48" y="1279.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (7 samples, 0.01%)</title><rect x="998.3" y="837" width="0.1" height="15.0" fill="rgb(236,169,4)" rx="2" ry="2" />
<text  x="1001.27" y="847.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h5dfa6c2c914fc5b6 (6 samples, 0.01%)</title><rect x="1151.1" y="645" width="0.1" height="15.0" fill="rgb(247,207,39)" rx="2" ry="2" />
<text  x="1154.11" y="655.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (27 samples, 0.05%)</title><rect x="1030.5" y="1125" width="0.5" height="15.0" fill="rgb(240,30,3)" rx="2" ry="2" />
<text  x="1033.48" y="1135.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (216 samples, 0.39%)</title><rect x="1149.7" y="917" width="4.6" height="15.0" fill="rgb(247,205,40)" rx="2" ry="2" />
<text  x="1152.71" y="927.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::rand_usize::_$u7b$$u7b$closure$u7d$$u7d$::h3b37dfb687a89b40 (82 samples, 0.15%)</title><rect x="1141.5" y="997" width="1.7" height="15.0" fill="rgb(207,100,27)" rx="2" ry="2" />
<text  x="1144.45" y="1007.5" ></text>
</g>
<g >
<title>__vfs_write (6 samples, 0.01%)</title><rect x="989.7" y="949" width="0.1" height="15.0" fill="rgb(236,190,21)" rx="2" ry="2" />
<text  x="992.69" y="959.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNotInner&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1053.9" y="1125" width="0.1" height="15.0" fill="rgb(220,28,49)" rx="2" ry="2" />
<text  x="1056.90" y="1135.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::replace (7 samples, 0.01%)</title><rect x="979.6" y="1253" width="0.2" height="15.0" fill="rgb(212,92,39)" rx="2" ry="2" />
<text  x="982.64" y="1263.5" ></text>
</g>
<g >
<title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as futures::future::Future&gt;::poll (45 samples, 0.08%)</title><rect x="1152.9" y="709" width="0.9" height="15.0" fill="rgb(217,206,50)" rx="2" ry="2" />
<text  x="1155.89" y="719.5" ></text>
</g>
<g >
<title>std::panicking::try (174 samples, 0.31%)</title><rect x="1053.0" y="1525" width="3.7" height="15.0" fill="rgb(228,107,8)" rx="2" ry="2" />
<text  x="1056.01" y="1535.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::Client&lt;T,E&gt; as tower_service::Service&lt;&lt;T as futures::sink::Sink&gt;::SinkItem&gt;&gt;::call (6 samples, 0.01%)</title><rect x="1015.2" y="837" width="0.1" height="15.0" fill="rgb(205,106,6)" rx="2" ry="2" />
<text  x="1018.22" y="847.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::stack::Stack::pop (5 samples, 0.01%)</title><rect x="1048.9" y="1029" width="0.1" height="15.0" fill="rgb(214,44,33)" rx="2" ry="2" />
<text  x="1051.85" y="1039.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (8 samples, 0.01%)</title><rect x="1033.2" y="1317" width="0.2" height="15.0" fill="rgb(241,229,25)" rx="2" ry="2" />
<text  x="1036.24" y="1327.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8&gt;&gt;::write_all (10 samples, 0.02%)</title><rect x="1045.6" y="885" width="0.2" height="15.0" fill="rgb(219,132,49)" rx="2" ry="2" />
<text  x="1048.58" y="895.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.01%)</title><rect x="180.5" y="1061" width="0.1" height="15.0" fill="rgb(228,205,35)" rx="2" ry="2" />
<text  x="183.45" y="1071.5" ></text>
</g>
<g >
<title>core::cmp::min_by (9 samples, 0.02%)</title><rect x="1078.0" y="821" width="0.2" height="15.0" fill="rgb(235,197,13)" rx="2" ry="2" />
<text  x="1081.03" y="831.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (7 samples, 0.01%)</title><rect x="1022.5" y="933" width="0.1" height="15.0" fill="rgb(215,114,37)" rx="2" ry="2" />
<text  x="1025.48" y="943.5" ></text>
</g>
<g >
<title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::flush (10 samples, 0.02%)</title><rect x="1153.0" y="629" width="0.2" height="15.0" fill="rgb(235,113,18)" rx="2" ry="2" />
<text  x="1155.95" y="639.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (15 samples, 0.03%)</title><rect x="1034.9" y="1221" width="0.3" height="15.0" fill="rgb(225,8,48)" rx="2" ry="2" />
<text  x="1037.87" y="1231.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (6,082 samples, 10.94%)</title><rect x="1060.7" y="1109" width="129.0" height="15.0" fill="rgb(220,73,47)" rx="2" ry="2" />
<text  x="1063.65" y="1119.5" >tokio::runtime::..</text>
</g>
<g >
<title>futures::task_impl::current (6 samples, 0.01%)</title><rect x="1055.9" y="1253" width="0.2" height="15.0" fill="rgb(228,96,32)" rx="2" ry="2" />
<text  x="1058.94" y="1263.5" ></text>
</g>
<g >
<title>new_sync_write (14 samples, 0.03%)</title><rect x="1014.6" y="789" width="0.3" height="15.0" fill="rgb(250,180,27)" rx="2" ry="2" />
<text  x="1017.61" y="799.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::Client&lt;T,E&gt; as tower_service::Service&lt;&lt;T as futures::sink::Sink&gt;::SinkItem&gt;&gt;::call (47 samples, 0.08%)</title><rect x="1048.0" y="1285" width="1.0" height="15.0" fill="rgb(218,90,11)" rx="2" ry="2" />
<text  x="1050.96" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (8 samples, 0.01%)</title><rect x="1015.2" y="1141" width="0.1" height="15.0" fill="rgb(248,52,41)" rx="2" ry="2" />
<text  x="1018.18" y="1151.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (5 samples, 0.01%)</title><rect x="1044.5" y="1189" width="0.1" height="15.0" fill="rgb(240,111,5)" rx="2" ry="2" />
<text  x="1047.48" y="1199.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (8 samples, 0.01%)</title><rect x="699.2" y="1237" width="0.1" height="15.0" fill="rgb(236,150,40)" rx="2" ry="2" />
<text  x="702.17" y="1247.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (17 samples, 0.03%)</title><rect x="1025.4" y="1285" width="0.4" height="15.0" fill="rgb(246,96,16)" rx="2" ry="2" />
<text  x="1028.43" y="1295.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_once (7 samples, 0.01%)</title><rect x="193.2" y="1205" width="0.1" height="15.0" fill="rgb(232,146,1)" rx="2" ry="2" />
<text  x="196.16" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::hd16273aabd937917 (5 samples, 0.01%)</title><rect x="193.0" y="1189" width="0.1" height="15.0" fill="rgb(237,6,54)" rx="2" ry="2" />
<text  x="196.03" y="1199.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (15 samples, 0.03%)</title><rect x="320.7" y="1221" width="0.4" height="15.0" fill="rgb(218,47,21)" rx="2" ry="2" />
<text  x="323.75" y="1231.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 0.03%)</title><rect x="1045.8" y="1109" width="0.4" height="15.0" fill="rgb(254,181,40)" rx="2" ry="2" />
<text  x="1048.80" y="1119.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (284 samples, 0.51%)</title><rect x="1038.4" y="1285" width="6.0" height="15.0" fill="rgb(217,98,36)" rx="2" ry="2" />
<text  x="1041.41" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (11 samples, 0.02%)</title><rect x="1036.9" y="1413" width="0.2" height="15.0" fill="rgb(223,1,8)" rx="2" ry="2" />
<text  x="1039.91" y="1423.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::write (5 samples, 0.01%)</title><rect x="1024.8" y="1045" width="0.1" height="15.0" fill="rgb(208,140,1)" rx="2" ry="2" />
<text  x="1027.79" y="1055.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (11 samples, 0.02%)</title><rect x="983.3" y="1221" width="0.2" height="15.0" fill="rgb(241,109,31)" rx="2" ry="2" />
<text  x="986.27" y="1231.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (6 samples, 0.01%)</title><rect x="1030.2" y="1365" width="0.1" height="15.0" fill="rgb(218,120,16)" rx="2" ry="2" />
<text  x="1033.20" y="1375.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (19 samples, 0.03%)</title><rect x="180.0" y="1589" width="0.4" height="15.0" fill="rgb(244,182,47)" rx="2" ry="2" />
<text  x="183.03" y="1599.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (54 samples, 0.10%)</title><rect x="830.3" y="1109" width="1.1" height="15.0" fill="rgb(243,72,15)" rx="2" ry="2" />
<text  x="833.26" y="1119.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (48 samples, 0.09%)</title><rect x="1034.9" y="1525" width="1.0" height="15.0" fill="rgb(253,75,9)" rx="2" ry="2" />
<text  x="1037.87" y="1535.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current (6 samples, 0.01%)</title><rect x="1024.8" y="1349" width="0.1" height="15.0" fill="rgb(245,211,13)" rx="2" ry="2" />
<text  x="1027.79" y="1359.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::Client&lt;T,E&gt; as tower_service::Service&lt;&lt;T as futures::sink::Sink&gt;::SinkItem&gt;&gt;::poll_ready (11 samples, 0.02%)</title><rect x="1008.6" y="1381" width="0.2" height="15.0" fill="rgb(212,84,8)" rx="2" ry="2" />
<text  x="1011.58" y="1391.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessNode::enqueue_with_wakeup (34 samples, 0.06%)</title><rect x="185.1" y="1109" width="0.7" height="15.0" fill="rgb(235,173,12)" rx="2" ry="2" />
<text  x="188.10" y="1119.5" ></text>
</g>
<g >
<title>__GI___pthread_mutexattr_settype (15 samples, 0.03%)</title><rect x="241.6" y="1285" width="0.3" height="15.0" fill="rgb(208,117,14)" rx="2" ry="2" />
<text  x="244.62" y="1295.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.01%)</title><rect x="997.8" y="853" width="0.1" height="15.0" fill="rgb(244,64,3)" rx="2" ry="2" />
<text  x="1000.78" y="863.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (13 samples, 0.02%)</title><rect x="1051.6" y="1301" width="0.3" height="15.0" fill="rgb(210,44,34)" rx="2" ry="2" />
<text  x="1054.59" y="1311.5" ></text>
</g>
<g >
<title>core::mem::size_of_val (46 samples, 0.08%)</title><rect x="838.0" y="1109" width="1.0" height="15.0" fill="rgb(205,131,11)" rx="2" ry="2" />
<text  x="841.00" y="1119.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h3169cfffdbef5731 (25 samples, 0.04%)</title><rect x="980.5" y="1125" width="0.5" height="15.0" fill="rgb(248,210,22)" rx="2" ry="2" />
<text  x="983.46" y="1135.5" ></text>
</g>
<g >
<title>indexmap::map::OrderMapCore&lt;K,V&gt;::insert_phase_1 (7 samples, 0.01%)</title><rect x="1009.5" y="1493" width="0.1" height="15.0" fill="rgb(227,6,25)" rx="2" ry="2" />
<text  x="1012.49" y="1503.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (7 samples, 0.01%)</title><rect x="1059.4" y="1173" width="0.1" height="15.0" fill="rgb(254,115,4)" rx="2" ry="2" />
<text  x="1062.36" y="1183.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (6,082 samples, 10.94%)</title><rect x="1060.7" y="1141" width="129.0" height="15.0" fill="rgb(216,82,54)" rx="2" ry="2" />
<text  x="1063.65" y="1151.5" >tokio::runtime::..</text>
</g>
<g >
<title>isdalloct (16 samples, 0.03%)</title><rect x="990.5" y="1573" width="0.4" height="15.0" fill="rgb(239,39,17)" rx="2" ry="2" />
<text  x="993.54" y="1583.5" ></text>
</g>
<g >
<title>tokio_reactor::HandlePriv::wakeup (23 samples, 0.04%)</title><rect x="1014.5" y="1077" width="0.4" height="15.0" fill="rgb(224,108,13)" rx="2" ry="2" />
<text  x="1017.46" y="1087.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (26 samples, 0.05%)</title><rect x="1029.4" y="885" width="0.5" height="15.0" fill="rgb(239,17,21)" rx="2" ry="2" />
<text  x="1032.39" y="895.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::stream::Stream&gt;::poll (9 samples, 0.02%)</title><rect x="1022.4" y="1461" width="0.2" height="15.0" fill="rgb(229,88,25)" rx="2" ry="2" />
<text  x="1025.43" y="1471.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (9 samples, 0.02%)</title><rect x="1161.5" y="869" width="0.2" height="15.0" fill="rgb(234,98,24)" rx="2" ry="2" />
<text  x="1164.46" y="879.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_exchange (6 samples, 0.01%)</title><rect x="1094.0" y="885" width="0.1" height="15.0" fill="rgb(250,146,38)" rx="2" ry="2" />
<text  x="1097.01" y="895.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (49 samples, 0.09%)</title><rect x="1053.2" y="1253" width="1.1" height="15.0" fill="rgb(249,116,24)" rx="2" ry="2" />
<text  x="1056.24" y="1263.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::Mutex::raw_unlock (13 samples, 0.02%)</title><rect x="193.3" y="1221" width="0.3" height="15.0" fill="rgb(234,132,22)" rx="2" ry="2" />
<text  x="196.33" y="1231.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (11 samples, 0.02%)</title><rect x="627.0" y="1125" width="0.2" height="15.0" fill="rgb(238,136,36)" rx="2" ry="2" />
<text  x="630.00" y="1135.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Shared&lt;T&gt;::deref (5 samples, 0.01%)</title><rect x="1165.0" y="1013" width="0.1" height="15.0" fill="rgb(247,141,51)" rx="2" ry="2" />
<text  x="1167.98" y="1023.5" ></text>
</g>
<g >
<title>tcache_alloc_small (864 samples, 1.55%)</title><rect x="47.9" y="1493" width="18.4" height="15.0" fill="rgb(219,197,43)" rx="2" ry="2" />
<text  x="50.92" y="1503.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (34 samples, 0.06%)</title><rect x="1022.2" y="1525" width="0.7" height="15.0" fill="rgb(221,227,3)" rx="2" ry="2" />
<text  x="1025.18" y="1535.5" ></text>
</g>
<g >
<title>tsd_fetch_impl (139 samples, 0.25%)</title><rect x="84.2" y="1541" width="2.9" height="15.0" fill="rgb(225,102,38)" rx="2" ry="2" />
<text  x="87.16" y="1551.5" ></text>
</g>
<g >
<title>[gen] (5 samples, 0.01%)</title><rect x="565.8" y="1237" width="0.1" height="15.0" fill="rgb(229,215,11)" rx="2" ry="2" />
<text  x="568.83" y="1247.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (12 samples, 0.02%)</title><rect x="995.3" y="1333" width="0.3" height="15.0" fill="rgb(234,55,32)" rx="2" ry="2" />
<text  x="998.32" y="1343.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_and_swap (6 samples, 0.01%)</title><rect x="1130.2" y="997" width="0.1" height="15.0" fill="rgb(227,71,1)" rx="2" ry="2" />
<text  x="1133.21" y="1007.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (31 samples, 0.06%)</title><rect x="890.9" y="1237" width="0.7" height="15.0" fill="rgb(237,23,50)" rx="2" ry="2" />
<text  x="893.92" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (7 samples, 0.01%)</title><rect x="1056.9" y="1541" width="0.2" height="15.0" fill="rgb(233,118,30)" rx="2" ry="2" />
<text  x="1059.94" y="1551.5" ></text>
</g>
<g >
<title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (599 samples, 1.08%)</title><rect x="642.9" y="1221" width="12.7" height="15.0" fill="rgb(237,51,31)" rx="2" ry="2" />
<text  x="645.94" y="1231.5" ></text>
</g>
<g >
<title>std::panicking::try (64 samples, 0.12%)</title><rect x="1050.0" y="1253" width="1.4" height="15.0" fill="rgb(218,219,5)" rx="2" ry="2" />
<text  x="1053.02" y="1263.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (47 samples, 0.08%)</title><rect x="1048.0" y="1109" width="1.0" height="15.0" fill="rgb(253,4,17)" rx="2" ry="2" />
<text  x="1050.96" y="1119.5" ></text>
</g>
<g >
<title>check_entry_exit_locking (44 samples, 0.08%)</title><rect x="35.8" y="1541" width="0.9" height="15.0" fill="rgb(207,139,12)" rx="2" ry="2" />
<text  x="38.76" y="1551.5" ></text>
</g>
<g >
<title>rand::Rng::gen_range (1,854 samples, 3.33%)</title><rect x="566.8" y="1285" width="39.4" height="15.0" fill="rgb(206,30,3)" rx="2" ry="2" />
<text  x="569.85" y="1295.5" >ran..</text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (38 samples, 0.07%)</title><rect x="1026.6" y="1477" width="0.8" height="15.0" fill="rgb(236,200,22)" rx="2" ry="2" />
<text  x="1029.64" y="1487.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (15 samples, 0.03%)</title><rect x="1034.9" y="1333" width="0.3" height="15.0" fill="rgb(208,48,31)" rx="2" ry="2" />
<text  x="1037.87" y="1343.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (12 samples, 0.02%)</title><rect x="1033.7" y="1445" width="0.2" height="15.0" fill="rgb(225,126,49)" rx="2" ry="2" />
<text  x="1036.68" y="1455.5" ></text>
</g>
<g >
<title>bincode::internal::serialize_into (14 samples, 0.03%)</title><rect x="1027.4" y="1269" width="0.3" height="15.0" fill="rgb(238,174,17)" rx="2" ry="2" />
<text  x="1030.44" y="1279.5" ></text>
</g>
<g >
<title>tokio_io::async_read::AsyncRead::poll_read (13 samples, 0.02%)</title><rect x="1037.4" y="1077" width="0.3" height="15.0" fill="rgb(220,102,52)" rx="2" ry="2" />
<text  x="1040.39" y="1087.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNot&lt;T&gt;&gt;::serialize (19 samples, 0.03%)</title><rect x="997.6" y="1429" width="0.4" height="15.0" fill="rgb(219,48,27)" rx="2" ry="2" />
<text  x="1000.61" y="1439.5" ></text>
</g>
<g >
<title>ticker_ticks (130 samples, 0.23%)</title><rect x="62.0" y="1445" width="2.8" height="15.0" fill="rgb(243,63,36)" rx="2" ry="2" />
<text  x="65.03" y="1455.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (12 samples, 0.02%)</title><rect x="999.2" y="837" width="0.2" height="15.0" fill="rgb(212,90,46)" rx="2" ry="2" />
<text  x="1002.18" y="847.5" ></text>
</g>
<g >
<title>bincode::config::legacy::Config::serialize_into (7 samples, 0.01%)</title><rect x="1023.8" y="1429" width="0.1" height="15.0" fill="rgb(244,99,33)" rx="2" ry="2" />
<text  x="1026.77" y="1439.5" ></text>
</g>
<g >
<title>crossbeam_epoch::internal::Local::pin (15 samples, 0.03%)</title><rect x="1019.5" y="1477" width="0.3" height="15.0" fill="rgb(234,140,21)" rx="2" ry="2" />
<text  x="1022.51" y="1487.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (5 samples, 0.01%)</title><rect x="1005.0" y="1381" width="0.1" height="15.0" fill="rgb(243,155,27)" rx="2" ry="2" />
<text  x="1007.97" y="1391.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (218 samples, 0.39%)</title><rect x="1130.8" y="853" width="4.6" height="15.0" fill="rgb(233,145,53)" rx="2" ry="2" />
<text  x="1133.76" y="863.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::core::TaskUnpark as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="1058.4" y="1189" width="0.2" height="15.0" fill="rgb(234,98,14)" rx="2" ry="2" />
<text  x="1061.44" y="1199.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (11 samples, 0.02%)</title><rect x="1045.6" y="1141" width="0.2" height="15.0" fill="rgb(232,70,32)" rx="2" ry="2" />
<text  x="1048.56" y="1151.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (31 samples, 0.06%)</title><rect x="1059.1" y="1557" width="0.6" height="15.0" fill="rgb(228,154,1)" rx="2" ry="2" />
<text  x="1062.06" y="1567.5" ></text>
</g>
<g >
<title>core::ptr::write (10 samples, 0.02%)</title><rect x="817.6" y="1029" width="0.2" height="15.0" fill="rgb(250,150,4)" rx="2" ry="2" />
<text  x="820.59" y="1039.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (8 samples, 0.01%)</title><rect x="1015.2" y="981" width="0.1" height="15.0" fill="rgb(250,127,12)" rx="2" ry="2" />
<text  x="1018.18" y="991.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run (38 samples, 0.07%)</title><rect x="1026.6" y="1509" width="0.8" height="15.0" fill="rgb(224,142,30)" rx="2" ry="2" />
<text  x="1029.64" y="1519.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::CurrentTask::can_block (13 samples, 0.02%)</title><rect x="1148.6" y="981" width="0.3" height="15.0" fill="rgb(224,149,16)" rx="2" ry="2" />
<text  x="1151.60" y="991.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::DataType&gt;::serialize (6 samples, 0.01%)</title><rect x="1014.2" y="981" width="0.1" height="15.0" fill="rgb(234,22,0)" rx="2" ry="2" />
<text  x="1017.20" y="991.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="192.7" y="1189" width="0.1" height="15.0" fill="rgb(229,180,26)" rx="2" ry="2" />
<text  x="195.69" y="1199.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (12 samples, 0.02%)</title><rect x="1091.9" y="869" width="0.2" height="15.0" fill="rgb(211,223,30)" rx="2" ry="2" />
<text  x="1094.88" y="879.5" ></text>
</g>
<g >
<title>tokio_timer::wheel::level::Level&lt;T&gt;::next_expiration (6 samples, 0.01%)</title><rect x="1082.7" y="949" width="0.2" height="15.0" fill="rgb(238,97,16)" rx="2" ry="2" />
<text  x="1085.74" y="959.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (51 samples, 0.09%)</title><rect x="585.4" y="1093" width="1.1" height="15.0" fill="rgb(211,205,54)" rx="2" ry="2" />
<text  x="588.37" y="1103.5" ></text>
</g>
<g >
<title>futures::sync::mpsc::UnboundedSender&lt;T&gt;::unbounded_send (6 samples, 0.01%)</title><rect x="1024.8" y="1525" width="0.1" height="15.0" fill="rgb(220,145,7)" rx="2" ry="2" />
<text  x="1027.79" y="1535.5" ></text>
</g>
<g >
<title>gen::main::_$u7b$$u7b$closure$u7d$$u7d$::hde85e8366ff24cf1 (50 samples, 0.09%)</title><rect x="192.8" y="1461" width="1.1" height="15.0" fill="rgb(245,137,39)" rx="2" ry="2" />
<text  x="195.84" y="1471.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (7 samples, 0.01%)</title><rect x="1028.7" y="693" width="0.1" height="15.0" fill="rgb(206,125,25)" rx="2" ry="2" />
<text  x="1031.69" y="703.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (12 samples, 0.02%)</title><rect x="1029.9" y="949" width="0.3" height="15.0" fill="rgb(239,45,26)" rx="2" ry="2" />
<text  x="1032.95" y="959.5" ></text>
</g>
<g >
<title>std::panicking::try (14 samples, 0.03%)</title><rect x="1049.7" y="1253" width="0.3" height="15.0" fill="rgb(213,182,39)" rx="2" ry="2" />
<text  x="1052.72" y="1263.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (9 samples, 0.02%)</title><rect x="1025.4" y="997" width="0.2" height="15.0" fill="rgb(232,204,14)" rx="2" ry="2" />
<text  x="1028.43" y="1007.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (38 samples, 0.07%)</title><rect x="1026.6" y="1333" width="0.8" height="15.0" fill="rgb(226,188,21)" rx="2" ry="2" />
<text  x="1029.64" y="1343.5" ></text>
</g>
<g >
<title>__libc_write (11 samples, 0.02%)</title><rect x="983.3" y="1141" width="0.2" height="15.0" fill="rgb(245,208,29)" rx="2" ry="2" />
<text  x="986.27" y="1151.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (64 samples, 0.12%)</title><rect x="1050.0" y="1317" width="1.4" height="15.0" fill="rgb(253,183,18)" rx="2" ry="2" />
<text  x="1053.02" y="1327.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::unwrap (20 samples, 0.04%)</title><rect x="853.8" y="1237" width="0.4" height="15.0" fill="rgb(242,177,30)" rx="2" ry="2" />
<text  x="856.77" y="1247.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::Mutex::init (316 samples, 0.57%)</title><rect x="236.5" y="1317" width="6.7" height="15.0" fill="rgb(230,62,10)" rx="2" ry="2" />
<text  x="239.49" y="1327.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::Pool&lt;MS,Target,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (21 samples, 0.04%)</title><rect x="1056.3" y="1301" width="0.4" height="15.0" fill="rgb(218,88,34)" rx="2" ry="2" />
<text  x="1059.26" y="1311.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::chan::Rx$LT$T$C$S$GT$::recv::_$u7b$$u7b$closure$u7d$$u7d$::h67198b28f1d1fcdb (5 samples, 0.01%)</title><rect x="1013.0" y="1509" width="0.1" height="15.0" fill="rgb(251,166,5)" rx="2" ry="2" />
<text  x="1016.01" y="1519.5" ></text>
</g>
<g >
<title>core::mem::swap (19 samples, 0.03%)</title><rect x="1085.3" y="949" width="0.4" height="15.0" fill="rgb(241,8,13)" rx="2" ry="2" />
<text  x="1088.31" y="959.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (10 samples, 0.02%)</title><rect x="1026.0" y="1205" width="0.2" height="15.0" fill="rgb(219,88,42)" rx="2" ry="2" />
<text  x="1028.98" y="1215.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.03%)</title><rect x="1025.4" y="1333" width="0.4" height="15.0" fill="rgb(253,34,25)" rx="2" ry="2" />
<text  x="1028.43" y="1343.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::notify (22 samples, 0.04%)</title><rect x="1073.0" y="1029" width="0.5" height="15.0" fill="rgb(228,179,34)" rx="2" ry="2" />
<text  x="1076.00" y="1039.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.08%)</title><rect x="987.1" y="1157" width="0.9" height="15.0" fill="rgb(251,46,11)" rx="2" ry="2" />
<text  x="990.11" y="1167.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::CurrentTask::set (17 samples, 0.03%)</title><rect x="1154.4" y="1013" width="0.3" height="15.0" fill="rgb(237,39,28)" rx="2" ry="2" />
<text  x="1157.37" y="1023.5" ></text>
</g>
<g >
<title>sys_epoll_wait (105 samples, 0.19%)</title><rect x="1103.7" y="853" width="2.3" height="15.0" fill="rgb(233,196,33)" rx="2" ry="2" />
<text  x="1106.75" y="863.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (10 samples, 0.02%)</title><rect x="1096.6" y="677" width="0.2" height="15.0" fill="rgb(221,22,21)" rx="2" ry="2" />
<text  x="1099.64" y="687.5" ></text>
</g>
<g >
<title>tokio_reactor::sharded_rwlock::thread_index (11 samples, 0.02%)</title><rect x="1109.9" y="933" width="0.3" height="15.0" fill="rgb(240,36,15)" rx="2" ry="2" />
<text  x="1112.92" y="943.5" ></text>
</g>
<g >
<title>bincode::deserialize (24 samples, 0.04%)</title><rect x="1046.6" y="1269" width="0.5" height="15.0" fill="rgb(245,105,33)" rx="2" ry="2" />
<text  x="1049.60" y="1279.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (12 samples, 0.02%)</title><rect x="194.1" y="1381" width="0.2" height="15.0" fill="rgb(214,204,41)" rx="2" ry="2" />
<text  x="197.07" y="1391.5" ></text>
</g>
<g >
<title>tokio_timer::ms (6 samples, 0.01%)</title><rect x="1126.4" y="997" width="0.2" height="15.0" fill="rgb(231,105,50)" rx="2" ry="2" />
<text  x="1129.43" y="1007.5" ></text>
</g>
<g >
<title>imalloc_no_sample (33 samples, 0.06%)</title><rect x="1016.0" y="1541" width="0.7" height="15.0" fill="rgb(228,176,47)" rx="2" ry="2" />
<text  x="1019.03" y="1551.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.01%)</title><rect x="189.2" y="1221" width="0.2" height="15.0" fill="rgb(206,136,43)" rx="2" ry="2" />
<text  x="192.24" y="1231.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (12 samples, 0.02%)</title><rect x="1015.2" y="1301" width="0.2" height="15.0" fill="rgb(205,156,31)" rx="2" ry="2" />
<text  x="1018.18" y="1311.5" ></text>
</g>
<g >
<title>rand::Rng::gen (9 samples, 0.02%)</title><rect x="199.5" y="1205" width="0.2" height="15.0" fill="rgb(227,5,52)" rx="2" ry="2" />
<text  x="202.46" y="1215.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="991.1" y="1573" width="0.1" height="15.0" fill="rgb(214,194,26)" rx="2" ry="2" />
<text  x="994.14" y="1583.5" ></text>
</g>
<g >
<title>alloc::rc::RcBoxPtr::strong (29 samples, 0.05%)</title><rect x="557.6" y="1253" width="0.6" height="15.0" fill="rgb(211,88,22)" rx="2" ry="2" />
<text  x="560.62" y="1263.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (27 samples, 0.05%)</title><rect x="1022.9" y="1493" width="0.6" height="15.0" fill="rgb(228,195,47)" rx="2" ry="2" />
<text  x="1025.90" y="1503.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (8 samples, 0.01%)</title><rect x="1023.5" y="1509" width="0.2" height="15.0" fill="rgb(218,42,11)" rx="2" ry="2" />
<text  x="1026.54" y="1519.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (20 samples, 0.04%)</title><rect x="1029.0" y="1173" width="0.4" height="15.0" fill="rgb(208,103,30)" rx="2" ry="2" />
<text  x="1031.97" y="1183.5" ></text>
</g>
<g >
<title>std::panicking::try (6 samples, 0.01%)</title><rect x="1031.0" y="1061" width="0.2" height="15.0" fill="rgb(250,108,25)" rx="2" ry="2" />
<text  x="1034.05" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::offset (13 samples, 0.02%)</title><rect x="586.1" y="1045" width="0.3" height="15.0" fill="rgb(212,103,0)" rx="2" ry="2" />
<text  x="589.09" y="1055.5" ></text>
</g>
<g >
<title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::read_body (6 samples, 0.01%)</title><rect x="1031.0" y="709" width="0.2" height="15.0" fill="rgb(238,41,16)" rx="2" ry="2" />
<text  x="1034.05" y="719.5" ></text>
</g>
<g >
<title>std::panicking::try (126 samples, 0.23%)</title><rect x="1038.4" y="1189" width="2.7" height="15.0" fill="rgb(209,52,26)" rx="2" ry="2" />
<text  x="1041.41" y="1199.5" ></text>
</g>
<g >
<title>core::mem::drop (6 samples, 0.01%)</title><rect x="883.3" y="1285" width="0.2" height="15.0" fill="rgb(207,51,46)" rx="2" ry="2" />
<text  x="886.35" y="1295.5" ></text>
</g>
<g >
<title>mio::poll::SetReadiness::set_readiness (22 samples, 0.04%)</title><rect x="1024.0" y="1189" width="0.5" height="15.0" fill="rgb(208,61,41)" rx="2" ry="2" />
<text  x="1027.01" y="1199.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (5 samples, 0.01%)</title><rect x="191.0" y="1509" width="0.1" height="15.0" fill="rgb(232,117,15)" rx="2" ry="2" />
<text  x="194.04" y="1519.5" ></text>
</g>
<g >
<title>core::alloc::Layout::size (11 samples, 0.02%)</title><rect x="914.7" y="1205" width="0.3" height="15.0" fill="rgb(238,116,32)" rx="2" ry="2" />
<text  x="917.73" y="1215.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (17 samples, 0.03%)</title><rect x="198.5" y="1285" width="0.4" height="15.0" fill="rgb(221,152,18)" rx="2" ry="2" />
<text  x="201.51" y="1295.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_u8 (15 samples, 0.03%)</title><rect x="1002.7" y="597" width="0.3" height="15.0" fill="rgb(249,18,51)" rx="2" ry="2" />
<text  x="1005.72" y="607.5" ></text>
</g>
<g >
<title>futures::task_impl::std::tls_slot (12 samples, 0.02%)</title><rect x="1154.0" y="821" width="0.3" height="15.0" fill="rgb(238,67,19)" rx="2" ry="2" />
<text  x="1157.01" y="831.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::millis (7 samples, 0.01%)</title><rect x="1125.0" y="869" width="0.1" height="15.0" fill="rgb(208,58,46)" rx="2" ry="2" />
<text  x="1127.99" y="879.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="201.4" y="1253" width="0.1" height="15.0" fill="rgb(218,52,21)" rx="2" ry="2" />
<text  x="204.39" y="1263.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (181 samples, 0.33%)</title><rect x="591.4" y="1045" width="3.8" height="15.0" fill="rgb(229,71,0)" rx="2" ry="2" />
<text  x="594.40" y="1055.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::PoolDiscoverer&lt;MS,Target,Request&gt; as tower_discover::Discover&gt;::poll (23 samples, 0.04%)</title><rect x="1003.0" y="1557" width="0.5" height="15.0" fill="rgb(208,223,49)" rx="2" ry="2" />
<text  x="1006.04" y="1567.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (19 samples, 0.03%)</title><rect x="1186.9" y="821" width="0.4" height="15.0" fill="rgb(206,203,54)" rx="2" ry="2" />
<text  x="1189.94" y="831.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple (144 samples, 0.26%)</title><rect x="1000.0" y="1413" width="3.0" height="15.0" fill="rgb(209,16,32)" rx="2" ry="2" />
<text  x="1002.99" y="1423.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (93 samples, 0.17%)</title><rect x="1057.1" y="1461" width="2.0" height="15.0" fill="rgb(208,209,13)" rx="2" ry="2" />
<text  x="1060.09" y="1471.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="1049.5" y="1141" width="0.2" height="15.0" fill="rgb(218,161,29)" rx="2" ry="2" />
<text  x="1052.53" y="1151.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (39 samples, 0.07%)</title><rect x="320.2" y="1237" width="0.9" height="15.0" fill="rgb(248,86,28)" rx="2" ry="2" />
<text  x="323.24" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (19 samples, 0.03%)</title><rect x="1052.6" y="1589" width="0.4" height="15.0" fill="rgb(249,133,38)" rx="2" ry="2" />
<text  x="1055.61" y="1599.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (8 samples, 0.01%)</title><rect x="193.9" y="1509" width="0.2" height="15.0" fill="rgb(224,47,8)" rx="2" ry="2" />
<text  x="196.90" y="1519.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.01%)</title><rect x="1149.4" y="965" width="0.1" height="15.0" fill="rgb(246,94,47)" rx="2" ry="2" />
<text  x="1152.41" y="975.5" ></text>
</g>
<g >
<title>core::ptr::write (5 samples, 0.01%)</title><rect x="1118.6" y="917" width="0.1" height="15.0" fill="rgb(226,116,51)" rx="2" ry="2" />
<text  x="1121.56" y="927.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (29 samples, 0.05%)</title><rect x="1031.2" y="1125" width="0.6" height="15.0" fill="rgb(207,4,40)" rx="2" ry="2" />
<text  x="1034.18" y="1135.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::write (11 samples, 0.02%)</title><rect x="983.3" y="1173" width="0.2" height="15.0" fill="rgb(205,145,44)" rx="2" ry="2" />
<text  x="986.27" y="1183.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (7 samples, 0.01%)</title><rect x="1019.3" y="1477" width="0.1" height="15.0" fill="rgb(238,26,25)" rx="2" ry="2" />
<text  x="1022.27" y="1487.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (10 samples, 0.02%)</title><rect x="1043.8" y="645" width="0.2" height="15.0" fill="rgb(209,143,48)" rx="2" ry="2" />
<text  x="1046.82" y="655.5" ></text>
</g>
<g >
<title>syscall (9 samples, 0.02%)</title><rect x="189.9" y="1477" width="0.2" height="15.0" fill="rgb(227,44,13)" rx="2" ry="2" />
<text  x="192.87" y="1487.5" ></text>
</g>
<g >
<title>tokio_tower::mediator::Receiver&lt;T&gt;::try_recv (10 samples, 0.02%)</title><rect x="1060.1" y="1205" width="0.3" height="15.0" fill="rgb(219,8,30)" rx="2" ry="2" />
<text  x="1063.14" y="1215.5" ></text>
</g>
<g >
<title>jemallocator::layout_to_flags (20 samples, 0.04%)</title><rect x="891.8" y="1237" width="0.5" height="15.0" fill="rgb(222,175,43)" rx="2" ry="2" />
<text  x="894.83" y="1247.5" ></text>
</g>
<g >
<title>core::alloc::Layout::size (11 samples, 0.02%)</title><rect x="214.8" y="1285" width="0.2" height="15.0" fill="rgb(218,36,35)" rx="2" ry="2" />
<text  x="217.78" y="1295.5" ></text>
</g>
<g >
<title>do_syscall_64 (46 samples, 0.08%)</title><rect x="1050.1" y="821" width="1.0" height="15.0" fill="rgb(247,147,54)" rx="2" ry="2" />
<text  x="1053.08" y="831.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (5 samples, 0.01%)</title><rect x="191.8" y="1221" width="0.2" height="15.0" fill="rgb(236,225,43)" rx="2" ry="2" />
<text  x="194.85" y="1231.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::h21cd600e9f97af32 (10 samples, 0.02%)</title><rect x="1051.4" y="1541" width="0.2" height="15.0" fill="rgb(252,215,22)" rx="2" ry="2" />
<text  x="1054.38" y="1551.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (32 samples, 0.06%)</title><rect x="1037.1" y="1317" width="0.7" height="15.0" fill="rgb(228,15,11)" rx="2" ry="2" />
<text  x="1040.14" y="1327.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (127 samples, 0.23%)</title><rect x="1000.3" y="741" width="2.7" height="15.0" fill="rgb(235,118,18)" rx="2" ry="2" />
<text  x="1003.35" y="751.5" ></text>
</g>
<g >
<title>&lt;futures::future::then::Then&lt;A,B,F&gt; as futures::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="1041.1" y="965" width="0.2" height="15.0" fill="rgb(220,95,19)" rx="2" ry="2" />
<text  x="1044.09" y="975.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (23 samples, 0.04%)</title><rect x="1057.6" y="1237" width="0.5" height="15.0" fill="rgb(205,140,10)" rx="2" ry="2" />
<text  x="1060.59" y="1247.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for core::result::Result&lt;T,E&gt;&gt;::deserialize::ResultVisitor&lt;T,E&gt; as serde::de::Visitor&gt;::visit_enum (24 samples, 0.04%)</title><rect x="1046.6" y="949" width="0.5" height="15.0" fill="rgb(220,30,48)" rx="2" ry="2" />
<text  x="1049.60" y="959.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (33 samples, 0.06%)</title><rect x="1035.2" y="1269" width="0.7" height="15.0" fill="rgb(248,125,11)" rx="2" ry="2" />
<text  x="1038.19" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (9 samples, 0.02%)</title><rect x="1025.4" y="853" width="0.2" height="15.0" fill="rgb(216,5,8)" rx="2" ry="2" />
<text  x="1028.43" y="863.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (36 samples, 0.06%)</title><rect x="1032.5" y="1525" width="0.7" height="15.0" fill="rgb(223,138,24)" rx="2" ry="2" />
<text  x="1035.47" y="1535.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (28 samples, 0.05%)</title><rect x="1037.8" y="1493" width="0.6" height="15.0" fill="rgb(215,216,22)" rx="2" ry="2" />
<text  x="1040.82" y="1503.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (18 samples, 0.03%)</title><rect x="1042.1" y="293" width="0.4" height="15.0" fill="rgb(210,114,35)" rx="2" ry="2" />
<text  x="1045.08" y="303.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (7 samples, 0.01%)</title><rect x="277.9" y="1205" width="0.1" height="15.0" fill="rgb(216,106,29)" rx="2" ry="2" />
<text  x="280.87" y="1215.5" ></text>
</g>
<g >
<title>gen::main::_$u7b$$u7b$closure$u7d$$u7d$::hde85e8366ff24cf1 (10 samples, 0.02%)</title><rect x="10.0" y="1429" width="0.2" height="15.0" fill="rgb(234,134,31)" rx="2" ry="2" />
<text  x="13.00" y="1439.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (13 samples, 0.02%)</title><rect x="1033.4" y="1301" width="0.3" height="15.0" fill="rgb(218,1,22)" rx="2" ry="2" />
<text  x="1036.41" y="1311.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (12 samples, 0.02%)</title><rect x="1075.6" y="901" width="0.2" height="15.0" fill="rgb(243,1,40)" rx="2" ry="2" />
<text  x="1078.59" y="911.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (10 samples, 0.02%)</title><rect x="995.3" y="885" width="0.2" height="15.0" fill="rgb(223,12,28)" rx="2" ry="2" />
<text  x="998.32" y="895.5" ></text>
</g>
<g >
<title>wake_up_q (10 samples, 0.02%)</title><rect x="1043.8" y="677" width="0.2" height="15.0" fill="rgb(218,195,37)" rx="2" ry="2" />
<text  x="1046.82" y="687.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.01%)</title><rect x="989.3" y="1221" width="0.1" height="15.0" fill="rgb(206,17,44)" rx="2" ry="2" />
<text  x="992.29" y="1231.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (30 samples, 0.05%)</title><rect x="1022.9" y="1509" width="0.6" height="15.0" fill="rgb(241,16,17)" rx="2" ry="2" />
<text  x="1025.90" y="1519.5" ></text>
</g>
<g >
<title>threadpool::spawn_in_pool::_$u7b$$u7b$closure$u7d$$u7d$::ha96bb8c2eba59f2e (193 samples, 0.35%)</title><rect x="985.8" y="1381" width="4.1" height="15.0" fill="rgb(240,92,11)" rx="2" ry="2" />
<text  x="988.77" y="1391.5" ></text>
</g>
<g >
<title>_rjem_sdallocx (33 samples, 0.06%)</title><rect x="1018.6" y="1589" width="0.7" height="15.0" fill="rgb(205,138,49)" rx="2" ry="2" />
<text  x="1021.55" y="1599.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h1f40d1645c07fcaa (10 samples, 0.02%)</title><rect x="10.0" y="1461" width="0.2" height="15.0" fill="rgb(214,159,7)" rx="2" ry="2" />
<text  x="13.00" y="1471.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (144 samples, 0.26%)</title><rect x="1000.0" y="1141" width="3.0" height="15.0" fill="rgb(226,128,45)" rx="2" ry="2" />
<text  x="1002.99" y="1151.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (24 samples, 0.04%)</title><rect x="383.5" y="1285" width="0.5" height="15.0" fill="rgb(254,168,22)" rx="2" ry="2" />
<text  x="386.51" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.02%)</title><rect x="1125.4" y="885" width="0.3" height="15.0" fill="rgb(253,119,8)" rx="2" ry="2" />
<text  x="1128.41" y="895.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ThreadNotify as futures::task_impl::Notify&gt;::notify (8 samples, 0.01%)</title><rect x="1044.1" y="805" width="0.2" height="15.0" fill="rgb(252,130,53)" rx="2" ry="2" />
<text  x="1047.12" y="815.5" ></text>
</g>
<g >
<title>tokio_reactor::registration::Registration::poll_ready (8 samples, 0.01%)</title><rect x="1051.9" y="1109" width="0.2" height="15.0" fill="rgb(223,130,40)" rx="2" ry="2" />
<text  x="1054.89" y="1119.5" ></text>
</g>
<g >
<title>&lt;futures::future::map::Map&lt;A,F&gt; as futures::future::Future&gt;::poll (22 samples, 0.04%)</title><rect x="189.4" y="1333" width="0.5" height="15.0" fill="rgb(237,21,44)" rx="2" ry="2" />
<text  x="192.38" y="1343.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (19 samples, 0.03%)</title><rect x="1035.4" y="965" width="0.4" height="15.0" fill="rgb(212,2,46)" rx="2" ry="2" />
<text  x="1038.40" y="975.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (35 samples, 0.06%)</title><rect x="1051.9" y="1333" width="0.7" height="15.0" fill="rgb(248,36,38)" rx="2" ry="2" />
<text  x="1054.87" y="1343.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (9 samples, 0.02%)</title><rect x="1020.2" y="1413" width="0.2" height="15.0" fill="rgb(210,171,42)" rx="2" ry="2" />
<text  x="1023.19" y="1423.5" ></text>
</g>
<g >
<title>sys_write (14 samples, 0.03%)</title><rect x="1048.4" y="741" width="0.3" height="15.0" fill="rgb(206,192,5)" rx="2" ry="2" />
<text  x="1051.43" y="751.5" ></text>
</g>
<g >
<title>__libc_write (5 samples, 0.01%)</title><rect x="1024.8" y="1013" width="0.1" height="15.0" fill="rgb(210,90,33)" rx="2" ry="2" />
<text  x="1027.79" y="1023.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::worker::Worker&lt;T,Request&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="1029.2" y="885" width="0.2" height="15.0" fill="rgb(216,70,5)" rx="2" ry="2" />
<text  x="1032.18" y="895.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1049.8" y="917" width="0.1" height="15.0" fill="rgb(241,124,17)" rx="2" ry="2" />
<text  x="1052.76" y="927.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (23 samples, 0.04%)</title><rect x="773.7" y="1125" width="0.5" height="15.0" fill="rgb(232,74,25)" rx="2" ry="2" />
<text  x="776.73" y="1135.5" ></text>
</g>
<g >
<title>tokio_timer::ms (8 samples, 0.01%)</title><rect x="1081.3" y="981" width="0.1" height="15.0" fill="rgb(208,51,21)" rx="2" ry="2" />
<text  x="1084.27" y="991.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (21 samples, 0.04%)</title><rect x="997.2" y="1557" width="0.4" height="15.0" fill="rgb(241,42,29)" rx="2" ry="2" />
<text  x="1000.16" y="1567.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (9 samples, 0.02%)</title><rect x="809.9" y="1077" width="0.2" height="15.0" fill="rgb(233,70,33)" rx="2" ry="2" />
<text  x="812.95" y="1087.5" ></text>
</g>
<g >
<title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1031.0" y="789" width="0.2" height="15.0" fill="rgb(226,107,35)" rx="2" ry="2" />
<text  x="1034.05" y="799.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1033.2" y="1077" width="0.2" height="15.0" fill="rgb(251,123,13)" rx="2" ry="2" />
<text  x="1036.24" y="1087.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (5 samples, 0.01%)</title><rect x="1053.8" y="1029" width="0.1" height="15.0" fill="rgb(225,86,5)" rx="2" ry="2" />
<text  x="1056.78" y="1039.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::DropNotifyService&lt;Svc&gt; as tower_service::Service&lt;Request&gt;&gt;::call (10 samples, 0.02%)</title><rect x="1029.2" y="837" width="0.2" height="15.0" fill="rgb(224,166,28)" rx="2" ry="2" />
<text  x="1032.18" y="847.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.03%)</title><rect x="1019.5" y="1541" width="0.3" height="15.0" fill="rgb(217,100,50)" rx="2" ry="2" />
<text  x="1022.51" y="1551.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="996.8" y="1413" width="0.3" height="15.0" fill="rgb(248,191,2)" rx="2" ry="2" />
<text  x="999.82" y="1423.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (6 samples, 0.01%)</title><rect x="1031.0" y="981" width="0.2" height="15.0" fill="rgb(214,30,45)" rx="2" ry="2" />
<text  x="1034.05" y="991.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (12 samples, 0.02%)</title><rect x="997.4" y="1093" width="0.2" height="15.0" fill="rgb(239,224,28)" rx="2" ry="2" />
<text  x="1000.35" y="1103.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (34 samples, 0.06%)</title><rect x="883.9" y="1301" width="0.7" height="15.0" fill="rgb(210,195,22)" rx="2" ry="2" />
<text  x="886.88" y="1311.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::first_ptr (7 samples, 0.01%)</title><rect x="769.3" y="1141" width="0.2" height="15.0" fill="rgb(220,37,16)" rx="2" ry="2" />
<text  x="772.34" y="1151.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (193 samples, 0.35%)</title><rect x="985.8" y="1461" width="4.1" height="15.0" fill="rgb(208,57,19)" rx="2" ry="2" />
<text  x="988.77" y="1471.5" ></text>
</g>
<g >
<title>std::rt::lang_start (8 samples, 0.01%)</title><rect x="990.9" y="1557" width="0.2" height="15.0" fill="rgb(241,123,29)" rx="2" ry="2" />
<text  x="993.92" y="1567.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.01%)</title><rect x="1022.5" y="1061" width="0.1" height="15.0" fill="rgb(250,224,32)" rx="2" ry="2" />
<text  x="1025.48" y="1071.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (12 samples, 0.02%)</title><rect x="1029.9" y="1445" width="0.3" height="15.0" fill="rgb(213,29,40)" rx="2" ry="2" />
<text  x="1032.95" y="1455.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (5 samples, 0.01%)</title><rect x="1056.0" y="1125" width="0.1" height="15.0" fill="rgb(231,139,11)" rx="2" ry="2" />
<text  x="1058.96" y="1135.5" ></text>
</g>
<g >
<title>std::sys_common::thread::start_thread (113 samples, 0.20%)</title><rect x="992.9" y="1557" width="2.4" height="15.0" fill="rgb(254,87,35)" rx="2" ry="2" />
<text  x="995.92" y="1567.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default (78 samples, 0.14%)</title><rect x="1049.7" y="1573" width="1.7" height="15.0" fill="rgb(218,16,7)" rx="2" ry="2" />
<text  x="1052.72" y="1583.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (9 samples, 0.02%)</title><rect x="1051.4" y="1029" width="0.2" height="15.0" fill="rgb(239,74,14)" rx="2" ry="2" />
<text  x="1054.38" y="1039.5" ></text>
</g>
<g >
<title>indexmap::map::OrderMapCore&lt;K,V&gt;::find_using (13 samples, 0.02%)</title><rect x="1009.9" y="1461" width="0.3" height="15.0" fill="rgb(224,73,34)" rx="2" ry="2" />
<text  x="1012.89" y="1471.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (8 samples, 0.01%)</title><rect x="1015.2" y="997" width="0.1" height="15.0" fill="rgb(240,226,54)" rx="2" ry="2" />
<text  x="1018.18" y="1007.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (12 samples, 0.02%)</title><rect x="1015.2" y="1205" width="0.2" height="15.0" fill="rgb(220,120,54)" rx="2" ry="2" />
<text  x="1018.18" y="1215.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (5 samples, 0.01%)</title><rect x="1044.8" y="1253" width="0.1" height="15.0" fill="rgb(240,205,25)" rx="2" ry="2" />
<text  x="1047.82" y="1263.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (8 samples, 0.01%)</title><rect x="1003.1" y="1397" width="0.2" height="15.0" fill="rgb(221,207,18)" rx="2" ry="2" />
<text  x="1006.13" y="1407.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (124 samples, 0.22%)</title><rect x="958.0" y="1285" width="2.6" height="15.0" fill="rgb(233,127,31)" rx="2" ry="2" />
<text  x="961.01" y="1295.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::as_mut_ptr (9 samples, 0.02%)</title><rect x="858.9" y="1301" width="0.2" height="15.0" fill="rgb(247,21,28)" rx="2" ry="2" />
<text  x="861.86" y="1311.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.01%)</title><rect x="1014.2" y="1221" width="0.1" height="15.0" fill="rgb(232,158,31)" rx="2" ry="2" />
<text  x="1017.20" y="1231.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (33 samples, 0.06%)</title><rect x="1023.8" y="1509" width="0.7" height="15.0" fill="rgb(254,62,10)" rx="2" ry="2" />
<text  x="1026.77" y="1519.5" ></text>
</g>
<g >
<title>futures::future::Future::wait (17 samples, 0.03%)</title><rect x="189.0" y="1573" width="0.4" height="15.0" fill="rgb(227,68,31)" rx="2" ry="2" />
<text  x="192.02" y="1583.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueue::poll (87 samples, 0.16%)</title><rect x="1075.9" y="901" width="1.8" height="15.0" fill="rgb(222,176,43)" rx="2" ry="2" />
<text  x="1078.86" y="911.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (8 samples, 0.01%)</title><rect x="193.9" y="1237" width="0.2" height="15.0" fill="rgb(217,143,2)" rx="2" ry="2" />
<text  x="196.90" y="1247.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="1059.1" y="1189" width="0.1" height="15.0" fill="rgb(219,23,7)" rx="2" ry="2" />
<text  x="1062.06" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (21 samples, 0.04%)</title><rect x="1026.2" y="1509" width="0.4" height="15.0" fill="rgb(225,164,17)" rx="2" ry="2" />
<text  x="1029.19" y="1519.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (27 samples, 0.05%)</title><rect x="1031.2" y="1093" width="0.6" height="15.0" fill="rgb(239,63,18)" rx="2" ry="2" />
<text  x="1034.18" y="1103.5" ></text>
</g>
<g >
<title>&lt;futures::future::then::Then&lt;A,B,F&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="194.4" y="1381" width="0.1" height="15.0" fill="rgb(238,113,51)" rx="2" ry="2" />
<text  x="197.39" y="1391.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::unpark (6 samples, 0.01%)</title><rect x="996.3" y="1125" width="0.1" height="15.0" fill="rgb(221,180,29)" rx="2" ry="2" />
<text  x="999.27" y="1135.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (9 samples, 0.02%)</title><rect x="1026.0" y="1125" width="0.2" height="15.0" fill="rgb(230,9,52)" rx="2" ry="2" />
<text  x="1028.98" y="1135.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (16 samples, 0.03%)</title><rect x="1110.3" y="901" width="0.3" height="15.0" fill="rgb(217,192,51)" rx="2" ry="2" />
<text  x="1113.30" y="911.5" ></text>
</g>
<g >
<title>&lt;chrono::naive::datetime::NaiveDateTime as core::fmt::Debug&gt;::fmt (61 samples, 0.11%)</title><rect x="983.3" y="1317" width="1.3" height="15.0" fill="rgb(233,179,53)" rx="2" ry="2" />
<text  x="986.27" y="1327.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNotInner&lt;T&gt;&gt;::serialize (19 samples, 0.03%)</title><rect x="997.6" y="1397" width="0.4" height="15.0" fill="rgb(218,203,48)" rx="2" ry="2" />
<text  x="1000.61" y="1407.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (23 samples, 0.04%)</title><rect x="927.9" y="1285" width="0.5" height="15.0" fill="rgb(209,207,50)" rx="2" ry="2" />
<text  x="930.86" y="1295.5" ></text>
</g>
<g >
<title>tokio_reactor::HandlePriv::wakeup (8 samples, 0.01%)</title><rect x="1056.4" y="949" width="0.2" height="15.0" fill="rgb(246,67,52)" rx="2" ry="2" />
<text  x="1059.39" y="959.5" ></text>
</g>
<g >
<title>arena_decay_tick (6 samples, 0.01%)</title><rect x="1017.4" y="1525" width="0.1" height="15.0" fill="rgb(229,18,4)" rx="2" ry="2" />
<text  x="1020.41" y="1535.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (36 samples, 0.06%)</title><rect x="1023.7" y="1525" width="0.8" height="15.0" fill="rgb(227,22,23)" rx="2" ry="2" />
<text  x="1026.71" y="1535.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::future::ResponseFuture&lt;T&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="189.0" y="1221" width="0.2" height="15.0" fill="rgb(250,210,48)" rx="2" ry="2" />
<text  x="192.02" y="1231.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::h21cd600e9f97af32 (10 samples, 0.02%)</title><rect x="1026.0" y="1413" width="0.2" height="15.0" fill="rgb(240,162,19)" rx="2" ry="2" />
<text  x="1028.98" y="1423.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (88 samples, 0.16%)</title><rect x="464.5" y="1237" width="1.9" height="15.0" fill="rgb(238,68,27)" rx="2" ry="2" />
<text  x="467.53" y="1247.5" ></text>
</g>
<g >
<title>serde_json::read::SliceRead::parse_str_bytes (60 samples, 0.11%)</title><rect x="1151.3" y="517" width="1.3" height="15.0" fill="rgb(219,94,53)" rx="2" ry="2" />
<text  x="1154.32" y="527.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (48 samples, 0.09%)</title><rect x="1034.9" y="1477" width="1.0" height="15.0" fill="rgb(220,46,37)" rx="2" ry="2" />
<text  x="1037.87" y="1487.5" ></text>
</g>
<g >
<title>ip_rcv (18 samples, 0.03%)</title><rect x="1039.0" y="373" width="0.4" height="15.0" fill="rgb(236,211,6)" rx="2" ry="2" />
<text  x="1042.05" y="383.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (5 samples, 0.01%)</title><rect x="1035.0" y="1109" width="0.1" height="15.0" fill="rgb(221,153,52)" rx="2" ry="2" />
<text  x="1037.95" y="1119.5" ></text>
</g>
<g >
<title>tokio_tower::mediator::Receiver&lt;T&gt;::try_recv (6 samples, 0.01%)</title><rect x="1034.4" y="1189" width="0.2" height="15.0" fill="rgb(212,33,1)" rx="2" ry="2" />
<text  x="1037.44" y="1199.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::park::boxed::BoxedPark&lt;T&gt; as tokio_executor::park::Park&gt;::park_timeout (295 samples, 0.53%)</title><rect x="1122.1" y="1045" width="6.3" height="15.0" fill="rgb(243,159,51)" rx="2" ry="2" />
<text  x="1125.12" y="1055.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.02%)</title><rect x="1045.6" y="1045" width="0.2" height="15.0" fill="rgb(249,221,41)" rx="2" ry="2" />
<text  x="1048.56" y="1055.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (5 samples, 0.01%)</title><rect x="1044.8" y="1237" width="0.1" height="15.0" fill="rgb(226,127,21)" rx="2" ry="2" />
<text  x="1047.82" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (8 samples, 0.01%)</title><rect x="1025.6" y="837" width="0.2" height="15.0" fill="rgb(225,183,48)" rx="2" ry="2" />
<text  x="1028.62" y="847.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (42 samples, 0.08%)</title><rect x="828.0" y="1093" width="0.9" height="15.0" fill="rgb(220,36,34)" rx="2" ry="2" />
<text  x="831.05" y="1103.5" ></text>
</g>
<g >
<title>core::num::wrapping::&lt;impl core::ops::arith::Add for core::num::Wrapping&lt;u64&gt;&gt;::add (5 samples, 0.01%)</title><rect x="190.8" y="1509" width="0.1" height="15.0" fill="rgb(233,128,24)" rx="2" ry="2" />
<text  x="193.78" y="1519.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (19 samples, 0.03%)</title><rect x="1052.6" y="1525" width="0.4" height="15.0" fill="rgb(238,201,41)" rx="2" ry="2" />
<text  x="1055.61" y="1535.5" ></text>
</g>
<g >
<title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::read_head (6 samples, 0.01%)</title><rect x="996.4" y="1445" width="0.1" height="15.0" fill="rgb(247,48,13)" rx="2" ry="2" />
<text  x="999.40" y="1455.5" ></text>
</g>
<g >
<title>&lt;futures::future::either::Either&lt;A,B&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1031.0" y="805" width="0.2" height="15.0" fill="rgb(245,78,2)" rx="2" ry="2" />
<text  x="1034.05" y="815.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (14 samples, 0.03%)</title><rect x="1049.7" y="1269" width="0.3" height="15.0" fill="rgb(246,184,30)" rx="2" ry="2" />
<text  x="1052.72" y="1279.5" ></text>
</g>
<g >
<title>__GI___sched_yield (228 samples, 0.41%)</title><rect x="1061.0" y="1077" width="4.9" height="15.0" fill="rgb(241,24,21)" rx="2" ry="2" />
<text  x="1064.03" y="1087.5" ></text>
</g>
<g >
<title>new_sync_write (13 samples, 0.02%)</title><rect x="1028.6" y="725" width="0.3" height="15.0" fill="rgb(249,87,20)" rx="2" ry="2" />
<text  x="1031.63" y="735.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (16 samples, 0.03%)</title><rect x="996.8" y="1557" width="0.4" height="15.0" fill="rgb(252,10,26)" rx="2" ry="2" />
<text  x="999.82" y="1567.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (138 samples, 0.25%)</title><rect x="1094.6" y="869" width="2.9" height="15.0" fill="rgb(205,125,16)" rx="2" ry="2" />
<text  x="1097.60" y="879.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::borrow_mut (440 samples, 0.79%)</title><rect x="587.8" y="1157" width="9.3" height="15.0" fill="rgb(242,22,44)" rx="2" ry="2" />
<text  x="590.77" y="1167.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (10 samples, 0.02%)</title><rect x="995.3" y="901" width="0.2" height="15.0" fill="rgb(219,105,32)" rx="2" ry="2" />
<text  x="998.32" y="911.5" ></text>
</g>
<g >
<title>zookeeper::zookeeper::ZooKeeper::get_data (29 samples, 0.05%)</title><rect x="1004.1" y="1509" width="0.6" height="15.0" fill="rgb(246,58,19)" rx="2" ry="2" />
<text  x="1007.10" y="1519.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (12 samples, 0.02%)</title><rect x="997.4" y="1221" width="0.2" height="15.0" fill="rgb(253,78,44)" rx="2" ry="2" />
<text  x="1000.35" y="1231.5" ></text>
</g>
<g >
<title>crossbeam_epoch::epoch::AtomicEpoch::compare_and_swap (118 samples, 0.21%)</title><rect x="1182.6" y="901" width="2.5" height="15.0" fill="rgb(254,163,29)" rx="2" ry="2" />
<text  x="1185.64" y="911.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="977.5" y="1301" width="0.1" height="15.0" fill="rgb(232,62,4)" rx="2" ry="2" />
<text  x="980.49" y="1311.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::DataType&gt;::serialize (6 samples, 0.01%)</title><rect x="1045.0" y="917" width="0.1" height="15.0" fill="rgb(250,94,44)" rx="2" ry="2" />
<text  x="1047.97" y="927.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (56 samples, 0.10%)</title><rect x="184.8" y="1301" width="1.2" height="15.0" fill="rgb(217,104,14)" rx="2" ry="2" />
<text  x="187.80" y="1311.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (17 samples, 0.03%)</title><rect x="1036.1" y="1237" width="0.4" height="15.0" fill="rgb(206,33,34)" rx="2" ry="2" />
<text  x="1039.12" y="1247.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (121 samples, 0.22%)</title><rect x="980.0" y="1237" width="2.5" height="15.0" fill="rgb(229,12,50)" rx="2" ry="2" />
<text  x="982.95" y="1247.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::enqueue_node_with_wakeup (22 samples, 0.04%)</title><rect x="1014.5" y="997" width="0.4" height="15.0" fill="rgb(210,90,37)" rx="2" ry="2" />
<text  x="1017.46" y="1007.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (14 samples, 0.03%)</title><rect x="1032.5" y="1205" width="0.3" height="15.0" fill="rgb(205,86,51)" rx="2" ry="2" />
<text  x="1035.47" y="1215.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (12 samples, 0.02%)</title><rect x="1036.7" y="1317" width="0.2" height="15.0" fill="rgb(218,208,10)" rx="2" ry="2" />
<text  x="1039.65" y="1327.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (19 samples, 0.03%)</title><rect x="997.6" y="1253" width="0.4" height="15.0" fill="rgb(207,104,45)" rx="2" ry="2" />
<text  x="1000.61" y="1263.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (60 samples, 0.11%)</title><rect x="998.7" y="1205" width="1.3" height="15.0" fill="rgb(234,96,20)" rx="2" ry="2" />
<text  x="1001.71" y="1215.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (25 samples, 0.04%)</title><rect x="1077.9" y="885" width="0.6" height="15.0" fill="rgb(244,108,45)" rx="2" ry="2" />
<text  x="1080.94" y="895.5" ></text>
</g>
<g >
<title>noria::view::SyncView::lookup (22 samples, 0.04%)</title><rect x="189.4" y="1589" width="0.5" height="15.0" fill="rgb(230,148,28)" rx="2" ry="2" />
<text  x="192.38" y="1599.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (20 samples, 0.04%)</title><rect x="1009.4" y="1525" width="0.4" height="15.0" fill="rgb(224,54,31)" rx="2" ry="2" />
<text  x="1012.41" y="1535.5" ></text>
</g>
<g >
<title>__vfs_write (15 samples, 0.03%)</title><rect x="1108.6" y="421" width="0.3" height="15.0" fill="rgb(249,162,5)" rx="2" ry="2" />
<text  x="1111.63" y="431.5" ></text>
</g>
<g >
<title>futures::task_impl::std::&lt;impl futures::task_impl::Spawn&lt;F&gt;&gt;::wait_future (9 samples, 0.02%)</title><rect x="10.0" y="1333" width="0.2" height="15.0" fill="rgb(206,202,20)" rx="2" ry="2" />
<text  x="13.02" y="1343.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (6 samples, 0.01%)</title><rect x="1053.1" y="1205" width="0.1" height="15.0" fill="rgb(244,6,28)" rx="2" ry="2" />
<text  x="1056.05" y="1215.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (7 samples, 0.01%)</title><rect x="1034.2" y="1477" width="0.1" height="15.0" fill="rgb(228,73,31)" rx="2" ry="2" />
<text  x="1037.19" y="1487.5" ></text>
</g>
<g >
<title>futures::future::option::&lt;impl futures::future::Future for core::option::Option&lt;F&gt;&gt;::poll (46 samples, 0.08%)</title><rect x="1152.9" y="741" width="0.9" height="15.0" fill="rgb(208,35,25)" rx="2" ry="2" />
<text  x="1155.87" y="751.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::notify (6 samples, 0.01%)</title><rect x="1024.8" y="1381" width="0.1" height="15.0" fill="rgb(207,160,40)" rx="2" ry="2" />
<text  x="1027.79" y="1391.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (126 samples, 0.23%)</title><rect x="1038.4" y="1093" width="2.7" height="15.0" fill="rgb(247,80,32)" rx="2" ry="2" />
<text  x="1041.41" y="1103.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (11 samples, 0.02%)</title><rect x="1055.2" y="1141" width="0.2" height="15.0" fill="rgb(253,50,25)" rx="2" ry="2" />
<text  x="1058.15" y="1151.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (11 samples, 0.02%)</title><rect x="1035.9" y="1253" width="0.2" height="15.0" fill="rgb(238,18,43)" rx="2" ry="2" />
<text  x="1038.89" y="1263.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (284 samples, 0.51%)</title><rect x="1038.4" y="1557" width="6.0" height="15.0" fill="rgb(224,33,26)" rx="2" ry="2" />
<text  x="1041.41" y="1567.5" ></text>
</g>
<g >
<title>core::fmt::Write::write_fmt (5 samples, 0.01%)</title><rect x="1022.3" y="1013" width="0.1" height="15.0" fill="rgb(237,129,27)" rx="2" ry="2" />
<text  x="1025.33" y="1023.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (14 samples, 0.03%)</title><rect x="578.3" y="1045" width="0.3" height="15.0" fill="rgb(212,98,14)" rx="2" ry="2" />
<text  x="581.32" y="1055.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13 samples, 0.02%)</title><rect x="855.0" y="1237" width="0.3" height="15.0" fill="rgb(236,13,29)" rx="2" ry="2" />
<text  x="858.02" y="1247.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="1049.5" y="1125" width="0.2" height="15.0" fill="rgb(248,185,37)" rx="2" ry="2" />
<text  x="1052.53" y="1135.5" ></text>
</g>
<g >
<title>&lt;chan::ChannelKey as core::cmp::Ord&gt;::cmp (113 samples, 0.20%)</title><rect x="304.0" y="1253" width="2.4" height="15.0" fill="rgb(254,26,16)" rx="2" ry="2" />
<text  x="307.01" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.01%)</title><rect x="984.3" y="1077" width="0.1" height="15.0" fill="rgb(221,147,9)" rx="2" ry="2" />
<text  x="987.33" y="1087.5" ></text>
</g>
<g >
<title>serde::de::VariantAccess::newtype_variant (7 samples, 0.01%)</title><rect x="1022.5" y="1093" width="0.1" height="15.0" fill="rgb(226,148,2)" rx="2" ry="2" />
<text  x="1025.48" y="1103.5" ></text>
</g>
<g >
<title>gen::main::_$u7b$$u7b$closure$u7d$$u7d$::hde85e8366ff24cf1 (30 samples, 0.05%)</title><rect x="191.8" y="1477" width="0.7" height="15.0" fill="rgb(236,65,49)" rx="2" ry="2" />
<text  x="194.85" y="1487.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (22 samples, 0.04%)</title><rect x="1024.0" y="1333" width="0.5" height="15.0" fill="rgb(224,13,33)" rx="2" ry="2" />
<text  x="1027.01" y="1343.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (36 samples, 0.06%)</title><rect x="1032.5" y="1381" width="0.7" height="15.0" fill="rgb(231,2,47)" rx="2" ry="2" />
<text  x="1035.47" y="1391.5" ></text>
</g>
<g >
<title>isfree (24 samples, 0.04%)</title><rect x="1018.7" y="1573" width="0.5" height="15.0" fill="rgb(247,67,24)" rx="2" ry="2" />
<text  x="1021.70" y="1583.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (24 samples, 0.04%)</title><rect x="278.3" y="1253" width="0.5" height="15.0" fill="rgb(236,18,42)" rx="2" ry="2" />
<text  x="281.31" y="1263.5" ></text>
</g>
<g >
<title>core::mem::align_of_val (93 samples, 0.17%)</title><rect x="899.8" y="1285" width="2.0" height="15.0" fill="rgb(225,94,40)" rx="2" ry="2" />
<text  x="902.79" y="1295.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (12 samples, 0.02%)</title><rect x="995.3" y="1173" width="0.3" height="15.0" fill="rgb(250,3,41)" rx="2" ry="2" />
<text  x="998.32" y="1183.5" ></text>
</g>
<g >
<title>&lt;tokio_sync::oneshot::Receiver&lt;T&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="194.1" y="1237" width="0.1" height="15.0" fill="rgb(253,223,22)" rx="2" ry="2" />
<text  x="197.07" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::he0977de3e88b310a (67 samples, 0.12%)</title><rect x="187.0" y="1493" width="1.5" height="15.0" fill="rgb(221,39,6)" rx="2" ry="2" />
<text  x="190.05" y="1503.5" ></text>
</g>
<g >
<title>serde_json::de::from_slice (64 samples, 0.12%)</title><rect x="1151.3" y="613" width="1.3" height="15.0" fill="rgb(232,12,10)" rx="2" ry="2" />
<text  x="1154.25" y="623.5" ></text>
</g>
<g >
<title>alloc::rc::Rc&lt;T&gt;::new (1,095 samples, 1.97%)</title><rect x="384.0" y="1333" width="23.3" height="15.0" fill="rgb(223,220,25)" rx="2" ry="2" />
<text  x="387.02" y="1343.5" >a..</text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="1026.0" y="869" width="0.1" height="15.0" fill="rgb(225,183,21)" rx="2" ry="2" />
<text  x="1028.98" y="879.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (8 samples, 0.01%)</title><rect x="1037.8" y="1381" width="0.2" height="15.0" fill="rgb(225,211,37)" rx="2" ry="2" />
<text  x="1040.82" y="1391.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (9 samples, 0.02%)</title><rect x="1049.5" y="1301" width="0.2" height="15.0" fill="rgb(230,26,29)" rx="2" ry="2" />
<text  x="1052.53" y="1311.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (65 samples, 0.12%)</title><rect x="963.4" y="1253" width="1.4" height="15.0" fill="rgb(243,140,18)" rx="2" ry="2" />
<text  x="966.40" y="1263.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.02%)</title><rect x="998.9" y="837" width="0.2" height="15.0" fill="rgb(228,66,3)" rx="2" ry="2" />
<text  x="1001.86" y="847.5" ></text>
</g>
<g >
<title>&lt;futures::future::map::Map&lt;A,F&gt; as futures::future::Future&gt;::poll (24 samples, 0.04%)</title><rect x="980.5" y="1093" width="0.5" height="15.0" fill="rgb(225,96,37)" rx="2" ry="2" />
<text  x="983.49" y="1103.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (22 samples, 0.04%)</title><rect x="1032.8" y="1125" width="0.4" height="15.0" fill="rgb(206,72,54)" rx="2" ry="2" />
<text  x="1035.77" y="1135.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (10 samples, 0.02%)</title><rect x="1014.2" y="1365" width="0.2" height="15.0" fill="rgb(234,214,13)" rx="2" ry="2" />
<text  x="1017.16" y="1375.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (20 samples, 0.04%)</title><rect x="456.5" y="1157" width="0.4" height="15.0" fill="rgb(226,61,28)" rx="2" ry="2" />
<text  x="459.47" y="1167.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (47 samples, 0.08%)</title><rect x="1048.0" y="1093" width="1.0" height="15.0" fill="rgb(214,66,16)" rx="2" ry="2" />
<text  x="1050.96" y="1103.5" ></text>
</g>
<g >
<title>&lt;futures::sync::oneshot::Receiver&lt;T&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="1020.7" y="1493" width="0.1" height="15.0" fill="rgb(245,11,11)" rx="2" ry="2" />
<text  x="1023.65" y="1503.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (70 samples, 0.13%)</title><rect x="514.2" y="1253" width="1.5" height="15.0" fill="rgb(218,30,36)" rx="2" ry="2" />
<text  x="517.22" y="1263.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::ok_or (12 samples, 0.02%)</title><rect x="1166.7" y="965" width="0.3" height="15.0" fill="rgb(245,108,16)" rx="2" ry="2" />
<text  x="1169.70" y="975.5" ></text>
</g>
<g >
<title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (13 samples, 0.02%)</title><rect x="257.6" y="1189" width="0.3" height="15.0" fill="rgb(228,218,33)" rx="2" ry="2" />
<text  x="260.64" y="1199.5" ></text>
</g>
<g >
<title>std::panicking::try (12 samples, 0.02%)</title><rect x="1036.7" y="1269" width="0.2" height="15.0" fill="rgb(230,81,7)" rx="2" ry="2" />
<text  x="1039.65" y="1279.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (67 samples, 0.12%)</title><rect x="187.0" y="1461" width="1.5" height="15.0" fill="rgb(223,111,19)" rx="2" ry="2" />
<text  x="190.05" y="1471.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *const T&gt;::add (61 samples, 0.11%)</title><rect x="583.9" y="1061" width="1.3" height="15.0" fill="rgb(250,64,21)" rx="2" ry="2" />
<text  x="586.86" y="1071.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::DataType&gt;::serialize (5 samples, 0.01%)</title><rect x="1023.8" y="1109" width="0.1" height="15.0" fill="rgb(251,85,8)" rx="2" ry="2" />
<text  x="1026.81" y="1119.5" ></text>
</g>
<g >
<title>__vfs_write (8 samples, 0.01%)</title><rect x="10.8" y="917" width="0.1" height="15.0" fill="rgb(238,12,35)" rx="2" ry="2" />
<text  x="13.76" y="927.5" ></text>
</g>
<g >
<title>ip_finish_output (28 samples, 0.05%)</title><rect x="1038.9" y="533" width="0.6" height="15.0" fill="rgb(224,175,25)" rx="2" ry="2" />
<text  x="1041.94" y="543.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (5 samples, 0.01%)</title><rect x="1049.6" y="1093" width="0.1" height="15.0" fill="rgb(221,13,52)" rx="2" ry="2" />
<text  x="1052.55" y="1103.5" ></text>
</g>
<g >
<title>core::ptr::read (30 samples, 0.05%)</title><rect x="1101.3" y="853" width="0.7" height="15.0" fill="rgb(245,8,51)" rx="2" ry="2" />
<text  x="1104.33" y="863.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1033.7" y="1029" width="0.1" height="15.0" fill="rgb(208,116,7)" rx="2" ry="2" />
<text  x="1036.68" y="1039.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::first_edge (77 samples, 0.14%)</title><rect x="423.9" y="1269" width="1.6" height="15.0" fill="rgb(218,85,25)" rx="2" ry="2" />
<text  x="426.85" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (5 samples, 0.01%)</title><rect x="1040.5" y="837" width="0.1" height="15.0" fill="rgb(243,41,31)" rx="2" ry="2" />
<text  x="1043.47" y="847.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (158 samples, 0.28%)</title><rect x="1041.1" y="1029" width="3.3" height="15.0" fill="rgb(242,156,54)" rx="2" ry="2" />
<text  x="1044.09" y="1039.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::with_default (30 samples, 0.05%)</title><rect x="191.8" y="1429" width="0.7" height="15.0" fill="rgb(234,79,44)" rx="2" ry="2" />
<text  x="194.85" y="1439.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (8 samples, 0.01%)</title><rect x="983.8" y="1061" width="0.1" height="15.0" fill="rgb(239,58,42)" rx="2" ry="2" />
<text  x="986.75" y="1071.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (20 samples, 0.04%)</title><rect x="1059.3" y="1253" width="0.4" height="15.0" fill="rgb(211,36,54)" rx="2" ry="2" />
<text  x="1062.29" y="1263.5" ></text>
</g>
<g >
<title>__vfs_write (5 samples, 0.01%)</title><rect x="983.8" y="965" width="0.1" height="15.0" fill="rgb(216,55,30)" rx="2" ry="2" />
<text  x="986.82" y="975.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::unpark (11 samples, 0.02%)</title><rect x="1056.3" y="981" width="0.3" height="15.0" fill="rgb(208,205,31)" rx="2" ry="2" />
<text  x="1059.34" y="991.5" ></text>
</g>
<g >
<title>bincode::config::Options::deserialize (24 samples, 0.04%)</title><rect x="1046.6" y="1253" width="0.5" height="15.0" fill="rgb(230,141,28)" rx="2" ry="2" />
<text  x="1049.60" y="1263.5" ></text>
</g>
<g >
<title>&lt;tokio_sync::task::atomic_task::CurrentTask as tokio_sync::task::atomic_task::Register&gt;::register (22 samples, 0.04%)</title><rect x="1003.1" y="1413" width="0.4" height="15.0" fill="rgb(216,56,1)" rx="2" ry="2" />
<text  x="1006.06" y="1423.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (32 samples, 0.06%)</title><rect x="1031.8" y="1333" width="0.7" height="15.0" fill="rgb(209,87,11)" rx="2" ry="2" />
<text  x="1034.79" y="1343.5" ></text>
</g>
<g >
<title>std::panicking::try (13 samples, 0.02%)</title><rect x="1033.4" y="1285" width="0.3" height="15.0" fill="rgb(216,211,26)" rx="2" ry="2" />
<text  x="1036.41" y="1295.5" ></text>
</g>
<g >
<title>rtree_szind_slab_read (5 samples, 0.01%)</title><rect x="1018.4" y="1573" width="0.1" height="15.0" fill="rgb(217,10,4)" rx="2" ry="2" />
<text  x="1021.38" y="1583.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::worker::Worker::run_task2::Guard as core::ops::drop::Drop&gt;::drop (28 samples, 0.05%)</title><rect x="1148.6" y="997" width="0.6" height="15.0" fill="rgb(211,121,48)" rx="2" ry="2" />
<text  x="1151.56" y="1007.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (32 samples, 0.06%)</title><rect x="1150.4" y="677" width="0.7" height="15.0" fill="rgb(249,158,24)" rx="2" ry="2" />
<text  x="1153.43" y="687.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::tcp::TcpStream as std::io::Write&gt;::write (5 samples, 0.01%)</title><rect x="995.2" y="1269" width="0.1" height="15.0" fill="rgb(238,76,23)" rx="2" ry="2" />
<text  x="998.21" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (22 samples, 0.04%)</title><rect x="192.8" y="1237" width="0.5" height="15.0" fill="rgb(236,49,20)" rx="2" ry="2" />
<text  x="195.84" y="1247.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (18 samples, 0.03%)</title><rect x="982.0" y="1109" width="0.4" height="15.0" fill="rgb(238,221,4)" rx="2" ry="2" />
<text  x="985.03" y="1119.5" ></text>
</g>
<g >
<title>noria::table::SyncTable::insert::_$u7b$$u7b$closure$u7d$$u7d$::hda9decbe4187d0e3 (30 samples, 0.05%)</title><rect x="191.8" y="1413" width="0.7" height="15.0" fill="rgb(241,67,43)" rx="2" ry="2" />
<text  x="194.85" y="1423.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.01%)</title><rect x="1089.8" y="917" width="0.2" height="15.0" fill="rgb(221,227,43)" rx="2" ry="2" />
<text  x="1092.80" y="927.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.01%)</title><rect x="998.1" y="933" width="0.2" height="15.0" fill="rgb(211,194,27)" rx="2" ry="2" />
<text  x="1001.12" y="943.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (12 samples, 0.02%)</title><rect x="1036.7" y="1141" width="0.2" height="15.0" fill="rgb(251,139,7)" rx="2" ry="2" />
<text  x="1039.65" y="1151.5" ></text>
</g>
<g >
<title>&lt;noria::controller::_::&lt;impl serde::de::Deserialize for noria::controller::ControllerDescriptor&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.02%)</title><rect x="1004.9" y="1461" width="0.3" height="15.0" fill="rgb(245,114,17)" rx="2" ry="2" />
<text  x="1007.91" y="1471.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (20 samples, 0.04%)</title><rect x="1036.5" y="1461" width="0.4" height="15.0" fill="rgb(205,202,44)" rx="2" ry="2" />
<text  x="1039.48" y="1471.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (16 samples, 0.03%)</title><rect x="1026.2" y="1381" width="0.3" height="15.0" fill="rgb(216,45,31)" rx="2" ry="2" />
<text  x="1029.19" y="1391.5" ></text>
</g>
<g >
<title>hyper::client::connect::Extra::set (12 samples, 0.02%)</title><rect x="1020.1" y="1477" width="0.3" height="15.0" fill="rgb(253,37,19)" rx="2" ry="2" />
<text  x="1023.12" y="1487.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (7 samples, 0.01%)</title><rect x="1036.2" y="1077" width="0.1" height="15.0" fill="rgb(235,49,33)" rx="2" ry="2" />
<text  x="1039.16" y="1087.5" ></text>
</g>
<g >
<title>&lt;noria::table::Table as tower_service::Service&lt;noria::table::Input&gt;&gt;::call (19 samples, 0.03%)</title><rect x="180.0" y="1525" width="0.4" height="15.0" fill="rgb(243,208,40)" rx="2" ry="2" />
<text  x="183.03" y="1535.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (36 samples, 0.06%)</title><rect x="1032.5" y="1365" width="0.7" height="15.0" fill="rgb(217,111,11)" rx="2" ry="2" />
<text  x="1035.47" y="1375.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::h8652be72f843d6db (36,502 samples, 65.64%)</title><rect x="202.5" y="1509" width="774.6" height="15.0" fill="rgb(224,176,22)" rx="2" ry="2" />
<text  x="205.54" y="1519.5" >std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::h8652be72f843d6db</text>
</g>
<g >
<title>crossbeam_epoch::default::with_handle::_$u7b$$u7b$closure$u7d$$u7d$::h5e7f28b9506aaa36 (70 samples, 0.13%)</title><rect x="1168.3" y="965" width="1.5" height="15.0" fill="rgb(216,150,19)" rx="2" ry="2" />
<text  x="1171.29" y="975.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (144 samples, 0.26%)</title><rect x="1000.0" y="869" width="3.0" height="15.0" fill="rgb(206,152,30)" rx="2" ry="2" />
<text  x="1002.99" y="879.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run (46 samples, 0.08%)</title><rect x="1029.0" y="1477" width="0.9" height="15.0" fill="rgb(231,5,13)" rx="2" ry="2" />
<text  x="1031.97" y="1487.5" ></text>
</g>
<g >
<title>ep_poll (23 samples, 0.04%)</title><rect x="1113.0" y="837" width="0.5" height="15.0" fill="rgb(236,219,33)" rx="2" ry="2" />
<text  x="1116.02" y="847.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default::_$u7b$$u7b$closure$u7d$$u7d$::ha80fbdab9b554b03 (78 samples, 0.14%)</title><rect x="1049.7" y="1525" width="1.7" height="15.0" fill="rgb(205,126,3)" rx="2" ry="2" />
<text  x="1052.72" y="1535.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (8 samples, 0.01%)</title><rect x="622.2" y="1173" width="0.2" height="15.0" fill="rgb(217,190,31)" rx="2" ry="2" />
<text  x="625.18" y="1183.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::get (6 samples, 0.01%)</title><rect x="917.4" y="1221" width="0.1" height="15.0" fill="rgb(218,116,22)" rx="2" ry="2" />
<text  x="920.40" y="1231.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (19 samples, 0.03%)</title><rect x="1045.8" y="1141" width="0.4" height="15.0" fill="rgb(205,74,16)" rx="2" ry="2" />
<text  x="1048.80" y="1151.5" ></text>
</g>
<g >
<title>futures::task_impl::std::_$LT$impl$u20$futures..task_impl..Spawn$LT$F$GT$$GT$::wait_future::_$u7b$$u7b$closure$u7d$$u7d$::h6e5f9dba7457629d (5 samples, 0.01%)</title><rect x="180.7" y="1493" width="0.1" height="15.0" fill="rgb(249,203,3)" rx="2" ry="2" />
<text  x="183.73" y="1503.5" ></text>
</g>
<g >
<title>tokio_reactor::poll_evented::PollEvented&lt;E&gt;::poll_write_ready (21 samples, 0.04%)</title><rect x="1057.1" y="1173" width="0.5" height="15.0" fill="rgb(247,204,36)" rx="2" ry="2" />
<text  x="1060.15" y="1183.5" ></text>
</g>
<g >
<title>&lt;mio::net::tcp::TcpStream as std::io::Read&gt;::read (12 samples, 0.02%)</title><rect x="1037.4" y="1013" width="0.2" height="15.0" fill="rgb(243,116,22)" rx="2" ry="2" />
<text  x="1040.39" y="1023.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ThreadNotify as futures::task_impl::Notify&gt;::notify (6 samples, 0.01%)</title><rect x="1026.7" y="741" width="0.1" height="15.0" fill="rgb(247,41,54)" rx="2" ry="2" />
<text  x="1029.72" y="751.5" ></text>
</g>
<g >
<title>crossbeam_epoch::collector::LocalHandle::pin (15 samples, 0.03%)</title><rect x="1019.5" y="1493" width="0.3" height="15.0" fill="rgb(250,39,4)" rx="2" ry="2" />
<text  x="1022.51" y="1503.5" ></text>
</g>
<g >
<title>mio::poll::AtomicState::load (17 samples, 0.03%)</title><rect x="1090.5" y="901" width="0.4" height="15.0" fill="rgb(233,16,7)" rx="2" ry="2" />
<text  x="1093.55" y="911.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.01%)</title><rect x="1022.3" y="1333" width="0.1" height="15.0" fill="rgb(227,131,35)" rx="2" ry="2" />
<text  x="1025.33" y="1343.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (237 samples, 0.43%)</title><rect x="590.2" y="1093" width="5.0" height="15.0" fill="rgb(220,83,21)" rx="2" ry="2" />
<text  x="593.21" y="1103.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (9 samples, 0.02%)</title><rect x="1044.1" y="837" width="0.2" height="15.0" fill="rgb(220,35,32)" rx="2" ry="2" />
<text  x="1047.10" y="847.5" ></text>
</g>
<g >
<title>mio::poll::SetReadiness::set_readiness (17 samples, 0.03%)</title><rect x="1106.2" y="965" width="0.3" height="15.0" fill="rgb(251,47,39)" rx="2" ry="2" />
<text  x="1109.19" y="975.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h3169cfffdbef5731 (67 samples, 0.12%)</title><rect x="187.0" y="1509" width="1.5" height="15.0" fill="rgb(216,183,32)" rx="2" ry="2" />
<text  x="190.05" y="1519.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::with_default (15 samples, 0.03%)</title><rect x="188.6" y="1557" width="0.4" height="15.0" fill="rgb(226,112,0)" rx="2" ry="2" />
<text  x="191.64" y="1567.5" ></text>
</g>
<g >
<title>tokio_io::async_read::AsyncRead::poll_read (21 samples, 0.04%)</title><rect x="1035.4" y="1061" width="0.4" height="15.0" fill="rgb(252,105,11)" rx="2" ry="2" />
<text  x="1038.38" y="1071.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="186.0" y="1493" width="0.1" height="15.0" fill="rgb(215,125,12)" rx="2" ry="2" />
<text  x="189.03" y="1503.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (13 samples, 0.02%)</title><rect x="1051.6" y="1349" width="0.3" height="15.0" fill="rgb(215,128,28)" rx="2" ry="2" />
<text  x="1054.59" y="1359.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h5014f1208b6fa656 (399 samples, 0.72%)</title><rect x="977.3" y="1525" width="8.5" height="15.0" fill="rgb(212,161,30)" rx="2" ry="2" />
<text  x="980.30" y="1535.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (399 samples, 0.72%)</title><rect x="977.3" y="1461" width="8.5" height="15.0" fill="rgb(244,71,53)" rx="2" ry="2" />
<text  x="980.30" y="1471.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (7 samples, 0.01%)</title><rect x="1052.1" y="1125" width="0.1" height="15.0" fill="rgb(252,87,8)" rx="2" ry="2" />
<text  x="1055.06" y="1135.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll2 (124 samples, 0.22%)</title><rect x="1111.0" y="933" width="2.6" height="15.0" fill="rgb(215,78,1)" rx="2" ry="2" />
<text  x="1113.96" y="943.5" ></text>
</g>
<g >
<title>tokio_tower::mediator::Sender&lt;T&gt;::poll_ready (10 samples, 0.02%)</title><rect x="1008.6" y="1365" width="0.2" height="15.0" fill="rgb(253,122,7)" rx="2" ry="2" />
<text  x="1011.60" y="1375.5" ></text>
</g>
<g >
<title>chrono::format::parsed::Parsed::to_naive_datetime_with_offset (14 samples, 0.03%)</title><rect x="1002.1" y="597" width="0.3" height="15.0" fill="rgb(205,0,16)" rx="2" ry="2" />
<text  x="1005.06" y="607.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (17 samples, 0.03%)</title><rect x="731.2" y="1237" width="0.3" height="15.0" fill="rgb(213,137,30)" rx="2" ry="2" />
<text  x="734.16" y="1247.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (5 samples, 0.01%)</title><rect x="180.7" y="1365" width="0.1" height="15.0" fill="rgb(241,8,28)" rx="2" ry="2" />
<text  x="183.73" y="1375.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (25 samples, 0.04%)</title><rect x="775.0" y="1125" width="0.5" height="15.0" fill="rgb(234,138,3)" rx="2" ry="2" />
<text  x="777.96" y="1135.5" ></text>
</g>
<g >
<title>&lt;chrono::naive::datetime::serde::&lt;impl serde::ser::Serialize for chrono::naive::datetime::NaiveDateTime&gt;::serialize::FormatWrapped&lt;D&gt; as core::fmt::Display&gt;::fmt (19 samples, 0.03%)</title><rect x="997.6" y="1045" width="0.4" height="15.0" fill="rgb(206,72,13)" rx="2" ry="2" />
<text  x="1000.61" y="1055.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (16 samples, 0.03%)</title><rect x="1081.8" y="949" width="0.4" height="15.0" fill="rgb(220,198,24)" rx="2" ry="2" />
<text  x="1084.83" y="959.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (14 samples, 0.03%)</title><rect x="988.4" y="1157" width="0.3" height="15.0" fill="rgb(211,86,4)" rx="2" ry="2" />
<text  x="991.44" y="1167.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (64 samples, 0.12%)</title><rect x="1050.0" y="1045" width="1.4" height="15.0" fill="rgb(252,70,17)" rx="2" ry="2" />
<text  x="1053.02" y="1055.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (61 samples, 0.11%)</title><rect x="1138.5" y="1029" width="1.3" height="15.0" fill="rgb(214,71,11)" rx="2" ry="2" />
<text  x="1141.48" y="1039.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (78 samples, 0.14%)</title><rect x="1049.7" y="1413" width="1.7" height="15.0" fill="rgb(213,150,2)" rx="2" ry="2" />
<text  x="1052.72" y="1423.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (50 samples, 0.09%)</title><rect x="924.3" y="1285" width="1.0" height="15.0" fill="rgb(220,181,35)" rx="2" ry="2" />
<text  x="927.26" y="1295.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="1141.6" y="965" width="0.1" height="15.0" fill="rgb(245,40,19)" rx="2" ry="2" />
<text  x="1144.62" y="975.5" ></text>
</g>
<g >
<title>ticker_tick (10 samples, 0.02%)</title><rect x="990.6" y="1509" width="0.2" height="15.0" fill="rgb(234,218,32)" rx="2" ry="2" />
<text  x="993.59" y="1519.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (19 samples, 0.03%)</title><rect x="974.4" y="1253" width="0.4" height="15.0" fill="rgb(231,20,13)" rx="2" ry="2" />
<text  x="977.42" y="1263.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (284 samples, 0.51%)</title><rect x="1038.4" y="1413" width="6.0" height="15.0" fill="rgb(219,221,0)" rx="2" ry="2" />
<text  x="1041.41" y="1423.5" ></text>
</g>
<g >
<title>tsd_fast (103 samples, 0.19%)</title><rect x="82.0" y="1557" width="2.2" height="15.0" fill="rgb(239,225,6)" rx="2" ry="2" />
<text  x="84.97" y="1567.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (158 samples, 0.28%)</title><rect x="1041.1" y="1061" width="3.3" height="15.0" fill="rgb(247,216,30)" rx="2" ry="2" />
<text  x="1044.09" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (13 samples, 0.02%)</title><rect x="684.0" y="1189" width="0.3" height="15.0" fill="rgb(225,74,24)" rx="2" ry="2" />
<text  x="686.99" y="1199.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::poll_complete (62 samples, 0.11%)</title><rect x="1041.4" y="949" width="1.3" height="15.0" fill="rgb(210,19,51)" rx="2" ry="2" />
<text  x="1044.43" y="959.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (47 samples, 0.08%)</title><rect x="1050.1" y="869" width="1.0" height="15.0" fill="rgb(206,154,18)" rx="2" ry="2" />
<text  x="1053.06" y="879.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (6 samples, 0.01%)</title><rect x="1117.8" y="949" width="0.1" height="15.0" fill="rgb(230,116,37)" rx="2" ry="2" />
<text  x="1120.81" y="959.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (216 samples, 0.39%)</title><rect x="1044.8" y="1589" width="4.6" height="15.0" fill="rgb(210,105,52)" rx="2" ry="2" />
<text  x="1047.80" y="1599.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1023.6" y="1461" width="0.1" height="15.0" fill="rgb(237,113,36)" rx="2" ry="2" />
<text  x="1026.56" y="1471.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (25 samples, 0.04%)</title><rect x="1026.9" y="1029" width="0.5" height="15.0" fill="rgb(206,205,45)" rx="2" ry="2" />
<text  x="1029.91" y="1039.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (22 samples, 0.04%)</title><rect x="189.4" y="1301" width="0.5" height="15.0" fill="rgb(250,29,34)" rx="2" ry="2" />
<text  x="192.38" y="1311.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (13 samples, 0.02%)</title><rect x="1026.6" y="1029" width="0.3" height="15.0" fill="rgb(238,21,33)" rx="2" ry="2" />
<text  x="1029.64" y="1039.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::h21cd600e9f97af32 (36 samples, 0.06%)</title><rect x="1032.5" y="1573" width="0.7" height="15.0" fill="rgb(231,116,5)" rx="2" ry="2" />
<text  x="1035.47" y="1583.5" ></text>
</g>
<g >
<title>tsd_assert_fast (20 samples, 0.04%)</title><rect x="160.9" y="1557" width="0.4" height="15.0" fill="rgb(226,218,40)" rx="2" ry="2" />
<text  x="163.87" y="1567.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (14 samples, 0.03%)</title><rect x="1032.5" y="1253" width="0.3" height="15.0" fill="rgb(228,38,44)" rx="2" ry="2" />
<text  x="1035.47" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h5b3a67a18c04d66c (7 samples, 0.01%)</title><rect x="194.4" y="1557" width="0.1" height="15.0" fill="rgb(238,117,26)" rx="2" ry="2" />
<text  x="197.39" y="1567.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (8 samples, 0.01%)</title><rect x="1027.6" y="1013" width="0.1" height="15.0" fill="rgb(205,32,22)" rx="2" ry="2" />
<text  x="1030.57" y="1023.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::has_been_set (7 samples, 0.01%)</title><rect x="1135.1" y="757" width="0.1" height="15.0" fill="rgb(205,203,34)" rx="2" ry="2" />
<text  x="1138.09" y="767.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (12 samples, 0.02%)</title><rect x="995.3" y="1509" width="0.3" height="15.0" fill="rgb(224,162,23)" rx="2" ry="2" />
<text  x="998.32" y="1519.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (9 samples, 0.02%)</title><rect x="1049.5" y="1269" width="0.2" height="15.0" fill="rgb(220,137,48)" rx="2" ry="2" />
<text  x="1052.53" y="1279.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Selector::select::_$u7b$$u7b$closure$u7d$$u7d$::hff705b83937d3782 (14 samples, 0.03%)</title><rect x="1124.8" y="885" width="0.3" height="15.0" fill="rgb(235,93,29)" rx="2" ry="2" />
<text  x="1127.84" y="895.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (20 samples, 0.04%)</title><rect x="1029.0" y="1141" width="0.4" height="15.0" fill="rgb(206,190,46)" rx="2" ry="2" />
<text  x="1031.97" y="1151.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (9 samples, 0.02%)</title><rect x="1026.0" y="1141" width="0.2" height="15.0" fill="rgb(249,15,16)" rx="2" ry="2" />
<text  x="1028.98" y="1151.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (23 samples, 0.04%)</title><rect x="1029.5" y="869" width="0.4" height="15.0" fill="rgb(249,129,0)" rx="2" ry="2" />
<text  x="1032.46" y="879.5" ></text>
</g>
<g >
<title>bincode::internal::deserialize (144 samples, 0.26%)</title><rect x="1000.0" y="1493" width="3.0" height="15.0" fill="rgb(235,211,53)" rx="2" ry="2" />
<text  x="1002.99" y="1503.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current (47 samples, 0.08%)</title><rect x="1048.0" y="1125" width="1.0" height="15.0" fill="rgb(242,18,34)" rx="2" ry="2" />
<text  x="1050.96" y="1135.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::register (24 samples, 0.04%)</title><rect x="1005.5" y="1477" width="0.5" height="15.0" fill="rgb(221,91,41)" rx="2" ry="2" />
<text  x="1008.46" y="1487.5" ></text>
</g>
<g >
<title>arena_sdalloc (1,362 samples, 2.45%)</title><rect x="126.8" y="1541" width="28.9" height="15.0" fill="rgb(242,32,51)" rx="2" ry="2" />
<text  x="129.81" y="1551.5" >ar..</text>
</g>
<g >
<title>_rjem_je_tcache_event_hard (6 samples, 0.01%)</title><rect x="148.4" y="1493" width="0.2" height="15.0" fill="rgb(222,84,5)" rx="2" ry="2" />
<text  x="151.43" y="1503.5" ></text>
</g>
<g >
<title>core::mem::replace (6 samples, 0.01%)</title><rect x="1006.4" y="1445" width="0.1" height="15.0" fill="rgb(212,212,45)" rx="2" ry="2" />
<text  x="1009.39" y="1455.5" ></text>
</g>
<g >
<title>bincode::config::Options::deserialize (144 samples, 0.26%)</title><rect x="1000.0" y="1509" width="3.0" height="15.0" fill="rgb(229,195,50)" rx="2" ry="2" />
<text  x="1002.99" y="1519.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (20 samples, 0.04%)</title><rect x="248.7" y="1301" width="0.4" height="15.0" fill="rgb(251,194,1)" rx="2" ry="2" />
<text  x="251.69" y="1311.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNot&lt;T&gt;&gt;::serialize (17 samples, 0.03%)</title><rect x="1023.0" y="1333" width="0.3" height="15.0" fill="rgb(226,173,38)" rx="2" ry="2" />
<text  x="1025.97" y="1343.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (204 samples, 0.37%)</title><rect x="1130.9" y="805" width="4.3" height="15.0" fill="rgb(205,226,29)" rx="2" ry="2" />
<text  x="1133.91" y="815.5" ></text>
</g>
<g >
<title>&lt;std::sync::condvar::Condvar as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="905.8" y="1269" width="0.1" height="15.0" fill="rgb(251,29,37)" rx="2" ry="2" />
<text  x="908.80" y="1279.5" ></text>
</g>
<g >
<title>arena_decay_ticks (6 samples, 0.01%)</title><rect x="1017.4" y="1509" width="0.1" height="15.0" fill="rgb(241,157,22)" rx="2" ry="2" />
<text  x="1020.41" y="1519.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (6 samples, 0.01%)</title><rect x="1034.6" y="1365" width="0.1" height="15.0" fill="rgb(242,105,15)" rx="2" ry="2" />
<text  x="1037.57" y="1375.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::len (13 samples, 0.02%)</title><rect x="330.5" y="1269" width="0.3" height="15.0" fill="rgb(209,197,23)" rx="2" ry="2" />
<text  x="333.49" y="1279.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::clone_id (5 samples, 0.01%)</title><rect x="1007.0" y="1397" width="0.1" height="15.0" fill="rgb(210,139,13)" rx="2" ry="2" />
<text  x="1010.03" y="1407.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (5 samples, 0.01%)</title><rect x="189.7" y="1189" width="0.1" height="15.0" fill="rgb(243,118,51)" rx="2" ry="2" />
<text  x="192.70" y="1199.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::new_edge (50 samples, 0.09%)</title><rect x="751.7" y="1173" width="1.1" height="15.0" fill="rgb(238,52,40)" rx="2" ry="2" />
<text  x="754.73" y="1183.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (209 samples, 0.38%)</title><rect x="1149.9" y="853" width="4.4" height="15.0" fill="rgb(236,113,35)" rx="2" ry="2" />
<text  x="1152.85" y="863.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (11 samples, 0.02%)</title><rect x="1059.1" y="1365" width="0.2" height="15.0" fill="rgb(220,183,47)" rx="2" ry="2" />
<text  x="1062.06" y="1375.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (11 samples, 0.02%)</title><rect x="992.9" y="1397" width="0.3" height="15.0" fill="rgb(250,98,51)" rx="2" ry="2" />
<text  x="995.92" y="1407.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (19 samples, 0.03%)</title><rect x="456.5" y="1109" width="0.4" height="15.0" fill="rgb(219,133,9)" rx="2" ry="2" />
<text  x="459.47" y="1119.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (21 samples, 0.04%)</title><rect x="997.2" y="1509" width="0.4" height="15.0" fill="rgb(220,187,0)" rx="2" ry="2" />
<text  x="1000.16" y="1519.5" ></text>
</g>
<g >
<title>core::alloc::Layout::size (16 samples, 0.03%)</title><rect x="917.5" y="1237" width="0.4" height="15.0" fill="rgb(226,119,33)" rx="2" ry="2" />
<text  x="920.53" y="1247.5" ></text>
</g>
<g >
<title>futures::future::option::&lt;impl futures::future::Future for core::option::Option&lt;F&gt;&gt;::poll (5 samples, 0.01%)</title><rect x="1041.3" y="949" width="0.1" height="15.0" fill="rgb(226,31,23)" rx="2" ry="2" />
<text  x="1044.32" y="959.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (398 samples, 0.72%)</title><rect x="1128.6" y="1061" width="8.4" height="15.0" fill="rgb(229,166,23)" rx="2" ry="2" />
<text  x="1131.59" y="1071.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::worker::Worker&lt;T,Request&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="995.4" y="821" width="0.1" height="15.0" fill="rgb(236,2,48)" rx="2" ry="2" />
<text  x="998.36" y="831.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (16 samples, 0.03%)</title><rect x="1039.0" y="325" width="0.4" height="15.0" fill="rgb(207,66,4)" rx="2" ry="2" />
<text  x="1042.05" y="335.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (6 samples, 0.01%)</title><rect x="1049.7" y="965" width="0.2" height="15.0" fill="rgb(246,46,29)" rx="2" ry="2" />
<text  x="1052.74" y="975.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (9 samples, 0.02%)</title><rect x="474.3" y="1189" width="0.2" height="15.0" fill="rgb(237,191,38)" rx="2" ry="2" />
<text  x="477.29" y="1199.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.01%)</title><rect x="1022.2" y="917" width="0.1" height="15.0" fill="rgb(224,77,14)" rx="2" ry="2" />
<text  x="1025.22" y="927.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::Instant::now (19 samples, 0.03%)</title><rect x="1114.7" y="949" width="0.4" height="15.0" fill="rgb(241,71,22)" rx="2" ry="2" />
<text  x="1117.74" y="959.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (19 samples, 0.03%)</title><rect x="997.6" y="1189" width="0.4" height="15.0" fill="rgb(227,206,1)" rx="2" ry="2" />
<text  x="1000.61" y="1199.5" ></text>
</g>
<g >
<title>tcp_sendmsg (43 samples, 0.08%)</title><rect x="1050.1" y="741" width="0.9" height="15.0" fill="rgb(240,22,36)" rx="2" ry="2" />
<text  x="1053.08" y="751.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::notify (27 samples, 0.05%)</title><rect x="1028.4" y="1189" width="0.6" height="15.0" fill="rgb(253,169,54)" rx="2" ry="2" />
<text  x="1031.40" y="1199.5" ></text>
</g>
<g >
<title>std::sys_common::condvar::Condvar::wait (18 samples, 0.03%)</title><rect x="192.1" y="1253" width="0.4" height="15.0" fill="rgb(217,4,5)" rx="2" ry="2" />
<text  x="195.10" y="1263.5" ></text>
</g>
<g >
<title>mio::poll::enqueue_with_wakeup (22 samples, 0.04%)</title><rect x="1014.5" y="1013" width="0.4" height="15.0" fill="rgb(226,55,4)" rx="2" ry="2" />
<text  x="1017.46" y="1023.5" ></text>
</g>
<g >
<title>&lt;futures::future::map::Map&lt;A,F&gt; as futures::future::Future&gt;::poll (13 samples, 0.02%)</title><rect x="194.1" y="1445" width="0.2" height="15.0" fill="rgb(223,103,5)" rx="2" ry="2" />
<text  x="197.07" y="1455.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (13 samples, 0.02%)</title><rect x="10.0" y="1589" width="0.3" height="15.0" fill="rgb(205,119,20)" rx="2" ry="2" />
<text  x="13.00" y="1599.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (8 samples, 0.01%)</title><rect x="1044.4" y="1429" width="0.2" height="15.0" fill="rgb(217,175,2)" rx="2" ry="2" />
<text  x="1047.44" y="1439.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (46 samples, 0.08%)</title><rect x="1029.0" y="1461" width="0.9" height="15.0" fill="rgb(215,124,48)" rx="2" ry="2" />
<text  x="1031.97" y="1471.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::rand_usize (136 samples, 0.24%)</title><rect x="1140.3" y="1045" width="2.9" height="15.0" fill="rgb(236,44,5)" rx="2" ry="2" />
<text  x="1143.31" y="1055.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (12 samples, 0.02%)</title><rect x="995.3" y="1477" width="0.3" height="15.0" fill="rgb(246,145,41)" rx="2" ry="2" />
<text  x="998.32" y="1487.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (12 samples, 0.02%)</title><rect x="1029.9" y="1477" width="0.3" height="15.0" fill="rgb(212,66,4)" rx="2" ry="2" />
<text  x="1032.95" y="1487.5" ></text>
</g>
<g >
<title>futures::task_impl::std::BorrowedUnpark::to_owned (10 samples, 0.02%)</title><rect x="1013.8" y="1445" width="0.3" height="15.0" fill="rgb(238,83,10)" rx="2" ry="2" />
<text  x="1016.84" y="1455.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap_or_else (19 samples, 0.03%)</title><rect x="693.5" y="1221" width="0.4" height="15.0" fill="rgb(234,177,22)" rx="2" ry="2" />
<text  x="696.54" y="1231.5" ></text>
</g>
<g >
<title>core::ptr::write (79 samples, 0.14%)</title><rect x="374.1" y="1269" width="1.7" height="15.0" fill="rgb(230,109,18)" rx="2" ry="2" />
<text  x="377.14" y="1279.5" ></text>
</g>
<g >
<title>tokio_sync::task::atomic_task::AtomicTask::take_task::_$u7b$$u7b$closure$u7d$$u7d$::h4ae0ab74fe683407 (16 samples, 0.03%)</title><rect x="1110.3" y="917" width="0.3" height="15.0" fill="rgb(222,221,30)" rx="2" ry="2" />
<text  x="1113.30" y="927.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (7 samples, 0.01%)</title><rect x="194.4" y="1477" width="0.1" height="15.0" fill="rgb(248,27,42)" rx="2" ry="2" />
<text  x="197.39" y="1487.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.01%)</title><rect x="1014.2" y="1157" width="0.1" height="15.0" fill="rgb(210,48,11)" rx="2" ry="2" />
<text  x="1017.20" y="1167.5" ></text>
</g>
<g >
<title>nf_hook_slow (5 samples, 0.01%)</title><rect x="1041.8" y="533" width="0.1" height="15.0" fill="rgb(206,67,13)" rx="2" ry="2" />
<text  x="1044.83" y="543.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (23 samples, 0.04%)</title><rect x="1039.0" y="485" width="0.5" height="15.0" fill="rgb(253,197,13)" rx="2" ry="2" />
<text  x="1041.96" y="495.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (13 samples, 0.02%)</title><rect x="984.2" y="1205" width="0.3" height="15.0" fill="rgb(222,105,42)" rx="2" ry="2" />
<text  x="987.22" y="1215.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (34 samples, 0.06%)</title><rect x="1131.0" y="693" width="0.8" height="15.0" fill="rgb(220,97,54)" rx="2" ry="2" />
<text  x="1134.03" y="703.5" ></text>
</g>
<g >
<title>&lt;futures::future::either::Either&lt;A,B&gt; as futures::future::Future&gt;::poll (111 samples, 0.20%)</title><rect x="180.9" y="1541" width="2.4" height="15.0" fill="rgb(244,42,23)" rx="2" ry="2" />
<text  x="183.92" y="1551.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (11 samples, 0.02%)</title><rect x="1129.6" y="949" width="0.2" height="15.0" fill="rgb(230,192,22)" rx="2" ry="2" />
<text  x="1132.57" y="959.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (6 samples, 0.01%)</title><rect x="1006.4" y="1477" width="0.1" height="15.0" fill="rgb(225,195,6)" rx="2" ry="2" />
<text  x="1009.39" y="1487.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (19 samples, 0.03%)</title><rect x="997.6" y="1333" width="0.4" height="15.0" fill="rgb(237,54,47)" rx="2" ry="2" />
<text  x="1000.61" y="1343.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h248546646748d6c4 (49 samples, 0.09%)</title><rect x="183.8" y="1541" width="1.0" height="15.0" fill="rgb(251,108,38)" rx="2" ry="2" />
<text  x="186.76" y="1551.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::into_val_slice (73 samples, 0.13%)</title><rect x="650.7" y="1141" width="1.6" height="15.0" fill="rgb(247,8,27)" rx="2" ry="2" />
<text  x="653.74" y="1151.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (30 samples, 0.05%)</title><rect x="1022.9" y="1541" width="0.6" height="15.0" fill="rgb(237,0,48)" rx="2" ry="2" />
<text  x="1025.90" y="1551.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (63 samples, 0.11%)</title><rect x="1151.3" y="565" width="1.3" height="15.0" fill="rgb(231,20,52)" rx="2" ry="2" />
<text  x="1154.28" y="575.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (30 samples, 0.05%)</title><rect x="1022.9" y="1589" width="0.6" height="15.0" fill="rgb(250,130,31)" rx="2" ry="2" />
<text  x="1025.90" y="1599.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.01%)</title><rect x="1022.3" y="1269" width="0.1" height="15.0" fill="rgb(214,144,20)" rx="2" ry="2" />
<text  x="1025.33" y="1279.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::stream::Stream&gt;::poll (14 samples, 0.03%)</title><rect x="1037.4" y="1141" width="0.3" height="15.0" fill="rgb(225,182,26)" rx="2" ry="2" />
<text  x="1040.39" y="1151.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::he0977de3e88b310a (7 samples, 0.01%)</title><rect x="194.4" y="1445" width="0.1" height="15.0" fill="rgb(223,33,44)" rx="2" ry="2" />
<text  x="197.39" y="1455.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (9 samples, 0.02%)</title><rect x="559.3" y="1173" width="0.2" height="15.0" fill="rgb(221,140,41)" rx="2" ry="2" />
<text  x="562.31" y="1183.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::he020094adb00dc4f (8 samples, 0.01%)</title><rect x="193.9" y="1493" width="0.2" height="15.0" fill="rgb(211,26,21)" rx="2" ry="2" />
<text  x="196.90" y="1503.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (8 samples, 0.01%)</title><rect x="1027.6" y="1125" width="0.1" height="15.0" fill="rgb(222,165,24)" rx="2" ry="2" />
<text  x="1030.57" y="1135.5" ></text>
</g>
<g >
<title>tcp_push (44 samples, 0.08%)</title><rect x="1038.7" y="645" width="1.0" height="15.0" fill="rgb(214,9,53)" rx="2" ry="2" />
<text  x="1041.73" y="655.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (6 samples, 0.01%)</title><rect x="978.7" y="1205" width="0.1" height="15.0" fill="rgb(212,142,53)" rx="2" ry="2" />
<text  x="981.70" y="1215.5" ></text>
</g>
<g >
<title>tsdn_null (58 samples, 0.10%)</title><rect x="158.4" y="1525" width="1.2" height="15.0" fill="rgb(249,111,17)" rx="2" ry="2" />
<text  x="161.40" y="1535.5" ></text>
</g>
<g >
<title>core::ptr::eq (37 samples, 0.07%)</title><rect x="727.3" y="1237" width="0.8" height="15.0" fill="rgb(231,184,8)" rx="2" ry="2" />
<text  x="730.32" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (8 samples, 0.01%)</title><rect x="1033.2" y="1141" width="0.2" height="15.0" fill="rgb(251,133,5)" rx="2" ry="2" />
<text  x="1036.24" y="1151.5" ></text>
</g>
<g >
<title>&lt;futures::future::either::Either&lt;A,B&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="180.4" y="1301" width="0.2" height="15.0" fill="rgb(249,28,12)" rx="2" ry="2" />
<text  x="183.43" y="1311.5" ></text>
</g>
<g >
<title>chrono::offset::local::tm_to_datetime (14 samples, 0.03%)</title><rect x="978.1" y="1205" width="0.3" height="15.0" fill="rgb(209,172,29)" rx="2" ry="2" />
<text  x="981.07" y="1215.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.01%)</title><rect x="194.4" y="1573" width="0.1" height="15.0" fill="rgb(230,145,12)" rx="2" ry="2" />
<text  x="197.39" y="1583.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (143 samples, 0.26%)</title><rect x="1094.5" y="885" width="3.0" height="15.0" fill="rgb(242,17,45)" rx="2" ry="2" />
<text  x="1097.49" y="895.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::TableOperation&gt;::serialize (19 samples, 0.03%)</title><rect x="997.6" y="1269" width="0.4" height="15.0" fill="rgb(216,78,19)" rx="2" ry="2" />
<text  x="1000.61" y="1279.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_ptr (6 samples, 0.01%)</title><rect x="1084.4" y="933" width="0.1" height="15.0" fill="rgb(241,48,1)" rx="2" ry="2" />
<text  x="1087.37" y="943.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (7 samples, 0.01%)</title><rect x="1031.4" y="773" width="0.2" height="15.0" fill="rgb(244,19,5)" rx="2" ry="2" />
<text  x="1034.43" y="783.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::_$u7b$$u7b$closure$u7d$$u7d$::h26bbe27b6c187828 (2,896 samples, 5.21%)</title><rect x="791.4" y="1205" width="61.4" height="15.0" fill="rgb(236,191,51)" rx="2" ry="2" />
<text  x="794.38" y="1215.5" >core::..</text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.02%)</title><rect x="1026.0" y="1429" width="0.2" height="15.0" fill="rgb(222,198,12)" rx="2" ry="2" />
<text  x="1028.98" y="1439.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::DropNotifyService&lt;Svc&gt; as tower_service::Service&lt;Request&gt;&gt;::poll_ready (11 samples, 0.02%)</title><rect x="1008.6" y="1397" width="0.2" height="15.0" fill="rgb(209,24,14)" rx="2" ry="2" />
<text  x="1011.58" y="1407.5" ></text>
</g>
<g >
<title>core::alloc::Layout::for_value (347 samples, 0.62%)</title><rect x="895.6" y="1301" width="7.4" height="15.0" fill="rgb(238,171,48)" rx="2" ry="2" />
<text  x="898.63" y="1311.5" ></text>
</g>
<g >
<title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (538 samples, 0.97%)</title><rect x="662.2" y="1237" width="11.4" height="15.0" fill="rgb(251,106,23)" rx="2" ry="2" />
<text  x="665.18" y="1247.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (61 samples, 0.11%)</title><rect x="1031.2" y="1493" width="1.3" height="15.0" fill="rgb(223,217,32)" rx="2" ry="2" />
<text  x="1034.18" y="1503.5" ></text>
</g>
<g >
<title>tcp_recvmsg (6 samples, 0.01%)</title><rect x="1037.5" y="805" width="0.1" height="15.0" fill="rgb(220,78,8)" rx="2" ry="2" />
<text  x="1040.46" y="815.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (43 samples, 0.08%)</title><rect x="1084.8" y="965" width="0.9" height="15.0" fill="rgb(240,173,12)" rx="2" ry="2" />
<text  x="1087.80" y="975.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (7 samples, 0.01%)</title><rect x="1056.7" y="1493" width="0.2" height="15.0" fill="rgb(210,6,29)" rx="2" ry="2" />
<text  x="1059.70" y="1503.5" ></text>
</g>
<g >
<title>rtree_szind_read (7 samples, 0.01%)</title><rect x="1018.2" y="1541" width="0.2" height="15.0" fill="rgb(225,88,26)" rx="2" ry="2" />
<text  x="1021.23" y="1551.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (174 samples, 0.31%)</title><rect x="377.0" y="1253" width="3.7" height="15.0" fill="rgb(214,216,50)" rx="2" ry="2" />
<text  x="380.00" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::std::BorrowedUnpark::to_owned (7 samples, 0.01%)</title><rect x="1012.8" y="1365" width="0.2" height="15.0" fill="rgb(253,8,52)" rx="2" ry="2" />
<text  x="1015.84" y="1375.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (7 samples, 0.01%)</title><rect x="1027.6" y="949" width="0.1" height="15.0" fill="rgb(247,30,25)" rx="2" ry="2" />
<text  x="1030.59" y="959.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap$LT$K$C$V$C$S$GT$::swap_remove_index::_$u7b$$u7b$closure$u7d$$u7d$::h8158d810c175c911 (5 samples, 0.01%)</title><rect x="1132.4" y="693" width="0.1" height="15.0" fill="rgb(254,163,18)" rx="2" ry="2" />
<text  x="1135.37" y="703.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::stream::Stream&gt;::poll (7 samples, 0.01%)</title><rect x="1033.0" y="981" width="0.1" height="15.0" fill="rgb(240,75,3)" rx="2" ry="2" />
<text  x="1035.96" y="991.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (9 samples, 0.02%)</title><rect x="1026.0" y="901" width="0.2" height="15.0" fill="rgb(206,53,35)" rx="2" ry="2" />
<text  x="1028.98" y="911.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (22 samples, 0.04%)</title><rect x="189.4" y="1397" width="0.5" height="15.0" fill="rgb(240,105,46)" rx="2" ry="2" />
<text  x="192.38" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (19 samples, 0.03%)</title><rect x="202.1" y="1253" width="0.4" height="15.0" fill="rgb(242,68,13)" rx="2" ry="2" />
<text  x="205.07" y="1263.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1059.8" y="1221" width="0.1" height="15.0" fill="rgb(246,169,47)" rx="2" ry="2" />
<text  x="1062.76" y="1231.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfb347edd97d33f3d (61 samples, 0.11%)</title><rect x="1031.2" y="1557" width="1.3" height="15.0" fill="rgb(208,205,11)" rx="2" ry="2" />
<text  x="1034.18" y="1567.5" ></text>
</g>
<g >
<title>tcp_sendmsg (46 samples, 0.08%)</title><rect x="1041.7" y="677" width="1.0" height="15.0" fill="rgb(236,118,26)" rx="2" ry="2" />
<text  x="1044.70" y="687.5" ></text>
</g>
<g >
<title>new_sync_write (5 samples, 0.01%)</title><rect x="984.1" y="1045" width="0.1" height="15.0" fill="rgb(247,146,19)" rx="2" ry="2" />
<text  x="987.09" y="1055.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::clone_id (8 samples, 0.01%)</title><rect x="1007.5" y="1397" width="0.2" height="15.0" fill="rgb(232,100,11)" rx="2" ry="2" />
<text  x="1010.54" y="1407.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::BoxedNode&lt;K,V&gt;::as_ptr (47 samples, 0.08%)</title><rect x="274.3" y="1269" width="1.0" height="15.0" fill="rgb(213,165,52)" rx="2" ry="2" />
<text  x="277.28" y="1279.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (11 samples, 0.02%)</title><rect x="258.0" y="1189" width="0.3" height="15.0" fill="rgb(244,134,47)" rx="2" ry="2" />
<text  x="261.03" y="1199.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (7 samples, 0.01%)</title><rect x="1053.5" y="1045" width="0.1" height="15.0" fill="rgb(223,47,47)" rx="2" ry="2" />
<text  x="1056.48" y="1055.5" ></text>
</g>
<g >
<title>futures::sync::mpsc::Sender&lt;T&gt;::park (6 samples, 0.01%)</title><rect x="1153.4" y="581" width="0.1" height="15.0" fill="rgb(219,32,51)" rx="2" ry="2" />
<text  x="1156.36" y="591.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::signal_work (23 samples, 0.04%)</title><rect x="1014.5" y="1141" width="0.4" height="15.0" fill="rgb(232,28,43)" rx="2" ry="2" />
<text  x="1017.46" y="1151.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current (33 samples, 0.06%)</title><rect x="10.4" y="1349" width="0.7" height="15.0" fill="rgb(230,56,36)" rx="2" ry="2" />
<text  x="13.40" y="1359.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="1026.0" y="885" width="0.2" height="15.0" fill="rgb(212,163,9)" rx="2" ry="2" />
<text  x="1028.98" y="895.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (9 samples, 0.02%)</title><rect x="1020.4" y="1509" width="0.2" height="15.0" fill="rgb(243,39,8)" rx="2" ry="2" />
<text  x="1023.38" y="1519.5" ></text>
</g>
<g >
<title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (44 samples, 0.08%)</title><rect x="430.7" y="1253" width="0.9" height="15.0" fill="rgb(214,208,17)" rx="2" ry="2" />
<text  x="433.71" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (51 samples, 0.09%)</title><rect x="980.2" y="1157" width="1.1" height="15.0" fill="rgb(211,201,44)" rx="2" ry="2" />
<text  x="983.21" y="1167.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (5 samples, 0.01%)</title><rect x="192.7" y="1301" width="0.1" height="15.0" fill="rgb(216,43,16)" rx="2" ry="2" />
<text  x="195.69" y="1311.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (37 samples, 0.07%)</title><rect x="186.3" y="1477" width="0.7" height="15.0" fill="rgb(247,101,26)" rx="2" ry="2" />
<text  x="189.26" y="1487.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.01%)</title><rect x="194.5" y="1509" width="0.2" height="15.0" fill="rgb(242,74,0)" rx="2" ry="2" />
<text  x="197.54" y="1519.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (33 samples, 0.06%)</title><rect x="998.0" y="1173" width="0.7" height="15.0" fill="rgb(240,84,31)" rx="2" ry="2" />
<text  x="1001.01" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (17 samples, 0.03%)</title><rect x="1085.3" y="933" width="0.4" height="15.0" fill="rgb(215,92,39)" rx="2" ry="2" />
<text  x="1088.35" y="943.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (18 samples, 0.03%)</title><rect x="1048.4" y="837" width="0.3" height="15.0" fill="rgb(226,155,16)" rx="2" ry="2" />
<text  x="1051.36" y="847.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (29 samples, 0.05%)</title><rect x="1150.4" y="645" width="0.6" height="15.0" fill="rgb(241,220,29)" rx="2" ry="2" />
<text  x="1153.43" y="655.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (26 samples, 0.05%)</title><rect x="1147.5" y="997" width="0.6" height="15.0" fill="rgb(241,123,52)" rx="2" ry="2" />
<text  x="1150.54" y="1007.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.05%)</title><rect x="1028.4" y="1141" width="0.6" height="15.0" fill="rgb(213,7,40)" rx="2" ry="2" />
<text  x="1031.40" y="1151.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::service::Buffer&lt;T,Request&gt; as tower_service::Service&lt;Request&gt;&gt;::call (10 samples, 0.02%)</title><rect x="989.0" y="1269" width="0.2" height="15.0" fill="rgb(227,160,32)" rx="2" ry="2" />
<text  x="991.99" y="1279.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h1e333f0842b39e4b (23 samples, 0.04%)</title><rect x="1014.5" y="1173" width="0.4" height="15.0" fill="rgb(244,18,39)" rx="2" ry="2" />
<text  x="1017.46" y="1183.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (15 samples, 0.03%)</title><rect x="1154.4" y="997" width="0.3" height="15.0" fill="rgb(252,119,18)" rx="2" ry="2" />
<text  x="1157.42" y="1007.5" ></text>
</g>
<g >
<title>do_syscall_64 (21 samples, 0.04%)</title><rect x="1028.5" y="789" width="0.5" height="15.0" fill="rgb(225,157,47)" rx="2" ry="2" />
<text  x="1031.52" y="799.5" ></text>
</g>
<g >
<title>generic_perform_write (5 samples, 0.01%)</title><rect x="984.1" y="997" width="0.1" height="15.0" fill="rgb(228,82,44)" rx="2" ry="2" />
<text  x="987.09" y="1007.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (5 samples, 0.01%)</title><rect x="1035.6" y="773" width="0.1" height="15.0" fill="rgb(244,24,3)" rx="2" ry="2" />
<text  x="1038.63" y="783.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7 samples, 0.01%)</title><rect x="578.9" y="1061" width="0.2" height="15.0" fill="rgb(212,220,22)" rx="2" ry="2" />
<text  x="581.94" y="1071.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts (10 samples, 0.02%)</title><rect x="1117.1" y="933" width="0.2" height="15.0" fill="rgb(216,185,38)" rx="2" ry="2" />
<text  x="1120.07" y="943.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="1051.6" y="1253" width="0.2" height="15.0" fill="rgb(218,105,12)" rx="2" ry="2" />
<text  x="1054.59" y="1263.5" ></text>
</g>
<g >
<title>chan::Inner&lt;T&gt;::lock (886 samples, 1.59%)</title><rect x="444.9" y="1269" width="18.8" height="15.0" fill="rgb(222,96,11)" rx="2" ry="2" />
<text  x="447.92" y="1279.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::ha5a36fc5828d1332 (56 samples, 0.10%)</title><rect x="184.8" y="1541" width="1.2" height="15.0" fill="rgb(238,81,8)" rx="2" ry="2" />
<text  x="187.80" y="1551.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (11 samples, 0.02%)</title><rect x="1035.9" y="1381" width="0.2" height="15.0" fill="rgb(221,104,21)" rx="2" ry="2" />
<text  x="1038.89" y="1391.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (23 samples, 0.04%)</title><rect x="186.6" y="1429" width="0.4" height="15.0" fill="rgb(232,79,48)" rx="2" ry="2" />
<text  x="189.56" y="1439.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (10 samples, 0.02%)</title><rect x="1019.8" y="1557" width="0.2" height="15.0" fill="rgb(219,116,19)" rx="2" ry="2" />
<text  x="1022.83" y="1567.5" ></text>
</g>
<g >
<title>bincode::internal::serialize_into (5 samples, 0.01%)</title><rect x="1035.0" y="1045" width="0.1" height="15.0" fill="rgb(244,214,51)" rx="2" ry="2" />
<text  x="1037.95" y="1055.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (9 samples, 0.02%)</title><rect x="1026.0" y="1029" width="0.2" height="15.0" fill="rgb(231,119,50)" rx="2" ry="2" />
<text  x="1028.98" y="1039.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 0.02%)</title><rect x="1044.9" y="1093" width="0.3" height="15.0" fill="rgb(229,56,12)" rx="2" ry="2" />
<text  x="1047.93" y="1103.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.03%)</title><rect x="194.7" y="1493" width="0.3" height="15.0" fill="rgb(212,5,23)" rx="2" ry="2" />
<text  x="197.71" y="1503.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (9 samples, 0.02%)</title><rect x="1051.4" y="1093" width="0.2" height="15.0" fill="rgb(253,87,6)" rx="2" ry="2" />
<text  x="1054.38" y="1103.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (7 samples, 0.01%)</title><rect x="1036.2" y="1061" width="0.1" height="15.0" fill="rgb(231,213,23)" rx="2" ry="2" />
<text  x="1039.16" y="1071.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.01%)</title><rect x="1023.8" y="1381" width="0.1" height="15.0" fill="rgb(232,210,6)" rx="2" ry="2" />
<text  x="1026.81" y="1391.5" ></text>
</g>
<g >
<title>ip_local_out (38 samples, 0.07%)</title><rect x="1050.1" y="629" width="0.9" height="15.0" fill="rgb(251,174,31)" rx="2" ry="2" />
<text  x="1053.15" y="639.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (23 samples, 0.04%)</title><rect x="1057.6" y="1253" width="0.5" height="15.0" fill="rgb(220,95,46)" rx="2" ry="2" />
<text  x="1060.59" y="1263.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.01%)</title><rect x="193.9" y="1317" width="0.2" height="15.0" fill="rgb(253,219,18)" rx="2" ry="2" />
<text  x="196.90" y="1327.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="1025.8" y="1381" width="0.2" height="15.0" fill="rgb(249,65,4)" rx="2" ry="2" />
<text  x="1028.79" y="1391.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::InternalAsyncWriter&lt;S,T,D&gt; as std::io::Read&gt;::read (41 samples, 0.07%)</title><rect x="1054.3" y="1205" width="0.9" height="15.0" fill="rgb(230,69,35)" rx="2" ry="2" />
<text  x="1057.28" y="1215.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts_mut (42 samples, 0.08%)</title><rect x="336.6" y="1269" width="0.8" height="15.0" fill="rgb(230,107,42)" rx="2" ry="2" />
<text  x="339.56" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (19 samples, 0.03%)</title><rect x="1052.6" y="1413" width="0.4" height="15.0" fill="rgb(238,39,52)" rx="2" ry="2" />
<text  x="1055.61" y="1423.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (11 samples, 0.02%)</title><rect x="1034.3" y="1365" width="0.3" height="15.0" fill="rgb(242,221,15)" rx="2" ry="2" />
<text  x="1037.34" y="1375.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (7 samples, 0.01%)</title><rect x="1022.5" y="885" width="0.1" height="15.0" fill="rgb(246,80,24)" rx="2" ry="2" />
<text  x="1025.48" y="895.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (32 samples, 0.06%)</title><rect x="1031.8" y="1317" width="0.7" height="15.0" fill="rgb(235,52,53)" rx="2" ry="2" />
<text  x="1034.79" y="1327.5" ></text>
</g>
<g >
<title>sys_write (18 samples, 0.03%)</title><rect x="1014.5" y="837" width="0.4" height="15.0" fill="rgb(211,194,46)" rx="2" ry="2" />
<text  x="1017.54" y="847.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (46 samples, 0.08%)</title><rect x="804.8" y="1077" width="0.9" height="15.0" fill="rgb(249,189,21)" rx="2" ry="2" />
<text  x="807.75" y="1087.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (35 samples, 0.06%)</title><rect x="1051.9" y="1557" width="0.7" height="15.0" fill="rgb(221,153,4)" rx="2" ry="2" />
<text  x="1054.87" y="1567.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueue::prepare_for_sleep (5 samples, 0.01%)</title><rect x="1111.3" y="917" width="0.1" height="15.0" fill="rgb(248,41,39)" rx="2" ry="2" />
<text  x="1114.34" y="927.5" ></text>
</g>
<g >
<title>&lt;futures::future::loop_fn::LoopFn&lt;A,F&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1025.6" y="629" width="0.1" height="15.0" fill="rgb(246,89,53)" rx="2" ry="2" />
<text  x="1028.62" y="639.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (14 samples, 0.03%)</title><rect x="1049.7" y="1077" width="0.3" height="15.0" fill="rgb(241,210,13)" rx="2" ry="2" />
<text  x="1052.72" y="1087.5" ></text>
</g>
<g >
<title>tokio_sync::loom::sync::CausalCell&lt;T&gt;::with_mut (23 samples, 0.04%)</title><rect x="1003.0" y="1509" width="0.5" height="15.0" fill="rgb(241,50,38)" rx="2" ry="2" />
<text  x="1006.04" y="1519.5" ></text>
</g>
<g >
<title>noria::table::_::&lt;impl serde::ser::Serialize for noria::table::Input&gt;::serialize (5 samples, 0.01%)</title><rect x="1023.8" y="1301" width="0.1" height="15.0" fill="rgb(242,222,40)" rx="2" ry="2" />
<text  x="1026.81" y="1311.5" ></text>
</g>
<g >
<title>tokio_reactor::Reactor::turn (296 samples, 0.53%)</title><rect x="1074.2" y="981" width="6.3" height="15.0" fill="rgb(217,205,54)" rx="2" ry="2" />
<text  x="1077.19" y="991.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (8 samples, 0.01%)</title><rect x="1036.5" y="1349" width="0.2" height="15.0" fill="rgb(224,48,23)" rx="2" ry="2" />
<text  x="1039.48" y="1359.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (8 samples, 0.01%)</title><rect x="990.9" y="1493" width="0.2" height="15.0" fill="rgb(250,138,34)" rx="2" ry="2" />
<text  x="993.92" y="1503.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_bytes (5 samples, 0.01%)</title><rect x="1003.8" y="1429" width="0.1" height="15.0" fill="rgb(218,139,6)" rx="2" ry="2" />
<text  x="1006.83" y="1439.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (7 samples, 0.01%)</title><rect x="1056.7" y="1445" width="0.2" height="15.0" fill="rgb(214,63,23)" rx="2" ry="2" />
<text  x="1059.70" y="1455.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::stack::Stack::push (17 samples, 0.03%)</title><rect x="1070.5" y="1045" width="0.4" height="15.0" fill="rgb(215,16,17)" rx="2" ry="2" />
<text  x="1073.50" y="1055.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessNode::enqueue_with_wakeup (26 samples, 0.05%)</title><rect x="1048.2" y="933" width="0.5" height="15.0" fill="rgb(209,47,32)" rx="2" ry="2" />
<text  x="1051.19" y="943.5" ></text>
</g>
<g >
<title>&lt;noria::view::View as tower_service::Service&lt; (9 samples, 0.02%)</title><rect x="194.8" y="1237" width="0.2" height="15.0" fill="rgb(229,7,14)" rx="2" ry="2" />
<text  x="197.84" y="1247.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (12 samples, 0.02%)</title><rect x="1015.2" y="1317" width="0.2" height="15.0" fill="rgb(211,10,46)" rx="2" ry="2" />
<text  x="1018.18" y="1327.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Forget&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="1056.0" y="1109" width="0.1" height="15.0" fill="rgb(230,160,34)" rx="2" ry="2" />
<text  x="1058.96" y="1119.5" ></text>
</g>
<g >
<title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (6 samples, 0.01%)</title><rect x="996.4" y="1413" width="0.1" height="15.0" fill="rgb(229,172,39)" rx="2" ry="2" />
<text  x="999.40" y="1423.5" ></text>
</g>
<g >
<title>core::ptr::read (156 samples, 0.28%)</title><rect x="255.1" y="1221" width="3.4" height="15.0" fill="rgb(245,67,14)" rx="2" ry="2" />
<text  x="258.14" y="1231.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.01%)</title><rect x="192.0" y="1189" width="0.1" height="15.0" fill="rgb(233,31,8)" rx="2" ry="2" />
<text  x="194.97" y="1199.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::right_edge (61 samples, 0.11%)</title><rect x="960.6" y="1285" width="1.3" height="15.0" fill="rgb(219,83,48)" rx="2" ry="2" />
<text  x="963.65" y="1295.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::dequeue_node (58 samples, 0.10%)</title><rect x="1090.9" y="901" width="1.2" height="15.0" fill="rgb(234,79,38)" rx="2" ry="2" />
<text  x="1093.91" y="911.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (8 samples, 0.01%)</title><rect x="1034.7" y="1477" width="0.2" height="15.0" fill="rgb(246,1,37)" rx="2" ry="2" />
<text  x="1037.70" y="1487.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="1037.8" y="1141" width="0.2" height="15.0" fill="rgb(219,185,54)" rx="2" ry="2" />
<text  x="1040.82" y="1151.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (19 samples, 0.03%)</title><rect x="1050.4" y="517" width="0.4" height="15.0" fill="rgb(220,63,51)" rx="2" ry="2" />
<text  x="1053.38" y="527.5" ></text>
</g>
<g >
<title>sys_write (7 samples, 0.01%)</title><rect x="983.3" y="1093" width="0.2" height="15.0" fill="rgb(222,184,43)" rx="2" ry="2" />
<text  x="986.33" y="1103.5" ></text>
</g>
<g >
<title>do_syscall_64 (118 samples, 0.21%)</title><rect x="1103.5" y="869" width="2.5" height="15.0" fill="rgb(220,137,49)" rx="2" ry="2" />
<text  x="1106.47" y="879.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::spawn_thread::_$u7b$$u7b$closure$u7d$$u7d$::ha7200d58e6efae3b (46 samples, 0.08%)</title><rect x="1029.0" y="1493" width="0.9" height="15.0" fill="rgb(241,204,0)" rx="2" ry="2" />
<text  x="1031.97" y="1503.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (20 samples, 0.04%)</title><rect x="1059.3" y="1221" width="0.4" height="15.0" fill="rgb(217,178,13)" rx="2" ry="2" />
<text  x="1062.29" y="1231.5" ></text>
</g>
<g >
<title>tokio_reactor::registration::Registration::poll_ready (18 samples, 0.03%)</title><rect x="1054.8" y="1125" width="0.4" height="15.0" fill="rgb(214,11,2)" rx="2" ry="2" />
<text  x="1057.77" y="1135.5" ></text>
</g>
<g >
<title>&lt;futures::future::either::Either&lt;A,B&gt; as futures::future::Future&gt;::poll (21 samples, 0.04%)</title><rect x="189.4" y="1253" width="0.4" height="15.0" fill="rgb(218,54,50)" rx="2" ry="2" />
<text  x="192.38" y="1263.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::poll_complete (62 samples, 0.11%)</title><rect x="1038.5" y="933" width="1.3" height="15.0" fill="rgb(223,38,22)" rx="2" ry="2" />
<text  x="1041.48" y="943.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (17 samples, 0.03%)</title><rect x="1020.6" y="1557" width="0.4" height="15.0" fill="rgb(221,75,33)" rx="2" ry="2" />
<text  x="1023.61" y="1567.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (253 samples, 0.45%)</title><rect x="812.4" y="1093" width="5.4" height="15.0" fill="rgb(254,54,48)" rx="2" ry="2" />
<text  x="815.43" y="1103.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (17 samples, 0.03%)</title><rect x="1023.0" y="1141" width="0.3" height="15.0" fill="rgb(213,224,3)" rx="2" ry="2" />
<text  x="1025.97" y="1151.5" ></text>
</g>
<g >
<title>tokio_reactor::HandlePriv::wakeup (6 samples, 0.01%)</title><rect x="996.3" y="1093" width="0.1" height="15.0" fill="rgb(214,161,42)" rx="2" ry="2" />
<text  x="999.27" y="1103.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (59 samples, 0.11%)</title><rect x="1026.2" y="1589" width="1.2" height="15.0" fill="rgb(215,94,20)" rx="2" ry="2" />
<text  x="1029.19" y="1599.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::Instant::now (10 samples, 0.02%)</title><rect x="1125.8" y="901" width="0.2" height="15.0" fill="rgb(213,196,7)" rx="2" ry="2" />
<text  x="1128.77" y="911.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (46 samples, 0.08%)</title><rect x="1029.0" y="1205" width="0.9" height="15.0" fill="rgb(243,13,21)" rx="2" ry="2" />
<text  x="1031.97" y="1215.5" ></text>
</g>
<g >
<title>ip_finish_output (29 samples, 0.05%)</title><rect x="1050.3" y="597" width="0.6" height="15.0" fill="rgb(231,19,14)" rx="2" ry="2" />
<text  x="1053.32" y="607.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="1036.5" y="1285" width="0.2" height="15.0" fill="rgb(225,30,30)" rx="2" ry="2" />
<text  x="1039.48" y="1295.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (8 samples, 0.01%)</title><rect x="1044.4" y="1397" width="0.2" height="15.0" fill="rgb(231,187,5)" rx="2" ry="2" />
<text  x="1047.44" y="1407.5" ></text>
</g>
<g >
<title>arena_bin_malloc_hard (5 samples, 0.01%)</title><rect x="1017.9" y="1461" width="0.1" height="15.0" fill="rgb(217,118,31)" rx="2" ry="2" />
<text  x="1020.89" y="1471.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (60 samples, 0.11%)</title><rect x="998.7" y="1397" width="1.3" height="15.0" fill="rgb(244,36,42)" rx="2" ry="2" />
<text  x="1001.71" y="1407.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (6 samples, 0.01%)</title><rect x="1033.8" y="1205" width="0.1" height="15.0" fill="rgb(207,24,21)" rx="2" ry="2" />
<text  x="1036.81" y="1215.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::is_null (15 samples, 0.03%)</title><rect x="437.7" y="1269" width="0.3" height="15.0" fill="rgb(231,194,15)" rx="2" ry="2" />
<text  x="440.69" y="1279.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::TableOperation&gt;::serialize (8 samples, 0.01%)</title><rect x="1026.3" y="1093" width="0.2" height="15.0" fill="rgb(210,221,24)" rx="2" ry="2" />
<text  x="1029.30" y="1103.5" ></text>
</g>
<g >
<title>&lt;futures::future::either::Either&lt;A,B&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="1044.8" y="1301" width="0.1" height="15.0" fill="rgb(246,23,39)" rx="2" ry="2" />
<text  x="1047.82" y="1311.5" ></text>
</g>
<g >
<title>&lt;bincode::de::read::SliceReader as bincode::de::read::BincodeRead&gt;::forward_read_bytes (10 samples, 0.02%)</title><rect x="1000.4" y="677" width="0.2" height="15.0" fill="rgb(244,15,43)" rx="2" ry="2" />
<text  x="1003.41" y="687.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (7 samples, 0.01%)</title><rect x="1056.7" y="1589" width="0.2" height="15.0" fill="rgb(226,112,6)" rx="2" ry="2" />
<text  x="1059.70" y="1599.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h407d9fac205eeaef (5 samples, 0.01%)</title><rect x="1021.0" y="1541" width="0.1" height="15.0" fill="rgb(222,122,25)" rx="2" ry="2" />
<text  x="1024.01" y="1551.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (284 samples, 0.51%)</title><rect x="1038.4" y="1429" width="6.0" height="15.0" fill="rgb(223,109,0)" rx="2" ry="2" />
<text  x="1041.41" y="1439.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (12 samples, 0.02%)</title><rect x="1036.7" y="1221" width="0.2" height="15.0" fill="rgb(245,217,52)" rx="2" ry="2" />
<text  x="1039.65" y="1231.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (6 samples, 0.01%)</title><rect x="1033.7" y="1189" width="0.1" height="15.0" fill="rgb(219,21,48)" rx="2" ry="2" />
<text  x="1036.68" y="1199.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (174 samples, 0.31%)</title><rect x="1053.0" y="1477" width="3.7" height="15.0" fill="rgb(241,148,25)" rx="2" ry="2" />
<text  x="1056.01" y="1487.5" ></text>
</g>
<g >
<title>byteorder::io::WriteBytesExt::write_u8 (10 samples, 0.02%)</title><rect x="1045.6" y="917" width="0.2" height="15.0" fill="rgb(251,12,49)" rx="2" ry="2" />
<text  x="1048.58" y="927.5" ></text>
</g>
<g >
<title>do_syscall_64 (92 samples, 0.17%)</title><rect x="1095.6" y="805" width="1.9" height="15.0" fill="rgb(225,137,12)" rx="2" ry="2" />
<text  x="1098.58" y="815.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::notify (7 samples, 0.01%)</title><rect x="1047.6" y="1077" width="0.1" height="15.0" fill="rgb(239,153,47)" rx="2" ry="2" />
<text  x="1050.60" y="1087.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (6 samples, 0.01%)</title><rect x="1031.0" y="949" width="0.2" height="15.0" fill="rgb(237,207,6)" rx="2" ry="2" />
<text  x="1034.05" y="959.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (9 samples, 0.02%)</title><rect x="1026.0" y="1045" width="0.2" height="15.0" fill="rgb(250,84,50)" rx="2" ry="2" />
<text  x="1028.98" y="1055.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h248546646748d6c4 (33 samples, 0.06%)</title><rect x="10.4" y="1589" width="0.7" height="15.0" fill="rgb(249,123,14)" rx="2" ry="2" />
<text  x="13.40" y="1599.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::poll_complete (48 samples, 0.09%)</title><rect x="1050.1" y="1013" width="1.0" height="15.0" fill="rgb(207,36,0)" rx="2" ry="2" />
<text  x="1053.06" y="1023.5" ></text>
</g>
<g >
<title>tsdn_tsd (37 samples, 0.07%)</title><rect x="69.8" y="1509" width="0.8" height="15.0" fill="rgb(219,18,53)" rx="2" ry="2" />
<text  x="72.82" y="1519.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (13 samples, 0.02%)</title><rect x="1051.6" y="1365" width="0.3" height="15.0" fill="rgb(233,91,46)" rx="2" ry="2" />
<text  x="1054.59" y="1375.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ThreadNotify as futures::task_impl::Notify&gt;::notify (16 samples, 0.03%)</title><rect x="1043.8" y="805" width="0.3" height="15.0" fill="rgb(247,122,22)" rx="2" ry="2" />
<text  x="1046.76" y="815.5" ></text>
</g>
<g >
<title>bincode::config::legacy::Config::serialize_into (31 samples, 0.06%)</title><rect x="1053.2" y="1221" width="0.7" height="15.0" fill="rgb(210,225,43)" rx="2" ry="2" />
<text  x="1056.24" y="1231.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (22 samples, 0.04%)</title><rect x="1032.8" y="1141" width="0.4" height="15.0" fill="rgb(242,135,40)" rx="2" ry="2" />
<text  x="1035.77" y="1151.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (21 samples, 0.04%)</title><rect x="1042.0" y="469" width="0.5" height="15.0" fill="rgb(222,178,32)" rx="2" ry="2" />
<text  x="1045.02" y="479.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (22 samples, 0.04%)</title><rect x="723.7" y="1285" width="0.5" height="15.0" fill="rgb(249,41,6)" rx="2" ry="2" />
<text  x="726.74" y="1295.5" ></text>
</g>
<g >
<title>std::sync::condvar::Condvar::wait (18 samples, 0.03%)</title><rect x="192.1" y="1269" width="0.4" height="15.0" fill="rgb(217,112,54)" rx="2" ry="2" />
<text  x="195.10" y="1279.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (51 samples, 0.09%)</title><rect x="806.9" y="1109" width="1.1" height="15.0" fill="rgb(214,106,50)" rx="2" ry="2" />
<text  x="809.89" y="1119.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (93 samples, 0.17%)</title><rect x="1057.1" y="1525" width="2.0" height="15.0" fill="rgb(229,220,9)" rx="2" ry="2" />
<text  x="1060.09" y="1535.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (67 samples, 0.12%)</title><rect x="187.0" y="1541" width="1.5" height="15.0" fill="rgb(229,197,15)" rx="2" ry="2" />
<text  x="190.05" y="1551.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,031 samples, 1.85%)</title><rect x="608.3" y="1269" width="21.9" height="15.0" fill="rgb(250,90,48)" rx="2" ry="2" />
<text  x="611.33" y="1279.5" >s..</text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::h3c294772b9273f11 (56 samples, 0.10%)</title><rect x="184.8" y="1573" width="1.2" height="15.0" fill="rgb(245,194,43)" rx="2" ry="2" />
<text  x="187.80" y="1583.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (37 samples, 0.07%)</title><rect x="390.2" y="1269" width="0.7" height="15.0" fill="rgb(228,144,54)" rx="2" ry="2" />
<text  x="393.16" y="1279.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (33 samples, 0.06%)</title><rect x="1030.5" y="1173" width="0.7" height="15.0" fill="rgb(243,51,19)" rx="2" ry="2" />
<text  x="1033.48" y="1183.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (12 samples, 0.02%)</title><rect x="1148.9" y="949" width="0.3" height="15.0" fill="rgb(236,136,27)" rx="2" ry="2" />
<text  x="1151.90" y="959.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (6,082 samples, 10.94%)</title><rect x="1060.7" y="1173" width="129.0" height="15.0" fill="rgb(235,70,47)" rx="2" ry="2" />
<text  x="1063.65" y="1183.5" >tokio::runtime::..</text>
</g>
<g >
<title>chrono::naive::datetime::serde::&lt;impl serde::de::Deserialize for chrono::naive::datetime::NaiveDateTime&gt;::deserialize (86 samples, 0.15%)</title><rect x="1000.6" y="709" width="1.8" height="15.0" fill="rgb(221,106,17)" rx="2" ry="2" />
<text  x="1003.62" y="719.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (9 samples, 0.02%)</title><rect x="1049.5" y="1285" width="0.2" height="15.0" fill="rgb(209,170,26)" rx="2" ry="2" />
<text  x="1052.53" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::current::_$u7b$$u7b$closure$u7d$$u7d$::hb88041a16b038a29 (6 samples, 0.01%)</title><rect x="1060.2" y="1141" width="0.1" height="15.0" fill="rgb(216,46,3)" rx="2" ry="2" />
<text  x="1063.20" y="1151.5" ></text>
</g>
<g >
<title>async_bincode::reader::AsyncBincodeReader&lt;R,T&gt;::fill (6 samples, 0.01%)</title><rect x="1052.7" y="1253" width="0.1" height="15.0" fill="rgb(244,116,7)" rx="2" ry="2" />
<text  x="1055.71" y="1263.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap_or (10 samples, 0.02%)</title><rect x="1078.5" y="885" width="0.2" height="15.0" fill="rgb(212,72,34)" rx="2" ry="2" />
<text  x="1081.47" y="895.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.02%)</title><rect x="1033.7" y="1509" width="0.2" height="15.0" fill="rgb(206,175,32)" rx="2" ry="2" />
<text  x="1036.68" y="1519.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (21 samples, 0.04%)</title><rect x="1042.0" y="485" width="0.5" height="15.0" fill="rgb(252,55,11)" rx="2" ry="2" />
<text  x="1045.02" y="495.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_flush (25 samples, 0.04%)</title><rect x="1131.1" y="645" width="0.5" height="15.0" fill="rgb(232,212,10)" rx="2" ry="2" />
<text  x="1134.05" y="655.5" ></text>
</g>
<g >
<title>futex_wake (11 samples, 0.02%)</title><rect x="1134.1" y="581" width="0.2" height="15.0" fill="rgb(246,78,15)" rx="2" ry="2" />
<text  x="1137.11" y="591.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (13 samples, 0.02%)</title><rect x="1026.6" y="1093" width="0.3" height="15.0" fill="rgb(244,144,20)" rx="2" ry="2" />
<text  x="1029.64" y="1103.5" ></text>
</g>
<g >
<title>&lt;futures::sync::oneshot::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="1150.9" y="549" width="0.1" height="15.0" fill="rgb(211,114,24)" rx="2" ry="2" />
<text  x="1153.91" y="559.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (13 samples, 0.02%)</title><rect x="1026.6" y="1141" width="0.3" height="15.0" fill="rgb(229,12,52)" rx="2" ry="2" />
<text  x="1029.64" y="1151.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (8 samples, 0.01%)</title><rect x="193.9" y="1269" width="0.2" height="15.0" fill="rgb(254,142,9)" rx="2" ry="2" />
<text  x="196.90" y="1279.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.01%)</title><rect x="192.7" y="1349" width="0.1" height="15.0" fill="rgb(212,184,52)" rx="2" ry="2" />
<text  x="195.69" y="1359.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (12 samples, 0.02%)</title><rect x="1047.6" y="1269" width="0.2" height="15.0" fill="rgb(210,49,5)" rx="2" ry="2" />
<text  x="1050.56" y="1279.5" ></text>
</g>
<g >
<title>chan::select::Select::maybe_try_select::try_sync (10 samples, 0.02%)</title><rect x="991.5" y="1557" width="0.2" height="15.0" fill="rgb(254,6,45)" rx="2" ry="2" />
<text  x="994.50" y="1567.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::drop_id (5 samples, 0.01%)</title><rect x="1007.3" y="1445" width="0.1" height="15.0" fill="rgb(235,211,40)" rx="2" ry="2" />
<text  x="1010.26" y="1455.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (222 samples, 0.40%)</title><rect x="1149.6" y="997" width="4.7" height="15.0" fill="rgb(233,98,21)" rx="2" ry="2" />
<text  x="1152.62" y="1007.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (10 samples, 0.02%)</title><rect x="1037.2" y="1125" width="0.2" height="15.0" fill="rgb(226,199,7)" rx="2" ry="2" />
<text  x="1040.18" y="1135.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (5 samples, 0.01%)</title><rect x="1057.7" y="1093" width="0.1" height="15.0" fill="rgb(237,53,37)" rx="2" ry="2" />
<text  x="1060.68" y="1103.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (38 samples, 0.07%)</title><rect x="1026.6" y="1237" width="0.8" height="15.0" fill="rgb(232,20,6)" rx="2" ry="2" />
<text  x="1029.64" y="1247.5" ></text>
</g>
<g >
<title>core::num::wrapping::&lt;impl core::ops::bit::BitXor for core::num::Wrapping&lt;u64&gt;&gt;::bitxor (5 samples, 0.01%)</title><rect x="581.2" y="1093" width="0.1" height="15.0" fill="rgb(235,114,51)" rx="2" ry="2" />
<text  x="584.17" y="1103.5" ></text>
</g>
<g >
<title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as futures::future::Future&gt;::poll (34 samples, 0.06%)</title><rect x="1131.0" y="757" width="0.8" height="15.0" fill="rgb(254,25,11)" rx="2" ry="2" />
<text  x="1134.03" y="767.5" ></text>
</g>
<g >
<title>core::fmt::write (33 samples, 0.06%)</title><rect x="998.0" y="997" width="0.7" height="15.0" fill="rgb(238,98,0)" rx="2" ry="2" />
<text  x="1001.01" y="1007.5" ></text>
</g>
<g >
<title>imalloc_body (2,917 samples, 5.25%)</title><rect x="19.8" y="1557" width="61.9" height="15.0" fill="rgb(205,18,14)" rx="2" ry="2" />
<text  x="22.85" y="1567.5" >imallo..</text>
</g>
<g >
<title>core::alloc::Layout::align (27 samples, 0.05%)</title><rect x="390.9" y="1285" width="0.6" height="15.0" fill="rgb(242,181,10)" rx="2" ry="2" />
<text  x="393.94" y="1295.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="189.4" y="1205" width="0.2" height="15.0" fill="rgb(251,150,28)" rx="2" ry="2" />
<text  x="192.43" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (11 samples, 0.02%)</title><rect x="1034.0" y="1301" width="0.2" height="15.0" fill="rgb(210,89,53)" rx="2" ry="2" />
<text  x="1036.96" y="1311.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::Mutex::new (15 samples, 0.03%)</title><rect x="243.2" y="1317" width="0.3" height="15.0" fill="rgb(244,225,22)" rx="2" ry="2" />
<text  x="246.19" y="1327.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1053.3" y="1045" width="0.1" height="15.0" fill="rgb(235,181,19)" rx="2" ry="2" />
<text  x="1056.33" y="1055.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::stream::Stream&gt;::poll (14 samples, 0.03%)</title><rect x="1032.2" y="1061" width="0.3" height="15.0" fill="rgb(214,94,2)" rx="2" ry="2" />
<text  x="1035.15" y="1071.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (29 samples, 0.05%)</title><rect x="750.9" y="1157" width="0.7" height="15.0" fill="rgb(221,99,2)" rx="2" ry="2" />
<text  x="753.94" y="1167.5" ></text>
</g>
<g >
<title>core::mem::replace (83 samples, 0.15%)</title><rect x="558.8" y="1221" width="1.7" height="15.0" fill="rgb(230,5,0)" rx="2" ry="2" />
<text  x="561.76" y="1231.5" ></text>
</g>
<g >
<title>mio::poll::SetReadiness::set_readiness (23 samples, 0.04%)</title><rect x="10.5" y="1173" width="0.5" height="15.0" fill="rgb(221,39,50)" rx="2" ry="2" />
<text  x="13.51" y="1183.5" ></text>
</g>
<g >
<title>noria::view::_::&lt;impl serde::ser::Serialize for noria::view::ReadQuery&gt;::serialize (5 samples, 0.01%)</title><rect x="1053.3" y="1141" width="0.1" height="15.0" fill="rgb(227,126,2)" rx="2" ry="2" />
<text  x="1056.33" y="1151.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::ok_or (16 samples, 0.03%)</title><rect x="687.7" y="1205" width="0.3" height="15.0" fill="rgb(239,34,8)" rx="2" ry="2" />
<text  x="690.67" y="1215.5" ></text>
</g>
<g >
<title>&lt;bytes::bytes::BytesMut as core::iter::traits::collect::Extend&lt;u8&gt;&gt;::extend (5 samples, 0.01%)</title><rect x="1041.1" y="645" width="0.1" height="15.0" fill="rgb(249,2,27)" rx="2" ry="2" />
<text  x="1044.11" y="655.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (6 samples, 0.01%)</title><rect x="1034.6" y="1269" width="0.1" height="15.0" fill="rgb(217,185,46)" rx="2" ry="2" />
<text  x="1037.57" y="1279.5" ></text>
</g>
<g >
<title>vfs_write (9 samples, 0.02%)</title><rect x="10.8" y="933" width="0.2" height="15.0" fill="rgb(245,63,5)" rx="2" ry="2" />
<text  x="13.76" y="943.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::io::Io as std::io::Write&gt;::write (19 samples, 0.03%)</title><rect x="1048.3" y="853" width="0.4" height="15.0" fill="rgb(224,0,26)" rx="2" ry="2" />
<text  x="1051.34" y="863.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (144 samples, 0.26%)</title><rect x="1000.0" y="1157" width="3.0" height="15.0" fill="rgb(217,175,18)" rx="2" ry="2" />
<text  x="1002.99" y="1167.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (19 samples, 0.03%)</title><rect x="1052.6" y="1461" width="0.4" height="15.0" fill="rgb(225,49,44)" rx="2" ry="2" />
<text  x="1055.61" y="1471.5" ></text>
</g>
<g >
<title>noria::table::_::&lt;impl serde::ser::Serialize for noria::table::Input&gt;::serialize (6 samples, 0.01%)</title><rect x="1014.2" y="1173" width="0.1" height="15.0" fill="rgb(239,105,19)" rx="2" ry="2" />
<text  x="1017.20" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::offset (14 samples, 0.03%)</title><rect x="437.4" y="1253" width="0.3" height="15.0" fill="rgb(251,103,37)" rx="2" ry="2" />
<text  x="440.39" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.02%)</title><rect x="1037.5" y="901" width="0.1" height="15.0" fill="rgb(221,65,1)" rx="2" ry="2" />
<text  x="1040.46" y="911.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (6 samples, 0.01%)</title><rect x="1031.0" y="885" width="0.2" height="15.0" fill="rgb(226,223,41)" rx="2" ry="2" />
<text  x="1034.05" y="895.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (17 samples, 0.03%)</title><rect x="1036.1" y="1141" width="0.4" height="15.0" fill="rgb(217,202,31)" rx="2" ry="2" />
<text  x="1039.12" y="1151.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::h7fdc06b51efca05a (399 samples, 0.72%)</title><rect x="977.3" y="1509" width="8.5" height="15.0" fill="rgb(237,136,35)" rx="2" ry="2" />
<text  x="980.30" y="1519.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_with (6 samples, 0.01%)</title><rect x="1021.6" y="1413" width="0.1" height="15.0" fill="rgb(214,93,12)" rx="2" ry="2" />
<text  x="1024.56" y="1423.5" ></text>
</g>
<g >
<title>&lt;noria::view::View as tower_service::Service&lt; (5 samples, 0.01%)</title><rect x="192.5" y="1109" width="0.1" height="15.0" fill="rgb(223,44,45)" rx="2" ry="2" />
<text  x="195.48" y="1119.5" ></text>
</g>
<g >
<title>core::mem::swap (64 samples, 0.12%)</title><rect x="1100.7" y="885" width="1.4" height="15.0" fill="rgb(216,79,29)" rx="2" ry="2" />
<text  x="1103.71" y="895.5" ></text>
</g>
<g >
<title>&lt;rand::prng::isaac64::Isaac64Rng as rand::Rand&gt;::rand (61 samples, 0.11%)</title><rect x="189.9" y="1557" width="1.2" height="15.0" fill="rgb(248,154,28)" rx="2" ry="2" />
<text  x="192.85" y="1567.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.01%)</title><rect x="194.4" y="1589" width="0.1" height="15.0" fill="rgb(213,175,28)" rx="2" ry="2" />
<text  x="197.39" y="1599.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (14 samples, 0.03%)</title><rect x="180.4" y="1349" width="0.3" height="15.0" fill="rgb(222,86,3)" rx="2" ry="2" />
<text  x="183.43" y="1359.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::chan::Rx&lt;T,S&gt;::recv (7 samples, 0.01%)</title><rect x="1003.6" y="1509" width="0.1" height="15.0" fill="rgb(212,151,40)" rx="2" ry="2" />
<text  x="1006.59" y="1519.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (5 samples, 0.01%)</title><rect x="1026.2" y="1189" width="0.1" height="15.0" fill="rgb(222,25,25)" rx="2" ry="2" />
<text  x="1029.19" y="1199.5" ></text>
</g>
<g >
<title>&lt;futures::future::either::Either&lt;A,B&gt; as futures::future::Future&gt;::poll (29 samples, 0.05%)</title><rect x="1150.4" y="613" width="0.6" height="15.0" fill="rgb(244,38,44)" rx="2" ry="2" />
<text  x="1153.43" y="623.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_and_swap (9 samples, 0.02%)</title><rect x="1091.7" y="869" width="0.2" height="15.0" fill="rgb(238,195,43)" rx="2" ry="2" />
<text  x="1094.67" y="879.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::h6c342b3b4515feb1 (9 samples, 0.02%)</title><rect x="1020.4" y="1525" width="0.2" height="15.0" fill="rgb(240,94,34)" rx="2" ry="2" />
<text  x="1023.38" y="1535.5" ></text>
</g>
<g >
<title>core::mem::replace (31 samples, 0.06%)</title><rect x="1141.8" y="949" width="0.7" height="15.0" fill="rgb(224,47,21)" rx="2" ry="2" />
<text  x="1144.83" y="959.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (14 samples, 0.03%)</title><rect x="180.4" y="1365" width="0.3" height="15.0" fill="rgb(239,167,20)" rx="2" ry="2" />
<text  x="183.43" y="1375.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (8 samples, 0.01%)</title><rect x="193.9" y="1477" width="0.2" height="15.0" fill="rgb(224,57,16)" rx="2" ry="2" />
<text  x="196.90" y="1487.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (14 samples, 0.03%)</title><rect x="1135.4" y="997" width="0.3" height="15.0" fill="rgb(209,152,19)" rx="2" ry="2" />
<text  x="1138.43" y="1007.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (19 samples, 0.03%)</title><rect x="180.4" y="1525" width="0.4" height="15.0" fill="rgb(213,131,46)" rx="2" ry="2" />
<text  x="183.43" y="1535.5" ></text>
</g>
<g >
<title>tcache_event (16 samples, 0.03%)</title><rect x="990.0" y="1493" width="0.3" height="15.0" fill="rgb(219,132,11)" rx="2" ry="2" />
<text  x="992.99" y="1503.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::is_null (19 samples, 0.03%)</title><rect x="934.3" y="1269" width="0.4" height="15.0" fill="rgb(246,0,36)" rx="2" ry="2" />
<text  x="937.33" y="1279.5" ></text>
</g>
<g >
<title>&lt;tokio_tcp::stream::TcpStream as std::io::Write&gt;::write (48 samples, 0.09%)</title><rect x="1050.1" y="949" width="1.0" height="15.0" fill="rgb(225,52,5)" rx="2" ry="2" />
<text  x="1053.06" y="959.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::list::Rx&lt;T&gt;::pop (15 samples, 0.03%)</title><rect x="1012.1" y="1493" width="0.3" height="15.0" fill="rgb(235,155,32)" rx="2" ry="2" />
<text  x="1015.10" y="1503.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (23 samples, 0.04%)</title><rect x="852.3" y="1125" width="0.5" height="15.0" fill="rgb(205,154,8)" rx="2" ry="2" />
<text  x="855.34" y="1135.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (223 samples, 0.40%)</title><rect x="1130.7" y="917" width="4.7" height="15.0" fill="rgb(233,165,46)" rx="2" ry="2" />
<text  x="1133.67" y="927.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (7 samples, 0.01%)</title><rect x="1056.9" y="1429" width="0.2" height="15.0" fill="rgb(238,51,36)" rx="2" ry="2" />
<text  x="1059.94" y="1439.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::hfb931195fd733b29 (12 samples, 0.02%)</title><rect x="995.3" y="1557" width="0.3" height="15.0" fill="rgb(246,182,41)" rx="2" ry="2" />
<text  x="998.32" y="1567.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (33 samples, 0.06%)</title><rect x="998.0" y="1397" width="0.7" height="15.0" fill="rgb(225,221,1)" rx="2" ry="2" />
<text  x="1001.01" y="1407.5" ></text>
</g>
<g >
<title>core::alloc::Layout::size (12 samples, 0.02%)</title><rect x="891.6" y="1237" width="0.2" height="15.0" fill="rgb(208,60,0)" rx="2" ry="2" />
<text  x="894.58" y="1247.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.03%)</title><rect x="1014.5" y="869" width="0.4" height="15.0" fill="rgb(228,96,23)" rx="2" ry="2" />
<text  x="1017.52" y="879.5" ></text>
</g>
<g >
<title>crossbeam_epoch::collector::LocalHandle::pin (783 samples, 1.41%)</title><rect x="1173.1" y="933" width="16.6" height="15.0" fill="rgb(216,185,7)" rx="2" ry="2" />
<text  x="1176.09" y="943.5" ></text>
</g>
<g >
<title>std::sync::mutex::MutexGuard&lt;T&gt;::new (416 samples, 0.75%)</title><rect x="450.0" y="1237" width="8.8" height="15.0" fill="rgb(253,220,9)" rx="2" ry="2" />
<text  x="452.99" y="1247.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="990.9" y="1477" width="0.2" height="15.0" fill="rgb(218,209,19)" rx="2" ry="2" />
<text  x="993.92" y="1487.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (27 samples, 0.05%)</title><rect x="1027.4" y="1349" width="0.6" height="15.0" fill="rgb(233,91,3)" rx="2" ry="2" />
<text  x="1030.44" y="1359.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (11 samples, 0.02%)</title><rect x="1189.5" y="869" width="0.2" height="15.0" fill="rgb(245,151,20)" rx="2" ry="2" />
<text  x="1192.47" y="879.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (30 samples, 0.05%)</title><rect x="1022.9" y="1525" width="0.6" height="15.0" fill="rgb(244,212,14)" rx="2" ry="2" />
<text  x="1025.90" y="1535.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::Pool&lt;MS,Target,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (7 samples, 0.01%)</title><rect x="1030.1" y="773" width="0.1" height="15.0" fill="rgb(235,59,53)" rx="2" ry="2" />
<text  x="1033.05" y="783.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::will_notify_current::_$u7b$$u7b$closure$u7d$$u7d$::he43b0c6849d770e1 (8 samples, 0.01%)</title><rect x="1003.1" y="1333" width="0.2" height="15.0" fill="rgb(213,42,37)" rx="2" ry="2" />
<text  x="1006.13" y="1343.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h3d3457b86cb67885 (6,084 samples, 10.94%)</title><rect x="1060.6" y="1413" width="129.1" height="15.0" fill="rgb(205,10,41)" rx="2" ry="2" />
<text  x="1063.61" y="1423.5" >std::thread::Bui..</text>
</g>
<g >
<title>tokio_timer::wheel::Wheel&lt;T&gt;::next_expiration (58 samples, 0.10%)</title><rect x="1081.6" y="965" width="1.3" height="15.0" fill="rgb(220,149,45)" rx="2" ry="2" />
<text  x="1084.64" y="975.5" ></text>
</g>
<g >
<title>std::io::stdio::_print (10 samples, 0.02%)</title><rect x="989.6" y="1317" width="0.2" height="15.0" fill="rgb(219,142,48)" rx="2" ry="2" />
<text  x="992.61" y="1327.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (27 samples, 0.05%)</title><rect x="235.7" y="1301" width="0.6" height="15.0" fill="rgb(231,14,1)" rx="2" ry="2" />
<text  x="238.73" y="1311.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::into_key_slice (211 samples, 0.38%)</title><rect x="544.4" y="1221" width="4.4" height="15.0" fill="rgb(212,105,41)" rx="2" ry="2" />
<text  x="547.35" y="1231.5" ></text>
</g>
<g >
<title>&lt;noria::view::_::&lt;impl serde::de::Deserialize for noria::view::ReadReply&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (7 samples, 0.01%)</title><rect x="1022.5" y="1205" width="0.1" height="15.0" fill="rgb(209,225,41)" rx="2" ry="2" />
<text  x="1025.48" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (64 samples, 0.12%)</title><rect x="1050.0" y="1141" width="1.4" height="15.0" fill="rgb(250,48,21)" rx="2" ry="2" />
<text  x="1053.02" y="1151.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::h21cd600e9f97af32 (7 samples, 0.01%)</title><rect x="1030.3" y="1493" width="0.2" height="15.0" fill="rgb(251,129,7)" rx="2" ry="2" />
<text  x="1033.33" y="1503.5" ></text>
</g>
<g >
<title>bincode::config::legacy::Config::serialized_size (5 samples, 0.01%)</title><rect x="1022.3" y="1413" width="0.1" height="15.0" fill="rgb(224,226,21)" rx="2" ry="2" />
<text  x="1025.33" y="1423.5" ></text>
</g>
<g >
<title>noria::controller::_::&lt;impl serde::de::Deserialize for noria::controller::ControllerDescriptor&gt;::deserialize (12 samples, 0.02%)</title><rect x="1004.9" y="1493" width="0.3" height="15.0" fill="rgb(228,154,49)" rx="2" ry="2" />
<text  x="1007.91" y="1503.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (31 samples, 0.06%)</title><rect x="717.7" y="1253" width="0.7" height="15.0" fill="rgb(205,56,43)" rx="2" ry="2" />
<text  x="720.71" y="1263.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::core::TaskUnpark as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="1106.8" y="933" width="0.1" height="15.0" fill="rgb(209,61,38)" rx="2" ry="2" />
<text  x="1109.84" y="943.5" ></text>
</g>
<g >
<title>chrono::offset::fixed::add_with_leapsecond (11 samples, 0.02%)</title><rect x="978.1" y="1173" width="0.2" height="15.0" fill="rgb(222,80,54)" rx="2" ry="2" />
<text  x="981.09" y="1183.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::new_kv (5 samples, 0.01%)</title><rect x="664.9" y="1189" width="0.1" height="15.0" fill="rgb(227,34,33)" rx="2" ry="2" />
<text  x="667.86" y="1199.5" ></text>
</g>
<g >
<title>chan::select::SelectRecvHandle&lt;T&gt;::id (184 samples, 0.33%)</title><rect x="702.1" y="1349" width="3.9" height="15.0" fill="rgb(239,111,22)" rx="2" ry="2" />
<text  x="705.12" y="1359.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::last_leaf_edge (142 samples, 0.26%)</title><rect x="715.7" y="1301" width="3.0" height="15.0" fill="rgb(206,57,11)" rx="2" ry="2" />
<text  x="718.72" y="1311.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (216 samples, 0.39%)</title><rect x="1044.8" y="1477" width="4.6" height="15.0" fill="rgb(212,199,5)" rx="2" ry="2" />
<text  x="1047.80" y="1487.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (63 samples, 0.11%)</title><rect x="438.2" y="1301" width="1.3" height="15.0" fill="rgb(240,101,41)" rx="2" ry="2" />
<text  x="441.17" y="1311.5" ></text>
</g>
<g >
<title>tokio_reactor::registration::Registration::poll_read_ready (18 samples, 0.03%)</title><rect x="1054.4" y="1141" width="0.4" height="15.0" fill="rgb(254,128,53)" rx="2" ry="2" />
<text  x="1057.39" y="1151.5" ></text>
</g>
<g >
<title>crossbeam_utils::atomic::atomic_cell::AtomicCell&lt;T&gt;::swap (10 samples, 0.02%)</title><rect x="1055.4" y="1269" width="0.2" height="15.0" fill="rgb(209,76,33)" rx="2" ry="2" />
<text  x="1058.39" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::std::data::local_map (6 samples, 0.01%)</title><rect x="200.7" y="1269" width="0.1" height="15.0" fill="rgb(205,213,45)" rx="2" ry="2" />
<text  x="203.67" y="1279.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::core::TaskUnpark as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="1007.3" y="1461" width="0.1" height="15.0" fill="rgb(210,148,34)" rx="2" ry="2" />
<text  x="1010.26" y="1471.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (8 samples, 0.01%)</title><rect x="359.5" y="1221" width="0.2" height="15.0" fill="rgb(234,224,11)" rx="2" ry="2" />
<text  x="362.54" y="1231.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (33 samples, 0.06%)</title><rect x="998.0" y="1349" width="0.7" height="15.0" fill="rgb(237,198,35)" rx="2" ry="2" />
<text  x="1001.01" y="1359.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (100 samples, 0.18%)</title><rect x="227.6" y="1317" width="2.1" height="15.0" fill="rgb(241,168,54)" rx="2" ry="2" />
<text  x="230.58" y="1327.5" ></text>
</g>
<g >
<title>_rjem_sdallocx (17 samples, 0.03%)</title><rect x="990.5" y="1605" width="0.4" height="15.0" fill="rgb(215,207,24)" rx="2" ry="2" />
<text  x="993.54" y="1615.5" ></text>
</g>
<g >
<title>&lt;&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple::Access&lt;R,O&gt; as serde::de::SeqAccess&gt;::next_element_seed (7 samples, 0.01%)</title><rect x="1022.5" y="1269" width="0.1" height="15.0" fill="rgb(225,223,50)" rx="2" ry="2" />
<text  x="1025.48" y="1279.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::stream::Stream&gt;::poll (14 samples, 0.03%)</title><rect x="1037.4" y="1125" width="0.3" height="15.0" fill="rgb(229,60,28)" rx="2" ry="2" />
<text  x="1040.39" y="1135.5" ></text>
</g>
<g >
<title>futures::future::Future::wait (22 samples, 0.04%)</title><rect x="189.4" y="1541" width="0.5" height="15.0" fill="rgb(205,164,17)" rx="2" ry="2" />
<text  x="192.38" y="1551.5" ></text>
</g>
<g >
<title>alloc::rc::RcBoxPtr::weak (125 samples, 0.22%)</title><rect x="829.7" y="1125" width="2.7" height="15.0" fill="rgb(220,88,48)" rx="2" ry="2" />
<text  x="832.70" y="1135.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (93 samples, 0.17%)</title><rect x="434.8" y="1285" width="2.0" height="15.0" fill="rgb(249,117,10)" rx="2" ry="2" />
<text  x="437.84" y="1295.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.01%)</title><rect x="199.3" y="1109" width="0.1" height="15.0" fill="rgb(248,14,34)" rx="2" ry="2" />
<text  x="202.25" y="1119.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h3d3457b86cb67885 (46 samples, 0.08%)</title><rect x="1029.0" y="1525" width="0.9" height="15.0" fill="rgb(211,11,15)" rx="2" ry="2" />
<text  x="1031.97" y="1535.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (48 samples, 0.09%)</title><rect x="1156.5" y="1013" width="1.1" height="15.0" fill="rgb(231,163,20)" rx="2" ry="2" />
<text  x="1159.54" y="1023.5" ></text>
</g>
<g >
<title>noria::view::_::&lt;impl serde::de::Deserialize for noria::view::ReadReply&gt;::deserialize (10 samples, 0.02%)</title><rect x="1055.2" y="1045" width="0.2" height="15.0" fill="rgb(220,164,41)" rx="2" ry="2" />
<text  x="1058.15" y="1055.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::remove (18 samples, 0.03%)</title><rect x="1099.2" y="901" width="0.4" height="15.0" fill="rgb(211,89,45)" rx="2" ry="2" />
<text  x="1102.23" y="911.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (7 samples, 0.01%)</title><rect x="694.3" y="1205" width="0.2" height="15.0" fill="rgb(249,141,18)" rx="2" ry="2" />
<text  x="697.33" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (15 samples, 0.03%)</title><rect x="188.6" y="1413" width="0.4" height="15.0" fill="rgb(214,87,14)" rx="2" ry="2" />
<text  x="191.64" y="1423.5" ></text>
</g>
<g >
<title>core::ptr::read (307 samples, 0.55%)</title><rect x="497.3" y="1205" width="6.5" height="15.0" fill="rgb(228,107,33)" rx="2" ry="2" />
<text  x="500.27" y="1215.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (17 samples, 0.03%)</title><rect x="1020.6" y="1509" width="0.4" height="15.0" fill="rgb(214,57,35)" rx="2" ry="2" />
<text  x="1023.61" y="1519.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,082 samples, 10.94%)</title><rect x="1060.7" y="1333" width="129.0" height="15.0" fill="rgb(209,37,47)" rx="2" ry="2" />
<text  x="1063.65" y="1343.5" >std::thread::loc..</text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (7 samples, 0.01%)</title><rect x="1022.5" y="997" width="0.1" height="15.0" fill="rgb(247,29,42)" rx="2" ry="2" />
<text  x="1025.48" y="1007.5" ></text>
</g>
<g >
<title>isfree (2,299 samples, 4.13%)</title><rect x="119.1" y="1573" width="48.7" height="15.0" fill="rgb(239,212,24)" rx="2" ry="2" />
<text  x="122.06" y="1583.5" >isfree</text>
</g>
<g >
<title>crossbeam_epoch::internal::Local::global (78 samples, 0.14%)</title><rect x="1188.0" y="901" width="1.7" height="15.0" fill="rgb(216,178,10)" rx="2" ry="2" />
<text  x="1191.05" y="911.5" ></text>
</g>
<g >
<title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,214 samples, 3.98%)</title><rect x="743.0" y="1205" width="47.0" height="15.0" fill="rgb(231,34,16)" rx="2" ry="2" />
<text  x="746.00" y="1215.5" >&lt;all..</text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (33 samples, 0.06%)</title><rect x="998.0" y="1221" width="0.7" height="15.0" fill="rgb(217,99,4)" rx="2" ry="2" />
<text  x="1001.01" y="1231.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (9 samples, 0.02%)</title><rect x="560.2" y="1141" width="0.2" height="15.0" fill="rgb(231,184,5)" rx="2" ry="2" />
<text  x="563.25" y="1151.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (27 samples, 0.05%)</title><rect x="1030.5" y="1141" width="0.5" height="15.0" fill="rgb(220,143,4)" rx="2" ry="2" />
<text  x="1033.48" y="1151.5" ></text>
</g>
<g >
<title>core::mem::forget (23 samples, 0.04%)</title><rect x="721.3" y="1301" width="0.5" height="15.0" fill="rgb(252,107,37)" rx="2" ry="2" />
<text  x="724.34" y="1311.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNotInner&lt;T&gt;&gt;::serialize (13 samples, 0.02%)</title><rect x="1027.7" y="1189" width="0.3" height="15.0" fill="rgb(216,186,1)" rx="2" ry="2" />
<text  x="1030.74" y="1199.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (9 samples, 0.02%)</title><rect x="1055.2" y="837" width="0.2" height="15.0" fill="rgb(244,27,23)" rx="2" ry="2" />
<text  x="1058.18" y="847.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv_mut (410 samples, 0.74%)</title><rect x="332.5" y="1317" width="8.7" height="15.0" fill="rgb(222,134,22)" rx="2" ry="2" />
<text  x="335.53" y="1327.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (7 samples, 0.01%)</title><rect x="1098.6" y="837" width="0.2" height="15.0" fill="rgb(216,216,0)" rx="2" ry="2" />
<text  x="1101.61" y="847.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (18 samples, 0.03%)</title><rect x="866.7" y="1285" width="0.3" height="15.0" fill="rgb(246,21,28)" rx="2" ry="2" />
<text  x="869.67" y="1295.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="832.3" y="1093" width="0.1" height="15.0" fill="rgb(234,83,24)" rx="2" ry="2" />
<text  x="835.25" y="1103.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::DataType&gt;::serialize (5 samples, 0.01%)</title><rect x="1026.2" y="981" width="0.1" height="15.0" fill="rgb(251,27,54)" rx="2" ry="2" />
<text  x="1029.19" y="991.5" ></text>
</g>
<g >
<title>ip_rcv (5 samples, 0.01%)</title><rect x="1131.4" y="37" width="0.1" height="15.0" fill="rgb(208,167,4)" rx="2" ry="2" />
<text  x="1134.37" y="47.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::stream::Stream&gt;::poll (52 samples, 0.09%)</title><rect x="1054.3" y="1269" width="1.1" height="15.0" fill="rgb(213,148,6)" rx="2" ry="2" />
<text  x="1057.28" y="1279.5" ></text>
</g>
<g >
<title>core::fmt::write (5 samples, 0.01%)</title><rect x="1022.3" y="997" width="0.1" height="15.0" fill="rgb(235,214,23)" rx="2" ry="2" />
<text  x="1025.33" y="1007.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::unpark (11 samples, 0.02%)</title><rect x="1028.1" y="1093" width="0.2" height="15.0" fill="rgb(230,144,22)" rx="2" ry="2" />
<text  x="1031.06" y="1103.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (11 samples, 0.02%)</title><rect x="984.2" y="1173" width="0.3" height="15.0" fill="rgb(237,176,0)" rx="2" ry="2" />
<text  x="987.22" y="1183.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::State::set_default (6 samples, 0.01%)</title><rect x="983.1" y="1301" width="0.2" height="15.0" fill="rgb(224,192,18)" rx="2" ry="2" />
<text  x="986.14" y="1311.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current::_$u7b$$u7b$closure$u7d$$u7d$::ha0f99f248e8a20fc (50 samples, 0.09%)</title><rect x="192.8" y="1301" width="1.1" height="15.0" fill="rgb(245,11,52)" rx="2" ry="2" />
<text  x="195.84" y="1311.5" ></text>
</g>
<g >
<title>futures::future::Future::and_then (7 samples, 0.01%)</title><rect x="200.9" y="1269" width="0.1" height="15.0" fill="rgb(214,57,28)" rx="2" ry="2" />
<text  x="203.88" y="1279.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h1e333f0842b39e4b (16 samples, 0.03%)</title><rect x="180.1" y="1285" width="0.3" height="15.0" fill="rgb(219,199,5)" rx="2" ry="2" />
<text  x="183.07" y="1295.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::hfb931195fd733b29 (6,084 samples, 10.94%)</title><rect x="1060.6" y="1509" width="129.1" height="15.0" fill="rgb(241,30,21)" rx="2" ry="2" />
<text  x="1063.61" y="1519.5" >std::thread::Bui..</text>
</g>
<g >
<title>core::ptr::real_drop_in_place (5 samples, 0.01%)</title><rect x="1150.6" y="533" width="0.1" height="15.0" fill="rgb(229,223,4)" rx="2" ry="2" />
<text  x="1153.62" y="543.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="194.4" y="1333" width="0.1" height="15.0" fill="rgb(243,146,52)" rx="2" ry="2" />
<text  x="197.39" y="1343.5" ></text>
</g>
<g >
<title>bincode::internal::serialized_size (9 samples, 0.02%)</title><rect x="1057.9" y="1189" width="0.2" height="15.0" fill="rgb(251,70,24)" rx="2" ry="2" />
<text  x="1060.89" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::std::_$LT$impl$u20$futures..task_impl..Spawn$LT$F$GT$$GT$::wait_future::_$u7b$$u7b$closure$u7d$$u7d$::hd0f6d5cc3fe9bd86 (15 samples, 0.03%)</title><rect x="194.7" y="1461" width="0.3" height="15.0" fill="rgb(251,26,16)" rx="2" ry="2" />
<text  x="197.71" y="1471.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (105 samples, 0.19%)</title><rect x="839.0" y="1109" width="2.2" height="15.0" fill="rgb(215,185,45)" rx="2" ry="2" />
<text  x="842.00" y="1119.5" ></text>
</g>
<g >
<title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (623 samples, 1.12%)</title><rect x="661.4" y="1253" width="13.2" height="15.0" fill="rgb(227,3,9)" rx="2" ry="2" />
<text  x="664.38" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (17 samples, 0.03%)</title><rect x="1044.4" y="1557" width="0.4" height="15.0" fill="rgb(243,46,28)" rx="2" ry="2" />
<text  x="1047.44" y="1567.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (19 samples, 0.03%)</title><rect x="1052.6" y="1573" width="0.4" height="15.0" fill="rgb(243,182,16)" rx="2" ry="2" />
<text  x="1055.61" y="1583.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (20 samples, 0.04%)</title><rect x="1029.0" y="981" width="0.4" height="15.0" fill="rgb(234,202,11)" rx="2" ry="2" />
<text  x="1031.97" y="991.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.01%)</title><rect x="1022.3" y="1365" width="0.1" height="15.0" fill="rgb(231,229,44)" rx="2" ry="2" />
<text  x="1025.33" y="1375.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (14 samples, 0.03%)</title><rect x="1049.7" y="1109" width="0.3" height="15.0" fill="rgb(244,200,19)" rx="2" ry="2" />
<text  x="1052.72" y="1119.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (8 samples, 0.01%)</title><rect x="1036.5" y="1125" width="0.2" height="15.0" fill="rgb(207,182,11)" rx="2" ry="2" />
<text  x="1039.48" y="1135.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (29 samples, 0.05%)</title><rect x="1031.2" y="1349" width="0.6" height="15.0" fill="rgb(226,156,53)" rx="2" ry="2" />
<text  x="1034.18" y="1359.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.01%)</title><rect x="516.2" y="1237" width="0.1" height="15.0" fill="rgb(254,229,48)" rx="2" ry="2" />
<text  x="519.18" y="1247.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (7 samples, 0.01%)</title><rect x="194.4" y="1397" width="0.1" height="15.0" fill="rgb(212,24,51)" rx="2" ry="2" />
<text  x="197.39" y="1407.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (25 samples, 0.04%)</title><rect x="1026.9" y="1061" width="0.5" height="15.0" fill="rgb(240,104,34)" rx="2" ry="2" />
<text  x="1029.91" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::read (5 samples, 0.01%)</title><rect x="578.7" y="1029" width="0.1" height="15.0" fill="rgb(233,69,25)" rx="2" ry="2" />
<text  x="581.73" y="1039.5" ></text>
</g>
<g >
<title>core::mem::replace (7 samples, 0.01%)</title><rect x="1135.5" y="965" width="0.2" height="15.0" fill="rgb(233,133,50)" rx="2" ry="2" />
<text  x="1138.51" y="975.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (15 samples, 0.03%)</title><rect x="197.4" y="1253" width="0.3" height="15.0" fill="rgb(244,60,26)" rx="2" ry="2" />
<text  x="200.36" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (16 samples, 0.03%)</title><rect x="992.6" y="1605" width="0.3" height="15.0" fill="rgb(247,23,51)" rx="2" ry="2" />
<text  x="995.58" y="1615.5" ></text>
</g>
<g >
<title>__pthread_cond_wait (17 samples, 0.03%)</title><rect x="984.9" y="1237" width="0.4" height="15.0" fill="rgb(252,99,24)" rx="2" ry="2" />
<text  x="987.94" y="1247.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::wakeup (22 samples, 0.04%)</title><rect x="1024.0" y="1109" width="0.5" height="15.0" fill="rgb(254,90,34)" rx="2" ry="2" />
<text  x="1027.01" y="1119.5" ></text>
</g>
<g >
<title>noria::table::Table::quick_n_dirty (8 samples, 0.01%)</title><rect x="200.9" y="1285" width="0.2" height="15.0" fill="rgb(220,27,25)" rx="2" ry="2" />
<text  x="203.88" y="1295.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (32 samples, 0.06%)</title><rect x="1037.1" y="1173" width="0.7" height="15.0" fill="rgb(236,1,3)" rx="2" ry="2" />
<text  x="1040.14" y="1183.5" ></text>
</g>
<g >
<title>&lt;crossbeam_epoch::guard::Guard as core::ops::drop::Drop&gt;::drop (191 samples, 0.34%)</title><rect x="1158.8" y="997" width="4.0" height="15.0" fill="rgb(225,78,42)" rx="2" ry="2" />
<text  x="1161.79" y="1007.5" ></text>
</g>
<g >
<title>inet_recvmsg (6 samples, 0.01%)</title><rect x="1037.5" y="821" width="0.1" height="15.0" fill="rgb(243,223,9)" rx="2" ry="2" />
<text  x="1040.46" y="831.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (30 samples, 0.05%)</title><rect x="191.8" y="1349" width="0.7" height="15.0" fill="rgb(222,70,19)" rx="2" ry="2" />
<text  x="194.85" y="1359.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (5 samples, 0.01%)</title><rect x="1131.4" y="133" width="0.1" height="15.0" fill="rgb(220,13,17)" rx="2" ry="2" />
<text  x="1134.37" y="143.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (11 samples, 0.02%)</title><rect x="578.6" y="1045" width="0.3" height="15.0" fill="rgb(243,21,43)" rx="2" ry="2" />
<text  x="581.62" y="1055.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (27 samples, 0.05%)</title><rect x="1082.2" y="949" width="0.5" height="15.0" fill="rgb(215,7,35)" rx="2" ry="2" />
<text  x="1085.17" y="959.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::State::set_default::_$u7b$$u7b$closure$u7d$$u7d$::ha840744df20aab20 (6 samples, 0.01%)</title><rect x="983.1" y="1269" width="0.2" height="15.0" fill="rgb(223,114,16)" rx="2" ry="2" />
<text  x="986.14" y="1279.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h1e333f0842b39e4b (12 samples, 0.02%)</title><rect x="1047.6" y="1125" width="0.2" height="15.0" fill="rgb(248,166,39)" rx="2" ry="2" />
<text  x="1050.56" y="1135.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *const T&gt;::offset (81 samples, 0.15%)</title><rect x="779.4" y="1125" width="1.7" height="15.0" fill="rgb(209,102,43)" rx="2" ry="2" />
<text  x="782.39" y="1135.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::get (5 samples, 0.01%)</title><rect x="278.2" y="1221" width="0.1" height="15.0" fill="rgb(229,138,15)" rx="2" ry="2" />
<text  x="281.16" y="1231.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (13 samples, 0.02%)</title><rect x="1026.6" y="981" width="0.3" height="15.0" fill="rgb(231,169,53)" rx="2" ry="2" />
<text  x="1029.64" y="991.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (21 samples, 0.04%)</title><rect x="1033.2" y="1461" width="0.5" height="15.0" fill="rgb(216,191,42)" rx="2" ry="2" />
<text  x="1036.24" y="1471.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (26 samples, 0.05%)</title><rect x="907.5" y="1221" width="0.5" height="15.0" fill="rgb(246,152,13)" rx="2" ry="2" />
<text  x="910.45" y="1231.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.02%)</title><rect x="1051.4" y="1509" width="0.2" height="15.0" fill="rgb(229,128,7)" rx="2" ry="2" />
<text  x="1054.38" y="1519.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (17 samples, 0.03%)</title><rect x="1023.0" y="1061" width="0.3" height="15.0" fill="rgb(236,128,25)" rx="2" ry="2" />
<text  x="1025.97" y="1071.5" ></text>
</g>
<g >
<title>futex_wake (17 samples, 0.03%)</title><rect x="202.1" y="1205" width="0.4" height="15.0" fill="rgb(223,178,23)" rx="2" ry="2" />
<text  x="205.12" y="1215.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="1034.2" y="1221" width="0.1" height="15.0" fill="rgb(212,64,4)" rx="2" ry="2" />
<text  x="1037.19" y="1231.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (14 samples, 0.03%)</title><rect x="1044.9" y="1205" width="0.3" height="15.0" fill="rgb(228,128,17)" rx="2" ry="2" />
<text  x="1047.93" y="1215.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_borrowed_bytes (10 samples, 0.02%)</title><rect x="1000.4" y="661" width="0.2" height="15.0" fill="rgb(242,129,42)" rx="2" ry="2" />
<text  x="1003.41" y="671.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (43 samples, 0.08%)</title><rect x="1036.9" y="1573" width="0.9" height="15.0" fill="rgb(231,83,36)" rx="2" ry="2" />
<text  x="1039.91" y="1583.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *const T&gt;::offset (46 samples, 0.08%)</title><rect x="371.3" y="1253" width="1.0" height="15.0" fill="rgb(205,207,53)" rx="2" ry="2" />
<text  x="374.31" y="1263.5" ></text>
</g>
<g >
<title>tokio_sync::loom::sync::CausalCell&lt;T&gt;::with_mut (5 samples, 0.01%)</title><rect x="180.5" y="1109" width="0.1" height="15.0" fill="rgb(254,160,16)" rx="2" ry="2" />
<text  x="183.45" y="1119.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (46 samples, 0.08%)</title><rect x="919.6" y="1253" width="1.0" height="15.0" fill="rgb(252,74,47)" rx="2" ry="2" />
<text  x="922.61" y="1263.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::Pool&lt;MS,Target,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (9 samples, 0.02%)</title><rect x="1025.4" y="757" width="0.2" height="15.0" fill="rgb(215,16,46)" rx="2" ry="2" />
<text  x="1028.43" y="767.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (33 samples, 0.06%)</title><rect x="1035.2" y="1413" width="0.7" height="15.0" fill="rgb(221,227,10)" rx="2" ry="2" />
<text  x="1038.19" y="1423.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (28 samples, 0.05%)</title><rect x="1037.8" y="1541" width="0.6" height="15.0" fill="rgb(226,74,11)" rx="2" ry="2" />
<text  x="1040.82" y="1551.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (16 samples, 0.03%)</title><rect x="235.2" y="1269" width="0.3" height="15.0" fill="rgb(233,90,15)" rx="2" ry="2" />
<text  x="238.15" y="1279.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::DropNotifyService&lt;Svc&gt; as tower_service::Service&lt;Request&gt;&gt;::call (13 samples, 0.02%)</title><rect x="1131.9" y="725" width="0.3" height="15.0" fill="rgb(242,208,50)" rx="2" ry="2" />
<text  x="1134.92" y="735.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.01%)</title><rect x="1024.8" y="1333" width="0.1" height="15.0" fill="rgb(243,150,32)" rx="2" ry="2" />
<text  x="1027.79" y="1343.5" ></text>
</g>
<g >
<title>mio::poll::RegistrationInner::set_readiness (5 samples, 0.01%)</title><rect x="1024.8" y="1173" width="0.1" height="15.0" fill="rgb(238,21,48)" rx="2" ry="2" />
<text  x="1027.79" y="1183.5" ></text>
</g>
<g >
<title>&lt;futures::future::either::Either&lt;A,B&gt; as futures::future::Future&gt;::poll (26 samples, 0.05%)</title><rect x="996.3" y="1557" width="0.5" height="15.0" fill="rgb(221,103,31)" rx="2" ry="2" />
<text  x="999.27" y="1567.5" ></text>
</g>
<g >
<title>futures::task_impl::core::BorrowedUnpark::to_owned (6 samples, 0.01%)</title><rect x="183.0" y="1349" width="0.1" height="15.0" fill="rgb(252,227,28)" rx="2" ry="2" />
<text  x="185.95" y="1359.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10 samples, 0.02%)</title><rect x="671.4" y="1141" width="0.2" height="15.0" fill="rgb(228,177,4)" rx="2" ry="2" />
<text  x="674.39" y="1151.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (64 samples, 0.12%)</title><rect x="1151.3" y="661" width="1.3" height="15.0" fill="rgb(218,109,50)" rx="2" ry="2" />
<text  x="1154.25" y="671.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (9 samples, 0.02%)</title><rect x="1026.0" y="917" width="0.2" height="15.0" fill="rgb(222,224,11)" rx="2" ry="2" />
<text  x="1028.98" y="927.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (8 samples, 0.01%)</title><rect x="1015.2" y="1189" width="0.1" height="15.0" fill="rgb(224,4,47)" rx="2" ry="2" />
<text  x="1018.18" y="1199.5" ></text>
</g>
<g >
<title>_rjem_je_arena_ralloc (15 samples, 0.03%)</title><rect x="101.9" y="1557" width="0.3" height="15.0" fill="rgb(233,97,6)" rx="2" ry="2" />
<text  x="104.86" y="1567.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (147 samples, 0.26%)</title><rect x="824.3" y="1045" width="3.1" height="15.0" fill="rgb(247,64,0)" rx="2" ry="2" />
<text  x="827.29" y="1055.5" ></text>
</g>
<g >
<title>tokio_timer::timer::Timer&lt;T,N&gt;::process_queue (14 samples, 0.03%)</title><rect x="1119.1" y="1013" width="0.3" height="15.0" fill="rgb(231,188,11)" rx="2" ry="2" />
<text  x="1122.09" y="1023.5" ></text>
</g>
<g >
<title>&lt;hyper::client::connect::ExtraEnvelope&lt;T&gt; as hyper::client::connect::ExtraInner&gt;::set (12 samples, 0.02%)</title><rect x="1020.1" y="1461" width="0.3" height="15.0" fill="rgb(250,23,36)" rx="2" ry="2" />
<text  x="1023.12" y="1471.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::unwrap_or_else (22 samples, 0.04%)</title><rect x="1165.6" y="981" width="0.4" height="15.0" fill="rgb(221,41,1)" rx="2" ry="2" />
<text  x="1168.56" y="991.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::write (25 samples, 0.04%)</title><rect x="1108.4" y="533" width="0.6" height="15.0" fill="rgb(228,88,33)" rx="2" ry="2" />
<text  x="1111.43" y="543.5" ></text>
</g>
<g >
<title>core::mem::replace (243 samples, 0.44%)</title><rect x="624.7" y="1173" width="5.2" height="15.0" fill="rgb(249,116,22)" rx="2" ry="2" />
<text  x="627.71" y="1183.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (12 samples, 0.02%)</title><rect x="191.8" y="1237" width="0.3" height="15.0" fill="rgb(238,174,42)" rx="2" ry="2" />
<text  x="194.85" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h1e333f0842b39e4b (21 samples, 0.04%)</title><rect x="1056.3" y="1045" width="0.4" height="15.0" fill="rgb(209,68,49)" rx="2" ry="2" />
<text  x="1059.26" y="1055.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (60 samples, 0.11%)</title><rect x="998.7" y="1221" width="1.3" height="15.0" fill="rgb(235,120,37)" rx="2" ry="2" />
<text  x="1001.71" y="1231.5" ></text>
</g>
<g >
<title>http::header::map::Entry&lt;T&gt;::or_insert_with (9 samples, 0.02%)</title><rect x="1021.3" y="1509" width="0.2" height="15.0" fill="rgb(220,195,39)" rx="2" ry="2" />
<text  x="1024.27" y="1519.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (6 samples, 0.01%)</title><rect x="1025.8" y="1285" width="0.1" height="15.0" fill="rgb(234,55,21)" rx="2" ry="2" />
<text  x="1028.79" y="1295.5" ></text>
</g>
<g >
<title>core::mem::swap (5 samples, 0.01%)</title><rect x="191.8" y="1173" width="0.2" height="15.0" fill="rgb(242,146,47)" rx="2" ry="2" />
<text  x="194.85" y="1183.5" ></text>
</g>
<g >
<title>tcache_destroy (5 samples, 0.01%)</title><rect x="195.0" y="1509" width="0.2" height="15.0" fill="rgb(247,229,19)" rx="2" ry="2" />
<text  x="198.05" y="1519.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (12 samples, 0.02%)</title><rect x="999.2" y="869" width="0.2" height="15.0" fill="rgb(236,99,3)" rx="2" ry="2" />
<text  x="1002.18" y="879.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::signal_work (52 samples, 0.09%)</title><rect x="184.9" y="1221" width="1.1" height="15.0" fill="rgb(211,162,3)" rx="2" ry="2" />
<text  x="187.89" y="1231.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::set::Reset as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="1150.3" y="805" width="0.1" height="15.0" fill="rgb(206,32,5)" rx="2" ry="2" />
<text  x="1153.26" y="815.5" ></text>
</g>
<g >
<title>futex_wait (7 samples, 0.01%)</title><rect x="982.3" y="1013" width="0.1" height="15.0" fill="rgb(252,162,37)" rx="2" ry="2" />
<text  x="985.27" y="1023.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="1036.9" y="1157" width="0.2" height="15.0" fill="rgb(226,28,7)" rx="2" ry="2" />
<text  x="1039.93" y="1167.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for core::result::Result&lt;T,E&gt;&gt;::deserialize (7 samples, 0.01%)</title><rect x="1022.5" y="1141" width="0.1" height="15.0" fill="rgb(209,171,43)" rx="2" ry="2" />
<text  x="1025.48" y="1151.5" ></text>
</g>
<g >
<title>&lt;futures::future::then::Then&lt;A,B,F&gt; as futures::future::Future&gt;::poll (138 samples, 0.25%)</title><rect x="180.8" y="1573" width="3.0" height="15.0" fill="rgb(229,223,49)" rx="2" ry="2" />
<text  x="183.83" y="1583.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (14 samples, 0.03%)</title><rect x="1032.5" y="1109" width="0.3" height="15.0" fill="rgb(205,70,51)" rx="2" ry="2" />
<text  x="1035.47" y="1119.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (10 samples, 0.02%)</title><rect x="1041.1" y="757" width="0.2" height="15.0" fill="rgb(235,210,28)" rx="2" ry="2" />
<text  x="1044.09" y="767.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (121 samples, 0.22%)</title><rect x="980.0" y="1253" width="2.5" height="15.0" fill="rgb(208,120,9)" rx="2" ry="2" />
<text  x="982.95" y="1263.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (176 samples, 0.32%)</title><rect x="599.0" y="1125" width="3.7" height="15.0" fill="rgb(215,22,46)" rx="2" ry="2" />
<text  x="601.99" y="1135.5" ></text>
</g>
<g >
<title>noria::controller::ControllerRequest::new (109 samples, 0.20%)</title><rect x="986.4" y="1269" width="2.3" height="15.0" fill="rgb(213,217,26)" rx="2" ry="2" />
<text  x="989.43" y="1279.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (46 samples, 0.08%)</title><rect x="828.0" y="1109" width="0.9" height="15.0" fill="rgb(215,183,48)" rx="2" ry="2" />
<text  x="830.96" y="1119.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (22 samples, 0.04%)</title><rect x="1059.9" y="1509" width="0.5" height="15.0" fill="rgb(224,14,46)" rx="2" ry="2" />
<text  x="1062.89" y="1519.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (17 samples, 0.03%)</title><rect x="859.1" y="1301" width="0.3" height="15.0" fill="rgb(206,115,38)" rx="2" ry="2" />
<text  x="862.05" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.01%)</title><rect x="983.3" y="1109" width="0.2" height="15.0" fill="rgb(210,155,13)" rx="2" ry="2" />
<text  x="986.31" y="1119.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (13 samples, 0.02%)</title><rect x="1033.4" y="1205" width="0.3" height="15.0" fill="rgb(229,75,3)" rx="2" ry="2" />
<text  x="1036.41" y="1215.5" ></text>
</g>
<g >
<title>bincode::deserialize (7 samples, 0.01%)</title><rect x="1058.1" y="1221" width="0.2" height="15.0" fill="rgb(218,147,27)" rx="2" ry="2" />
<text  x="1061.10" y="1231.5" ></text>
</g>
<g >
<title>chrono::naive::time::NaiveTime::overflowing_add_signed (6 samples, 0.01%)</title><rect x="978.2" y="1125" width="0.1" height="15.0" fill="rgb(223,228,49)" rx="2" ry="2" />
<text  x="981.17" y="1135.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (27 samples, 0.05%)</title><rect x="1030.5" y="1109" width="0.5" height="15.0" fill="rgb(225,159,11)" rx="2" ry="2" />
<text  x="1033.48" y="1119.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::TableOperation&gt;::serialize (5 samples, 0.01%)</title><rect x="1044.5" y="1141" width="0.1" height="15.0" fill="rgb(205,9,50)" rx="2" ry="2" />
<text  x="1047.48" y="1151.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (14 samples, 0.03%)</title><rect x="1034.6" y="1573" width="0.3" height="15.0" fill="rgb(242,28,53)" rx="2" ry="2" />
<text  x="1037.57" y="1583.5" ></text>
</g>
<g >
<title>tower_balance::p2c::service::Balance&lt;D,Req&gt;::poll_ready_index_or_evict (34 samples, 0.06%)</title><rect x="1005.3" y="1541" width="0.7" height="15.0" fill="rgb(240,41,18)" rx="2" ry="2" />
<text  x="1008.31" y="1551.5" ></text>
</g>
<g >
<title>tokio_tower::mediator::Receiver&lt;T&gt;::try_recv (9 samples, 0.02%)</title><rect x="1059.5" y="1173" width="0.2" height="15.0" fill="rgb(245,0,54)" rx="2" ry="2" />
<text  x="1062.53" y="1183.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (11 samples, 0.02%)</title><rect x="1034.3" y="1349" width="0.3" height="15.0" fill="rgb(248,0,10)" rx="2" ry="2" />
<text  x="1037.34" y="1359.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (5 samples, 0.01%)</title><rect x="1024.8" y="1061" width="0.1" height="15.0" fill="rgb(249,141,15)" rx="2" ry="2" />
<text  x="1027.79" y="1071.5" ></text>
</g>
<g >
<title>_rjem_je_tcache_alloc_small_hard (6 samples, 0.01%)</title><rect x="53.0" y="1477" width="0.1" height="15.0" fill="rgb(235,210,9)" rx="2" ry="2" />
<text  x="55.99" y="1487.5" ></text>
</g>
<g >
<title>sys_futex (18 samples, 0.03%)</title><rect x="202.1" y="1237" width="0.4" height="15.0" fill="rgb(212,195,10)" rx="2" ry="2" />
<text  x="205.09" y="1247.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_enum (9 samples, 0.02%)</title><rect x="1055.2" y="933" width="0.2" height="15.0" fill="rgb(222,166,5)" rx="2" ry="2" />
<text  x="1058.18" y="943.5" ></text>
</g>
<g >
<title>zookeeper::try_io::TryWrite::try_write_buf (9 samples, 0.02%)</title><rect x="995.1" y="1317" width="0.2" height="15.0" fill="rgb(254,47,1)" rx="2" ry="2" />
<text  x="998.13" y="1327.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (6 samples, 0.01%)</title><rect x="1022.2" y="1381" width="0.1" height="15.0" fill="rgb(224,167,17)" rx="2" ry="2" />
<text  x="1025.20" y="1391.5" ></text>
</g>
<g >
<title>crossbeam_epoch::default::with_handle::_$u7b$$u7b$closure$u7d$$u7d$::hf954dbe9c1b84c93 (806 samples, 1.45%)</title><rect x="1172.6" y="965" width="17.1" height="15.0" fill="rgb(213,184,13)" rx="2" ry="2" />
<text  x="1175.60" y="975.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfb347edd97d33f3d (38 samples, 0.07%)</title><rect x="1026.6" y="1381" width="0.8" height="15.0" fill="rgb(226,175,54)" rx="2" ry="2" />
<text  x="1029.64" y="1391.5" ></text>
</g>
<g >
<title>&lt;tower_balance::p2c::service::Balance&lt;D,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (21 samples, 0.04%)</title><rect x="1056.3" y="1285" width="0.4" height="15.0" fill="rgb(252,134,40)" rx="2" ry="2" />
<text  x="1059.26" y="1295.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (10 samples, 0.02%)</title><rect x="1037.2" y="1141" width="0.2" height="15.0" fill="rgb(254,146,8)" rx="2" ry="2" />
<text  x="1040.18" y="1151.5" ></text>
</g>
<g >
<title>core::ptr::read (123 samples, 0.22%)</title><rect x="880.5" y="1221" width="2.6" height="15.0" fill="rgb(235,12,19)" rx="2" ry="2" />
<text  x="883.46" y="1231.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="627.1" y="1109" width="0.1" height="15.0" fill="rgb(230,144,42)" rx="2" ry="2" />
<text  x="630.11" y="1119.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="1034.7" y="1365" width="0.2" height="15.0" fill="rgb(232,78,36)" rx="2" ry="2" />
<text  x="1037.70" y="1375.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (19 samples, 0.03%)</title><rect x="264.3" y="1253" width="0.4" height="15.0" fill="rgb(250,93,4)" rx="2" ry="2" />
<text  x="267.31" y="1263.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::get_default::_$u7b$$u7b$closure$u7d$$u7d$::hf93adb842fd7e7c1 (9 samples, 0.02%)</title><rect x="188.3" y="1285" width="0.2" height="15.0" fill="rgb(222,115,39)" rx="2" ry="2" />
<text  x="191.28" y="1295.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default::_$u7b$$u7b$closure$u7d$$u7d$::ha80fbdab9b554b03 (38 samples, 0.07%)</title><rect x="1026.6" y="1397" width="0.8" height="15.0" fill="rgb(228,156,11)" rx="2" ry="2" />
<text  x="1029.64" y="1407.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (45 samples, 0.08%)</title><rect x="1145.0" y="629" width="1.0" height="15.0" fill="rgb(221,23,9)" rx="2" ry="2" />
<text  x="1148.04" y="639.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (5 samples, 0.01%)</title><rect x="1056.0" y="1093" width="0.1" height="15.0" fill="rgb(236,191,48)" rx="2" ry="2" />
<text  x="1058.96" y="1103.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (8 samples, 0.01%)</title><rect x="1025.6" y="853" width="0.2" height="15.0" fill="rgb(245,100,29)" rx="2" ry="2" />
<text  x="1028.62" y="863.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (14 samples, 0.03%)</title><rect x="651.4" y="1125" width="0.3" height="15.0" fill="rgb(239,125,46)" rx="2" ry="2" />
<text  x="654.42" y="1135.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.03%)</title><rect x="1048.4" y="757" width="0.3" height="15.0" fill="rgb(214,83,39)" rx="2" ry="2" />
<text  x="1051.41" y="767.5" ></text>
</g>
<g >
<title>__netif_receive_skb (19 samples, 0.03%)</title><rect x="1050.4" y="469" width="0.4" height="15.0" fill="rgb(249,18,22)" rx="2" ry="2" />
<text  x="1053.38" y="479.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::low_bits (7 samples, 0.01%)</title><rect x="1187.5" y="805" width="0.1" height="15.0" fill="rgb(213,184,22)" rx="2" ry="2" />
<text  x="1190.47" y="815.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11 samples, 0.02%)</title><rect x="1055.2" y="1061" width="0.2" height="15.0" fill="rgb(207,49,9)" rx="2" ry="2" />
<text  x="1058.15" y="1071.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (19 samples, 0.03%)</title><rect x="1050.4" y="453" width="0.4" height="15.0" fill="rgb(227,98,4)" rx="2" ry="2" />
<text  x="1053.38" y="463.5" ></text>
</g>
<g >
<title>_$LT$tokio_sync..task..atomic_task..CurrentTask$u20$as$u20$tokio_sync..task..atomic_task..Register$GT$::register::_$u7b$$u7b$closure$u7d$$u7d$::h89fa247a6f6923ad (6 samples, 0.01%)</title><rect x="1012.5" y="1397" width="0.1" height="15.0" fill="rgb(219,16,20)" rx="2" ry="2" />
<text  x="1015.50" y="1407.5" ></text>
</g>
<g >
<title>&lt;futures::future::map::Map&lt;A,F&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="194.4" y="1429" width="0.1" height="15.0" fill="rgb(229,50,42)" rx="2" ry="2" />
<text  x="197.39" y="1439.5" ></text>
</g>
<g >
<title>mio::poll::RegistrationInner::set_readiness (6 samples, 0.01%)</title><rect x="1028.1" y="1029" width="0.1" height="15.0" fill="rgb(230,209,47)" rx="2" ry="2" />
<text  x="1031.12" y="1039.5" ></text>
</g>
<g >
<title>async_bincode::reader::AsyncBincodeReader&lt;R,T&gt;::fill (12 samples, 0.02%)</title><rect x="1032.2" y="1013" width="0.2" height="15.0" fill="rgb(215,18,48)" rx="2" ry="2" />
<text  x="1035.15" y="1023.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (48 samples, 0.09%)</title><rect x="1034.9" y="1589" width="1.0" height="15.0" fill="rgb(220,167,2)" rx="2" ry="2" />
<text  x="1037.87" y="1599.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (27 samples, 0.05%)</title><rect x="1028.4" y="1269" width="0.6" height="15.0" fill="rgb(234,141,39)" rx="2" ry="2" />
<text  x="1031.40" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (22 samples, 0.04%)</title><rect x="189.4" y="1413" width="0.5" height="15.0" fill="rgb(215,191,54)" rx="2" ry="2" />
<text  x="192.38" y="1423.5" ></text>
</g>
<g >
<title>noria::controller::ControllerHandle$LT$A$GT$::rpc::_$u7b$$u7b$closure$u7d$$u7d$::hd911cbe76f2e2c61 (64 samples, 0.12%)</title><rect x="1151.3" y="629" width="1.3" height="15.0" fill="rgb(214,53,8)" rx="2" ry="2" />
<text  x="1154.25" y="639.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (31 samples, 0.06%)</title><rect x="1059.1" y="1525" width="0.6" height="15.0" fill="rgb(245,159,21)" rx="2" ry="2" />
<text  x="1062.06" y="1535.5" ></text>
</g>
<g >
<title>std::panicking::try (14 samples, 0.03%)</title><rect x="1032.5" y="1237" width="0.3" height="15.0" fill="rgb(227,30,12)" rx="2" ry="2" />
<text  x="1035.47" y="1247.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1025.6" y="725" width="0.1" height="15.0" fill="rgb(227,204,51)" rx="2" ry="2" />
<text  x="1028.62" y="735.5" ></text>
</g>
<g >
<title>std::panicking::try (17 samples, 0.03%)</title><rect x="1036.1" y="1317" width="0.4" height="15.0" fill="rgb(217,3,12)" rx="2" ry="2" />
<text  x="1039.12" y="1327.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (18 samples, 0.03%)</title><rect x="1043.7" y="837" width="0.4" height="15.0" fill="rgb(223,50,15)" rx="2" ry="2" />
<text  x="1046.72" y="847.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (16 samples, 0.03%)</title><rect x="1172.3" y="933" width="0.3" height="15.0" fill="rgb(234,228,53)" rx="2" ry="2" />
<text  x="1175.26" y="943.5" ></text>
</g>
<g >
<title>std::sys_common::thread::start_thread (17 samples, 0.03%)</title><rect x="1025.4" y="1557" width="0.4" height="15.0" fill="rgb(206,34,23)" rx="2" ry="2" />
<text  x="1028.43" y="1567.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::he020094adb00dc4f (399 samples, 0.72%)</title><rect x="977.3" y="1413" width="8.5" height="15.0" fill="rgb(248,67,52)" rx="2" ry="2" />
<text  x="980.30" y="1423.5" ></text>
</g>
<g >
<title>std::panicking::try (12 samples, 0.02%)</title><rect x="995.3" y="1525" width="0.3" height="15.0" fill="rgb(214,55,18)" rx="2" ry="2" />
<text  x="998.32" y="1535.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (29 samples, 0.05%)</title><rect x="1031.2" y="1253" width="0.6" height="15.0" fill="rgb(217,34,3)" rx="2" ry="2" />
<text  x="1034.18" y="1263.5" ></text>
</g>
<g >
<title>tokio_io::async_read::AsyncRead::poll_read (41 samples, 0.07%)</title><rect x="1054.3" y="1221" width="0.9" height="15.0" fill="rgb(223,63,27)" rx="2" ry="2" />
<text  x="1057.28" y="1231.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (32 samples, 0.06%)</title><rect x="1031.8" y="1157" width="0.7" height="15.0" fill="rgb(242,94,46)" rx="2" ry="2" />
<text  x="1034.79" y="1167.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.02%)</title><rect x="10.7" y="965" width="0.3" height="15.0" fill="rgb(240,72,51)" rx="2" ry="2" />
<text  x="13.70" y="975.5" ></text>
</g>
<g >
<title>futures::task_impl::with (13 samples, 0.02%)</title><rect x="182.9" y="1397" width="0.2" height="15.0" fill="rgb(208,164,19)" rx="2" ry="2" />
<text  x="185.87" y="1407.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="1108.2" y="661" width="0.1" height="15.0" fill="rgb(241,184,20)" rx="2" ry="2" />
<text  x="1111.20" y="671.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNot&lt;T&gt;&gt;::serialize (6 samples, 0.01%)</title><rect x="1057.9" y="1141" width="0.1" height="15.0" fill="rgb(209,155,6)" rx="2" ry="2" />
<text  x="1060.89" y="1151.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (72 samples, 0.13%)</title><rect x="1027.4" y="1493" width="1.6" height="15.0" fill="rgb(239,1,49)" rx="2" ry="2" />
<text  x="1030.44" y="1503.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run (21 samples, 0.04%)</title><rect x="997.2" y="1525" width="0.4" height="15.0" fill="rgb(250,8,49)" rx="2" ry="2" />
<text  x="1000.16" y="1535.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (9 samples, 0.02%)</title><rect x="1044.1" y="885" width="0.2" height="15.0" fill="rgb(248,20,16)" rx="2" ry="2" />
<text  x="1047.10" y="895.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (21 samples, 0.04%)</title><rect x="1026.2" y="1541" width="0.4" height="15.0" fill="rgb(222,63,23)" rx="2" ry="2" />
<text  x="1029.19" y="1551.5" ></text>
</g>
<g >
<title>tokio_timer::timer::Timer&lt;T,N&gt;::process_queue (16 samples, 0.03%)</title><rect x="1127.2" y="1013" width="0.4" height="15.0" fill="rgb(229,72,18)" rx="2" ry="2" />
<text  x="1130.21" y="1023.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10 samples, 0.02%)</title><rect x="496.8" y="1189" width="0.2" height="15.0" fill="rgb(249,94,30)" rx="2" ry="2" />
<text  x="499.76" y="1199.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (7 samples, 0.01%)</title><rect x="1059.4" y="1125" width="0.1" height="15.0" fill="rgb(227,72,49)" rx="2" ry="2" />
<text  x="1062.36" y="1135.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (29 samples, 0.05%)</title><rect x="1031.2" y="1109" width="0.6" height="15.0" fill="rgb(245,89,42)" rx="2" ry="2" />
<text  x="1034.18" y="1119.5" ></text>
</g>
<g >
<title>zookeeper::io::ZkIo::ready_timer (14 samples, 0.03%)</title><rect x="994.2" y="1333" width="0.3" height="15.0" fill="rgb(220,121,20)" rx="2" ry="2" />
<text  x="997.21" y="1343.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.01%)</title><rect x="184.7" y="1445" width="0.1" height="15.0" fill="rgb(253,40,51)" rx="2" ry="2" />
<text  x="187.67" y="1455.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (11 samples, 0.02%)</title><rect x="999.2" y="805" width="0.2" height="15.0" fill="rgb(251,68,44)" rx="2" ry="2" />
<text  x="1002.20" y="815.5" ></text>
</g>
<g >
<title>core::ptr::read (7 samples, 0.01%)</title><rect x="1085.5" y="917" width="0.1" height="15.0" fill="rgb(206,48,26)" rx="2" ry="2" />
<text  x="1088.45" y="927.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::unwrap_or_else (18 samples, 0.03%)</title><rect x="1170.3" y="981" width="0.4" height="15.0" fill="rgb(227,103,5)" rx="2" ry="2" />
<text  x="1173.29" y="991.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="1025.8" y="1365" width="0.1" height="15.0" fill="rgb(254,194,42)" rx="2" ry="2" />
<text  x="1028.79" y="1375.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.01%)</title><rect x="1026.3" y="1109" width="0.2" height="15.0" fill="rgb(238,165,17)" rx="2" ry="2" />
<text  x="1029.30" y="1119.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (5 samples, 0.01%)</title><rect x="995.2" y="1253" width="0.1" height="15.0" fill="rgb(248,82,22)" rx="2" ry="2" />
<text  x="998.21" y="1263.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (7 samples, 0.01%)</title><rect x="1022.5" y="1045" width="0.1" height="15.0" fill="rgb(227,73,49)" rx="2" ry="2" />
<text  x="1025.48" y="1055.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::new (26 samples, 0.05%)</title><rect x="226.6" y="1317" width="0.6" height="15.0" fill="rgb(229,137,30)" rx="2" ry="2" />
<text  x="229.62" y="1327.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (6,082 samples, 10.94%)</title><rect x="1060.7" y="1285" width="129.0" height="15.0" fill="rgb(225,201,7)" rx="2" ry="2" />
<text  x="1063.65" y="1295.5" >std::thread::loc..</text>
</g>
<g >
<title>alloc::alloc::dealloc (91 samples, 0.16%)</title><rect x="729.2" y="1237" width="2.0" height="15.0" fill="rgb(242,208,21)" rx="2" ry="2" />
<text  x="732.23" y="1247.5" ></text>
</g>
<g >
<title>async_bincode::reader::AsyncBincodeReader&lt;R,T&gt;::fill (22 samples, 0.04%)</title><rect x="1035.4" y="1077" width="0.4" height="15.0" fill="rgb(206,90,16)" rx="2" ry="2" />
<text  x="1038.36" y="1087.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::new_edge (27 samples, 0.05%)</title><rect x="424.9" y="1253" width="0.6" height="15.0" fill="rgb(222,144,0)" rx="2" ry="2" />
<text  x="427.91" y="1263.5" ></text>
</g>
<g >
<title>sys_write (69 samples, 0.12%)</title><rect x="1144.8" y="741" width="1.4" height="15.0" fill="rgb(231,157,50)" rx="2" ry="2" />
<text  x="1147.76" y="751.5" ></text>
</g>
<g >
<title>futures::task_impl::std::&lt;impl futures::task_impl::Spawn&lt;F&gt;&gt;::wait_future (30 samples, 0.05%)</title><rect x="191.8" y="1381" width="0.7" height="15.0" fill="rgb(222,15,5)" rx="2" ry="2" />
<text  x="194.85" y="1391.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current (85 samples, 0.15%)</title><rect x="1107.8" y="837" width="1.8" height="15.0" fill="rgb(241,64,12)" rx="2" ry="2" />
<text  x="1110.76" y="847.5" ></text>
</g>
<g >
<title>arena_slab_alloc (5 samples, 0.01%)</title><rect x="1017.9" y="1429" width="0.1" height="15.0" fill="rgb(205,123,38)" rx="2" ry="2" />
<text  x="1020.89" y="1439.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::clone_id (6 samples, 0.01%)</title><rect x="1012.8" y="1333" width="0.2" height="15.0" fill="rgb(241,23,19)" rx="2" ry="2" />
<text  x="1015.84" y="1343.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (5 samples, 0.01%)</title><rect x="1035.0" y="1077" width="0.1" height="15.0" fill="rgb(248,26,53)" rx="2" ry="2" />
<text  x="1037.95" y="1087.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (6 samples, 0.01%)</title><rect x="1034.6" y="1381" width="0.1" height="15.0" fill="rgb(214,142,24)" rx="2" ry="2" />
<text  x="1037.57" y="1391.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::DataType&gt;::serialize (11 samples, 0.02%)</title><rect x="1045.6" y="1029" width="0.2" height="15.0" fill="rgb(241,178,48)" rx="2" ry="2" />
<text  x="1048.56" y="1039.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::get (36 samples, 0.06%)</title><rect x="828.9" y="1109" width="0.8" height="15.0" fill="rgb(208,202,38)" rx="2" ry="2" />
<text  x="831.94" y="1119.5" ></text>
</g>
<g >
<title>tsd_tcachep_get_unsafe (7 samples, 0.01%)</title><rect x="177.3" y="1557" width="0.2" height="15.0" fill="rgb(226,211,8)" rx="2" ry="2" />
<text  x="180.33" y="1567.5" ></text>
</g>
<g >
<title>&lt;chan::ChannelId as core::cmp::Ord&gt;::cmp (179 samples, 0.32%)</title><rect x="302.6" y="1269" width="3.8" height="15.0" fill="rgb(242,47,46)" rx="2" ry="2" />
<text  x="305.61" y="1279.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (12 samples, 0.02%)</title><rect x="995.3" y="1269" width="0.3" height="15.0" fill="rgb(216,167,15)" rx="2" ry="2" />
<text  x="998.32" y="1279.5" ></text>
</g>
<g >
<title>std::panicking::try (8 samples, 0.01%)</title><rect x="1036.5" y="1269" width="0.2" height="15.0" fill="rgb(247,224,6)" rx="2" ry="2" />
<text  x="1039.48" y="1279.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFull as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (10 samples, 0.02%)</title><rect x="936.0" y="1285" width="0.2" height="15.0" fill="rgb(209,207,34)" rx="2" ry="2" />
<text  x="938.97" y="1295.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (23 samples, 0.04%)</title><rect x="187.0" y="1349" width="0.5" height="15.0" fill="rgb(228,40,4)" rx="2" ry="2" />
<text  x="190.05" y="1359.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (13 samples, 0.02%)</title><rect x="1006.4" y="1509" width="0.2" height="15.0" fill="rgb(230,165,24)" rx="2" ry="2" />
<text  x="1009.35" y="1519.5" ></text>
</g>
<g >
<title>&lt;alloc::collections::vec_deque::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.01%)</title><rect x="1043.3" y="933" width="0.1" height="15.0" fill="rgb(236,68,28)" rx="2" ry="2" />
<text  x="1046.27" y="943.5" ></text>
</g>
<g >
<title>&lt;tower_util::ready::Ready&lt;T,Request&gt; as futures::future::Future&gt;::poll (16 samples, 0.03%)</title><rect x="1008.5" y="1413" width="0.4" height="15.0" fill="rgb(223,187,42)" rx="2" ry="2" />
<text  x="1011.54" y="1423.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (25 samples, 0.04%)</title><rect x="1026.9" y="1173" width="0.5" height="15.0" fill="rgb(252,160,49)" rx="2" ry="2" />
<text  x="1029.91" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::add (5 samples, 0.01%)</title><rect x="1110.5" y="789" width="0.1" height="15.0" fill="rgb(222,118,41)" rx="2" ry="2" />
<text  x="1113.54" y="799.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (5 samples, 0.01%)</title><rect x="997.0" y="1349" width="0.1" height="15.0" fill="rgb(242,120,0)" rx="2" ry="2" />
<text  x="999.95" y="1359.5" ></text>
</g>
<g >
<title>tower_balance::p2c::service::Balance&lt;D,Req&gt;::push_unready (32 samples, 0.06%)</title><rect x="1132.7" y="725" width="0.7" height="15.0" fill="rgb(206,208,50)" rx="2" ry="2" />
<text  x="1135.71" y="735.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::h580292910721dddc (50 samples, 0.09%)</title><rect x="192.8" y="1589" width="1.1" height="15.0" fill="rgb(219,153,3)" rx="2" ry="2" />
<text  x="195.84" y="1599.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1044.5" y="1333" width="0.1" height="15.0" fill="rgb(242,175,10)" rx="2" ry="2" />
<text  x="1047.48" y="1343.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (897 samples, 1.61%)</title><rect x="1170.7" y="981" width="19.0" height="15.0" fill="rgb(233,97,16)" rx="2" ry="2" />
<text  x="1173.67" y="991.5" ></text>
</g>
<g >
<title>mio::poll::SetReadiness::set_readiness (5 samples, 0.01%)</title><rect x="1024.8" y="1189" width="0.1" height="15.0" fill="rgb(246,47,43)" rx="2" ry="2" />
<text  x="1027.79" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (30 samples, 0.05%)</title><rect x="1022.9" y="1557" width="0.6" height="15.0" fill="rgb(225,115,9)" rx="2" ry="2" />
<text  x="1025.90" y="1567.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::enqueue_node_with_wakeup (27 samples, 0.05%)</title><rect x="1028.4" y="933" width="0.6" height="15.0" fill="rgb(254,20,41)" rx="2" ry="2" />
<text  x="1031.40" y="943.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (1,806 samples, 3.25%)</title><rect x="887.2" y="1317" width="38.3" height="15.0" fill="rgb(221,217,7)" rx="2" ry="2" />
<text  x="890.16" y="1327.5" >all..</text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (43 samples, 0.08%)</title><rect x="1036.9" y="1477" width="0.9" height="15.0" fill="rgb(209,61,49)" rx="2" ry="2" />
<text  x="1039.91" y="1487.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (38 samples, 0.07%)</title><rect x="1026.6" y="1269" width="0.8" height="15.0" fill="rgb(242,133,4)" rx="2" ry="2" />
<text  x="1029.64" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (5 samples, 0.01%)</title><rect x="1040.5" y="853" width="0.1" height="15.0" fill="rgb(239,196,13)" rx="2" ry="2" />
<text  x="1043.47" y="863.5" ></text>
</g>
<g >
<title>futures::task_impl::core::BorrowedUnpark::to_owned (7 samples, 0.01%)</title><rect x="1012.8" y="1349" width="0.2" height="15.0" fill="rgb(222,106,35)" rx="2" ry="2" />
<text  x="1015.84" y="1359.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (11 samples, 0.02%)</title><rect x="1035.9" y="1157" width="0.2" height="15.0" fill="rgb(210,24,17)" rx="2" ry="2" />
<text  x="1038.89" y="1167.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (6 samples, 0.01%)</title><rect x="1014.2" y="1029" width="0.1" height="15.0" fill="rgb(217,185,40)" rx="2" ry="2" />
<text  x="1017.20" y="1039.5" ></text>
</g>
<g >
<title>&lt;F as threadpool::FnBox&gt;::call_box (191 samples, 0.34%)</title><rect x="985.8" y="1365" width="4.0" height="15.0" fill="rgb(213,130,51)" rx="2" ry="2" />
<text  x="988.77" y="1375.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Write&gt;::write (6 samples, 0.01%)</title><rect x="983.5" y="1141" width="0.1" height="15.0" fill="rgb(238,131,54)" rx="2" ry="2" />
<text  x="986.52" y="1151.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (20 samples, 0.04%)</title><rect x="1059.3" y="1237" width="0.4" height="15.0" fill="rgb(247,154,35)" rx="2" ry="2" />
<text  x="1062.29" y="1247.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::notify (13 samples, 0.02%)</title><rect x="1028.1" y="1109" width="0.2" height="15.0" fill="rgb(233,41,11)" rx="2" ry="2" />
<text  x="1031.06" y="1119.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (7 samples, 0.01%)</title><rect x="1034.2" y="1381" width="0.1" height="15.0" fill="rgb(215,30,20)" rx="2" ry="2" />
<text  x="1037.19" y="1391.5" ></text>
</g>
<g >
<title>bincode::internal::serialize_into (13 samples, 0.02%)</title><rect x="1026.2" y="1301" width="0.3" height="15.0" fill="rgb(237,227,26)" rx="2" ry="2" />
<text  x="1029.19" y="1311.5" ></text>
</g>
<g >
<title>crossbeam_epoch::default::HANDLE::__getit (63 samples, 0.11%)</title><rect x="1167.0" y="965" width="1.3" height="15.0" fill="rgb(231,76,28)" rx="2" ry="2" />
<text  x="1169.96" y="975.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (72 samples, 0.13%)</title><rect x="1027.4" y="1445" width="1.6" height="15.0" fill="rgb(217,107,17)" rx="2" ry="2" />
<text  x="1030.44" y="1455.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (20 samples, 0.04%)</title><rect x="1038.0" y="1317" width="0.4" height="15.0" fill="rgb(229,79,31)" rx="2" ry="2" />
<text  x="1040.99" y="1327.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (11 samples, 0.02%)</title><rect x="1007.1" y="1477" width="0.3" height="15.0" fill="rgb(230,1,15)" rx="2" ry="2" />
<text  x="1010.14" y="1487.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.01%)</title><rect x="1023.8" y="1125" width="0.1" height="15.0" fill="rgb(248,217,2)" rx="2" ry="2" />
<text  x="1026.81" y="1135.5" ></text>
</g>
<g >
<title>io (129 samples, 0.23%)</title><rect x="992.6" y="1621" width="2.7" height="15.0" fill="rgb(229,23,31)" rx="2" ry="2" />
<text  x="995.58" y="1631.5" ></text>
</g>
<g >
<title>tower_balance::p2c::service::Balance&lt;D,Req&gt;::poll_unready (226 samples, 0.41%)</title><rect x="1006.0" y="1541" width="4.8" height="15.0" fill="rgb(223,40,0)" rx="2" ry="2" />
<text  x="1009.03" y="1551.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="1056.9" y="1301" width="0.2" height="15.0" fill="rgb(212,17,54)" rx="2" ry="2" />
<text  x="1059.94" y="1311.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (14 samples, 0.03%)</title><rect x="1039.8" y="901" width="0.3" height="15.0" fill="rgb(207,91,8)" rx="2" ry="2" />
<text  x="1042.79" y="911.5" ></text>
</g>
<g >
<title>tcache_destroy (11 samples, 0.02%)</title><rect x="1060.4" y="1509" width="0.2" height="15.0" fill="rgb(210,76,17)" rx="2" ry="2" />
<text  x="1063.37" y="1519.5" ></text>
</g>
<g >
<title>tokio-runtime-w (9,175 samples, 16.50%)</title><rect x="995.3" y="1621" width="194.7" height="15.0" fill="rgb(212,177,38)" rx="2" ry="2" />
<text  x="998.32" y="1631.5" >tokio-runtime-w</text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (11 samples, 0.02%)</title><rect x="1034.3" y="1477" width="0.3" height="15.0" fill="rgb(238,18,31)" rx="2" ry="2" />
<text  x="1037.34" y="1487.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::he0977de3e88b310a (25 samples, 0.04%)</title><rect x="980.5" y="1109" width="0.5" height="15.0" fill="rgb(215,61,0)" rx="2" ry="2" />
<text  x="983.46" y="1119.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll (147 samples, 0.26%)</title><rect x="1122.9" y="965" width="3.1" height="15.0" fill="rgb(250,127,36)" rx="2" ry="2" />
<text  x="1125.86" y="975.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (8 samples, 0.01%)</title><rect x="1036.5" y="1189" width="0.2" height="15.0" fill="rgb(226,212,31)" rx="2" ry="2" />
<text  x="1039.48" y="1199.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Selector::select (59 samples, 0.11%)</title><rect x="1124.5" y="917" width="1.3" height="15.0" fill="rgb(214,41,27)" rx="2" ry="2" />
<text  x="1127.52" y="927.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (47 samples, 0.08%)</title><rect x="972.7" y="1253" width="1.0" height="15.0" fill="rgb(252,41,42)" rx="2" ry="2" />
<text  x="975.66" y="1263.5" ></text>
</g>
<g >
<title>new_sync_write (11 samples, 0.02%)</title><rect x="1048.5" y="693" width="0.2" height="15.0" fill="rgb(249,212,24)" rx="2" ry="2" />
<text  x="1051.47" y="703.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (29 samples, 0.05%)</title><rect x="1031.2" y="1285" width="0.6" height="15.0" fill="rgb(219,134,37)" rx="2" ry="2" />
<text  x="1034.18" y="1295.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (12 samples, 0.02%)</title><rect x="1045.9" y="965" width="0.3" height="15.0" fill="rgb(211,167,12)" rx="2" ry="2" />
<text  x="1048.90" y="975.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (118 samples, 0.21%)</title><rect x="1027.4" y="1573" width="2.5" height="15.0" fill="rgb(222,0,24)" rx="2" ry="2" />
<text  x="1030.44" y="1583.5" ></text>
</g>
<g >
<title>core::mem::swap (6 samples, 0.01%)</title><rect x="1127.0" y="949" width="0.1" height="15.0" fill="rgb(237,169,31)" rx="2" ry="2" />
<text  x="1129.98" y="959.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (11 samples, 0.02%)</title><rect x="1036.9" y="1285" width="0.2" height="15.0" fill="rgb(228,207,38)" rx="2" ry="2" />
<text  x="1039.91" y="1295.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::core::TaskUnpark as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="182.4" y="1301" width="0.1" height="15.0" fill="rgb(236,0,0)" rx="2" ry="2" />
<text  x="185.42" y="1311.5" ></text>
</g>
<g >
<title>mio_extras::timer::Timer&lt;T&gt;::next_tick (6 samples, 0.01%)</title><rect x="994.3" y="1285" width="0.1" height="15.0" fill="rgb(236,147,53)" rx="2" ry="2" />
<text  x="997.30" y="1295.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.02%)</title><rect x="1029.9" y="1349" width="0.3" height="15.0" fill="rgb(225,150,22)" rx="2" ry="2" />
<text  x="1032.95" y="1359.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (26 samples, 0.05%)</title><rect x="1029.4" y="981" width="0.5" height="15.0" fill="rgb(229,115,22)" rx="2" ry="2" />
<text  x="1032.39" y="991.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::enqueue_node_with_wakeup (22 samples, 0.04%)</title><rect x="1024.0" y="1125" width="0.5" height="15.0" fill="rgb(231,111,13)" rx="2" ry="2" />
<text  x="1027.01" y="1135.5" ></text>
</g>
<g >
<title>std::panicking::try (93 samples, 0.17%)</title><rect x="1057.1" y="1509" width="2.0" height="15.0" fill="rgb(209,188,19)" rx="2" ry="2" />
<text  x="1060.09" y="1519.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::entry (68 samples, 0.12%)</title><rect x="1146.8" y="1045" width="1.4" height="15.0" fill="rgb(241,100,30)" rx="2" ry="2" />
<text  x="1149.80" y="1055.5" ></text>
</g>
<g >
<title>crossbeam_epoch::internal::Local::unpin (163 samples, 0.29%)</title><rect x="1159.4" y="981" width="3.4" height="15.0" fill="rgb(251,57,45)" rx="2" ry="2" />
<text  x="1162.38" y="991.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h7139d8c7b0c70300 (6,084 samples, 10.94%)</title><rect x="1060.6" y="1525" width="129.1" height="15.0" fill="rgb(254,212,7)" rx="2" ry="2" />
<text  x="1063.61" y="1535.5" >core::ops::funct..</text>
</g>
<g >
<title>crossbeam_epoch::default::is_pinned::_$u7b$$u7b$closure$u7d$$u7d$::h32f9cab85f15ed5b (66 samples, 0.12%)</title><rect x="1168.4" y="949" width="1.4" height="15.0" fill="rgb(241,91,49)" rx="2" ry="2" />
<text  x="1171.38" y="959.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (12 samples, 0.02%)</title><rect x="1015.2" y="1221" width="0.2" height="15.0" fill="rgb(222,135,44)" rx="2" ry="2" />
<text  x="1018.18" y="1231.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (37 samples, 0.07%)</title><rect x="974.0" y="1269" width="0.8" height="15.0" fill="rgb(230,43,2)" rx="2" ry="2" />
<text  x="977.03" y="1279.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (21 samples, 0.04%)</title><rect x="1039.0" y="453" width="0.5" height="15.0" fill="rgb(232,176,16)" rx="2" ry="2" />
<text  x="1042.01" y="463.5" ></text>
</g>
<g >
<title>futures::future::Future::wait (15 samples, 0.03%)</title><rect x="188.6" y="1525" width="0.4" height="15.0" fill="rgb(221,108,43)" rx="2" ry="2" />
<text  x="191.64" y="1535.5" ></text>
</g>
<g >
<title>tokio_io::async_read::AsyncRead::poll_read (5 samples, 0.01%)</title><rect x="1052.3" y="1173" width="0.1" height="15.0" fill="rgb(224,48,5)" rx="2" ry="2" />
<text  x="1055.33" y="1183.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (33 samples, 0.06%)</title><rect x="998.0" y="1269" width="0.7" height="15.0" fill="rgb(241,187,29)" rx="2" ry="2" />
<text  x="1001.01" y="1279.5" ></text>
</g>
<g >
<title>std::panicking::try (25 samples, 0.04%)</title><rect x="1026.9" y="1125" width="0.5" height="15.0" fill="rgb(226,174,26)" rx="2" ry="2" />
<text  x="1029.91" y="1135.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (119 samples, 0.21%)</title><rect x="1107.1" y="949" width="2.5" height="15.0" fill="rgb(241,31,29)" rx="2" ry="2" />
<text  x="1110.10" y="959.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (11 samples, 0.02%)</title><rect x="1045.9" y="917" width="0.3" height="15.0" fill="rgb(242,43,32)" rx="2" ry="2" />
<text  x="1048.92" y="927.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h5b3a67a18c04d66c (13 samples, 0.02%)</title><rect x="194.1" y="1573" width="0.2" height="15.0" fill="rgb(238,45,32)" rx="2" ry="2" />
<text  x="197.07" y="1583.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Shared&lt;T&gt;::tag (9 samples, 0.02%)</title><rect x="1187.6" y="853" width="0.2" height="15.0" fill="rgb(248,25,3)" rx="2" ry="2" />
<text  x="1190.62" y="863.5" ></text>
</g>
<g >
<title>sys_recvfrom (9 samples, 0.02%)</title><rect x="1037.5" y="869" width="0.1" height="15.0" fill="rgb(250,82,43)" rx="2" ry="2" />
<text  x="1040.46" y="879.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (140 samples, 0.25%)</title><rect x="599.6" y="1109" width="3.0" height="15.0" fill="rgb(222,127,21)" rx="2" ry="2" />
<text  x="602.61" y="1119.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::cast (215 samples, 0.39%)</title><rect x="842.1" y="1125" width="4.5" height="15.0" fill="rgb(214,11,32)" rx="2" ry="2" />
<text  x="845.05" y="1135.5" ></text>
</g>
<g >
<title>std::panicking::try (9 samples, 0.02%)</title><rect x="1051.4" y="1205" width="0.2" height="15.0" fill="rgb(241,27,9)" rx="2" ry="2" />
<text  x="1054.38" y="1215.5" ></text>
</g>
<g >
<title>__libc_recv (18 samples, 0.03%)</title><rect x="1035.4" y="901" width="0.4" height="15.0" fill="rgb(233,70,39)" rx="2" ry="2" />
<text  x="1038.42" y="911.5" ></text>
</g>
<g >
<title>ticker_tick (16 samples, 0.03%)</title><rect x="990.0" y="1477" width="0.3" height="15.0" fill="rgb(253,46,18)" rx="2" ry="2" />
<text  x="992.99" y="1487.5" ></text>
</g>
<g >
<title>core::mem::swap (113 samples, 0.20%)</title><rect x="600.2" y="1077" width="2.4" height="15.0" fill="rgb(233,190,39)" rx="2" ry="2" />
<text  x="603.18" y="1087.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::de::Deserialize for noria::Tagged&lt;T&gt;&gt;::deserialize (144 samples, 0.26%)</title><rect x="1000.0" y="1445" width="3.0" height="15.0" fill="rgb(224,10,41)" rx="2" ry="2" />
<text  x="1002.99" y="1455.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.01%)</title><rect x="994.3" y="1221" width="0.1" height="15.0" fill="rgb(230,130,34)" rx="2" ry="2" />
<text  x="997.30" y="1231.5" ></text>
</g>
<g >
<title>core::ptr::write (61 samples, 0.11%)</title><rect x="593.9" y="1029" width="1.3" height="15.0" fill="rgb(243,150,49)" rx="2" ry="2" />
<text  x="596.94" y="1039.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::notify (9 samples, 0.02%)</title><rect x="1055.6" y="1269" width="0.2" height="15.0" fill="rgb(253,141,23)" rx="2" ry="2" />
<text  x="1058.60" y="1279.5" ></text>
</g>
<g >
<title>tokio_sync::task::atomic_task::AtomicTask::notify (19 samples, 0.03%)</title><rect x="180.0" y="1461" width="0.4" height="15.0" fill="rgb(229,6,42)" rx="2" ry="2" />
<text  x="183.03" y="1471.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (20 samples, 0.04%)</title><rect x="1026.2" y="1397" width="0.4" height="15.0" fill="rgb(241,136,41)" rx="2" ry="2" />
<text  x="1029.19" y="1407.5" ></text>
</g>
<g >
<title>futures::task_impl::with_notify::_$u7b$$u7b$closure$u7d$$u7d$::h27af2aec7fe0eb8b (26 samples, 0.05%)</title><rect x="1007.8" y="1477" width="0.6" height="15.0" fill="rgb(254,202,31)" rx="2" ry="2" />
<text  x="1010.82" y="1487.5" ></text>
</g>
<g >
<title>std::sys::unix::condvar::Condvar::init (91 samples, 0.16%)</title><rect x="229.7" y="1301" width="1.9" height="15.0" fill="rgb(222,126,32)" rx="2" ry="2" />
<text  x="232.70" y="1311.5" ></text>
</g>
<g >
<title>inet_sendmsg (51 samples, 0.09%)</title><rect x="1038.6" y="693" width="1.1" height="15.0" fill="rgb(208,102,29)" rx="2" ry="2" />
<text  x="1041.60" y="703.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (20 samples, 0.04%)</title><rect x="1043.7" y="869" width="0.4" height="15.0" fill="rgb(239,182,49)" rx="2" ry="2" />
<text  x="1046.67" y="879.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (210 samples, 0.38%)</title><rect x="376.2" y="1269" width="4.5" height="15.0" fill="rgb(249,1,31)" rx="2" ry="2" />
<text  x="379.24" y="1279.5" ></text>
</g>
<g >
<title>fake::faker::impls::lorem::&lt;impl fake::Dummy&lt;fake::faker::lorem::raw::Word&lt;L&gt;&gt; for alloc::string::String&gt;::dummy_with_rng (26 samples, 0.05%)</title><rect x="198.9" y="1253" width="0.6" height="15.0" fill="rgb(250,101,32)" rx="2" ry="2" />
<text  x="201.91" y="1263.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (13 samples, 0.02%)</title><rect x="1150.4" y="549" width="0.3" height="15.0" fill="rgb(212,37,0)" rx="2" ry="2" />
<text  x="1153.45" y="559.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (9 samples, 0.02%)</title><rect x="997.2" y="1013" width="0.2" height="15.0" fill="rgb(223,42,35)" rx="2" ry="2" />
<text  x="1000.16" y="1023.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (170 samples, 0.31%)</title><rect x="848.0" y="1125" width="3.6" height="15.0" fill="rgb(234,21,30)" rx="2" ry="2" />
<text  x="850.95" y="1135.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (17 samples, 0.03%)</title><rect x="1036.1" y="1109" width="0.4" height="15.0" fill="rgb(223,109,45)" rx="2" ry="2" />
<text  x="1039.12" y="1119.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (11 samples, 0.02%)</title><rect x="1035.9" y="1397" width="0.2" height="15.0" fill="rgb(217,20,6)" rx="2" ry="2" />
<text  x="1038.89" y="1407.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::From&lt;T&gt;&gt;::from (6 samples, 0.01%)</title><rect x="1100.3" y="837" width="0.1" height="15.0" fill="rgb(233,15,32)" rx="2" ry="2" />
<text  x="1103.31" y="847.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (20 samples, 0.04%)</title><rect x="1038.0" y="1205" width="0.4" height="15.0" fill="rgb(230,216,0)" rx="2" ry="2" />
<text  x="1040.99" y="1215.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner&lt;T&gt;::complete (6 samples, 0.01%)</title><rect x="1026.7" y="869" width="0.1" height="15.0" fill="rgb(232,179,41)" rx="2" ry="2" />
<text  x="1029.72" y="879.5" ></text>
</g>
<g >
<title>chan::select::Select::try_select (13,289 samples, 23.90%)</title><rect x="420.1" y="1349" width="282.0" height="15.0" fill="rgb(215,149,41)" rx="2" ry="2" />
<text  x="423.14" y="1359.5" >chan::select::Select::try_select</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (27 samples, 0.05%)</title><rect x="275.6" y="1269" width="0.6" height="15.0" fill="rgb(209,149,43)" rx="2" ry="2" />
<text  x="278.60" y="1279.5" ></text>
</g>
<g >
<title>pipe_read (8 samples, 0.01%)</title><rect x="1111.7" y="725" width="0.2" height="15.0" fill="rgb(247,152,14)" rx="2" ry="2" />
<text  x="1114.74" y="735.5" ></text>
</g>
<g >
<title>net_rx_action (5 samples, 0.01%)</title><rect x="1131.4" y="101" width="0.1" height="15.0" fill="rgb(244,131,3)" rx="2" ry="2" />
<text  x="1134.37" y="111.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::new_edge (8 samples, 0.01%)</title><rect x="716.5" y="1269" width="0.1" height="15.0" fill="rgb(242,54,25)" rx="2" ry="2" />
<text  x="719.46" y="1279.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (16 samples, 0.03%)</title><rect x="849.2" y="1077" width="0.3" height="15.0" fill="rgb(212,182,17)" rx="2" ry="2" />
<text  x="852.20" y="1087.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::DropNotifyService&lt;Svc&gt; as tower_service::Service&lt;Request&gt;&gt;::call (10 samples, 0.02%)</title><rect x="1030.8" y="805" width="0.2" height="15.0" fill="rgb(209,140,45)" rx="2" ry="2" />
<text  x="1033.77" y="815.5" ></text>
</g>
<g >
<title>do_futex (6 samples, 0.01%)</title><rect x="192.3" y="1125" width="0.2" height="15.0" fill="rgb(226,191,49)" rx="2" ry="2" />
<text  x="195.33" y="1135.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::stream::Stream&gt;::poll (7 samples, 0.01%)</title><rect x="1051.1" y="1013" width="0.2" height="15.0" fill="rgb(251,43,19)" rx="2" ry="2" />
<text  x="1054.14" y="1023.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.01%)</title><rect x="184.3" y="1429" width="0.2" height="15.0" fill="rgb(248,206,28)" rx="2" ry="2" />
<text  x="187.33" y="1439.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current (6 samples, 0.01%)</title><rect x="1055.7" y="1141" width="0.1" height="15.0" fill="rgb(235,70,0)" rx="2" ry="2" />
<text  x="1058.66" y="1151.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (6 samples, 0.01%)</title><rect x="1031.0" y="773" width="0.2" height="15.0" fill="rgb(245,105,49)" rx="2" ry="2" />
<text  x="1034.05" y="783.5" ></text>
</g>
<g >
<title>noria::controller::ControllerHandle&lt;A&gt;::rpc (13 samples, 0.02%)</title><rect x="985.9" y="1285" width="0.3" height="15.0" fill="rgb(241,88,34)" rx="2" ry="2" />
<text  x="988.90" y="1295.5" ></text>
</g>
<g >
<title>_rjem_rallocx (23 samples, 0.04%)</title><rect x="101.8" y="1589" width="0.5" height="15.0" fill="rgb(238,32,16)" rx="2" ry="2" />
<text  x="104.77" y="1599.5" ></text>
</g>
<g >
<title>zookeeper::io::ZkIo::handle_chunk (5 samples, 0.01%)</title><rect x="992.8" y="1381" width="0.1" height="15.0" fill="rgb(251,91,39)" rx="2" ry="2" />
<text  x="995.81" y="1391.5" ></text>
</g>
<g >
<title>&lt;crossbeam_epoch::epoch::Epoch as core::default::Default&gt;::default (10 samples, 0.02%)</title><rect x="1186.2" y="885" width="0.3" height="15.0" fill="rgb(235,207,10)" rx="2" ry="2" />
<text  x="1189.24" y="895.5" ></text>
</g>
<g >
<title>serde_json::de::from_trait (12 samples, 0.02%)</title><rect x="1004.9" y="1509" width="0.3" height="15.0" fill="rgb(224,31,40)" rx="2" ry="2" />
<text  x="1007.91" y="1519.5" ></text>
</g>
<g >
<title>tcp_write_xmit (42 samples, 0.08%)</title><rect x="1050.1" y="677" width="0.9" height="15.0" fill="rgb(240,79,29)" rx="2" ry="2" />
<text  x="1053.10" y="687.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (100 samples, 0.18%)</title><rect x="227.6" y="1301" width="2.1" height="15.0" fill="rgb(209,5,54)" rx="2" ry="2" />
<text  x="230.58" y="1311.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (16 samples, 0.03%)</title><rect x="1045.2" y="1141" width="0.4" height="15.0" fill="rgb(252,70,15)" rx="2" ry="2" />
<text  x="1048.22" y="1151.5" ></text>
</g>
<g >
<title>isdalloct (7 samples, 0.01%)</title><rect x="1018.0" y="1541" width="0.2" height="15.0" fill="rgb(243,95,17)" rx="2" ry="2" />
<text  x="1021.02" y="1551.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (6 samples, 0.01%)</title><rect x="1031.0" y="1029" width="0.2" height="15.0" fill="rgb(246,80,3)" rx="2" ry="2" />
<text  x="1034.05" y="1039.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::padding (9 samples, 0.02%)</title><rect x="983.8" y="1157" width="0.1" height="15.0" fill="rgb(217,201,23)" rx="2" ry="2" />
<text  x="986.75" y="1167.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (5 samples, 0.01%)</title><rect x="1080.4" y="853" width="0.1" height="15.0" fill="rgb(247,116,52)" rx="2" ry="2" />
<text  x="1083.36" y="863.5" ></text>
</g>
<g >
<title>arena_malloc (16 samples, 0.03%)</title><rect x="990.0" y="1525" width="0.3" height="15.0" fill="rgb(230,34,41)" rx="2" ry="2" />
<text  x="992.99" y="1535.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="1178.5" y="805" width="0.2" height="15.0" fill="rgb(225,207,16)" rx="2" ry="2" />
<text  x="1181.50" y="815.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::Handle as tokio_executor::park::Unpark&gt;::unpark (138 samples, 0.25%)</title><rect x="1143.6" y="997" width="2.9" height="15.0" fill="rgb(242,107,49)" rx="2" ry="2" />
<text  x="1146.57" y="1007.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (44 samples, 0.08%)</title><rect x="1152.9" y="661" width="0.9" height="15.0" fill="rgb(215,14,3)" rx="2" ry="2" />
<text  x="1155.91" y="671.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::write_fmt (61 samples, 0.11%)</title><rect x="983.3" y="1301" width="1.3" height="15.0" fill="rgb(246,223,3)" rx="2" ry="2" />
<text  x="986.27" y="1311.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (22 samples, 0.04%)</title><rect x="259.0" y="1317" width="0.5" height="15.0" fill="rgb(226,207,31)" rx="2" ry="2" />
<text  x="262.02" y="1327.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (26 samples, 0.05%)</title><rect x="1029.4" y="1077" width="0.5" height="15.0" fill="rgb(238,133,40)" rx="2" ry="2" />
<text  x="1032.39" y="1087.5" ></text>
</g>
<g >
<title>rtree_extent_read (5 samples, 0.01%)</title><rect x="1017.6" y="1509" width="0.1" height="15.0" fill="rgb(248,148,22)" rx="2" ry="2" />
<text  x="1020.55" y="1519.5" ></text>
</g>
<g >
<title>bincode::ser::Serializer&lt;W,O&gt;::serialize_byte (5 samples, 0.01%)</title><rect x="1022.2" y="997" width="0.1" height="15.0" fill="rgb(223,215,10)" rx="2" ry="2" />
<text  x="1025.22" y="1007.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::clone_id (5 samples, 0.01%)</title><rect x="1007.0" y="1429" width="0.1" height="15.0" fill="rgb(252,52,29)" rx="2" ry="2" />
<text  x="1010.03" y="1439.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h1027365c3acffc8d (5 samples, 0.01%)</title><rect x="992.8" y="1493" width="0.1" height="15.0" fill="rgb(254,15,33)" rx="2" ry="2" />
<text  x="995.81" y="1503.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (76 samples, 0.14%)</title><rect x="558.9" y="1189" width="1.6" height="15.0" fill="rgb(211,38,13)" rx="2" ry="2" />
<text  x="561.91" y="1199.5" ></text>
</g>
<g >
<title>tsd_assert_fast (8 samples, 0.01%)</title><rect x="175.5" y="1541" width="0.1" height="15.0" fill="rgb(206,43,9)" rx="2" ry="2" />
<text  x="178.46" y="1551.5" ></text>
</g>
<g >
<title>bincode::config::legacy::Config::serialized_size (18 samples, 0.03%)</title><rect x="1053.9" y="1221" width="0.4" height="15.0" fill="rgb(241,9,25)" rx="2" ry="2" />
<text  x="1056.90" y="1231.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.01%)</title><rect x="1014.2" y="1253" width="0.1" height="15.0" fill="rgb(220,150,45)" rx="2" ry="2" />
<text  x="1017.20" y="1263.5" ></text>
</g>
<g >
<title>core::mem::swap (12 samples, 0.02%)</title><rect x="1148.9" y="917" width="0.3" height="15.0" fill="rgb(244,76,37)" rx="2" ry="2" />
<text  x="1151.90" y="927.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (13 samples, 0.02%)</title><rect x="1051.6" y="1429" width="0.3" height="15.0" fill="rgb(221,22,25)" rx="2" ry="2" />
<text  x="1054.59" y="1439.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (78 samples, 0.14%)</title><rect x="1049.7" y="1477" width="1.7" height="15.0" fill="rgb(221,209,20)" rx="2" ry="2" />
<text  x="1052.72" y="1487.5" ></text>
</g>
<g >
<title>tokio_io::async_write::AsyncWrite::poll_write (62 samples, 0.11%)</title><rect x="1038.5" y="901" width="1.3" height="15.0" fill="rgb(252,217,23)" rx="2" ry="2" />
<text  x="1041.48" y="911.5" ></text>
</g>
<g >
<title>core::ptr::read (176 samples, 0.32%)</title><rect x="771.8" y="1157" width="3.7" height="15.0" fill="rgb(221,43,29)" rx="2" ry="2" />
<text  x="774.76" y="1167.5" ></text>
</g>
<g >
<title>core::fmt::write (65 samples, 0.12%)</title><rect x="983.3" y="1333" width="1.3" height="15.0" fill="rgb(213,145,36)" rx="2" ry="2" />
<text  x="986.27" y="1343.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::sleep_light (688 samples, 1.24%)</title><rect x="1071.5" y="1061" width="14.6" height="15.0" fill="rgb(210,101,4)" rx="2" ry="2" />
<text  x="1074.54" y="1071.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (5 samples, 0.01%)</title><rect x="1035.9" y="1061" width="0.1" height="15.0" fill="rgb(208,73,38)" rx="2" ry="2" />
<text  x="1038.89" y="1071.5" ></text>
</g>
<g >
<title>core::fmt::write (61 samples, 0.11%)</title><rect x="983.3" y="1285" width="1.3" height="15.0" fill="rgb(248,176,16)" rx="2" ry="2" />
<text  x="986.27" y="1295.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="1025.6" y="997" width="0.2" height="15.0" fill="rgb(230,197,50)" rx="2" ry="2" />
<text  x="1028.62" y="1007.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::signal_work (47 samples, 0.08%)</title><rect x="1048.0" y="1045" width="1.0" height="15.0" fill="rgb(235,11,39)" rx="2" ry="2" />
<text  x="1050.96" y="1055.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (12 samples, 0.02%)</title><rect x="1024.1" y="885" width="0.2" height="15.0" fill="rgb(234,165,16)" rx="2" ry="2" />
<text  x="1027.09" y="895.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (126 samples, 0.23%)</title><rect x="582.7" y="1093" width="2.7" height="15.0" fill="rgb(230,34,48)" rx="2" ry="2" />
<text  x="585.70" y="1103.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (256 samples, 0.46%)</title><rect x="997.6" y="1589" width="5.4" height="15.0" fill="rgb(231,183,22)" rx="2" ry="2" />
<text  x="1000.61" y="1599.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.02%)</title><rect x="1067.6" y="1045" width="0.3" height="15.0" fill="rgb(238,62,49)" rx="2" ry="2" />
<text  x="1070.59" y="1055.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (8 samples, 0.01%)</title><rect x="1025.6" y="933" width="0.2" height="15.0" fill="rgb(226,136,26)" rx="2" ry="2" />
<text  x="1028.62" y="943.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfb347edd97d33f3d (21 samples, 0.04%)</title><rect x="997.2" y="1397" width="0.4" height="15.0" fill="rgb(254,178,12)" rx="2" ry="2" />
<text  x="1000.16" y="1407.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::fmt_u64 (5 samples, 0.01%)</title><rect x="997.8" y="885" width="0.1" height="15.0" fill="rgb(239,60,51)" rx="2" ry="2" />
<text  x="1000.78" y="895.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::stream::Stream&gt;::poll (43 samples, 0.08%)</title><rect x="1046.2" y="1317" width="0.9" height="15.0" fill="rgb(250,217,52)" rx="2" ry="2" />
<text  x="1049.20" y="1327.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (136 samples, 0.24%)</title><rect x="928.4" y="1317" width="2.8" height="15.0" fill="rgb(243,19,13)" rx="2" ry="2" />
<text  x="931.35" y="1327.5" ></text>
</g>
<g >
<title>&lt;futures::sync::mpsc::Receiver&lt;T&gt; as futures::stream::Stream&gt;::poll (14 samples, 0.03%)</title><rect x="996.5" y="1413" width="0.3" height="15.0" fill="rgb(207,226,31)" rx="2" ry="2" />
<text  x="999.53" y="1423.5" ></text>
</g>
<g >
<title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (10 samples, 0.02%)</title><rect x="989.6" y="1253" width="0.2" height="15.0" fill="rgb(225,100,33)" rx="2" ry="2" />
<text  x="992.61" y="1263.5" ></text>
</g>
<g >
<title>noria::view::SyncView::lookup::_$u7b$$u7b$closure$u7d$$u7d$::h339f90ccab48f6ba (156 samples, 0.28%)</title><rect x="979.8" y="1317" width="3.3" height="15.0" fill="rgb(217,38,54)" rx="2" ry="2" />
<text  x="982.79" y="1327.5" ></text>
</g>
<g >
<title>vfs_write (17 samples, 0.03%)</title><rect x="1028.6" y="757" width="0.4" height="15.0" fill="rgb(208,49,21)" rx="2" ry="2" />
<text  x="1031.61" y="767.5" ></text>
</g>
<g >
<title>ip_finish_output2 (28 samples, 0.05%)</title><rect x="1038.9" y="517" width="0.6" height="15.0" fill="rgb(214,216,41)" rx="2" ry="2" />
<text  x="1041.94" y="527.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (9 samples, 0.02%)</title><rect x="201.4" y="1285" width="0.2" height="15.0" fill="rgb(210,114,49)" rx="2" ry="2" />
<text  x="204.39" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (14 samples, 0.03%)</title><rect x="1032.5" y="1061" width="0.3" height="15.0" fill="rgb(226,70,43)" rx="2" ry="2" />
<text  x="1035.47" y="1071.5" ></text>
</g>
<g >
<title>std::panicking::try (8 samples, 0.01%)</title><rect x="1037.8" y="1349" width="0.2" height="15.0" fill="rgb(221,221,18)" rx="2" ry="2" />
<text  x="1040.82" y="1359.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_ptr (5 samples, 0.01%)</title><rect x="1127.7" y="949" width="0.2" height="15.0" fill="rgb(219,96,3)" rx="2" ry="2" />
<text  x="1130.74" y="959.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeHeader&lt;K,V&gt;::is_shared_root (77 samples, 0.14%)</title><rect x="726.5" y="1253" width="1.6" height="15.0" fill="rgb(225,174,25)" rx="2" ry="2" />
<text  x="729.47" y="1263.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (279 samples, 0.50%)</title><rect x="775.5" y="1173" width="5.9" height="15.0" fill="rgb(248,5,3)" rx="2" ry="2" />
<text  x="778.49" y="1183.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::notify (21 samples, 0.04%)</title><rect x="1056.3" y="1221" width="0.4" height="15.0" fill="rgb(249,205,27)" rx="2" ry="2" />
<text  x="1059.26" y="1231.5" ></text>
</g>
<g >
<title>tcp_rcv_established (15 samples, 0.03%)</title><rect x="1039.1" y="277" width="0.3" height="15.0" fill="rgb(207,111,40)" rx="2" ry="2" />
<text  x="1042.07" y="287.5" ></text>
</g>
<g >
<title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (30 samples, 0.05%)</title><rect x="952.1" y="1253" width="0.6" height="15.0" fill="rgb(225,175,45)" rx="2" ry="2" />
<text  x="955.07" y="1263.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (52 samples, 0.09%)</title><rect x="250.0" y="1285" width="1.1" height="15.0" fill="rgb(213,112,4)" rx="2" ry="2" />
<text  x="253.03" y="1295.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc (234 samples, 0.42%)</title><rect x="889.2" y="1301" width="5.0" height="15.0" fill="rgb(208,100,51)" rx="2" ry="2" />
<text  x="892.24" y="1311.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (5 samples, 0.01%)</title><rect x="180.7" y="1445" width="0.1" height="15.0" fill="rgb(246,134,2)" rx="2" ry="2" />
<text  x="183.73" y="1455.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::new_kv (16 samples, 0.03%)</title><rect x="958.9" y="1269" width="0.3" height="15.0" fill="rgb(218,102,27)" rx="2" ry="2" />
<text  x="961.88" y="1279.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (7 samples, 0.01%)</title><rect x="1056.9" y="1445" width="0.2" height="15.0" fill="rgb(233,154,42)" rx="2" ry="2" />
<text  x="1059.94" y="1455.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (11 samples, 0.02%)</title><rect x="1046.6" y="821" width="0.3" height="15.0" fill="rgb(213,70,12)" rx="2" ry="2" />
<text  x="1049.62" y="831.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::Pool&lt;MS,Target,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (20 samples, 0.04%)</title><rect x="1040.6" y="965" width="0.5" height="15.0" fill="rgb(249,51,11)" rx="2" ry="2" />
<text  x="1043.64" y="975.5" ></text>
</g>
<g >
<title>&lt;bincode::de::read::SliceReader as std::io::Read&gt;::read_exact (12 samples, 0.02%)</title><rect x="1002.7" y="549" width="0.3" height="15.0" fill="rgb(216,126,21)" rx="2" ry="2" />
<text  x="1005.74" y="559.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (22 samples, 0.04%)</title><rect x="1032.8" y="1189" width="0.4" height="15.0" fill="rgb(209,11,36)" rx="2" ry="2" />
<text  x="1035.77" y="1199.5" ></text>
</g>
<g >
<title>gen::read::_$u7b$$u7b$closure$u7d$$u7d$::hce3d0253635ab2f4 (29 samples, 0.05%)</title><rect x="977.9" y="1237" width="0.7" height="15.0" fill="rgb(248,43,51)" rx="2" ry="2" />
<text  x="980.94" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current (8 samples, 0.01%)</title><rect x="194.5" y="1525" width="0.2" height="15.0" fill="rgb(215,8,5)" rx="2" ry="2" />
<text  x="197.54" y="1535.5" ></text>
</g>
<g >
<title>&lt;noria::view::View as tower_service::Service&lt; (44 samples, 0.08%)</title><rect x="187.5" y="1365" width="1.0" height="15.0" fill="rgb(221,142,30)" rx="2" ry="2" />
<text  x="190.54" y="1375.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::swap_remove (6 samples, 0.01%)</title><rect x="1132.6" y="677" width="0.1" height="15.0" fill="rgb(215,209,3)" rx="2" ry="2" />
<text  x="1135.58" y="687.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (212 samples, 0.38%)</title><rect x="1149.8" y="869" width="4.5" height="15.0" fill="rgb(212,6,45)" rx="2" ry="2" />
<text  x="1152.79" y="879.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="561.7" y="1237" width="0.1" height="15.0" fill="rgb(252,223,7)" rx="2" ry="2" />
<text  x="564.69" y="1247.5" ></text>
</g>
<g >
<title>&lt;rand::os::OsRng as rand::Rng&gt;::fill_bytes (9 samples, 0.02%)</title><rect x="189.9" y="1541" width="0.2" height="15.0" fill="rgb(213,20,18)" rx="2" ry="2" />
<text  x="192.87" y="1551.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::is_shared_root (163 samples, 0.29%)</title><rect x="270.2" y="1285" width="3.5" height="15.0" fill="rgb(249,199,49)" rx="2" ry="2" />
<text  x="273.21" y="1295.5" ></text>
</g>
<g >
<title>tcp_sendmsg (50 samples, 0.09%)</title><rect x="1038.6" y="677" width="1.1" height="15.0" fill="rgb(252,88,17)" rx="2" ry="2" />
<text  x="1041.62" y="687.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (20 samples, 0.04%)</title><rect x="1036.5" y="1397" width="0.4" height="15.0" fill="rgb(220,66,1)" rx="2" ry="2" />
<text  x="1039.48" y="1407.5" ></text>
</g>
<g >
<title>tokio_sync::task::atomic_task::AtomicTask::do_register (14 samples, 0.03%)</title><rect x="1011.5" y="1477" width="0.3" height="15.0" fill="rgb(231,192,1)" rx="2" ry="2" />
<text  x="1014.55" y="1487.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (8 samples, 0.01%)</title><rect x="235.5" y="1285" width="0.2" height="15.0" fill="rgb(224,100,32)" rx="2" ry="2" />
<text  x="238.49" y="1295.5" ></text>
</g>
<g >
<title>tokio_sync::task::atomic_task::AtomicTask::do_register (23 samples, 0.04%)</title><rect x="1003.0" y="1461" width="0.5" height="15.0" fill="rgb(244,137,38)" rx="2" ry="2" />
<text  x="1006.04" y="1471.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (5 samples, 0.01%)</title><rect x="997.8" y="901" width="0.1" height="15.0" fill="rgb(217,99,34)" rx="2" ry="2" />
<text  x="1000.78" y="911.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h3d3457b86cb67885 (33 samples, 0.06%)</title><rect x="1030.5" y="1493" width="0.7" height="15.0" fill="rgb(212,69,15)" rx="2" ry="2" />
<text  x="1033.48" y="1503.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (6 samples, 0.01%)</title><rect x="1022.2" y="1237" width="0.1" height="15.0" fill="rgb(224,163,16)" rx="2" ry="2" />
<text  x="1025.20" y="1247.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default::_$u7b$$u7b$closure$u7d$$u7d$::ha80fbdab9b554b03 (284 samples, 0.51%)</title><rect x="1038.4" y="1461" width="6.0" height="15.0" fill="rgb(218,33,23)" rx="2" ry="2" />
<text  x="1041.41" y="1471.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (30 samples, 0.05%)</title><rect x="953.7" y="1269" width="0.6" height="15.0" fill="rgb(227,173,44)" rx="2" ry="2" />
<text  x="956.66" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="989.7" y="1013" width="0.1" height="15.0" fill="rgb(242,127,53)" rx="2" ry="2" />
<text  x="992.69" y="1023.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (21 samples, 0.04%)</title><rect x="997.2" y="1269" width="0.4" height="15.0" fill="rgb(217,114,47)" rx="2" ry="2" />
<text  x="1000.16" y="1279.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfb347edd97d33f3d (7 samples, 0.01%)</title><rect x="1030.3" y="1413" width="0.2" height="15.0" fill="rgb(210,90,3)" rx="2" ry="2" />
<text  x="1033.33" y="1423.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (26 samples, 0.05%)</title><rect x="1029.4" y="1125" width="0.5" height="15.0" fill="rgb(227,58,16)" rx="2" ry="2" />
<text  x="1032.39" y="1135.5" ></text>
</g>
<g >
<title>crossbeam_epoch::default::pin (939 samples, 1.69%)</title><rect x="1169.8" y="1013" width="19.9" height="15.0" fill="rgb(251,167,28)" rx="2" ry="2" />
<text  x="1172.78" y="1023.5" ></text>
</g>
<g >
<title>std::sys_common::condvar::Condvar::destroy (6 samples, 0.01%)</title><rect x="905.8" y="1253" width="0.1" height="15.0" fill="rgb(236,57,25)" rx="2" ry="2" />
<text  x="908.82" y="1263.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNot&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1053.9" y="1157" width="0.1" height="15.0" fill="rgb(206,123,5)" rx="2" ry="2" />
<text  x="1056.90" y="1167.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (18 samples, 0.03%)</title><rect x="180.0" y="1381" width="0.4" height="15.0" fill="rgb(207,193,7)" rx="2" ry="2" />
<text  x="183.03" y="1391.5" ></text>
</g>
<g >
<title>std::panicking::try (158 samples, 0.28%)</title><rect x="1041.1" y="1189" width="3.3" height="15.0" fill="rgb(219,190,5)" rx="2" ry="2" />
<text  x="1044.09" y="1199.5" ></text>
</g>
<g >
<title>__libc_write (10 samples, 0.02%)</title><rect x="984.2" y="1093" width="0.2" height="15.0" fill="rgb(208,33,47)" rx="2" ry="2" />
<text  x="987.22" y="1103.5" ></text>
</g>
<g >
<title>&lt;usize as core::iter::range::Step&gt;::add_usize (7 samples, 0.01%)</title><rect x="1128.0" y="965" width="0.1" height="15.0" fill="rgb(243,147,15)" rx="2" ry="2" />
<text  x="1130.96" y="975.5" ></text>
</g>
<g >
<title>std::thread::park (22 samples, 0.04%)</title><rect x="984.8" y="1301" width="0.5" height="15.0" fill="rgb(230,184,19)" rx="2" ry="2" />
<text  x="987.84" y="1311.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (20 samples, 0.04%)</title><rect x="1036.5" y="1477" width="0.4" height="15.0" fill="rgb(226,167,28)" rx="2" ry="2" />
<text  x="1039.48" y="1487.5" ></text>
</g>
<g >
<title>crossbeam_epoch::epoch::Epoch::starting (10 samples, 0.02%)</title><rect x="1186.2" y="901" width="0.3" height="15.0" fill="rgb(227,201,20)" rx="2" ry="2" />
<text  x="1189.24" y="911.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::de::Deserialize for noria::Tagged&lt;T&gt;&gt;::deserialize (11 samples, 0.02%)</title><rect x="1055.2" y="1157" width="0.2" height="15.0" fill="rgb(247,5,45)" rx="2" ry="2" />
<text  x="1058.15" y="1167.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.02%)</title><rect x="1067.2" y="1029" width="0.3" height="15.0" fill="rgb(226,54,34)" rx="2" ry="2" />
<text  x="1070.21" y="1039.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (44 samples, 0.08%)</title><rect x="1027.4" y="1365" width="1.0" height="15.0" fill="rgb(228,62,33)" rx="2" ry="2" />
<text  x="1030.44" y="1375.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (26 samples, 0.05%)</title><rect x="641.0" y="1221" width="0.6" height="15.0" fill="rgb(245,61,43)" rx="2" ry="2" />
<text  x="644.05" y="1231.5" ></text>
</g>
<g >
<title>bincode::internal::serialize_into (14 samples, 0.03%)</title><rect x="1057.6" y="1189" width="0.3" height="15.0" fill="rgb(226,26,33)" rx="2" ry="2" />
<text  x="1060.59" y="1199.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (9 samples, 0.02%)</title><rect x="619.8" y="1189" width="0.2" height="15.0" fill="rgb(223,109,28)" rx="2" ry="2" />
<text  x="622.81" y="1199.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *const T&gt;::add (27 samples, 0.05%)</title><rect x="653.7" y="1125" width="0.6" height="15.0" fill="rgb(205,98,20)" rx="2" ry="2" />
<text  x="656.74" y="1135.5" ></text>
</g>
<g >
<title>tokio_reactor::registration::Registration::poll_read_ready (12 samples, 0.02%)</title><rect x="1046.2" y="1157" width="0.3" height="15.0" fill="rgb(224,181,6)" rx="2" ry="2" />
<text  x="1049.20" y="1167.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.01%)</title><rect x="1022.2" y="1269" width="0.1" height="15.0" fill="rgb(253,172,12)" rx="2" ry="2" />
<text  x="1025.20" y="1279.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="1121.9" y="1045" width="0.1" height="15.0" fill="rgb(214,151,32)" rx="2" ry="2" />
<text  x="1124.91" y="1055.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (6 samples, 0.01%)</title><rect x="1025.6" y="581" width="0.1" height="15.0" fill="rgb(218,14,45)" rx="2" ry="2" />
<text  x="1028.62" y="591.5" ></text>
</g>
<g >
<title>core::mem::swap (5 samples, 0.01%)</title><rect x="1056.0" y="1045" width="0.1" height="15.0" fill="rgb(219,90,43)" rx="2" ry="2" />
<text  x="1058.96" y="1055.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,255 samples, 4.05%)</title><rect x="798.8" y="1141" width="47.8" height="15.0" fill="rgb(227,91,29)" rx="2" ry="2" />
<text  x="801.77" y="1151.5" >&lt;all..</text>
</g>
<g >
<title>mio::poll::enqueue_with_wakeup (5 samples, 0.01%)</title><rect x="1028.1" y="997" width="0.1" height="15.0" fill="rgb(210,147,21)" rx="2" ry="2" />
<text  x="1031.14" y="1007.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (6 samples, 0.01%)</title><rect x="1034.6" y="1221" width="0.1" height="15.0" fill="rgb(234,226,38)" rx="2" ry="2" />
<text  x="1037.57" y="1231.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::parse (82 samples, 0.15%)</title><rect x="1000.7" y="629" width="1.7" height="15.0" fill="rgb(249,58,7)" rx="2" ry="2" />
<text  x="1003.66" y="639.5" ></text>
</g>
<g >
<title>noria::table::_::&lt;impl serde::ser::Serialize for noria::table::Input&gt;::serialize (13 samples, 0.02%)</title><rect x="1027.7" y="1157" width="0.3" height="15.0" fill="rgb(221,151,43)" rx="2" ry="2" />
<text  x="1030.74" y="1167.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::chan::Tx&lt;T,S&gt;::poll_ready (8 samples, 0.01%)</title><rect x="186.3" y="1349" width="0.2" height="15.0" fill="rgb(251,20,9)" rx="2" ry="2" />
<text  x="189.35" y="1359.5" ></text>
</g>
<g >
<title>core::alloc::Layout::for_value (312 samples, 0.56%)</title><rect x="832.4" y="1125" width="6.6" height="15.0" fill="rgb(229,25,32)" rx="2" ry="2" />
<text  x="835.36" y="1135.5" ></text>
</g>
<g >
<title>chrono::format::scan::nanosecond (10 samples, 0.02%)</title><rect x="1001.0" y="565" width="0.2" height="15.0" fill="rgb(244,152,52)" rx="2" ry="2" />
<text  x="1004.03" y="575.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (6 samples, 0.01%)</title><rect x="488.5" y="1109" width="0.2" height="15.0" fill="rgb(246,93,27)" rx="2" ry="2" />
<text  x="491.53" y="1119.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (12 samples, 0.02%)</title><rect x="1029.9" y="1557" width="0.3" height="15.0" fill="rgb(252,196,18)" rx="2" ry="2" />
<text  x="1032.95" y="1567.5" ></text>
</g>
<g >
<title>futures::task_impl::with (13 samples, 0.02%)</title><rect x="1013.8" y="1477" width="0.3" height="15.0" fill="rgb(230,31,17)" rx="2" ry="2" />
<text  x="1016.80" y="1487.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (5 samples, 0.01%)</title><rect x="1053.9" y="1045" width="0.1" height="15.0" fill="rgb(229,175,14)" rx="2" ry="2" />
<text  x="1056.90" y="1055.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (18 samples, 0.03%)</title><rect x="180.0" y="1413" width="0.4" height="15.0" fill="rgb(223,172,47)" rx="2" ry="2" />
<text  x="183.03" y="1423.5" ></text>
</g>
<g >
<title>futures::task_impl::std::_$LT$impl$u20$futures..task_impl..Spawn$LT$F$GT$$GT$::wait_future::_$u7b$$u7b$closure$u7d$$u7d$::h6e5f9dba7457629d (30 samples, 0.05%)</title><rect x="191.8" y="1301" width="0.7" height="15.0" fill="rgb(209,31,7)" rx="2" ry="2" />
<text  x="194.85" y="1311.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (46 samples, 0.08%)</title><rect x="1029.0" y="1381" width="0.9" height="15.0" fill="rgb(246,93,43)" rx="2" ry="2" />
<text  x="1031.97" y="1391.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (9 samples, 0.02%)</title><rect x="1026.0" y="1157" width="0.2" height="15.0" fill="rgb(254,5,53)" rx="2" ry="2" />
<text  x="1028.98" y="1167.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (19 samples, 0.03%)</title><rect x="1045.8" y="1173" width="0.4" height="15.0" fill="rgb(207,8,34)" rx="2" ry="2" />
<text  x="1048.80" y="1183.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (8 samples, 0.01%)</title><rect x="1015.2" y="1093" width="0.1" height="15.0" fill="rgb(252,217,34)" rx="2" ry="2" />
<text  x="1018.18" y="1103.5" ></text>
</g>
<g >
<title>futures::task_impl::with (8 samples, 0.01%)</title><rect x="1060.2" y="1157" width="0.2" height="15.0" fill="rgb(216,53,0)" rx="2" ry="2" />
<text  x="1063.18" y="1167.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (118 samples, 0.21%)</title><rect x="1103.5" y="885" width="2.5" height="15.0" fill="rgb(219,70,9)" rx="2" ry="2" />
<text  x="1106.47" y="895.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::TableOperation&gt;::serialize (6 samples, 0.01%)</title><rect x="1022.2" y="1189" width="0.1" height="15.0" fill="rgb(212,201,36)" rx="2" ry="2" />
<text  x="1025.20" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (20 samples, 0.04%)</title><rect x="1059.3" y="1269" width="0.4" height="15.0" fill="rgb(231,115,8)" rx="2" ry="2" />
<text  x="1062.29" y="1279.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (6 samples, 0.01%)</title><rect x="996.3" y="1285" width="0.1" height="15.0" fill="rgb(236,69,8)" rx="2" ry="2" />
<text  x="999.27" y="1295.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::hb32bd6b586b27878 (193 samples, 0.35%)</title><rect x="985.8" y="1509" width="4.1" height="15.0" fill="rgb(240,11,7)" rx="2" ry="2" />
<text  x="988.77" y="1519.5" ></text>
</g>
<g >
<title>ip_finish_output2 (29 samples, 0.05%)</title><rect x="1042.0" y="517" width="0.6" height="15.0" fill="rgb(215,47,35)" rx="2" ry="2" />
<text  x="1044.96" y="527.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current (9 samples, 0.02%)</title><rect x="10.0" y="1317" width="0.2" height="15.0" fill="rgb(230,102,21)" rx="2" ry="2" />
<text  x="13.02" y="1327.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (12 samples, 0.02%)</title><rect x="1029.9" y="965" width="0.3" height="15.0" fill="rgb(223,123,11)" rx="2" ry="2" />
<text  x="1032.95" y="975.5" ></text>
</g>
<g >
<title>core::mem::replace (7 samples, 0.01%)</title><rect x="183.5" y="1541" width="0.2" height="15.0" fill="rgb(247,191,2)" rx="2" ry="2" />
<text  x="186.55" y="1551.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (7 samples, 0.01%)</title><rect x="1034.2" y="1397" width="0.1" height="15.0" fill="rgb(231,140,44)" rx="2" ry="2" />
<text  x="1037.19" y="1407.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::enqueue_node_with_wakeup (96 samples, 0.17%)</title><rect x="1144.3" y="901" width="2.0" height="15.0" fill="rgb(251,86,18)" rx="2" ry="2" />
<text  x="1147.25" y="911.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h1f40d1645c07fcaa (348 samples, 0.63%)</title><rect x="195.2" y="1413" width="7.3" height="15.0" fill="rgb(205,60,15)" rx="2" ry="2" />
<text  x="198.16" y="1423.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.02%)</title><rect x="1051.4" y="1557" width="0.2" height="15.0" fill="rgb(228,107,29)" rx="2" ry="2" />
<text  x="1054.38" y="1567.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll (32 samples, 0.06%)</title><rect x="993.2" y="1349" width="0.7" height="15.0" fill="rgb(222,93,36)" rx="2" ry="2" />
<text  x="996.24" y="1359.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (14 samples, 0.03%)</title><rect x="1039.8" y="949" width="0.3" height="15.0" fill="rgb(224,17,22)" rx="2" ry="2" />
<text  x="1042.79" y="959.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::stream::Stream&gt;::poll (9 samples, 0.02%)</title><rect x="1052.7" y="1301" width="0.2" height="15.0" fill="rgb(241,6,38)" rx="2" ry="2" />
<text  x="1055.71" y="1311.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (7 samples, 0.01%)</title><rect x="1022.5" y="1077" width="0.1" height="15.0" fill="rgb(246,41,47)" rx="2" ry="2" />
<text  x="1025.48" y="1087.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::is_some (30 samples, 0.05%)</title><rect x="419.5" y="1317" width="0.6" height="15.0" fill="rgb(251,110,47)" rx="2" ry="2" />
<text  x="422.50" y="1327.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (22 samples, 0.04%)</title><rect x="189.4" y="1317" width="0.5" height="15.0" fill="rgb(219,119,35)" rx="2" ry="2" />
<text  x="192.38" y="1327.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (12 samples, 0.02%)</title><rect x="1015.2" y="1237" width="0.2" height="15.0" fill="rgb(250,172,25)" rx="2" ry="2" />
<text  x="1018.18" y="1247.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::stream::Stream&gt;::poll (8 samples, 0.01%)</title><rect x="1058.1" y="1269" width="0.2" height="15.0" fill="rgb(248,135,4)" rx="2" ry="2" />
<text  x="1061.08" y="1279.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.01%)</title><rect x="1027.6" y="981" width="0.1" height="15.0" fill="rgb(242,11,10)" rx="2" ry="2" />
<text  x="1030.59" y="991.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueue::poll (7 samples, 0.01%)</title><rect x="993.3" y="1301" width="0.2" height="15.0" fill="rgb(240,143,28)" rx="2" ry="2" />
<text  x="996.30" y="1311.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (12 samples, 0.02%)</title><rect x="1036.7" y="1253" width="0.2" height="15.0" fill="rgb(219,154,48)" rx="2" ry="2" />
<text  x="1039.65" y="1263.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (9 samples, 0.02%)</title><rect x="189.9" y="1365" width="0.2" height="15.0" fill="rgb(223,165,10)" rx="2" ry="2" />
<text  x="192.87" y="1375.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::sink::Sink&gt;::start_send (13 samples, 0.02%)</title><rect x="1052.1" y="1221" width="0.2" height="15.0" fill="rgb(252,143,48)" rx="2" ry="2" />
<text  x="1055.06" y="1231.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (16 samples, 0.03%)</title><rect x="1088.2" y="933" width="0.3" height="15.0" fill="rgb(213,6,47)" rx="2" ry="2" />
<text  x="1091.17" y="943.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::clone_id (8 samples, 0.01%)</title><rect x="1058.8" y="1141" width="0.2" height="15.0" fill="rgb(246,208,4)" rx="2" ry="2" />
<text  x="1061.78" y="1151.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (72 samples, 0.13%)</title><rect x="1027.4" y="1477" width="1.6" height="15.0" fill="rgb(248,163,19)" rx="2" ry="2" />
<text  x="1030.44" y="1487.5" ></text>
</g>
<g >
<title>__vfs_write (6 samples, 0.01%)</title><rect x="983.5" y="1013" width="0.1" height="15.0" fill="rgb(222,79,3)" rx="2" ry="2" />
<text  x="986.52" y="1023.5" ></text>
</g>
<g >
<title>core::mem::align_of (5 samples, 0.01%)</title><rect x="668.5" y="1157" width="0.2" height="15.0" fill="rgb(248,227,10)" rx="2" ry="2" />
<text  x="671.55" y="1167.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::len (25 samples, 0.04%)</title><rect x="330.0" y="1253" width="0.5" height="15.0" fill="rgb(217,183,6)" rx="2" ry="2" />
<text  x="332.96" y="1263.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (147 samples, 0.26%)</title><rect x="338.1" y="1285" width="3.1" height="15.0" fill="rgb(212,10,49)" rx="2" ry="2" />
<text  x="341.11" y="1295.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (9 samples, 0.02%)</title><rect x="1044.1" y="821" width="0.2" height="15.0" fill="rgb(239,102,49)" rx="2" ry="2" />
<text  x="1047.10" y="831.5" ></text>
</g>
<g >
<title>inet_sendmsg (46 samples, 0.08%)</title><rect x="1041.7" y="693" width="1.0" height="15.0" fill="rgb(209,29,16)" rx="2" ry="2" />
<text  x="1044.70" y="703.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="194.5" y="1349" width="0.2" height="15.0" fill="rgb(229,183,35)" rx="2" ry="2" />
<text  x="197.54" y="1359.5" ></text>
</g>
<g >
<title>&lt;&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple::Access&lt;R,O&gt; as serde::de::SeqAccess&gt;::next_element_seed (144 samples, 0.26%)</title><rect x="1000.0" y="1061" width="3.0" height="15.0" fill="rgb(213,69,37)" rx="2" ry="2" />
<text  x="1002.99" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::add (70 samples, 0.13%)</title><rect x="519.7" y="1237" width="1.5" height="15.0" fill="rgb(229,86,48)" rx="2" ry="2" />
<text  x="522.68" y="1247.5" ></text>
</g>
<g >
<title>&lt;chrono::naive::datetime::serde::&lt;impl serde::ser::Serialize for chrono::naive::datetime::NaiveDateTime&gt;::serialize::FormatWrapped&lt;D&gt; as core::fmt::Display&gt;::fmt (33 samples, 0.06%)</title><rect x="998.0" y="1061" width="0.7" height="15.0" fill="rgb(246,61,23)" rx="2" ry="2" />
<text  x="1001.01" y="1071.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (16 samples, 0.03%)</title><rect x="257.9" y="1205" width="0.4" height="15.0" fill="rgb(253,38,3)" rx="2" ry="2" />
<text  x="260.92" y="1215.5" ></text>
</g>
<g >
<title>_$LT$noria..controller..Controller$LT$A$GT$$u20$as$u20$tower_service..Service$LT$noria..controller..ControllerRequest$GT$$GT$::call::_$u7b$$u7b$closure$u7d$$u7d$::h90ac19dc5a1b25c0 (50 samples, 0.09%)</title><rect x="1004.1" y="1541" width="1.1" height="15.0" fill="rgb(231,215,11)" rx="2" ry="2" />
<text  x="1007.10" y="1551.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (8 samples, 0.01%)</title><rect x="1023.5" y="1557" width="0.2" height="15.0" fill="rgb(229,65,34)" rx="2" ry="2" />
<text  x="1026.54" y="1567.5" ></text>
</g>
<g >
<title>crossbeam_deque::Injector&lt;T&gt;::steal_batch (46 samples, 0.08%)</title><rect x="1072.0" y="1045" width="1.0" height="15.0" fill="rgb(250,6,46)" rx="2" ry="2" />
<text  x="1074.98" y="1055.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (17 samples, 0.03%)</title><rect x="1025.4" y="1189" width="0.4" height="15.0" fill="rgb(244,98,20)" rx="2" ry="2" />
<text  x="1028.43" y="1199.5" ></text>
</g>
<g >
<title>__libc_read (22 samples, 0.04%)</title><rect x="1111.5" y="837" width="0.5" height="15.0" fill="rgb(252,197,3)" rx="2" ry="2" />
<text  x="1114.51" y="847.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h5b3a67a18c04d66c (22 samples, 0.04%)</title><rect x="189.4" y="1461" width="0.5" height="15.0" fill="rgb(238,22,18)" rx="2" ry="2" />
<text  x="192.38" y="1471.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_root_is_owned (1,056 samples, 1.90%)</title><rect x="269.0" y="1317" width="22.4" height="15.0" fill="rgb(246,168,25)" rx="2" ry="2" />
<text  x="271.98" y="1327.5" >a..</text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (21 samples, 0.04%)</title><rect x="981.4" y="1093" width="0.4" height="15.0" fill="rgb(222,15,17)" rx="2" ry="2" />
<text  x="984.36" y="1103.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (15 samples, 0.03%)</title><rect x="976.6" y="1317" width="0.4" height="15.0" fill="rgb(235,208,0)" rx="2" ry="2" />
<text  x="979.64" y="1327.5" ></text>
</g>
<g >
<title>&lt;tower_balance::p2c::service::Balance&lt;D,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (47 samples, 0.08%)</title><rect x="1048.0" y="1317" width="1.0" height="15.0" fill="rgb(213,54,49)" rx="2" ry="2" />
<text  x="1050.96" y="1327.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default::_$u7b$$u7b$closure$u7d$$u7d$::ha80fbdab9b554b03 (10 samples, 0.02%)</title><rect x="1051.4" y="1477" width="0.2" height="15.0" fill="rgb(219,158,26)" rx="2" ry="2" />
<text  x="1054.38" y="1487.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default (36 samples, 0.06%)</title><rect x="1032.5" y="1557" width="0.7" height="15.0" fill="rgb(230,193,20)" rx="2" ry="2" />
<text  x="1035.47" y="1567.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::write_fmt (11 samples, 0.02%)</title><rect x="998.5" y="965" width="0.2" height="15.0" fill="rgb(210,202,10)" rx="2" ry="2" />
<text  x="1001.48" y="975.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="193.9" y="1525" width="0.2" height="15.0" fill="rgb(251,159,54)" rx="2" ry="2" />
<text  x="196.90" y="1535.5" ></text>
</g>
<g >
<title>tokio_reactor::poll_evented::PollEvented&lt;E&gt;::poll_read_ready (5 samples, 0.01%)</title><rect x="1052.3" y="1109" width="0.1" height="15.0" fill="rgb(238,227,35)" rx="2" ry="2" />
<text  x="1055.33" y="1119.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::clone_id (6 samples, 0.01%)</title><rect x="1013.7" y="1397" width="0.1" height="15.0" fill="rgb(243,0,1)" rx="2" ry="2" />
<text  x="1016.65" y="1407.5" ></text>
</g>
<g >
<title>core::mem::drop (16 samples, 0.03%)</title><rect x="629.9" y="1189" width="0.3" height="15.0" fill="rgb(207,79,26)" rx="2" ry="2" />
<text  x="632.87" y="1199.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::write_fmt (19 samples, 0.03%)</title><rect x="997.6" y="997" width="0.4" height="15.0" fill="rgb(217,110,12)" rx="2" ry="2" />
<text  x="1000.61" y="1007.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_str (60 samples, 0.11%)</title><rect x="998.7" y="1141" width="1.3" height="15.0" fill="rgb(209,95,22)" rx="2" ry="2" />
<text  x="1001.71" y="1151.5" ></text>
</g>
<g >
<title>&lt;noria::_::&lt;impl serde::de::Deserialize for noria::Tagged&lt;T&gt;&gt;::deserialize::__Visitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (7 samples, 0.01%)</title><rect x="1058.1" y="1093" width="0.2" height="15.0" fill="rgb(250,63,53)" rx="2" ry="2" />
<text  x="1061.10" y="1103.5" ></text>
</g>
<g >
<title>core::mem::swap (153 samples, 0.28%)</title><rect x="824.2" y="1061" width="3.2" height="15.0" fill="rgb(215,88,17)" rx="2" ry="2" />
<text  x="827.17" y="1071.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (6 samples, 0.01%)</title><rect x="1033.8" y="1285" width="0.1" height="15.0" fill="rgb(231,93,53)" rx="2" ry="2" />
<text  x="1036.81" y="1295.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (13 samples, 0.02%)</title><rect x="1027.7" y="1109" width="0.3" height="15.0" fill="rgb(205,10,51)" rx="2" ry="2" />
<text  x="1030.74" y="1119.5" ></text>
</g>
<g >
<title>core::mem::size_of (9 samples, 0.02%)</title><rect x="868.3" y="1301" width="0.2" height="15.0" fill="rgb(225,112,44)" rx="2" ry="2" />
<text  x="871.28" y="1311.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::core::TaskUnpark as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="1055.8" y="1205" width="0.1" height="15.0" fill="rgb(251,104,52)" rx="2" ry="2" />
<text  x="1058.79" y="1215.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Root&lt;K,V&gt;::as_mut (99 samples, 0.18%)</title><rect x="521.5" y="1285" width="2.1" height="15.0" fill="rgb(220,80,11)" rx="2" ry="2" />
<text  x="524.46" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (12 samples, 0.02%)</title><rect x="997.4" y="1205" width="0.2" height="15.0" fill="rgb(230,111,1)" rx="2" ry="2" />
<text  x="1000.35" y="1215.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (109 samples, 0.20%)</title><rect x="986.4" y="1221" width="2.3" height="15.0" fill="rgb(222,186,50)" rx="2" ry="2" />
<text  x="989.43" y="1231.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.02%)</title><rect x="985.1" y="1189" width="0.2" height="15.0" fill="rgb(229,229,24)" rx="2" ry="2" />
<text  x="988.11" y="1199.5" ></text>
</g>
<g >
<title>core::mem::swap (7 samples, 0.01%)</title><rect x="1150.1" y="773" width="0.1" height="15.0" fill="rgb(239,75,18)" rx="2" ry="2" />
<text  x="1153.07" y="783.5" ></text>
</g>
<g >
<title>alloc::rc::RcBoxPtr::dec_strong (470 samples, 0.85%)</title><rect x="808.0" y="1125" width="9.9" height="15.0" fill="rgb(215,215,33)" rx="2" ry="2" />
<text  x="810.98" y="1135.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *const T&gt;::add (35 samples, 0.06%)</title><rect x="672.7" y="1157" width="0.7" height="15.0" fill="rgb(227,190,14)" rx="2" ry="2" />
<text  x="675.71" y="1167.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::poll_evented::PollEvented&lt;E&gt; as std::io::Read&gt;::read (5 samples, 0.01%)</title><rect x="1038.2" y="997" width="0.1" height="15.0" fill="rgb(229,160,7)" rx="2" ry="2" />
<text  x="1041.24" y="1007.5" ></text>
</g>
<g >
<title>&lt;async_bincode::reader::AsyncBincodeReader&lt;R,T&gt; as futures::stream::Stream&gt;::poll (12 samples, 0.02%)</title><rect x="1040.1" y="917" width="0.2" height="15.0" fill="rgb(246,6,23)" rx="2" ry="2" />
<text  x="1043.09" y="927.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::signal_work (170 samples, 0.31%)</title><rect x="1143.2" y="1045" width="3.6" height="15.0" fill="rgb(224,131,40)" rx="2" ry="2" />
<text  x="1146.19" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (16 samples, 0.03%)</title><rect x="1071.0" y="1013" width="0.4" height="15.0" fill="rgb(213,111,10)" rx="2" ry="2" />
<text  x="1074.05" y="1023.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (24 samples, 0.04%)</title><rect x="1046.6" y="885" width="0.5" height="15.0" fill="rgb(226,109,9)" rx="2" ry="2" />
<text  x="1049.60" y="895.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="194.7" y="1253" width="0.1" height="15.0" fill="rgb(217,34,49)" rx="2" ry="2" />
<text  x="197.71" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (44 samples, 0.08%)</title><rect x="1023.7" y="1557" width="0.9" height="15.0" fill="rgb(215,77,38)" rx="2" ry="2" />
<text  x="1026.71" y="1567.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (5 samples, 0.01%)</title><rect x="1022.3" y="1301" width="0.1" height="15.0" fill="rgb(212,194,45)" rx="2" ry="2" />
<text  x="1025.33" y="1311.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ThreadNotify as futures::task_impl::Notify&gt;::notify (17 samples, 0.03%)</title><rect x="1134.1" y="613" width="0.3" height="15.0" fill="rgb(210,144,9)" rx="2" ry="2" />
<text  x="1137.09" y="623.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (6 samples, 0.01%)</title><rect x="1033.7" y="1093" width="0.1" height="15.0" fill="rgb(240,127,29)" rx="2" ry="2" />
<text  x="1036.68" y="1103.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (8 samples, 0.01%)</title><rect x="1033.2" y="1269" width="0.2" height="15.0" fill="rgb(224,71,41)" rx="2" ry="2" />
<text  x="1036.24" y="1279.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (12 samples, 0.02%)</title><rect x="997.4" y="1173" width="0.2" height="15.0" fill="rgb(209,182,10)" rx="2" ry="2" />
<text  x="1000.35" y="1183.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (50 samples, 0.09%)</title><rect x="192.8" y="1477" width="1.1" height="15.0" fill="rgb(240,27,1)" rx="2" ry="2" />
<text  x="195.84" y="1487.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit (27 samples, 0.05%)</title><rect x="1028.4" y="1173" width="0.6" height="15.0" fill="rgb(222,161,38)" rx="2" ry="2" />
<text  x="1031.40" y="1183.5" ></text>
</g>
<g >
<title>chan::RecvOp&lt;T&gt;::blocked (17 samples, 0.03%)</title><rect x="470.7" y="1237" width="0.3" height="15.0" fill="rgb(228,10,52)" rx="2" ry="2" />
<text  x="473.68" y="1247.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (12 samples, 0.02%)</title><rect x="999.2" y="885" width="0.2" height="15.0" fill="rgb(248,60,17)" rx="2" ry="2" />
<text  x="1002.18" y="895.5" ></text>
</g>
<g >
<title>&lt;T as alloc::string::ToString&gt;::to_string (19 samples, 0.03%)</title><rect x="997.6" y="1109" width="0.4" height="15.0" fill="rgb(253,108,32)" rx="2" ry="2" />
<text  x="1000.61" y="1119.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (6 samples, 0.01%)</title><rect x="665.2" y="1157" width="0.1" height="15.0" fill="rgb(245,40,12)" rx="2" ry="2" />
<text  x="668.17" y="1167.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_leaf (77 samples, 0.14%)</title><rect x="766.7" y="1141" width="1.7" height="15.0" fill="rgb(212,119,35)" rx="2" ry="2" />
<text  x="769.73" y="1151.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::poll_complete (62 samples, 0.11%)</title><rect x="1038.5" y="917" width="1.3" height="15.0" fill="rgb(252,16,50)" rx="2" ry="2" />
<text  x="1041.48" y="927.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (10 samples, 0.02%)</title><rect x="651.5" y="1109" width="0.2" height="15.0" fill="rgb(214,44,41)" rx="2" ry="2" />
<text  x="654.51" y="1119.5" ></text>
</g>
<g >
<title>noria::table::_::&lt;impl serde::ser::Serialize for noria::table::Input&gt;::serialize (6 samples, 0.01%)</title><rect x="1022.2" y="1285" width="0.1" height="15.0" fill="rgb(233,128,3)" rx="2" ry="2" />
<text  x="1025.20" y="1295.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (28 samples, 0.05%)</title><rect x="1148.6" y="1013" width="0.6" height="15.0" fill="rgb(221,99,9)" rx="2" ry="2" />
<text  x="1151.56" y="1023.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (8 samples, 0.01%)</title><rect x="859.2" y="1285" width="0.2" height="15.0" fill="rgb(222,121,9)" rx="2" ry="2" />
<text  x="862.24" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfb347edd97d33f3d (78 samples, 0.14%)</title><rect x="1049.7" y="1509" width="1.7" height="15.0" fill="rgb(218,198,45)" rx="2" ry="2" />
<text  x="1052.72" y="1519.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h5b3a67a18c04d66c (8 samples, 0.01%)</title><rect x="193.9" y="1301" width="0.2" height="15.0" fill="rgb(250,75,47)" rx="2" ry="2" />
<text  x="196.90" y="1311.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (30 samples, 0.05%)</title><rect x="322.6" y="1221" width="0.6" height="15.0" fill="rgb(214,101,48)" rx="2" ry="2" />
<text  x="325.55" y="1231.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="189.0" y="1237" width="0.2" height="15.0" fill="rgb(210,84,24)" rx="2" ry="2" />
<text  x="192.02" y="1247.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::get (5 samples, 0.01%)</title><rect x="277.2" y="1189" width="0.1" height="15.0" fill="rgb(244,44,23)" rx="2" ry="2" />
<text  x="280.21" y="1199.5" ></text>
</g>
<g >
<title>futures::stream::futures_unordered::Inner&lt;T&gt;::enqueue (5 samples, 0.01%)</title><rect x="1006.9" y="1493" width="0.1" height="15.0" fill="rgb(243,72,31)" rx="2" ry="2" />
<text  x="1009.88" y="1503.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (58 samples, 0.10%)</title><rect x="761.1" y="1141" width="1.2" height="15.0" fill="rgb(222,164,29)" rx="2" ry="2" />
<text  x="764.06" y="1151.5" ></text>
</g>
<g >
<title>futures::task_impl::current::_$u7b$$u7b$closure$u7d$$u7d$::hb88041a16b038a29 (12 samples, 0.02%)</title><rect x="1013.8" y="1461" width="0.3" height="15.0" fill="rgb(238,181,14)" rx="2" ry="2" />
<text  x="1016.80" y="1471.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::dequeue_node (6 samples, 0.01%)</title><rect x="1111.2" y="901" width="0.1" height="15.0" fill="rgb(227,136,8)" rx="2" ry="2" />
<text  x="1114.15" y="911.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (9 samples, 0.02%)</title><rect x="1131.3" y="293" width="0.2" height="15.0" fill="rgb(208,184,10)" rx="2" ry="2" />
<text  x="1134.31" y="303.5" ></text>
</g>
<g >
<title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="243.0" y="1269" width="0.1" height="15.0" fill="rgb(228,33,17)" rx="2" ry="2" />
<text  x="245.96" y="1279.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (16 samples, 0.03%)</title><rect x="335.3" y="1269" width="0.3" height="15.0" fill="rgb(247,62,33)" rx="2" ry="2" />
<text  x="338.31" y="1279.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::future::ResponseFuture&lt;T&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="194.4" y="1285" width="0.1" height="15.0" fill="rgb(216,55,28)" rx="2" ry="2" />
<text  x="197.39" y="1295.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (35 samples, 0.06%)</title><rect x="191.8" y="1525" width="0.8" height="15.0" fill="rgb(230,79,10)" rx="2" ry="2" />
<text  x="194.85" y="1535.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfb347edd97d33f3d (284 samples, 0.51%)</title><rect x="1038.4" y="1445" width="6.0" height="15.0" fill="rgb(219,179,24)" rx="2" ry="2" />
<text  x="1041.41" y="1455.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (78 samples, 0.14%)</title><rect x="1049.7" y="1541" width="1.7" height="15.0" fill="rgb(242,59,35)" rx="2" ry="2" />
<text  x="1052.72" y="1551.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (13 samples, 0.02%)</title><rect x="1027.7" y="1045" width="0.3" height="15.0" fill="rgb(226,54,14)" rx="2" ry="2" />
<text  x="1030.74" y="1055.5" ></text>
</g>
<g >
<title>noria::table::Table::insert (8 samples, 0.01%)</title><rect x="200.9" y="1301" width="0.2" height="15.0" fill="rgb(230,119,45)" rx="2" ry="2" />
<text  x="203.88" y="1311.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (21 samples, 0.04%)</title><rect x="1134.5" y="629" width="0.4" height="15.0" fill="rgb(211,88,13)" rx="2" ry="2" />
<text  x="1137.47" y="639.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (7 samples, 0.01%)</title><rect x="199.2" y="1125" width="0.2" height="15.0" fill="rgb(213,97,38)" rx="2" ry="2" />
<text  x="202.21" y="1135.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::blocking_state::BlockingState::consume_allocation (5 samples, 0.01%)</title><rect x="1129.8" y="949" width="0.1" height="15.0" fill="rgb(224,133,0)" rx="2" ry="2" />
<text  x="1132.80" y="959.5" ></text>
</g>
<g >
<title>tokio_reactor::registration::Registration::poll_ready (18 samples, 0.03%)</title><rect x="1054.4" y="1125" width="0.4" height="15.0" fill="rgb(250,211,43)" rx="2" ry="2" />
<text  x="1057.39" y="1135.5" ></text>
</g>
<g >
<title>time::now (13 samples, 0.02%)</title><rect x="196.7" y="1333" width="0.2" height="15.0" fill="rgb(210,61,36)" rx="2" ry="2" />
<text  x="199.66" y="1343.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (6 samples, 0.01%)</title><rect x="885.0" y="1285" width="0.1" height="15.0" fill="rgb(208,228,33)" rx="2" ry="2" />
<text  x="888.00" y="1295.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (11 samples, 0.02%)</title><rect x="1036.9" y="1349" width="0.2" height="15.0" fill="rgb(222,198,17)" rx="2" ry="2" />
<text  x="1039.91" y="1359.5" ></text>
</g>
<g >
<title>_$LT$tokio_sync..oneshot..Inner$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::_$u7b$$u7b$closure$u7d$$u7d$::h741551f8b1d47dae (5 samples, 0.01%)</title><rect x="180.5" y="1093" width="0.1" height="15.0" fill="rgb(228,61,45)" rx="2" ry="2" />
<text  x="183.45" y="1103.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="1034.7" y="1189" width="0.2" height="15.0" fill="rgb(247,103,31)" rx="2" ry="2" />
<text  x="1037.70" y="1199.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="1152.0" y="437" width="0.1" height="15.0" fill="rgb(213,105,20)" rx="2" ry="2" />
<text  x="1154.95" y="447.5" ></text>
</g>
<g >
<title>tsdn_null (17 samples, 0.03%)</title><rect x="71.8" y="1493" width="0.3" height="15.0" fill="rgb(224,133,33)" rx="2" ry="2" />
<text  x="74.77" y="1503.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (72 samples, 0.13%)</title><rect x="546.2" y="1205" width="1.5" height="15.0" fill="rgb(210,76,18)" rx="2" ry="2" />
<text  x="549.16" y="1215.5" ></text>
</g>
<g >
<title>net_rx_action (20 samples, 0.04%)</title><rect x="1039.0" y="437" width="0.5" height="15.0" fill="rgb(244,13,2)" rx="2" ry="2" />
<text  x="1042.03" y="447.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (11 samples, 0.02%)</title><rect x="1100.4" y="869" width="0.3" height="15.0" fill="rgb(213,223,31)" rx="2" ry="2" />
<text  x="1103.44" y="879.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (5 samples, 0.01%)</title><rect x="1026.2" y="1109" width="0.1" height="15.0" fill="rgb(239,227,33)" rx="2" ry="2" />
<text  x="1029.19" y="1119.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::hfb931195fd733b29 (12 samples, 0.02%)</title><rect x="1029.9" y="1525" width="0.3" height="15.0" fill="rgb(232,65,26)" rx="2" ry="2" />
<text  x="1032.95" y="1535.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::sleep_light (330 samples, 0.59%)</title><rect x="1121.4" y="1077" width="7.0" height="15.0" fill="rgb(209,52,38)" rx="2" ry="2" />
<text  x="1124.40" y="1087.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_str (33 samples, 0.06%)</title><rect x="998.0" y="1141" width="0.7" height="15.0" fill="rgb(223,123,41)" rx="2" ry="2" />
<text  x="1001.01" y="1151.5" ></text>
</g>
<g >
<title>start_thread (6,096 samples, 10.96%)</title><rect x="1060.4" y="1589" width="129.3" height="15.0" fill="rgb(240,44,10)" rx="2" ry="2" />
<text  x="1063.35" y="1599.5" >start_thread</text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (14 samples, 0.03%)</title><rect x="1049.7" y="1093" width="0.3" height="15.0" fill="rgb(228,129,44)" rx="2" ry="2" />
<text  x="1052.72" y="1103.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (85 samples, 0.15%)</title><rect x="468.9" y="1237" width="1.8" height="15.0" fill="rgb(247,169,35)" rx="2" ry="2" />
<text  x="471.88" y="1247.5" ></text>
</g>
<g >
<title>sz_size2index_lookup (117 samples, 0.21%)</title><rect x="116.6" y="1525" width="2.5" height="15.0" fill="rgb(248,91,31)" rx="2" ry="2" />
<text  x="119.58" y="1535.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (22 samples, 0.04%)</title><rect x="1014.5" y="901" width="0.4" height="15.0" fill="rgb(213,54,18)" rx="2" ry="2" />
<text  x="1017.46" y="911.5" ></text>
</g>
<g >
<title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (9 samples, 0.02%)</title><rect x="199.5" y="1157" width="0.2" height="15.0" fill="rgb(222,65,30)" rx="2" ry="2" />
<text  x="202.46" y="1167.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (17 samples, 0.03%)</title><rect x="1134.1" y="629" width="0.3" height="15.0" fill="rgb(224,53,7)" rx="2" ry="2" />
<text  x="1137.09" y="639.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (6 samples, 0.01%)</title><rect x="977.6" y="1317" width="0.1" height="15.0" fill="rgb(238,1,19)" rx="2" ry="2" />
<text  x="980.62" y="1327.5" ></text>
</g>
<g >
<title>core::ptr::read (91 samples, 0.16%)</title><rect x="952.7" y="1285" width="1.9" height="15.0" fill="rgb(243,67,25)" rx="2" ry="2" />
<text  x="955.71" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (9 samples, 0.02%)</title><rect x="1044.1" y="869" width="0.2" height="15.0" fill="rgb(245,89,11)" rx="2" ry="2" />
<text  x="1047.10" y="879.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="1150.5" y="533" width="0.1" height="15.0" fill="rgb(226,80,33)" rx="2" ry="2" />
<text  x="1153.49" y="543.5" ></text>
</g>
<g >
<title>futures::task_impl::std::_$LT$impl$u20$futures..task_impl..Spawn$LT$F$GT$$GT$::wait_future::_$u7b$$u7b$closure$u7d$$u7d$::hd0f6d5cc3fe9bd86 (8 samples, 0.01%)</title><rect x="193.9" y="1285" width="0.2" height="15.0" fill="rgb(231,22,41)" rx="2" ry="2" />
<text  x="196.90" y="1295.5" ></text>
</g>
<g >
<title>_rjem_je_tsd_cleanup (6 samples, 0.01%)</title><rect x="195.0" y="1557" width="0.2" height="15.0" fill="rgb(213,21,35)" rx="2" ry="2" />
<text  x="198.03" y="1567.5" ></text>
</g>
<g >
<title>&lt;futures::sync::oneshot::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="996.3" y="1381" width="0.1" height="15.0" fill="rgb(239,160,30)" rx="2" ry="2" />
<text  x="999.27" y="1391.5" ></text>
</g>
<g >
<title>&lt;async_bincode::reader::AsyncBincodeReader&lt;R,T&gt; as futures::stream::Stream&gt;::poll (5 samples, 0.01%)</title><rect x="1033.5" y="1013" width="0.1" height="15.0" fill="rgb(254,131,17)" rx="2" ry="2" />
<text  x="1036.51" y="1023.5" ></text>
</g>
<g >
<title>tokio_reactor::Reactor::poll (144 samples, 0.26%)</title><rect x="1110.7" y="981" width="3.0" height="15.0" fill="rgb(254,30,33)" rx="2" ry="2" />
<text  x="1113.66" y="991.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (12 samples, 0.02%)</title><rect x="1036.7" y="1205" width="0.2" height="15.0" fill="rgb(245,163,1)" rx="2" ry="2" />
<text  x="1039.65" y="1215.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_once (5 samples, 0.01%)</title><rect x="981.2" y="1125" width="0.1" height="15.0" fill="rgb(222,102,26)" rx="2" ry="2" />
<text  x="984.19" y="1135.5" ></text>
</g>
<g >
<title>noria::table::_::&lt;impl serde::ser::Serialize for noria::table::Input&gt;::serialize (5 samples, 0.01%)</title><rect x="1044.5" y="1237" width="0.1" height="15.0" fill="rgb(217,185,25)" rx="2" ry="2" />
<text  x="1047.48" y="1247.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNotInner&lt;T&gt;&gt;::serialize (6 samples, 0.01%)</title><rect x="1014.2" y="1205" width="0.1" height="15.0" fill="rgb(242,27,2)" rx="2" ry="2" />
<text  x="1017.20" y="1215.5" ></text>
</g>
<g >
<title>isfree (17 samples, 0.03%)</title><rect x="990.5" y="1589" width="0.4" height="15.0" fill="rgb(240,51,11)" rx="2" ry="2" />
<text  x="993.54" y="1599.5" ></text>
</g>
<g >
<title>arena_malloc (8 samples, 0.01%)</title><rect x="1017.9" y="1525" width="0.1" height="15.0" fill="rgb(228,47,46)" rx="2" ry="2" />
<text  x="1020.85" y="1535.5" ></text>
</g>
<g >
<title>chrono::naive::datetime::serde::&lt;impl serde::ser::Serialize for chrono::naive::datetime::NaiveDateTime&gt;::serialize (60 samples, 0.11%)</title><rect x="998.7" y="1157" width="1.3" height="15.0" fill="rgb(250,184,20)" rx="2" ry="2" />
<text  x="1001.71" y="1167.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.01%)</title><rect x="1023.8" y="1285" width="0.1" height="15.0" fill="rgb(229,105,3)" rx="2" ry="2" />
<text  x="1026.81" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (17 samples, 0.03%)</title><rect x="1025.4" y="1221" width="0.4" height="15.0" fill="rgb(214,56,21)" rx="2" ry="2" />
<text  x="1028.43" y="1231.5" ></text>
</g>
<g >
<title>tsd_do_data_cleanup (11 samples, 0.02%)</title><rect x="1060.4" y="1541" width="0.2" height="15.0" fill="rgb(207,177,9)" rx="2" ry="2" />
<text  x="1063.37" y="1551.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h5b3a67a18c04d66c (15 samples, 0.03%)</title><rect x="194.7" y="1477" width="0.3" height="15.0" fill="rgb(225,76,14)" rx="2" ry="2" />
<text  x="197.71" y="1487.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNot&lt;T&gt;&gt;::serialize (6 samples, 0.01%)</title><rect x="1014.2" y="1237" width="0.1" height="15.0" fill="rgb(205,185,11)" rx="2" ry="2" />
<text  x="1017.20" y="1247.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Events::push_event (10 samples, 0.02%)</title><rect x="1124.3" y="901" width="0.2" height="15.0" fill="rgb(242,209,45)" rx="2" ry="2" />
<text  x="1127.31" y="911.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1022.3" y="1381" width="0.1" height="15.0" fill="rgb(212,161,35)" rx="2" ry="2" />
<text  x="1025.33" y="1391.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (11 samples, 0.02%)</title><rect x="992.9" y="1429" width="0.3" height="15.0" fill="rgb(244,52,7)" rx="2" ry="2" />
<text  x="995.92" y="1439.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::Client&lt;T,E&gt; as tower_service::Service&lt;&lt;T as futures::sink::Sink&gt;::SinkItem&gt;&gt;::call (10 samples, 0.02%)</title><rect x="1030.8" y="789" width="0.2" height="15.0" fill="rgb(249,15,35)" rx="2" ry="2" />
<text  x="1033.77" y="799.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner$LT$T$GT$::set_tx_task::_$u7b$$u7b$closure$u7d$$u7d$::h34ac968b46dfeb73 (14 samples, 0.03%)</title><rect x="1013.5" y="1509" width="0.3" height="15.0" fill="rgb(240,52,15)" rx="2" ry="2" />
<text  x="1016.50" y="1519.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::entry (7 samples, 0.01%)</title><rect x="1073.6" y="1045" width="0.1" height="15.0" fill="rgb(220,180,38)" rx="2" ry="2" />
<text  x="1076.59" y="1055.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (6 samples, 0.01%)</title><rect x="1034.6" y="1301" width="0.1" height="15.0" fill="rgb(223,210,15)" rx="2" ry="2" />
<text  x="1037.57" y="1311.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::write_fmt (32 samples, 0.06%)</title><rect x="983.3" y="1253" width="0.6" height="15.0" fill="rgb(244,15,39)" rx="2" ry="2" />
<text  x="986.27" y="1263.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (16 samples, 0.03%)</title><rect x="201.4" y="1317" width="0.3" height="15.0" fill="rgb(248,11,27)" rx="2" ry="2" />
<text  x="204.35" y="1327.5" ></text>
</g>
<g >
<title>ticker_tick (244 samples, 0.44%)</title><rect x="148.6" y="1493" width="5.1" height="15.0" fill="rgb(221,136,52)" rx="2" ry="2" />
<text  x="151.56" y="1503.5" ></text>
</g>
<g >
<title>tokio_reactor::registration::Registration::poll_ready (20 samples, 0.04%)</title><rect x="1057.2" y="1141" width="0.4" height="15.0" fill="rgb(211,136,45)" rx="2" ry="2" />
<text  x="1060.17" y="1151.5" ></text>
</g>
<g >
<title>futures::task_impl::with (6 samples, 0.01%)</title><rect x="1055.9" y="1237" width="0.2" height="15.0" fill="rgb(230,153,23)" rx="2" ry="2" />
<text  x="1058.94" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (8 samples, 0.01%)</title><rect x="1059.7" y="1285" width="0.2" height="15.0" fill="rgb(247,141,44)" rx="2" ry="2" />
<text  x="1062.72" y="1295.5" ></text>
</g>
<g >
<title>sock_recvmsg (8 samples, 0.01%)</title><rect x="1037.5" y="837" width="0.1" height="15.0" fill="rgb(205,33,23)" rx="2" ry="2" />
<text  x="1040.46" y="847.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::NotifyHandle as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="1005.5" y="1429" width="0.3" height="15.0" fill="rgb(253,36,50)" rx="2" ry="2" />
<text  x="1008.50" y="1439.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (28 samples, 0.05%)</title><rect x="1008.4" y="1461" width="0.6" height="15.0" fill="rgb(214,190,10)" rx="2" ry="2" />
<text  x="1011.37" y="1471.5" ></text>
</g>
<g >
<title>noria::controller::ControllerHandle$LT$A$GT$::table::_$u7b$$u7b$closure$u7d$$u7d$::h013515b476a45fd3 (5 samples, 0.01%)</title><rect x="1021.0" y="1525" width="0.1" height="15.0" fill="rgb(225,20,8)" rx="2" ry="2" />
<text  x="1024.01" y="1535.5" ></text>
</g>
<g >
<title>ip_queue_xmit (35 samples, 0.06%)</title><rect x="1038.8" y="581" width="0.8" height="15.0" fill="rgb(224,61,3)" rx="2" ry="2" />
<text  x="1041.84" y="591.5" ></text>
</g>
<g >
<title>core::mem::replace (14 samples, 0.03%)</title><rect x="1110.3" y="869" width="0.3" height="15.0" fill="rgb(219,64,31)" rx="2" ry="2" />
<text  x="1113.34" y="879.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::offset (21 samples, 0.04%)</title><rect x="659.0" y="1189" width="0.4" height="15.0" fill="rgb(251,82,44)" rx="2" ry="2" />
<text  x="661.96" y="1199.5" ></text>
</g>
<g >
<title>crossbeam_epoch::internal::Local::pin (764 samples, 1.37%)</title><rect x="1173.5" y="917" width="16.2" height="15.0" fill="rgb(231,202,34)" rx="2" ry="2" />
<text  x="1176.49" y="927.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (12 samples, 0.02%)</title><rect x="1029.9" y="1173" width="0.3" height="15.0" fill="rgb(236,46,11)" rx="2" ry="2" />
<text  x="1032.95" y="1183.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="1013.2" y="1429" width="0.2" height="15.0" fill="rgb(214,209,14)" rx="2" ry="2" />
<text  x="1016.25" y="1439.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::h1adb2f04ac003c70 (49 samples, 0.09%)</title><rect x="183.8" y="1573" width="1.0" height="15.0" fill="rgb(236,96,54)" rx="2" ry="2" />
<text  x="186.76" y="1583.5" ></text>
</g>
<g >
<title>tokio_sync::task::atomic_task::AtomicTask::do_register (28 samples, 0.05%)</title><rect x="1012.4" y="1477" width="0.6" height="15.0" fill="rgb(209,93,15)" rx="2" ry="2" />
<text  x="1015.42" y="1487.5" ></text>
</g>
<g >
<title>alloc::rc::RcBoxPtr::weak (128 samples, 0.23%)</title><rect x="820.3" y="1109" width="2.7" height="15.0" fill="rgb(225,225,50)" rx="2" ry="2" />
<text  x="823.30" y="1119.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for core::result::Result&lt;T,E&gt;&gt;::deserialize (144 samples, 0.26%)</title><rect x="1000.0" y="1237" width="3.0" height="15.0" fill="rgb(211,187,19)" rx="2" ry="2" />
<text  x="1002.99" y="1247.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (60 samples, 0.11%)</title><rect x="1044.9" y="1285" width="1.3" height="15.0" fill="rgb(218,200,33)" rx="2" ry="2" />
<text  x="1047.93" y="1295.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (21 samples, 0.04%)</title><rect x="1022.9" y="1413" width="0.5" height="15.0" fill="rgb(226,60,31)" rx="2" ry="2" />
<text  x="1025.92" y="1423.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *const T&gt;::offset (16 samples, 0.03%)</title><rect x="542.4" y="1189" width="0.3" height="15.0" fill="rgb(220,216,44)" rx="2" ry="2" />
<text  x="545.40" y="1199.5" ></text>
</g>
<g >
<title>futex_wait_cancelable (17 samples, 0.03%)</title><rect x="192.1" y="1189" width="0.4" height="15.0" fill="rgb(210,229,18)" rx="2" ry="2" />
<text  x="195.12" y="1199.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::tcp::TcpStream as std::io::Read&gt;::read (12 samples, 0.02%)</title><rect x="1037.4" y="997" width="0.2" height="15.0" fill="rgb(248,209,24)" rx="2" ry="2" />
<text  x="1040.39" y="1007.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h5277a6b3dc2240a9 (9 samples, 0.02%)</title><rect x="1020.4" y="1493" width="0.2" height="15.0" fill="rgb(245,35,17)" rx="2" ry="2" />
<text  x="1023.38" y="1503.5" ></text>
</g>
<g >
<title>tokio_io::async_read::AsyncRead::poll_read (19 samples, 0.03%)</title><rect x="1046.2" y="1253" width="0.4" height="15.0" fill="rgb(206,202,52)" rx="2" ry="2" />
<text  x="1049.20" y="1263.5" ></text>
</g>
<g >
<title>&lt;chan::ChannelId as core::cmp::Ord&gt;::cmp (291 samples, 0.52%)</title><rect x="530.4" y="1237" width="6.1" height="15.0" fill="rgb(253,40,42)" rx="2" ry="2" />
<text  x="533.37" y="1247.5" ></text>
</g>
<g >
<title>[unknown] (8,720 samples, 15.68%)</title><rect x="10.0" y="1605" width="185.0" height="15.0" fill="rgb(206,21,33)" rx="2" ry="2" />
<text  x="13.00" y="1615.5" >[unknown]</text>
</g>
<g >
<title>fake::Dummy::dummy (114 samples, 0.20%)</title><rect x="197.3" y="1317" width="2.4" height="15.0" fill="rgb(223,32,29)" rx="2" ry="2" />
<text  x="200.26" y="1327.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (5 samples, 0.01%)</title><rect x="1090.8" y="885" width="0.1" height="15.0" fill="rgb(238,44,23)" rx="2" ry="2" />
<text  x="1093.80" y="895.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (82 samples, 0.15%)</title><rect x="857.1" y="1301" width="1.8" height="15.0" fill="rgb(226,169,34)" rx="2" ry="2" />
<text  x="860.12" y="1311.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (5 samples, 0.01%)</title><rect x="983.6" y="1141" width="0.2" height="15.0" fill="rgb(238,135,51)" rx="2" ry="2" />
<text  x="986.65" y="1151.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::notify (21 samples, 0.04%)</title><rect x="1056.3" y="1125" width="0.4" height="15.0" fill="rgb(209,201,16)" rx="2" ry="2" />
<text  x="1059.26" y="1135.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (5 samples, 0.01%)</title><rect x="653.1" y="1109" width="0.1" height="15.0" fill="rgb(223,48,3)" rx="2" ry="2" />
<text  x="656.10" y="1119.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts_mut (11 samples, 0.02%)</title><rect x="641.6" y="1221" width="0.2" height="15.0" fill="rgb(228,115,34)" rx="2" ry="2" />
<text  x="644.60" y="1231.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (14 samples, 0.03%)</title><rect x="1139.9" y="1045" width="0.3" height="15.0" fill="rgb(226,186,48)" rx="2" ry="2" />
<text  x="1142.94" y="1055.5" ></text>
</g>
<g >
<title>sys_getrandom (9 samples, 0.02%)</title><rect x="189.9" y="1429" width="0.2" height="15.0" fill="rgb(228,119,9)" rx="2" ry="2" />
<text  x="192.87" y="1439.5" ></text>
</g>
<g >
<title>check_entry_exit_locking (19 samples, 0.03%)</title><rect x="111.0" y="1557" width="0.4" height="15.0" fill="rgb(228,177,13)" rx="2" ry="2" />
<text  x="113.98" y="1567.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (9 samples, 0.02%)</title><rect x="997.2" y="1029" width="0.2" height="15.0" fill="rgb(222,76,46)" rx="2" ry="2" />
<text  x="1000.16" y="1039.5" ></text>
</g>
<g >
<title>apparmor_file_permission (9 samples, 0.02%)</title><rect x="1097.2" y="725" width="0.2" height="15.0" fill="rgb(219,21,53)" rx="2" ry="2" />
<text  x="1100.23" y="735.5" ></text>
</g>
<g >
<title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (7 samples, 0.01%)</title><rect x="858.9" y="1285" width="0.2" height="15.0" fill="rgb(214,137,7)" rx="2" ry="2" />
<text  x="861.90" y="1295.5" ></text>
</g>
<g >
<title>&lt;tokio_tcp::stream::TcpStream as std::io::Read&gt;::read (5 samples, 0.01%)</title><rect x="1052.3" y="1141" width="0.1" height="15.0" fill="rgb(227,178,19)" rx="2" ry="2" />
<text  x="1055.33" y="1151.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (1,084 samples, 1.95%)</title><rect x="607.2" y="1285" width="23.0" height="15.0" fill="rgb(226,202,33)" rx="2" ry="2" />
<text  x="610.20" y="1295.5" >s..</text>
</g>
<g >
<title>alloc::alloc::alloc (219 samples, 0.39%)</title><rect x="260.4" y="1301" width="4.7" height="15.0" fill="rgb(221,205,45)" rx="2" ry="2" />
<text  x="263.42" y="1311.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h3d3457b86cb67885 (38 samples, 0.07%)</title><rect x="1026.6" y="1557" width="0.8" height="15.0" fill="rgb(238,209,54)" rx="2" ry="2" />
<text  x="1029.64" y="1567.5" ></text>
</g>
<g >
<title>hyper::client::PoolClient&lt;B&gt;::send_request_retryable (6 samples, 0.01%)</title><rect x="1024.8" y="1573" width="0.1" height="15.0" fill="rgb(216,184,13)" rx="2" ry="2" />
<text  x="1027.79" y="1583.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueue::poll (165 samples, 0.30%)</title><rect x="1090.0" y="917" width="3.5" height="15.0" fill="rgb(225,227,51)" rx="2" ry="2" />
<text  x="1093.04" y="927.5" ></text>
</g>
<g >
<title>do_syscall_64 (30 samples, 0.05%)</title><rect x="1079.5" y="853" width="0.7" height="15.0" fill="rgb(231,227,14)" rx="2" ry="2" />
<text  x="1082.53" y="863.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (218 samples, 0.39%)</title><rect x="1130.8" y="837" width="4.6" height="15.0" fill="rgb(223,80,2)" rx="2" ry="2" />
<text  x="1133.76" y="847.5" ></text>
</g>
<g >
<title>futures::task_impl::std::&lt;impl futures::task_impl::Spawn&lt;F&gt;&gt;::wait_future (19 samples, 0.03%)</title><rect x="180.4" y="1573" width="0.4" height="15.0" fill="rgb(217,166,14)" rx="2" ry="2" />
<text  x="183.43" y="1583.5" ></text>
</g>
<g >
<title>bincode::internal::serialize_into (5 samples, 0.01%)</title><rect x="1059.4" y="1093" width="0.1" height="15.0" fill="rgb(238,130,28)" rx="2" ry="2" />
<text  x="1062.36" y="1103.5" ></text>
</g>
<g >
<title>ip_rcv_finish (17 samples, 0.03%)</title><rect x="1039.0" y="357" width="0.4" height="15.0" fill="rgb(218,86,9)" rx="2" ry="2" />
<text  x="1042.05" y="367.5" ></text>
</g>
<g >
<title>core::mem::replace (16 samples, 0.03%)</title><rect x="1013.1" y="1525" width="0.4" height="15.0" fill="rgb(242,197,12)" rx="2" ry="2" />
<text  x="1016.12" y="1535.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (22 samples, 0.04%)</title><rect x="1032.8" y="1285" width="0.4" height="15.0" fill="rgb(236,18,39)" rx="2" ry="2" />
<text  x="1035.77" y="1295.5" ></text>
</g>
<g >
<title>std::panicking::try (10 samples, 0.02%)</title><rect x="10.0" y="1525" width="0.2" height="15.0" fill="rgb(243,124,15)" rx="2" ry="2" />
<text  x="13.00" y="1535.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="194.1" y="1205" width="0.1" height="15.0" fill="rgb(217,82,16)" rx="2" ry="2" />
<text  x="197.14" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (13 samples, 0.02%)</title><rect x="1026.6" y="949" width="0.3" height="15.0" fill="rgb(254,73,30)" rx="2" ry="2" />
<text  x="1029.64" y="959.5" ></text>
</g>
<g >
<title>bincode::config::legacy::Config::serialize_into (19 samples, 0.03%)</title><rect x="1022.9" y="1397" width="0.4" height="15.0" fill="rgb(211,122,52)" rx="2" ry="2" />
<text  x="1025.92" y="1407.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (20 samples, 0.04%)</title><rect x="248.7" y="1285" width="0.4" height="15.0" fill="rgb(221,73,51)" rx="2" ry="2" />
<text  x="251.69" y="1295.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="1035.9" y="1093" width="0.2" height="15.0" fill="rgb(242,88,2)" rx="2" ry="2" />
<text  x="1038.89" y="1103.5" ></text>
</g>
<g >
<title>core::fmt::write (19 samples, 0.03%)</title><rect x="997.6" y="1077" width="0.4" height="15.0" fill="rgb(222,141,7)" rx="2" ry="2" />
<text  x="1000.61" y="1087.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::new_edge (18 samples, 0.03%)</title><rect x="647.4" y="1157" width="0.4" height="15.0" fill="rgb(238,126,42)" rx="2" ry="2" />
<text  x="650.41" y="1167.5" ></text>
</g>
<g >
<title>&lt;usize as core::iter::range::Step&gt;::add_usize (28 samples, 0.05%)</title><rect x="578.0" y="1061" width="0.6" height="15.0" fill="rgb(227,100,20)" rx="2" ry="2" />
<text  x="581.03" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (16 samples, 0.03%)</title><rect x="659.8" y="1237" width="0.3" height="15.0" fill="rgb(215,38,1)" rx="2" ry="2" />
<text  x="662.81" y="1247.5" ></text>
</g>
<g >
<title>&lt;noria::table::Table as tower_service::Service&lt;noria::data::TableOperation&gt;&gt;::call (49 samples, 0.09%)</title><rect x="183.8" y="1509" width="1.0" height="15.0" fill="rgb(231,22,19)" rx="2" ry="2" />
<text  x="186.76" y="1519.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (15 samples, 0.03%)</title><rect x="1034.9" y="1349" width="0.3" height="15.0" fill="rgb(237,154,3)" rx="2" ry="2" />
<text  x="1037.87" y="1359.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.01%)</title><rect x="1052.1" y="1109" width="0.1" height="15.0" fill="rgb(215,180,18)" rx="2" ry="2" />
<text  x="1055.06" y="1119.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (284 samples, 0.51%)</title><rect x="1038.4" y="1301" width="6.0" height="15.0" fill="rgb(242,81,2)" rx="2" ry="2" />
<text  x="1041.41" y="1311.5" ></text>
</g>
<g >
<title>futures::future::Future::wait (19 samples, 0.03%)</title><rect x="180.4" y="1589" width="0.4" height="15.0" fill="rgb(227,126,12)" rx="2" ry="2" />
<text  x="183.43" y="1599.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (174 samples, 0.31%)</title><rect x="1053.0" y="1397" width="3.7" height="15.0" fill="rgb(212,61,16)" rx="2" ry="2" />
<text  x="1056.01" y="1407.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (6 samples, 0.01%)</title><rect x="1022.2" y="1157" width="0.1" height="15.0" fill="rgb(212,95,13)" rx="2" ry="2" />
<text  x="1025.20" y="1167.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::register_task (16 samples, 0.03%)</title><rect x="1058.4" y="1237" width="0.3" height="15.0" fill="rgb(218,60,15)" rx="2" ry="2" />
<text  x="1061.38" y="1247.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (268 samples, 0.48%)</title><rect x="590.0" y="1109" width="5.6" height="15.0" fill="rgb(240,163,21)" rx="2" ry="2" />
<text  x="592.95" y="1119.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (21 samples, 0.04%)</title><rect x="1033.2" y="1445" width="0.5" height="15.0" fill="rgb(229,216,43)" rx="2" ry="2" />
<text  x="1036.24" y="1455.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (11 samples, 0.02%)</title><rect x="1096.6" y="693" width="0.2" height="15.0" fill="rgb(208,145,23)" rx="2" ry="2" />
<text  x="1099.62" y="703.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::notify (12 samples, 0.02%)</title><rect x="1047.6" y="1301" width="0.2" height="15.0" fill="rgb(252,115,34)" rx="2" ry="2" />
<text  x="1050.56" y="1311.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (121 samples, 0.22%)</title><rect x="861.4" y="1285" width="2.6" height="15.0" fill="rgb(248,198,22)" rx="2" ry="2" />
<text  x="864.38" y="1295.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (23 samples, 0.04%)</title><rect x="187.0" y="1381" width="0.5" height="15.0" fill="rgb(247,38,53)" rx="2" ry="2" />
<text  x="190.05" y="1391.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (59 samples, 0.11%)</title><rect x="820.8" y="1093" width="1.3" height="15.0" fill="rgb(248,168,9)" rx="2" ry="2" />
<text  x="823.83" y="1103.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (8 samples, 0.01%)</title><rect x="1015.2" y="1045" width="0.1" height="15.0" fill="rgb(207,56,28)" rx="2" ry="2" />
<text  x="1018.18" y="1055.5" ></text>
</g>
<g >
<title>chan::select::Select::maybe_try_select (13,282 samples, 23.88%)</title><rect x="420.3" y="1333" width="281.8" height="15.0" fill="rgb(231,49,49)" rx="2" ry="2" />
<text  x="423.29" y="1343.5" >chan::select::Select::maybe_try_select</text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (298 samples, 0.54%)</title><rect x="1129.4" y="1029" width="6.3" height="15.0" fill="rgb(248,187,12)" rx="2" ry="2" />
<text  x="1132.40" y="1039.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner$LT$T$GT$::complete::_$u7b$$u7b$closure$u7d$$u7d$::h3005e9ddf9811f4c (17 samples, 0.03%)</title><rect x="1134.1" y="709" width="0.3" height="15.0" fill="rgb(251,169,10)" rx="2" ry="2" />
<text  x="1137.09" y="719.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (15 samples, 0.03%)</title><rect x="1028.1" y="1317" width="0.3" height="15.0" fill="rgb(213,77,12)" rx="2" ry="2" />
<text  x="1031.06" y="1327.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (36 samples, 0.06%)</title><rect x="1163.6" y="997" width="0.7" height="15.0" fill="rgb(254,66,22)" rx="2" ry="2" />
<text  x="1166.58" y="1007.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (5 samples, 0.01%)</title><rect x="192.5" y="1253" width="0.1" height="15.0" fill="rgb(223,211,33)" rx="2" ry="2" />
<text  x="195.48" y="1263.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="1059.7" y="1413" width="0.2" height="15.0" fill="rgb(218,117,48)" rx="2" ry="2" />
<text  x="1062.72" y="1423.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::clone_id (8 samples, 0.01%)</title><rect x="1058.8" y="1157" width="0.2" height="15.0" fill="rgb(254,152,54)" rx="2" ry="2" />
<text  x="1061.78" y="1167.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (26 samples, 0.05%)</title><rect x="1029.4" y="965" width="0.5" height="15.0" fill="rgb(238,189,44)" rx="2" ry="2" />
<text  x="1032.39" y="975.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (28 samples, 0.05%)</title><rect x="1035.9" y="1509" width="0.6" height="15.0" fill="rgb(211,54,24)" rx="2" ry="2" />
<text  x="1038.89" y="1519.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.02%)</title><rect x="1081.9" y="933" width="0.2" height="15.0" fill="rgb(210,221,3)" rx="2" ry="2" />
<text  x="1084.87" y="943.5" ></text>
</g>
<g >
<title>bincode::config::legacy::Config::serialize_into (5 samples, 0.01%)</title><rect x="1059.4" y="1109" width="0.1" height="15.0" fill="rgb(230,162,31)" rx="2" ry="2" />
<text  x="1062.36" y="1119.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (33 samples, 0.06%)</title><rect x="1035.2" y="1397" width="0.7" height="15.0" fill="rgb(215,97,46)" rx="2" ry="2" />
<text  x="1038.19" y="1407.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (5 samples, 0.01%)</title><rect x="192.5" y="1285" width="0.1" height="15.0" fill="rgb(218,176,17)" rx="2" ry="2" />
<text  x="195.48" y="1295.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (6 samples, 0.01%)</title><rect x="1031.0" y="997" width="0.2" height="15.0" fill="rgb(222,227,25)" rx="2" ry="2" />
<text  x="1034.05" y="1007.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (158 samples, 0.28%)</title><rect x="1041.1" y="1141" width="3.3" height="15.0" fill="rgb(219,160,47)" rx="2" ry="2" />
<text  x="1044.09" y="1151.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (10 samples, 0.02%)</title><rect x="180.4" y="1269" width="0.2" height="15.0" fill="rgb(225,155,22)" rx="2" ry="2" />
<text  x="183.43" y="1279.5" ></text>
</g>
<g >
<title>_rjem_sdallocx (3,662 samples, 6.59%)</title><rect x="102.3" y="1589" width="77.7" height="15.0" fill="rgb(243,102,53)" rx="2" ry="2" />
<text  x="105.26" y="1599.5" >_rjem_sd..</text>
</g>
<g >
<title>&lt;tower_balance::p2c::service::Balance&lt;D,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::poll_ready (10 samples, 0.02%)</title><rect x="1049.0" y="1317" width="0.2" height="15.0" fill="rgb(245,41,48)" rx="2" ry="2" />
<text  x="1051.96" y="1327.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (60 samples, 0.11%)</title><rect x="998.7" y="1301" width="1.3" height="15.0" fill="rgb(225,179,50)" rx="2" ry="2" />
<text  x="1001.71" y="1311.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (7 samples, 0.01%)</title><rect x="1022.5" y="917" width="0.1" height="15.0" fill="rgb(241,63,30)" rx="2" ry="2" />
<text  x="1025.48" y="927.5" ></text>
</g>
<g >
<title>__rg_alloc (67 samples, 0.12%)</title><rect x="234.1" y="1285" width="1.4" height="15.0" fill="rgb(225,216,46)" rx="2" ry="2" />
<text  x="237.07" y="1295.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::write_fmt (10 samples, 0.02%)</title><rect x="997.7" y="949" width="0.2" height="15.0" fill="rgb(239,127,38)" rx="2" ry="2" />
<text  x="1000.69" y="959.5" ></text>
</g>
<g >
<title>&lt;tower_balance::p2c::service::UnreadyService&lt;K,S,Req&gt; as futures::future::Future&gt;::poll (24 samples, 0.04%)</title><rect x="1007.8" y="1429" width="0.5" height="15.0" fill="rgb(238,155,2)" rx="2" ry="2" />
<text  x="1010.84" y="1439.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 0.02%)</title><rect x="1027.7" y="981" width="0.3" height="15.0" fill="rgb(206,75,2)" rx="2" ry="2" />
<text  x="1030.74" y="991.5" ></text>
</g>
<g >
<title>&lt;hyper::proto::h1::dispatch::Client&lt;B&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (14 samples, 0.03%)</title><rect x="996.5" y="1461" width="0.3" height="15.0" fill="rgb(229,27,49)" rx="2" ry="2" />
<text  x="999.53" y="1471.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (49 samples, 0.09%)</title><rect x="1053.2" y="1285" width="1.1" height="15.0" fill="rgb(205,177,4)" rx="2" ry="2" />
<text  x="1056.24" y="1295.5" ></text>
</g>
<g >
<title>std::sys_common::poison::Flag::borrow (283 samples, 0.51%)</title><rect x="450.9" y="1221" width="6.0" height="15.0" fill="rgb(243,77,25)" rx="2" ry="2" />
<text  x="453.88" y="1231.5" ></text>
</g>
<g >
<title>std::panicking::update_panic_count (20 samples, 0.04%)</title><rect x="456.5" y="1173" width="0.4" height="15.0" fill="rgb(209,136,31)" rx="2" ry="2" />
<text  x="459.47" y="1183.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (158 samples, 0.28%)</title><rect x="1041.1" y="1237" width="3.3" height="15.0" fill="rgb(215,105,3)" rx="2" ry="2" />
<text  x="1044.09" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (26 samples, 0.05%)</title><rect x="185.2" y="933" width="0.6" height="15.0" fill="rgb(244,204,25)" rx="2" ry="2" />
<text  x="188.25" y="943.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (348 samples, 0.63%)</title><rect x="195.2" y="1461" width="7.3" height="15.0" fill="rgb(239,201,45)" rx="2" ry="2" />
<text  x="198.16" y="1471.5" ></text>
</g>
<g >
<title>alloc::rc::Rc&lt;T&gt;::from_inner (17 samples, 0.03%)</title><rect x="246.8" y="1317" width="0.3" height="15.0" fill="rgb(205,47,38)" rx="2" ry="2" />
<text  x="249.78" y="1327.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::LineWriter&lt;W&gt; as std::io::Write&gt;::write (10 samples, 0.02%)</title><rect x="989.6" y="1157" width="0.2" height="15.0" fill="rgb(250,215,33)" rx="2" ry="2" />
<text  x="992.61" y="1167.5" ></text>
</g>
<g >
<title>iallocztm (24 samples, 0.04%)</title><rect x="1016.2" y="1525" width="0.5" height="15.0" fill="rgb(208,92,1)" rx="2" ry="2" />
<text  x="1019.15" y="1535.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (6 samples, 0.01%)</title><rect x="1030.2" y="1413" width="0.1" height="15.0" fill="rgb(216,186,23)" rx="2" ry="2" />
<text  x="1033.20" y="1423.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::notify (27 samples, 0.05%)</title><rect x="1028.4" y="1061" width="0.6" height="15.0" fill="rgb(222,95,40)" rx="2" ry="2" />
<text  x="1031.40" y="1071.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::into_unique (95 samples, 0.17%)</title><rect x="279.4" y="1269" width="2.1" height="15.0" fill="rgb(227,152,8)" rx="2" ry="2" />
<text  x="282.44" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (46 samples, 0.08%)</title><rect x="1050.1" y="837" width="1.0" height="15.0" fill="rgb(227,82,12)" rx="2" ry="2" />
<text  x="1053.08" y="847.5" ></text>
</g>
<g >
<title>serde::de::VariantAccess::newtype_variant (9 samples, 0.02%)</title><rect x="1055.2" y="901" width="0.2" height="15.0" fill="rgb(253,84,32)" rx="2" ry="2" />
<text  x="1058.18" y="911.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::write (22 samples, 0.04%)</title><rect x="1014.5" y="917" width="0.4" height="15.0" fill="rgb(208,51,49)" rx="2" ry="2" />
<text  x="1017.46" y="927.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::DataType&gt;::serialize (13 samples, 0.02%)</title><rect x="1054.0" y="997" width="0.3" height="15.0" fill="rgb(212,48,39)" rx="2" ry="2" />
<text  x="1057.01" y="1007.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::slice_insert (818 samples, 1.47%)</title><rect x="363.7" y="1285" width="17.4" height="15.0" fill="rgb(243,221,52)" rx="2" ry="2" />
<text  x="366.74" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (33 samples, 0.06%)</title><rect x="1035.2" y="1221" width="0.7" height="15.0" fill="rgb(235,162,17)" rx="2" ry="2" />
<text  x="1038.19" y="1231.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple (144 samples, 0.26%)</title><rect x="1000.0" y="997" width="3.0" height="15.0" fill="rgb(207,38,40)" rx="2" ry="2" />
<text  x="1002.99" y="1007.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (294 samples, 0.53%)</title><rect x="1148.5" y="1029" width="6.2" height="15.0" fill="rgb(246,124,37)" rx="2" ry="2" />
<text  x="1151.50" y="1039.5" ></text>
</g>
<g >
<title>futures::future::option::&lt;impl futures::future::Future for core::option::Option&lt;F&gt;&gt;::poll (5 samples, 0.01%)</title><rect x="1044.8" y="1317" width="0.1" height="15.0" fill="rgb(220,119,24)" rx="2" ry="2" />
<text  x="1047.82" y="1327.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (35 samples, 0.06%)</title><rect x="1051.9" y="1349" width="0.7" height="15.0" fill="rgb(247,190,7)" rx="2" ry="2" />
<text  x="1054.87" y="1359.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="1001.2" y="549" width="0.2" height="15.0" fill="rgb(245,150,34)" rx="2" ry="2" />
<text  x="1004.24" y="559.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (556 samples, 1.00%)</title><rect x="494.4" y="1221" width="11.8" height="15.0" fill="rgb(207,125,54)" rx="2" ry="2" />
<text  x="497.40" y="1231.5" ></text>
</g>
<g >
<title>tracing::span::Span::current (8 samples, 0.01%)</title><rect x="184.3" y="1461" width="0.2" height="15.0" fill="rgb(226,105,19)" rx="2" ry="2" />
<text  x="187.33" y="1471.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (33 samples, 0.06%)</title><rect x="998.0" y="1429" width="0.7" height="15.0" fill="rgb(217,66,9)" rx="2" ry="2" />
<text  x="1001.01" y="1439.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (5 samples, 0.01%)</title><rect x="993.5" y="1253" width="0.1" height="15.0" fill="rgb(212,107,26)" rx="2" ry="2" />
<text  x="996.47" y="1263.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (10 samples, 0.02%)</title><rect x="180.4" y="1317" width="0.2" height="15.0" fill="rgb(238,62,51)" rx="2" ry="2" />
<text  x="183.43" y="1327.5" ></text>
</g>
<g >
<title>std::panicking::try (19 samples, 0.03%)</title><rect x="1025.8" y="1573" width="0.4" height="15.0" fill="rgb(232,197,33)" rx="2" ry="2" />
<text  x="1028.79" y="1583.5" ></text>
</g>
<g >
<title>schedule (36 samples, 0.06%)</title><rect x="1105.1" y="789" width="0.8" height="15.0" fill="rgb(235,221,33)" rx="2" ry="2" />
<text  x="1108.12" y="799.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (8 samples, 0.01%)</title><rect x="1036.5" y="1173" width="0.2" height="15.0" fill="rgb(232,129,20)" rx="2" ry="2" />
<text  x="1039.48" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (829 samples, 1.49%)</title><rect x="903.0" y="1301" width="17.6" height="15.0" fill="rgb(245,182,46)" rx="2" ry="2" />
<text  x="905.99" y="1311.5" ></text>
</g>
<g >
<title>__libc_read (5 samples, 0.01%)</title><rect x="993.5" y="1221" width="0.1" height="15.0" fill="rgb(237,60,46)" rx="2" ry="2" />
<text  x="996.47" y="1231.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (7 samples, 0.01%)</title><rect x="1055.6" y="1221" width="0.2" height="15.0" fill="rgb(217,159,13)" rx="2" ry="2" />
<text  x="1058.64" y="1231.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (36 samples, 0.06%)</title><rect x="1032.5" y="1413" width="0.7" height="15.0" fill="rgb(236,135,13)" rx="2" ry="2" />
<text  x="1035.47" y="1423.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (56 samples, 0.10%)</title><rect x="1100.9" y="869" width="1.2" height="15.0" fill="rgb(208,180,26)" rx="2" ry="2" />
<text  x="1103.88" y="879.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfb347edd97d33f3d (16 samples, 0.03%)</title><rect x="1049.4" y="1589" width="0.3" height="15.0" fill="rgb(221,32,10)" rx="2" ry="2" />
<text  x="1052.38" y="1599.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::as_mut_ptr (11 samples, 0.02%)</title><rect x="816.9" y="1013" width="0.2" height="15.0" fill="rgb(246,79,17)" rx="2" ry="2" />
<text  x="819.87" y="1023.5" ></text>
</g>
<g >
<title>futex_wake (5 samples, 0.01%)</title><rect x="1040.5" y="773" width="0.1" height="15.0" fill="rgb(248,148,49)" rx="2" ry="2" />
<text  x="1043.47" y="783.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (5 samples, 0.01%)</title><rect x="995.2" y="1237" width="0.1" height="15.0" fill="rgb(211,142,32)" rx="2" ry="2" />
<text  x="998.21" y="1247.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (5 samples, 0.01%)</title><rect x="1021.0" y="1461" width="0.1" height="15.0" fill="rgb(208,93,16)" rx="2" ry="2" />
<text  x="1024.01" y="1471.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (10 samples, 0.02%)</title><rect x="999.6" y="901" width="0.2" height="15.0" fill="rgb(229,47,37)" rx="2" ry="2" />
<text  x="1002.60" y="911.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (9 samples, 0.02%)</title><rect x="1049.5" y="1413" width="0.2" height="15.0" fill="rgb(243,87,45)" rx="2" ry="2" />
<text  x="1052.53" y="1423.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.02%)</title><rect x="999.6" y="869" width="0.2" height="15.0" fill="rgb(217,26,23)" rx="2" ry="2" />
<text  x="1002.60" y="879.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (719 samples, 1.29%)</title><rect x="641.8" y="1237" width="15.3" height="15.0" fill="rgb(212,65,1)" rx="2" ry="2" />
<text  x="644.83" y="1247.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (17 samples, 0.03%)</title><rect x="1025.4" y="1461" width="0.4" height="15.0" fill="rgb(210,111,26)" rx="2" ry="2" />
<text  x="1028.43" y="1471.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.01%)</title><rect x="200.0" y="1301" width="0.1" height="15.0" fill="rgb(236,135,41)" rx="2" ry="2" />
<text  x="203.01" y="1311.5" ></text>
</g>
<g >
<title>std::panicking::try (11 samples, 0.02%)</title><rect x="1036.9" y="1381" width="0.2" height="15.0" fill="rgb(217,223,10)" rx="2" ry="2" />
<text  x="1039.91" y="1391.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (14 samples, 0.03%)</title><rect x="1049.7" y="1061" width="0.3" height="15.0" fill="rgb(233,149,20)" rx="2" ry="2" />
<text  x="1052.72" y="1071.5" ></text>
</g>
<g >
<title>bincode::config::legacy::Config::serialized_size (60 samples, 0.11%)</title><rect x="998.7" y="1509" width="1.3" height="15.0" fill="rgb(236,204,9)" rx="2" ry="2" />
<text  x="1001.71" y="1519.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (48 samples, 0.09%)</title><rect x="1014.2" y="1445" width="1.0" height="15.0" fill="rgb(251,13,10)" rx="2" ry="2" />
<text  x="1017.16" y="1455.5" ></text>
</g>
<g >
<title>tsdn_tsd (15 samples, 0.03%)</title><rect x="72.1" y="1493" width="0.3" height="15.0" fill="rgb(215,112,49)" rx="2" ry="2" />
<text  x="75.13" y="1503.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (6 samples, 0.01%)</title><rect x="1027.4" y="1237" width="0.2" height="15.0" fill="rgb(210,121,42)" rx="2" ry="2" />
<text  x="1030.44" y="1247.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.01%)</title><rect x="998.5" y="917" width="0.1" height="15.0" fill="rgb(225,59,39)" rx="2" ry="2" />
<text  x="1001.48" y="927.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::get (7 samples, 0.01%)</title><rect x="851.2" y="1093" width="0.1" height="15.0" fill="rgb(228,145,54)" rx="2" ry="2" />
<text  x="854.20" y="1103.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 0.02%)</title><rect x="1054.0" y="1077" width="0.3" height="15.0" fill="rgb(222,84,0)" rx="2" ry="2" />
<text  x="1057.01" y="1087.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (11 samples, 0.02%)</title><rect x="1036.9" y="1269" width="0.2" height="15.0" fill="rgb(212,204,36)" rx="2" ry="2" />
<text  x="1039.91" y="1279.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (45 samples, 0.08%)</title><rect x="350.1" y="1253" width="0.9" height="15.0" fill="rgb(232,91,17)" rx="2" ry="2" />
<text  x="353.05" y="1263.5" ></text>
</g>
<g >
<title>&lt;tokio_sync::task::atomic_task::CurrentTask as tokio_sync::task::atomic_task::Register&gt;::register (11 samples, 0.02%)</title><rect x="1011.6" y="1429" width="0.2" height="15.0" fill="rgb(215,39,18)" rx="2" ry="2" />
<text  x="1014.61" y="1439.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (21 samples, 0.04%)</title><rect x="1056.3" y="1173" width="0.4" height="15.0" fill="rgb(242,161,41)" rx="2" ry="2" />
<text  x="1059.26" y="1183.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (11 samples, 0.02%)</title><rect x="1059.1" y="1461" width="0.2" height="15.0" fill="rgb(245,132,1)" rx="2" ry="2" />
<text  x="1062.06" y="1471.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (10 samples, 0.02%)</title><rect x="1051.4" y="1317" width="0.2" height="15.0" fill="rgb(232,11,49)" rx="2" ry="2" />
<text  x="1054.38" y="1327.5" ></text>
</g>
<g >
<title>noria::trace_next_op (7 samples, 0.01%)</title><rect x="189.2" y="1237" width="0.2" height="15.0" fill="rgb(250,5,33)" rx="2" ry="2" />
<text  x="192.24" y="1247.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (5 samples, 0.01%)</title><rect x="1047.2" y="1269" width="0.1" height="15.0" fill="rgb(249,165,4)" rx="2" ry="2" />
<text  x="1050.18" y="1279.5" ></text>
</g>
<g >
<title>&lt;tokio_reactor::Handle as tokio_executor::park::Unpark&gt;::unpark (10 samples, 0.02%)</title><rect x="1056.3" y="965" width="0.3" height="15.0" fill="rgb(216,177,39)" rx="2" ry="2" />
<text  x="1059.34" y="975.5" ></text>
</g>
<g >
<title>__libc_send (5 samples, 0.01%)</title><rect x="995.2" y="1221" width="0.1" height="15.0" fill="rgb(216,132,45)" rx="2" ry="2" />
<text  x="998.21" y="1231.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (5 samples, 0.01%)</title><rect x="1056.0" y="1029" width="0.1" height="15.0" fill="rgb(208,130,44)" rx="2" ry="2" />
<text  x="1058.96" y="1039.5" ></text>
</g>
<g >
<title>bincode::internal::serialized_size (19 samples, 0.03%)</title><rect x="1045.8" y="1237" width="0.4" height="15.0" fill="rgb(224,44,17)" rx="2" ry="2" />
<text  x="1048.80" y="1247.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (72 samples, 0.13%)</title><rect x="1027.4" y="1525" width="1.6" height="15.0" fill="rgb(233,139,39)" rx="2" ry="2" />
<text  x="1030.44" y="1535.5" ></text>
</g>
<g >
<title>finish_task_switch (33 samples, 0.06%)</title><rect x="1105.2" y="757" width="0.7" height="15.0" fill="rgb(211,90,14)" rx="2" ry="2" />
<text  x="1108.19" y="767.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="1059.7" y="1237" width="0.2" height="15.0" fill="rgb(211,161,39)" rx="2" ry="2" />
<text  x="1062.72" y="1247.5" ></text>
</g>
<g >
<title>_rjem_mallocx (16 samples, 0.03%)</title><rect x="228.3" y="1253" width="0.4" height="15.0" fill="rgb(249,171,39)" rx="2" ry="2" />
<text  x="231.34" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (174 samples, 0.31%)</title><rect x="1053.0" y="1429" width="3.7" height="15.0" fill="rgb(222,173,25)" rx="2" ry="2" />
<text  x="1056.01" y="1439.5" ></text>
</g>
<g >
<title>chan::tick_ms::_$u7b$$u7b$closure$u7d$$u7d$::h664911cf7babd179 (11 samples, 0.02%)</title><rect x="977.1" y="1381" width="0.2" height="15.0" fill="rgb(208,43,6)" rx="2" ry="2" />
<text  x="980.07" y="1391.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (13 samples, 0.02%)</title><rect x="1083.3" y="981" width="0.3" height="15.0" fill="rgb(248,221,48)" rx="2" ry="2" />
<text  x="1086.29" y="991.5" ></text>
</g>
<g >
<title>serde::de::SeqAccess::next_element (144 samples, 0.26%)</title><rect x="1000.0" y="1077" width="3.0" height="15.0" fill="rgb(245,115,5)" rx="2" ry="2" />
<text  x="1002.99" y="1087.5" ></text>
</g>
<g >
<title>new_sync_write (56 samples, 0.10%)</title><rect x="1145.0" y="693" width="1.1" height="15.0" fill="rgb(223,124,54)" rx="2" ry="2" />
<text  x="1147.95" y="703.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (27 samples, 0.05%)</title><rect x="1030.5" y="933" width="0.5" height="15.0" fill="rgb(209,89,15)" rx="2" ry="2" />
<text  x="1033.48" y="943.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (14 samples, 0.03%)</title><rect x="1091.1" y="885" width="0.3" height="15.0" fill="rgb(217,116,24)" rx="2" ry="2" />
<text  x="1094.14" y="895.5" ></text>
</g>
<g >
<title>core::mem::take (6 samples, 0.01%)</title><rect x="1008.1" y="1381" width="0.2" height="15.0" fill="rgb(245,70,48)" rx="2" ry="2" />
<text  x="1011.13" y="1391.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::worker::Worker&lt;T,Request&gt; as futures::future::Future&gt;::poll (470 samples, 0.85%)</title><rect x="1004.1" y="1589" width="10.0" height="15.0" fill="rgb(208,153,33)" rx="2" ry="2" />
<text  x="1007.10" y="1599.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (236 samples, 0.42%)</title><rect x="217.5" y="1301" width="5.0" height="15.0" fill="rgb(214,31,0)" rx="2" ry="2" />
<text  x="220.46" y="1311.5" ></text>
</g>
<g >
<title>tokio_reactor::registration::Registration::take_read_ready (18 samples, 0.03%)</title><rect x="1054.8" y="1141" width="0.4" height="15.0" fill="rgb(254,52,19)" rx="2" ry="2" />
<text  x="1057.77" y="1151.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (12 samples, 0.02%)</title><rect x="995.3" y="1589" width="0.3" height="15.0" fill="rgb(218,86,45)" rx="2" ry="2" />
<text  x="998.32" y="1599.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get (17 samples, 0.03%)</title><rect x="1088.5" y="933" width="0.4" height="15.0" fill="rgb(244,119,0)" rx="2" ry="2" />
<text  x="1091.51" y="943.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (6 samples, 0.01%)</title><rect x="197.0" y="1349" width="0.2" height="15.0" fill="rgb(243,180,11)" rx="2" ry="2" />
<text  x="200.04" y="1359.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.02%)</title><rect x="193.3" y="1205" width="0.3" height="15.0" fill="rgb(237,154,28)" rx="2" ry="2" />
<text  x="196.33" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (25 samples, 0.04%)</title><rect x="1026.9" y="997" width="0.5" height="15.0" fill="rgb(235,54,45)" rx="2" ry="2" />
<text  x="1029.91" y="1007.5" ></text>
</g>
<g >
<title>&lt;futures::future::then::Then&lt;A,B,F&gt; as futures::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="188.7" y="1269" width="0.3" height="15.0" fill="rgb(236,107,33)" rx="2" ry="2" />
<text  x="191.73" y="1279.5" ></text>
</g>
<g >
<title>zookeeper::io::ZkIo::ready_zk (5 samples, 0.01%)</title><rect x="992.8" y="1413" width="0.1" height="15.0" fill="rgb(231,107,21)" rx="2" ry="2" />
<text  x="995.81" y="1423.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (9 samples, 0.02%)</title><rect x="1051.4" y="1253" width="0.2" height="15.0" fill="rgb(215,45,46)" rx="2" ry="2" />
<text  x="1054.38" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (37 samples, 0.07%)</title><rect x="186.3" y="1557" width="0.7" height="15.0" fill="rgb(219,188,39)" rx="2" ry="2" />
<text  x="189.26" y="1567.5" ></text>
</g>
<g >
<title>crossbeam_epoch::internal::Global::collect (75 samples, 0.13%)</title><rect x="1186.5" y="901" width="1.5" height="15.0" fill="rgb(208,96,9)" rx="2" ry="2" />
<text  x="1189.46" y="911.5" ></text>
</g>
<g >
<title>core::ptr::read (67 samples, 0.12%)</title><rect x="592.5" y="1029" width="1.4" height="15.0" fill="rgb(233,50,44)" rx="2" ry="2" />
<text  x="595.52" y="1039.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_leaf (15 samples, 0.03%)</title><rect x="651.1" y="1125" width="0.3" height="15.0" fill="rgb(237,81,35)" rx="2" ry="2" />
<text  x="654.11" y="1135.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.01%)</title><rect x="1030.3" y="1461" width="0.2" height="15.0" fill="rgb(219,34,33)" rx="2" ry="2" />
<text  x="1033.33" y="1471.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (29 samples, 0.05%)</title><rect x="1119.9" y="981" width="0.7" height="15.0" fill="rgb(247,55,22)" rx="2" ry="2" />
<text  x="1122.94" y="991.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::ok (32 samples, 0.06%)</title><rect x="737.0" y="1253" width="0.7" height="15.0" fill="rgb(208,131,43)" rx="2" ry="2" />
<text  x="739.98" y="1263.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1041.1" y="741" width="0.1" height="15.0" fill="rgb(227,77,9)" rx="2" ry="2" />
<text  x="1044.09" y="751.5" ></text>
</g>
<g >
<title>core::num::wrapping::&lt;impl core::ops::bit::Shr&lt;usize&gt; for core::num::Wrapping&lt;u64&gt;&gt;::shr (58 samples, 0.10%)</title><rect x="581.5" y="1093" width="1.2" height="15.0" fill="rgb(244,102,19)" rx="2" ry="2" />
<text  x="584.47" y="1103.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (7 samples, 0.01%)</title><rect x="1056.7" y="1557" width="0.2" height="15.0" fill="rgb(228,95,39)" rx="2" ry="2" />
<text  x="1059.70" y="1567.5" ></text>
</g>
<g >
<title>std::panicking::try (8 samples, 0.01%)</title><rect x="1033.2" y="1285" width="0.2" height="15.0" fill="rgb(253,228,50)" rx="2" ry="2" />
<text  x="1036.24" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (6 samples, 0.01%)</title><rect x="1033.8" y="1301" width="0.1" height="15.0" fill="rgb(252,85,47)" rx="2" ry="2" />
<text  x="1036.81" y="1311.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (5 samples, 0.01%)</title><rect x="1035.0" y="1093" width="0.1" height="15.0" fill="rgb(222,118,22)" rx="2" ry="2" />
<text  x="1037.95" y="1103.5" ></text>
</g>
<g >
<title>&lt;noria::_::&lt;impl serde::de::Deserialize for noria::Tagged&lt;T&gt;&gt;::deserialize::__Visitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (24 samples, 0.04%)</title><rect x="1046.6" y="1141" width="0.5" height="15.0" fill="rgb(210,132,51)" rx="2" ry="2" />
<text  x="1049.60" y="1151.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (20 samples, 0.04%)</title><rect x="1029.0" y="1029" width="0.4" height="15.0" fill="rgb(212,52,27)" rx="2" ry="2" />
<text  x="1031.97" y="1039.5" ></text>
</g>
<g >
<title>async_bincode::reader::AsyncBincodeReader&lt;R,T&gt;::fill (5 samples, 0.01%)</title><rect x="1051.1" y="965" width="0.2" height="15.0" fill="rgb(211,10,7)" rx="2" ry="2" />
<text  x="1054.14" y="975.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (16 samples, 0.03%)</title><rect x="998.8" y="933" width="0.3" height="15.0" fill="rgb(245,91,9)" rx="2" ry="2" />
<text  x="1001.80" y="943.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_ptr (10 samples, 0.02%)</title><rect x="551.6" y="1221" width="0.2" height="15.0" fill="rgb(214,169,7)" rx="2" ry="2" />
<text  x="554.63" y="1231.5" ></text>
</g>
<g >
<title>__GI___pthread_mutexattr_init (56 samples, 0.10%)</title><rect x="240.4" y="1285" width="1.2" height="15.0" fill="rgb(228,118,20)" rx="2" ry="2" />
<text  x="243.44" y="1295.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.01%)</title><rect x="1026.3" y="1173" width="0.2" height="15.0" fill="rgb(220,27,14)" rx="2" ry="2" />
<text  x="1029.30" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (11 samples, 0.02%)</title><rect x="198.6" y="1237" width="0.3" height="15.0" fill="rgb(229,23,16)" rx="2" ry="2" />
<text  x="201.64" y="1247.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap_or (7 samples, 0.01%)</title><rect x="1115.8" y="965" width="0.2" height="15.0" fill="rgb(236,53,26)" rx="2" ry="2" />
<text  x="1118.82" y="975.5" ></text>
</g>
<g >
<title>chrono::naive::datetime::serde::&lt;impl serde::ser::Serialize for chrono::naive::datetime::NaiveDateTime&gt;::serialize (19 samples, 0.03%)</title><rect x="997.6" y="1141" width="0.4" height="15.0" fill="rgb(244,75,54)" rx="2" ry="2" />
<text  x="1000.61" y="1151.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (19 samples, 0.03%)</title><rect x="1045.8" y="981" width="0.4" height="15.0" fill="rgb(236,5,51)" rx="2" ry="2" />
<text  x="1048.80" y="991.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (28 samples, 0.05%)</title><rect x="359.1" y="1237" width="0.6" height="15.0" fill="rgb(237,192,38)" rx="2" ry="2" />
<text  x="362.11" y="1247.5" ></text>
</g>
<g >
<title>main (8 samples, 0.01%)</title><rect x="990.9" y="1573" width="0.2" height="15.0" fill="rgb(247,104,44)" rx="2" ry="2" />
<text  x="993.92" y="1583.5" ></text>
</g>
<g >
<title>&lt;tokio_sync::oneshot::Receiver&lt;T&gt; as futures::future::Future&gt;::poll (36 samples, 0.06%)</title><rect x="181.1" y="1445" width="0.8" height="15.0" fill="rgb(220,141,11)" rx="2" ry="2" />
<text  x="184.13" y="1455.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (20 samples, 0.04%)</title><rect x="1036.5" y="1429" width="0.4" height="15.0" fill="rgb(224,40,53)" rx="2" ry="2" />
<text  x="1039.48" y="1439.5" ></text>
</g>
<g >
<title>futures::task_impl::current (14 samples, 0.03%)</title><rect x="182.8" y="1413" width="0.3" height="15.0" fill="rgb(206,49,41)" rx="2" ry="2" />
<text  x="185.85" y="1423.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::fmt_u64 (13 samples, 0.02%)</title><rect x="999.2" y="901" width="0.3" height="15.0" fill="rgb(208,108,36)" rx="2" ry="2" />
<text  x="1002.18" y="911.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNotInner&lt;T&gt;&gt;::serialize (6 samples, 0.01%)</title><rect x="1027.4" y="1173" width="0.2" height="15.0" fill="rgb(208,156,43)" rx="2" ry="2" />
<text  x="1030.44" y="1183.5" ></text>
</g>
<g >
<title>noria::trace_next_op::_$u7b$$u7b$closure$u7d$$u7d$::h227f9057632b2d41 (5 samples, 0.01%)</title><rect x="189.3" y="1189" width="0.1" height="15.0" fill="rgb(220,112,52)" rx="2" ry="2" />
<text  x="192.28" y="1199.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::fmt_u64 (8 samples, 0.01%)</title><rect x="998.3" y="901" width="0.1" height="15.0" fill="rgb(239,105,36)" rx="2" ry="2" />
<text  x="1001.27" y="911.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h1e333f0842b39e4b (47 samples, 0.08%)</title><rect x="1048.0" y="1077" width="1.0" height="15.0" fill="rgb(214,164,36)" rx="2" ry="2" />
<text  x="1050.96" y="1087.5" ></text>
</g>
<g >
<title>tower_buffer::worker::Worker&lt;T,Request&gt;::poll_next_msg (5 samples, 0.01%)</title><rect x="1024.5" y="1509" width="0.1" height="15.0" fill="rgb(226,201,52)" rx="2" ry="2" />
<text  x="1027.54" y="1519.5" ></text>
</g>
<g >
<title>futures::task_impl::core::BorrowedUnpark::to_owned (12 samples, 0.02%)</title><rect x="1058.8" y="1173" width="0.2" height="15.0" fill="rgb(224,156,36)" rx="2" ry="2" />
<text  x="1061.78" y="1183.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (13 samples, 0.02%)</title><rect x="1044.9" y="981" width="0.3" height="15.0" fill="rgb(220,147,19)" rx="2" ry="2" />
<text  x="1047.93" y="991.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (6 samples, 0.01%)</title><rect x="1026.7" y="757" width="0.1" height="15.0" fill="rgb(208,165,34)" rx="2" ry="2" />
<text  x="1029.72" y="767.5" ></text>
</g>
<g >
<title>__fget_light (8 samples, 0.01%)</title><rect x="1079.9" y="805" width="0.1" height="15.0" fill="rgb(227,128,16)" rx="2" ry="2" />
<text  x="1082.87" y="815.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.01%)</title><rect x="1021.0" y="1349" width="0.1" height="15.0" fill="rgb(215,103,39)" rx="2" ry="2" />
<text  x="1024.01" y="1359.5" ></text>
</g>
<g >
<title>&lt;async_bincode::reader::AsyncBincodeReader&lt;R,T&gt; as futures::stream::Stream&gt;::poll (52 samples, 0.09%)</title><rect x="1054.3" y="1253" width="1.1" height="15.0" fill="rgb(205,19,39)" rx="2" ry="2" />
<text  x="1057.28" y="1263.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::enqueue_node (6 samples, 0.01%)</title><rect x="1144.3" y="885" width="0.2" height="15.0" fill="rgb(219,218,27)" rx="2" ry="2" />
<text  x="1147.34" y="895.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit::_$u7b$$u7b$closure$u7d$$u7d$::h83d517d17b1a75b2 (6 samples, 0.01%)</title><rect x="1024.8" y="1285" width="0.1" height="15.0" fill="rgb(254,89,2)" rx="2" ry="2" />
<text  x="1027.79" y="1295.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::add (22 samples, 0.04%)</title><rect x="437.2" y="1269" width="0.5" height="15.0" fill="rgb(252,29,20)" rx="2" ry="2" />
<text  x="440.22" y="1279.5" ></text>
</g>
<g >
<title>__rust_alloc (6 samples, 0.01%)</title><rect x="229.6" y="1285" width="0.1" height="15.0" fill="rgb(239,97,21)" rx="2" ry="2" />
<text  x="232.57" y="1295.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (12 samples, 0.02%)</title><rect x="817.2" y="997" width="0.3" height="15.0" fill="rgb(254,32,20)" rx="2" ry="2" />
<text  x="820.23" y="1007.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (8 samples, 0.01%)</title><rect x="193.9" y="1541" width="0.2" height="15.0" fill="rgb(254,85,21)" rx="2" ry="2" />
<text  x="196.90" y="1551.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current::_$u7b$$u7b$closure$u7d$$u7d$::ha0f99f248e8a20fc (5 samples, 0.01%)</title><rect x="180.7" y="1509" width="0.1" height="15.0" fill="rgb(245,171,24)" rx="2" ry="2" />
<text  x="183.73" y="1519.5" ></text>
</g>
<g >
<title>tokio_sync::task::atomic_task::AtomicTask::do_register::_$u7b$$u7b$closure$u7d$$u7d$::h5cc89d43b8507865 (25 samples, 0.04%)</title><rect x="1012.5" y="1445" width="0.5" height="15.0" fill="rgb(242,86,35)" rx="2" ry="2" />
<text  x="1015.48" y="1455.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (6 samples, 0.01%)</title><rect x="1022.2" y="1301" width="0.1" height="15.0" fill="rgb(208,143,10)" rx="2" ry="2" />
<text  x="1025.20" y="1311.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (5 samples, 0.01%)</title><rect x="983.6" y="1157" width="0.2" height="15.0" fill="rgb(223,111,43)" rx="2" ry="2" />
<text  x="986.65" y="1167.5" ></text>
</g>
<g >
<title>core::ptr::read (43 samples, 0.08%)</title><rect x="652.3" y="1141" width="0.9" height="15.0" fill="rgb(241,181,4)" rx="2" ry="2" />
<text  x="655.29" y="1151.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="1034.4" y="1205" width="0.2" height="15.0" fill="rgb(205,125,15)" rx="2" ry="2" />
<text  x="1037.36" y="1215.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (12 samples, 0.02%)</title><rect x="762.0" y="1109" width="0.3" height="15.0" fill="rgb(249,78,9)" rx="2" ry="2" />
<text  x="765.04" y="1119.5" ></text>
</g>
<g >
<title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::flush (23 samples, 0.04%)</title><rect x="1131.1" y="613" width="0.5" height="15.0" fill="rgb(208,115,40)" rx="2" ry="2" />
<text  x="1134.10" y="623.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts (24 samples, 0.04%)</title><rect x="650.2" y="1125" width="0.5" height="15.0" fill="rgb(213,199,27)" rx="2" ry="2" />
<text  x="653.24" y="1135.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (215 samples, 0.39%)</title><rect x="1149.7" y="901" width="4.6" height="15.0" fill="rgb(223,30,33)" rx="2" ry="2" />
<text  x="1152.73" y="911.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (5 samples, 0.01%)</title><rect x="1008.2" y="1333" width="0.1" height="15.0" fill="rgb(228,138,36)" rx="2" ry="2" />
<text  x="1011.15" y="1343.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (23 samples, 0.04%)</title><rect x="1057.6" y="1221" width="0.5" height="15.0" fill="rgb(233,100,35)" rx="2" ry="2" />
<text  x="1060.59" y="1231.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::new (14 samples, 0.03%)</title><rect x="226.9" y="1301" width="0.3" height="15.0" fill="rgb(243,55,8)" rx="2" ry="2" />
<text  x="229.88" y="1311.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (15 samples, 0.03%)</title><rect x="10.7" y="1045" width="0.3" height="15.0" fill="rgb(247,129,50)" rx="2" ry="2" />
<text  x="13.66" y="1055.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (20 samples, 0.04%)</title><rect x="1036.5" y="1493" width="0.4" height="15.0" fill="rgb(229,183,2)" rx="2" ry="2" />
<text  x="1039.48" y="1503.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (6 samples, 0.01%)</title><rect x="189.1" y="1189" width="0.1" height="15.0" fill="rgb(223,224,42)" rx="2" ry="2" />
<text  x="192.09" y="1199.5" ></text>
</g>
<g >
<title>chrono::offset::fixed::&lt;impl core::ops::arith::Sub&lt;chrono::offset::fixed::FixedOffset&gt; for chrono::naive::datetime::NaiveDateTime&gt;::sub (11 samples, 0.02%)</title><rect x="978.1" y="1189" width="0.2" height="15.0" fill="rgb(207,198,31)" rx="2" ry="2" />
<text  x="981.09" y="1199.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (35 samples, 0.06%)</title><rect x="1051.9" y="1397" width="0.7" height="15.0" fill="rgb(210,48,48)" rx="2" ry="2" />
<text  x="1054.87" y="1407.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_str (19 samples, 0.03%)</title><rect x="997.6" y="1125" width="0.4" height="15.0" fill="rgb(248,169,30)" rx="2" ry="2" />
<text  x="1000.61" y="1135.5" ></text>
</g>
<g >
<title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (6,163 samples, 11.08%)</title><rect x="725.0" y="1285" width="130.8" height="15.0" fill="rgb(230,90,31)" rx="2" ry="2" />
<text  x="728.01" y="1295.5" >&lt;alloc::collecti..</text>
</g>
<g >
<title>mio::poll::RegistrationInner::set_readiness (27 samples, 0.05%)</title><rect x="1028.4" y="981" width="0.6" height="15.0" fill="rgb(241,77,40)" rx="2" ry="2" />
<text  x="1031.40" y="991.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (9 samples, 0.02%)</title><rect x="997.2" y="1157" width="0.2" height="15.0" fill="rgb(206,227,17)" rx="2" ry="2" />
<text  x="1000.16" y="1167.5" ></text>
</g>
<g >
<title>tokio_executor::global::with_default::_$u7b$$u7b$closure$u7d$$u7d$::ha80fbdab9b554b03 (17 samples, 0.03%)</title><rect x="1025.4" y="1253" width="0.4" height="15.0" fill="rgb(219,185,53)" rx="2" ry="2" />
<text  x="1028.43" y="1263.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (67 samples, 0.12%)</title><rect x="187.0" y="1445" width="1.5" height="15.0" fill="rgb(231,159,19)" rx="2" ry="2" />
<text  x="190.05" y="1455.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (50 samples, 0.09%)</title><rect x="192.8" y="1333" width="1.1" height="15.0" fill="rgb(228,21,16)" rx="2" ry="2" />
<text  x="195.84" y="1343.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (13 samples, 0.02%)</title><rect x="1148.9" y="965" width="0.3" height="15.0" fill="rgb(249,62,1)" rx="2" ry="2" />
<text  x="1151.88" y="975.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (442 samples, 0.79%)</title><rect x="422.3" y="1301" width="9.3" height="15.0" fill="rgb(237,41,27)" rx="2" ry="2" />
<text  x="425.26" y="1311.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (8 samples, 0.01%)</title><rect x="194.5" y="1333" width="0.2" height="15.0" fill="rgb(251,131,5)" rx="2" ry="2" />
<text  x="197.54" y="1343.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (36 samples, 0.06%)</title><rect x="1188.2" y="885" width="0.8" height="15.0" fill="rgb(221,189,52)" rx="2" ry="2" />
<text  x="1191.22" y="895.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (13 samples, 0.02%)</title><rect x="1051.6" y="1285" width="0.3" height="15.0" fill="rgb(208,158,43)" rx="2" ry="2" />
<text  x="1054.59" y="1295.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new (87 samples, 0.16%)</title><rect x="688.0" y="1205" width="1.9" height="15.0" fill="rgb(234,93,47)" rx="2" ry="2" />
<text  x="691.01" y="1215.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNot&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1044.5" y="1301" width="0.1" height="15.0" fill="rgb(227,158,42)" rx="2" ry="2" />
<text  x="1047.48" y="1311.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (8 samples, 0.01%)</title><rect x="1026.3" y="1077" width="0.2" height="15.0" fill="rgb(246,162,40)" rx="2" ry="2" />
<text  x="1029.30" y="1087.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (8 samples, 0.01%)</title><rect x="1033.2" y="1157" width="0.2" height="15.0" fill="rgb(219,174,39)" rx="2" ry="2" />
<text  x="1036.24" y="1167.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1033.2" y="1061" width="0.2" height="15.0" fill="rgb(245,205,36)" rx="2" ry="2" />
<text  x="1036.24" y="1071.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (11 samples, 0.02%)</title><rect x="1059.1" y="1269" width="0.2" height="15.0" fill="rgb(240,19,2)" rx="2" ry="2" />
<text  x="1062.06" y="1279.5" ></text>
</g>
<g >
<title>core::fmt::write (19 samples, 0.03%)</title><rect x="997.6" y="981" width="0.4" height="15.0" fill="rgb(242,181,42)" rx="2" ry="2" />
<text  x="1000.61" y="991.5" ></text>
</g>
<g >
<title>futures::task_impl::current::_$u7b$$u7b$closure$u7d$$u7d$::hb88041a16b038a29 (12 samples, 0.02%)</title><rect x="1012.7" y="1381" width="0.3" height="15.0" fill="rgb(246,32,9)" rx="2" ry="2" />
<text  x="1015.74" y="1391.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (39 samples, 0.07%)</title><rect x="722.6" y="1285" width="0.8" height="15.0" fill="rgb(208,85,29)" rx="2" ry="2" />
<text  x="725.59" y="1295.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="1025.4" y="789" width="0.2" height="15.0" fill="rgb(210,17,31)" rx="2" ry="2" />
<text  x="1028.43" y="799.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (19 samples, 0.03%)</title><rect x="1025.8" y="1525" width="0.4" height="15.0" fill="rgb(233,21,45)" rx="2" ry="2" />
<text  x="1028.79" y="1535.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (356 samples, 0.64%)</title><rect x="554.2" y="1301" width="7.6" height="15.0" fill="rgb(225,106,20)" rx="2" ry="2" />
<text  x="557.24" y="1311.5" ></text>
</g>
<g >
<title>tokio_tower::mediator::Receiver&lt;T&gt;::try_recv (6 samples, 0.01%)</title><rect x="1036.8" y="1029" width="0.1" height="15.0" fill="rgb(235,53,44)" rx="2" ry="2" />
<text  x="1039.78" y="1039.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold::ok::_$u7b$$u7b$closure$u7d$$u7d$::he97c81033158c625 (2,953 samples, 5.31%)</title><rect x="790.2" y="1221" width="62.6" height="15.0" fill="rgb(219,163,54)" rx="2" ry="2" />
<text  x="793.17" y="1231.5" >core::..</text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (8 samples, 0.01%)</title><rect x="1025.6" y="1045" width="0.2" height="15.0" fill="rgb(244,214,40)" rx="2" ry="2" />
<text  x="1028.62" y="1055.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (144 samples, 0.26%)</title><rect x="1000.0" y="1429" width="3.0" height="15.0" fill="rgb(237,117,45)" rx="2" ry="2" />
<text  x="1002.99" y="1439.5" ></text>
</g>
<g >
<title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (5 samples, 0.01%)</title><rect x="1025.0" y="1509" width="0.1" height="15.0" fill="rgb(225,142,33)" rx="2" ry="2" />
<text  x="1027.96" y="1519.5" ></text>
</g>
<g >
<title>mio::poll::SetReadiness::set_readiness (126 samples, 0.23%)</title><rect x="1143.7" y="965" width="2.7" height="15.0" fill="rgb(250,87,0)" rx="2" ry="2" />
<text  x="1146.70" y="975.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (99 samples, 0.18%)</title><rect x="731.5" y="1253" width="2.1" height="15.0" fill="rgb(244,159,3)" rx="2" ry="2" />
<text  x="734.52" y="1263.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (13 samples, 0.02%)</title><rect x="1033.4" y="1093" width="0.3" height="15.0" fill="rgb(211,196,15)" rx="2" ry="2" />
<text  x="1036.41" y="1103.5" ></text>
</g>
<g >
<title>dynamic_opts_init (55 samples, 0.10%)</title><rect x="15.1" y="1573" width="1.1" height="15.0" fill="rgb(254,181,52)" rx="2" ry="2" />
<text  x="18.05" y="1583.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Selector::reregister (5 samples, 0.01%)</title><rect x="994.1" y="1237" width="0.1" height="15.0" fill="rgb(235,136,48)" rx="2" ry="2" />
<text  x="997.11" y="1247.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (25 samples, 0.04%)</title><rect x="767.8" y="1109" width="0.6" height="15.0" fill="rgb(234,104,21)" rx="2" ry="2" />
<text  x="770.83" y="1119.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Write&gt;::write (8 samples, 0.01%)</title><rect x="983.8" y="1093" width="0.1" height="15.0" fill="rgb(208,166,36)" rx="2" ry="2" />
<text  x="986.75" y="1103.5" ></text>
</g>
<g >
<title>tokio_sync::task::atomic_task::AtomicTask::register (14 samples, 0.03%)</title><rect x="1011.5" y="1493" width="0.3" height="15.0" fill="rgb(242,71,52)" rx="2" ry="2" />
<text  x="1014.55" y="1503.5" ></text>
</g>
<g >
<title>alloc::rc::RcBoxPtr::strong (111 samples, 0.20%)</title><rect x="620.0" y="1205" width="2.4" height="15.0" fill="rgb(238,63,3)" rx="2" ry="2" />
<text  x="623.00" y="1215.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="991.1" y="1541" width="0.1" height="15.0" fill="rgb(212,181,26)" rx="2" ry="2" />
<text  x="994.14" y="1551.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (11 samples, 0.02%)</title><rect x="1005.5" y="1349" width="0.2" height="15.0" fill="rgb(208,216,39)" rx="2" ry="2" />
<text  x="1008.50" y="1359.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (10 samples, 0.02%)</title><rect x="995.3" y="1093" width="0.2" height="15.0" fill="rgb(219,132,40)" rx="2" ry="2" />
<text  x="998.32" y="1103.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::first_ptr_mut (9 samples, 0.02%)</title><rect x="360.3" y="1253" width="0.2" height="15.0" fill="rgb(234,183,2)" rx="2" ry="2" />
<text  x="363.28" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (15 samples, 0.03%)</title><rect x="194.7" y="1429" width="0.3" height="15.0" fill="rgb(211,56,24)" rx="2" ry="2" />
<text  x="197.71" y="1439.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (127 samples, 0.23%)</title><rect x="1140.5" y="1013" width="2.7" height="15.0" fill="rgb(236,142,2)" rx="2" ry="2" />
<text  x="1143.50" y="1023.5" ></text>
</g>
<g >
<title>tokio_reactor::HandlePriv::wakeup (11 samples, 0.02%)</title><rect x="1028.1" y="1061" width="0.2" height="15.0" fill="rgb(225,143,50)" rx="2" ry="2" />
<text  x="1031.06" y="1071.5" ></text>
</g>
<g >
<title>_rjem_je_tcache_alloc_small_hard (5 samples, 0.01%)</title><rect x="1017.9" y="1493" width="0.1" height="15.0" fill="rgb(246,210,24)" rx="2" ry="2" />
<text  x="1020.89" y="1503.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (11 samples, 0.02%)</title><rect x="1045.6" y="1077" width="0.2" height="15.0" fill="rgb(239,226,32)" rx="2" ry="2" />
<text  x="1048.56" y="1087.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 0.02%)</title><rect x="1015.2" y="1525" width="0.2" height="15.0" fill="rgb(228,19,44)" rx="2" ry="2" />
<text  x="1018.18" y="1535.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (7 samples, 0.01%)</title><rect x="964.9" y="1237" width="0.2" height="15.0" fill="rgb(244,99,18)" rx="2" ry="2" />
<text  x="967.93" y="1247.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.01%)</title><rect x="1057.9" y="1125" width="0.1" height="15.0" fill="rgb(206,143,2)" rx="2" ry="2" />
<text  x="1060.89" y="1135.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (32 samples, 0.06%)</title><rect x="1031.8" y="1253" width="0.7" height="15.0" fill="rgb(238,148,0)" rx="2" ry="2" />
<text  x="1034.79" y="1263.5" ></text>
</g>
<g >
<title>noria::table::_::&lt;impl serde::ser::Serialize for noria::table::Input&gt;::serialize (8 samples, 0.01%)</title><rect x="1026.3" y="1189" width="0.2" height="15.0" fill="rgb(215,18,50)" rx="2" ry="2" />
<text  x="1029.30" y="1199.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (13 samples, 0.02%)</title><rect x="194.1" y="1413" width="0.2" height="15.0" fill="rgb(231,146,15)" rx="2" ry="2" />
<text  x="197.07" y="1423.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (11 samples, 0.02%)</title><rect x="1056.9" y="1589" width="0.2" height="15.0" fill="rgb(209,151,37)" rx="2" ry="2" />
<text  x="1059.85" y="1599.5" ></text>
</g>
<g >
<title>rand::os::imp::getrandom_fill_bytes (9 samples, 0.02%)</title><rect x="189.9" y="1509" width="0.2" height="15.0" fill="rgb(243,74,6)" rx="2" ry="2" />
<text  x="192.87" y="1519.5" ></text>
</g>
<g >
<title>inet_sendmsg (12 samples, 0.02%)</title><rect x="1131.3" y="357" width="0.2" height="15.0" fill="rgb(210,73,3)" rx="2" ry="2" />
<text  x="1134.29" y="367.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (14 samples, 0.03%)</title><rect x="1034.9" y="1141" width="0.3" height="15.0" fill="rgb(210,156,26)" rx="2" ry="2" />
<text  x="1037.89" y="1151.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (5 samples, 0.01%)</title><rect x="1024.8" y="1029" width="0.1" height="15.0" fill="rgb(250,178,21)" rx="2" ry="2" />
<text  x="1027.79" y="1039.5" ></text>
</g>
<g >
<title>tracing::span::Span::current (9 samples, 0.02%)</title><rect x="1030.8" y="773" width="0.2" height="15.0" fill="rgb(205,6,37)" rx="2" ry="2" />
<text  x="1033.80" y="783.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::signal_work (5 samples, 0.01%)</title><rect x="997.0" y="1173" width="0.1" height="15.0" fill="rgb(233,152,42)" rx="2" ry="2" />
<text  x="999.95" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.01%)</title><rect x="571.9" y="1109" width="0.1" height="15.0" fill="rgb(241,190,54)" rx="2" ry="2" />
<text  x="574.90" y="1119.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (32 samples, 0.06%)</title><rect x="1037.1" y="1285" width="0.7" height="15.0" fill="rgb(221,76,42)" rx="2" ry="2" />
<text  x="1040.14" y="1295.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (38 samples, 0.07%)</title><rect x="1026.6" y="1285" width="0.8" height="15.0" fill="rgb(230,217,23)" rx="2" ry="2" />
<text  x="1029.64" y="1295.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (6 samples, 0.01%)</title><rect x="598.9" y="1109" width="0.1" height="15.0" fill="rgb(220,39,15)" rx="2" ry="2" />
<text  x="601.86" y="1119.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (15 samples, 0.03%)</title><rect x="1045.2" y="997" width="0.4" height="15.0" fill="rgb(240,121,31)" rx="2" ry="2" />
<text  x="1048.25" y="1007.5" ></text>
</g>
<g >
<title>&lt;char as core::str::pattern::Pattern&gt;::is_prefix_of (6 samples, 0.01%)</title><rect x="1001.9" y="549" width="0.1" height="15.0" fill="rgb(213,89,37)" rx="2" ry="2" />
<text  x="1004.85" y="559.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (46 samples, 0.08%)</title><rect x="1029.0" y="1285" width="0.9" height="15.0" fill="rgb(224,198,4)" rx="2" ry="2" />
<text  x="1031.97" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::current::_$u7b$$u7b$closure$u7d$$u7d$::hb88041a16b038a29 (9 samples, 0.02%)</title><rect x="1013.6" y="1461" width="0.2" height="15.0" fill="rgb(229,169,35)" rx="2" ry="2" />
<text  x="1016.59" y="1471.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessState::effective_readiness (6 samples, 0.01%)</title><rect x="1124.0" y="901" width="0.1" height="15.0" fill="rgb(227,128,38)" rx="2" ry="2" />
<text  x="1127.01" y="911.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (44 samples, 0.08%)</title><rect x="1038.7" y="629" width="1.0" height="15.0" fill="rgb(232,198,22)" rx="2" ry="2" />
<text  x="1041.73" y="639.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (5 samples, 0.01%)</title><rect x="1053.1" y="1189" width="0.1" height="15.0" fill="rgb(220,73,49)" rx="2" ry="2" />
<text  x="1056.07" y="1199.5" ></text>
</g>
<g >
<title>mio::poll::RegistrationInner::set_readiness (22 samples, 0.04%)</title><rect x="1024.0" y="1173" width="0.5" height="15.0" fill="rgb(223,159,47)" rx="2" ry="2" />
<text  x="1027.01" y="1183.5" ></text>
</g>
<g >
<title>rand::reseeding::ReseedingRng&lt;R,Rsdr&gt;::reseed_if_necessary (61 samples, 0.11%)</title><rect x="586.5" y="1141" width="1.3" height="15.0" fill="rgb(231,46,32)" rx="2" ry="2" />
<text  x="589.47" y="1151.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::reborrow_mut (28 samples, 0.05%)</title><rect x="355.1" y="1269" width="0.6" height="15.0" fill="rgb(245,134,0)" rx="2" ry="2" />
<text  x="358.12" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (6 samples, 0.01%)</title><rect x="1031.0" y="965" width="0.2" height="15.0" fill="rgb(226,210,48)" rx="2" ry="2" />
<text  x="1034.05" y="975.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.01%)</title><rect x="195.5" y="1269" width="0.1" height="15.0" fill="rgb(211,119,33)" rx="2" ry="2" />
<text  x="198.45" y="1279.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (52 samples, 0.09%)</title><rect x="473.4" y="1221" width="1.1" height="15.0" fill="rgb(225,118,8)" rx="2" ry="2" />
<text  x="476.38" y="1231.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (399 samples, 0.72%)</title><rect x="977.3" y="1493" width="8.5" height="15.0" fill="rgb(210,180,46)" rx="2" ry="2" />
<text  x="980.30" y="1503.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (13 samples, 0.02%)</title><rect x="1051.6" y="1509" width="0.3" height="15.0" fill="rgb(210,30,39)" rx="2" ry="2" />
<text  x="1054.59" y="1519.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner&lt;T&gt;::poll_recv (26 samples, 0.05%)</title><rect x="182.7" y="1477" width="0.5" height="15.0" fill="rgb(209,154,9)" rx="2" ry="2" />
<text  x="185.68" y="1487.5" ></text>
</g>
<g >
<title>new_sync_write (16 samples, 0.03%)</title><rect x="1024.1" y="917" width="0.3" height="15.0" fill="rgb(206,134,17)" rx="2" ry="2" />
<text  x="1027.09" y="927.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (234 samples, 0.42%)</title><rect x="1130.4" y="997" width="5.0" height="15.0" fill="rgb(240,46,52)" rx="2" ry="2" />
<text  x="1133.44" y="1007.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (58 samples, 0.10%)</title><rect x="465.2" y="1221" width="1.2" height="15.0" fill="rgb(219,116,3)" rx="2" ry="2" />
<text  x="468.16" y="1231.5" ></text>
</g>
<g >
<title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (10 samples, 0.02%)</title><rect x="774.3" y="1125" width="0.3" height="15.0" fill="rgb(231,112,28)" rx="2" ry="2" />
<text  x="777.34" y="1135.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (11 samples, 0.02%)</title><rect x="992.9" y="1493" width="0.3" height="15.0" fill="rgb(244,85,29)" rx="2" ry="2" />
<text  x="995.92" y="1503.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="1033.2" y="1253" width="0.2" height="15.0" fill="rgb(206,212,23)" rx="2" ry="2" />
<text  x="1036.24" y="1263.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (23 samples, 0.04%)</title><rect x="254.6" y="1221" width="0.5" height="15.0" fill="rgb(207,202,5)" rx="2" ry="2" />
<text  x="257.59" y="1231.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::new_kv (18 samples, 0.03%)</title><rect x="646.4" y="1157" width="0.4" height="15.0" fill="rgb(241,76,3)" rx="2" ry="2" />
<text  x="649.42" y="1167.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (11 samples, 0.02%)</title><rect x="999.2" y="773" width="0.2" height="15.0" fill="rgb(227,63,32)" rx="2" ry="2" />
<text  x="1002.20" y="783.5" ></text>
</g>
<g >
<title>&lt;chan::select::RecvChoice&lt;T&gt; as chan::select::Choice&gt;::try (3,176 samples, 5.71%)</title><rect x="439.5" y="1301" width="67.4" height="15.0" fill="rgb(225,31,37)" rx="2" ry="2" />
<text  x="442.51" y="1311.5" >&lt;chan::..</text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (144 samples, 0.26%)</title><rect x="1000.0" y="1253" width="3.0" height="15.0" fill="rgb(249,169,10)" rx="2" ry="2" />
<text  x="1002.99" y="1263.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="1056.7" y="1317" width="0.2" height="15.0" fill="rgb(243,162,22)" rx="2" ry="2" />
<text  x="1059.70" y="1327.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::chan::Tx&lt;T,S&gt;::try_send (19 samples, 0.03%)</title><rect x="180.0" y="1477" width="0.4" height="15.0" fill="rgb(210,181,30)" rx="2" ry="2" />
<text  x="183.03" y="1487.5" ></text>
</g>
<g >
<title>&lt;tokio_timer::clock::clock::Clock as tokio_timer::timer::now::Now&gt;::now (5 samples, 0.01%)</title><rect x="1081.0" y="981" width="0.1" height="15.0" fill="rgb(231,95,12)" rx="2" ry="2" />
<text  x="1083.98" y="991.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (14 samples, 0.03%)</title><rect x="1032.5" y="1269" width="0.3" height="15.0" fill="rgb(239,29,14)" rx="2" ry="2" />
<text  x="1035.47" y="1279.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::state::State::is_signaled (16 samples, 0.03%)</title><rect x="1067.9" y="1061" width="0.3" height="15.0" fill="rgb(227,162,49)" rx="2" ry="2" />
<text  x="1070.89" y="1071.5" ></text>
</g>
<g >
<title>tokio_tower::mediator::Receiver&lt;T&gt;::try_recv (26 samples, 0.05%)</title><rect x="1014.4" y="1365" width="0.5" height="15.0" fill="rgb(214,12,36)" rx="2" ry="2" />
<text  x="1017.39" y="1375.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::unpark (5 samples, 0.01%)</title><rect x="1024.8" y="1237" width="0.1" height="15.0" fill="rgb(246,1,16)" rx="2" ry="2" />
<text  x="1027.79" y="1247.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (9 samples, 0.02%)</title><rect x="1025.8" y="1461" width="0.2" height="15.0" fill="rgb(232,192,31)" rx="2" ry="2" />
<text  x="1028.79" y="1471.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::TableOperation&gt;::serialize (6 samples, 0.01%)</title><rect x="1027.4" y="1045" width="0.2" height="15.0" fill="rgb(235,113,32)" rx="2" ry="2" />
<text  x="1030.44" y="1055.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (12 samples, 0.02%)</title><rect x="194.1" y="1333" width="0.2" height="15.0" fill="rgb(228,206,48)" rx="2" ry="2" />
<text  x="197.07" y="1343.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="1049.4" y="1141" width="0.1" height="15.0" fill="rgb(244,57,53)" rx="2" ry="2" />
<text  x="1052.38" y="1151.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNotInner&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1026.2" y="1205" width="0.1" height="15.0" fill="rgb(222,103,35)" rx="2" ry="2" />
<text  x="1029.19" y="1215.5" ></text>
</g>
<g >
<title>tsdn_witness_tsdp_get (193 samples, 0.35%)</title><rect x="155.7" y="1541" width="4.1" height="15.0" fill="rgb(207,4,7)" rx="2" ry="2" />
<text  x="158.71" y="1551.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (57 samples, 0.10%)</title><rect x="1183.6" y="853" width="1.2" height="15.0" fill="rgb(216,81,24)" rx="2" ry="2" />
<text  x="1186.61" y="863.5" ></text>
</g>
<g >
<title>&lt;tower_balance::pool::Pool&lt;MS,Target,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (27 samples, 0.05%)</title><rect x="1028.4" y="1365" width="0.6" height="15.0" fill="rgb(247,172,16)" rx="2" ry="2" />
<text  x="1031.40" y="1375.5" ></text>
</g>
<g >
<title>core::fmt::write (15 samples, 0.03%)</title><rect x="999.6" y="949" width="0.3" height="15.0" fill="rgb(230,136,26)" rx="2" ry="2" />
<text  x="1002.60" y="959.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (5 samples, 0.01%)</title><rect x="1025.0" y="1557" width="0.1" height="15.0" fill="rgb(243,120,22)" rx="2" ry="2" />
<text  x="1027.96" y="1567.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (6 samples, 0.01%)</title><rect x="983.5" y="981" width="0.1" height="15.0" fill="rgb(210,111,45)" rx="2" ry="2" />
<text  x="986.52" y="991.5" ></text>
</g>
<g >
<title>arena_malloc (20 samples, 0.04%)</title><rect x="1016.2" y="1509" width="0.4" height="15.0" fill="rgb(221,129,40)" rx="2" ry="2" />
<text  x="1019.18" y="1519.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="1041.1" y="933" width="0.2" height="15.0" fill="rgb(244,207,33)" rx="2" ry="2" />
<text  x="1044.09" y="943.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h7139d8c7b0c70300 (12 samples, 0.02%)</title><rect x="995.3" y="1573" width="0.3" height="15.0" fill="rgb(216,211,19)" rx="2" ry="2" />
<text  x="998.32" y="1583.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (39 samples, 0.07%)</title><rect x="1130.9" y="773" width="0.9" height="15.0" fill="rgb(232,204,17)" rx="2" ry="2" />
<text  x="1133.93" y="783.5" ></text>
</g>
<g >
<title>tokio_sync::task::atomic_task::AtomicTask::notify (33 samples, 0.06%)</title><rect x="10.4" y="1477" width="0.7" height="15.0" fill="rgb(250,72,14)" rx="2" ry="2" />
<text  x="13.40" y="1487.5" ></text>
</g>
<g >
<title>_rjem_mallocx (67 samples, 0.12%)</title><rect x="1015.5" y="1589" width="1.5" height="15.0" fill="rgb(228,26,51)" rx="2" ry="2" />
<text  x="1018.54" y="1599.5" ></text>
</g>
<g >
<title>&lt;hyper::client::pool::Pooled&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="1020.4" y="1429" width="0.1" height="15.0" fill="rgb(248,222,23)" rx="2" ry="2" />
<text  x="1023.40" y="1439.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (10 samples, 0.02%)</title><rect x="668.1" y="1157" width="0.2" height="15.0" fill="rgb(212,135,25)" rx="2" ry="2" />
<text  x="671.10" y="1167.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (6 samples, 0.01%)</title><rect x="1031.2" y="1061" width="0.1" height="15.0" fill="rgb(250,4,18)" rx="2" ry="2" />
<text  x="1034.18" y="1071.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (7 samples, 0.01%)</title><rect x="1056.7" y="1541" width="0.2" height="15.0" fill="rgb(246,156,48)" rx="2" ry="2" />
<text  x="1059.70" y="1551.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (18 samples, 0.03%)</title><rect x="892.8" y="1237" width="0.4" height="15.0" fill="rgb(244,43,42)" rx="2" ry="2" />
<text  x="895.81" y="1247.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner&lt;T&gt;::poll_recv (10 samples, 0.02%)</title><rect x="187.2" y="1253" width="0.2" height="15.0" fill="rgb(240,143,39)" rx="2" ry="2" />
<text  x="190.18" y="1263.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::he0977de3e88b310a (22 samples, 0.04%)</title><rect x="189.4" y="1349" width="0.5" height="15.0" fill="rgb(229,130,25)" rx="2" ry="2" />
<text  x="192.38" y="1359.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (11 samples, 0.02%)</title><rect x="599.8" y="1093" width="0.3" height="15.0" fill="rgb(205,199,20)" rx="2" ry="2" />
<text  x="602.82" y="1103.5" ></text>
</g>
<g >
<title>tsd_assert_fast (11 samples, 0.02%)</title><rect x="172.1" y="1557" width="0.2" height="15.0" fill="rgb(249,177,9)" rx="2" ry="2" />
<text  x="175.09" y="1567.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (56 samples, 0.10%)</title><rect x="184.8" y="1413" width="1.2" height="15.0" fill="rgb(228,202,33)" rx="2" ry="2" />
<text  x="187.80" y="1423.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (6 samples, 0.01%)</title><rect x="1150.9" y="501" width="0.1" height="15.0" fill="rgb(242,7,19)" rx="2" ry="2" />
<text  x="1153.91" y="511.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts_mut (93 samples, 0.17%)</title><rect x="360.5" y="1253" width="1.9" height="15.0" fill="rgb(223,145,30)" rx="2" ry="2" />
<text  x="363.47" y="1263.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (115 samples, 0.21%)</title><rect x="1107.2" y="885" width="2.4" height="15.0" fill="rgb(251,206,29)" rx="2" ry="2" />
<text  x="1110.18" y="895.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::notify (6 samples, 0.01%)</title><rect x="180.1" y="1221" width="0.1" height="15.0" fill="rgb(226,40,7)" rx="2" ry="2" />
<text  x="183.11" y="1231.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (16 samples, 0.03%)</title><rect x="1049.4" y="1429" width="0.3" height="15.0" fill="rgb(215,83,35)" rx="2" ry="2" />
<text  x="1052.38" y="1439.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::new_edge (6 samples, 0.01%)</title><rect x="428.1" y="1253" width="0.1" height="15.0" fill="rgb(206,38,18)" rx="2" ry="2" />
<text  x="431.05" y="1263.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (8 samples, 0.01%)</title><rect x="1033.2" y="1365" width="0.2" height="15.0" fill="rgb(206,76,25)" rx="2" ry="2" />
<text  x="1036.24" y="1375.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (102 samples, 0.18%)</title><rect x="993.2" y="1445" width="2.1" height="15.0" fill="rgb(221,200,10)" rx="2" ry="2" />
<text  x="996.15" y="1455.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::find (25 samples, 0.04%)</title><rect x="1009.9" y="1477" width="0.5" height="15.0" fill="rgb(206,170,12)" rx="2" ry="2" />
<text  x="1012.87" y="1487.5" ></text>
</g>
<g >
<title>tokio_timer::wheel::Wheel&lt;T&gt;::next_expiration (93 samples, 0.17%)</title><rect x="1084.0" y="981" width="1.9" height="15.0" fill="rgb(231,214,48)" rx="2" ry="2" />
<text  x="1086.97" y="991.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (20 samples, 0.04%)</title><rect x="1059.3" y="1477" width="0.4" height="15.0" fill="rgb(220,64,16)" rx="2" ry="2" />
<text  x="1062.29" y="1487.5" ></text>
</g>
<g >
<title>bincode::config::legacy::Config::serialized_size (19 samples, 0.03%)</title><rect x="1045.8" y="1253" width="0.4" height="15.0" fill="rgb(229,83,34)" rx="2" ry="2" />
<text  x="1048.80" y="1263.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (24 samples, 0.04%)</title><rect x="981.3" y="1173" width="0.5" height="15.0" fill="rgb(239,205,29)" rx="2" ry="2" />
<text  x="984.31" y="1183.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (60 samples, 0.11%)</title><rect x="998.7" y="1429" width="1.3" height="15.0" fill="rgb(206,222,18)" rx="2" ry="2" />
<text  x="1001.71" y="1439.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::state::State::lifecycle (14 samples, 0.03%)</title><rect x="1068.2" y="1061" width="0.3" height="15.0" fill="rgb(236,208,54)" rx="2" ry="2" />
<text  x="1071.23" y="1071.5" ></text>
</g>
<g >
<title>futures::task_impl::std::&lt;impl futures::task_impl::Spawn&lt;F&gt;&gt;::wait_future (8 samples, 0.01%)</title><rect x="194.5" y="1541" width="0.2" height="15.0" fill="rgb(228,82,10)" rx="2" ry="2" />
<text  x="197.54" y="1551.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (25 samples, 0.04%)</title><rect x="1026.9" y="981" width="0.5" height="15.0" fill="rgb(241,57,11)" rx="2" ry="2" />
<text  x="1029.91" y="991.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::new (345 samples, 0.62%)</title><rect x="259.0" y="1333" width="7.3" height="15.0" fill="rgb(254,18,49)" rx="2" ry="2" />
<text  x="261.96" y="1343.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::notify (48 samples, 0.09%)</title><rect x="184.9" y="1205" width="1.0" height="15.0" fill="rgb(238,158,10)" rx="2" ry="2" />
<text  x="187.89" y="1215.5" ></text>
</g>
<g >
<title>noria::controller::SyncControllerHandle&lt;A,E&gt;::handle (6 samples, 0.01%)</title><rect x="989.3" y="1301" width="0.1" height="15.0" fill="rgb(222,190,40)" rx="2" ry="2" />
<text  x="992.27" y="1311.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (12 samples, 0.02%)</title><rect x="1131.3" y="405" width="0.2" height="15.0" fill="rgb(246,81,42)" rx="2" ry="2" />
<text  x="1134.29" y="415.5" ></text>
</g>
<g >
<title>hyper::client::pool::Checkout&lt;T&gt;::checkout (13 samples, 0.02%)</title><rect x="995.7" y="1541" width="0.3" height="15.0" fill="rgb(217,196,31)" rx="2" ry="2" />
<text  x="998.68" y="1551.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (40 samples, 0.07%)</title><rect x="631.2" y="1285" width="0.9" height="15.0" fill="rgb(241,9,18)" rx="2" ry="2" />
<text  x="634.20" y="1295.5" ></text>
</g>
<g >
<title>hyper::client::Client$LT$C$C$B$GT$::send_request::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hf94027d66c55481c (8 samples, 0.01%)</title><rect x="1021.3" y="1493" width="0.2" height="15.0" fill="rgb(234,103,5)" rx="2" ry="2" />
<text  x="1024.29" y="1503.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple (7 samples, 0.01%)</title><rect x="1022.5" y="1317" width="0.1" height="15.0" fill="rgb(250,21,25)" rx="2" ry="2" />
<text  x="1025.48" y="1327.5" ></text>
</g>
<g >
<title>core::ptr::read (46 samples, 0.08%)</title><rect x="601.2" y="1045" width="1.0" height="15.0" fill="rgb(240,39,53)" rx="2" ry="2" />
<text  x="604.20" y="1055.5" ></text>
</g>
<g >
<title>&lt;futures::future::then::Then&lt;A,B,F&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="189.0" y="1317" width="0.2" height="15.0" fill="rgb(222,20,46)" rx="2" ry="2" />
<text  x="192.02" y="1327.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::into_slices_mut (173 samples, 0.31%)</title><rect x="333.8" y="1301" width="3.6" height="15.0" fill="rgb(209,174,19)" rx="2" ry="2" />
<text  x="336.78" y="1311.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (6 samples, 0.01%)</title><rect x="1024.8" y="1413" width="0.1" height="15.0" fill="rgb(225,99,51)" rx="2" ry="2" />
<text  x="1027.79" y="1423.5" ></text>
</g>
<g >
<title>tokio_sync::task::atomic_task::AtomicTask::notify (14 samples, 0.03%)</title><rect x="187.8" y="1301" width="0.3" height="15.0" fill="rgb(244,210,8)" rx="2" ry="2" />
<text  x="190.79" y="1311.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (10 samples, 0.02%)</title><rect x="10.0" y="1541" width="0.2" height="15.0" fill="rgb(247,17,52)" rx="2" ry="2" />
<text  x="13.00" y="1551.5" ></text>
</g>
<g >
<title>std::sync::condvar::Condvar::wait (7 samples, 0.01%)</title><rect x="193.7" y="1253" width="0.1" height="15.0" fill="rgb(209,80,24)" rx="2" ry="2" />
<text  x="196.67" y="1263.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (53 samples, 0.10%)</title><rect x="343.4" y="1301" width="1.1" height="15.0" fill="rgb(248,128,54)" rx="2" ry="2" />
<text  x="346.41" y="1311.5" ></text>
</g>
<g >
<title>sys_write (6 samples, 0.01%)</title><rect x="983.8" y="997" width="0.1" height="15.0" fill="rgb(225,224,3)" rx="2" ry="2" />
<text  x="986.80" y="1007.5" ></text>
</g>
<g >
<title>futures::task_impl::current::_$u7b$$u7b$closure$u7d$$u7d$::hb88041a16b038a29 (8 samples, 0.01%)</title><rect x="182.9" y="1381" width="0.2" height="15.0" fill="rgb(228,37,1)" rx="2" ry="2" />
<text  x="185.91" y="1391.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.01%)</title><rect x="1055.7" y="1125" width="0.1" height="15.0" fill="rgb(232,110,52)" rx="2" ry="2" />
<text  x="1058.66" y="1135.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (18 samples, 0.03%)</title><rect x="811.8" y="1077" width="0.4" height="15.0" fill="rgb(252,22,51)" rx="2" ry="2" />
<text  x="814.82" y="1087.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (72 samples, 0.13%)</title><rect x="1027.4" y="1397" width="1.6" height="15.0" fill="rgb(254,17,46)" rx="2" ry="2" />
<text  x="1030.44" y="1407.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (58 samples, 0.10%)</title><rect x="808.9" y="1109" width="1.2" height="15.0" fill="rgb(216,86,40)" rx="2" ry="2" />
<text  x="811.91" y="1119.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (22 samples, 0.04%)</title><rect x="1032.8" y="1205" width="0.4" height="15.0" fill="rgb(239,128,3)" rx="2" ry="2" />
<text  x="1035.77" y="1215.5" ></text>
</g>
<g >
<title>alloc::raw_vec::alloc_guard (40 samples, 0.07%)</title><rect x="689.9" y="1221" width="0.8" height="15.0" fill="rgb(232,57,38)" rx="2" ry="2" />
<text  x="692.85" y="1231.5" ></text>
</g>
<g >
<title>__pthread_condattr_init (47 samples, 0.08%)</title><rect x="230.4" y="1285" width="1.0" height="15.0" fill="rgb(212,53,32)" rx="2" ry="2" />
<text  x="233.38" y="1295.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (120 samples, 0.22%)</title><rect x="451.8" y="1189" width="2.6" height="15.0" fill="rgb(210,223,50)" rx="2" ry="2" />
<text  x="454.82" y="1199.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::stream::Stream&gt;::poll (11 samples, 0.02%)</title><rect x="1038.1" y="1109" width="0.2" height="15.0" fill="rgb(253,228,12)" rx="2" ry="2" />
<text  x="1041.12" y="1119.5" ></text>
</g>
<g >
<title>core::mem::min_align_of_val (40 samples, 0.07%)</title><rect x="900.9" y="1269" width="0.9" height="15.0" fill="rgb(241,217,54)" rx="2" ry="2" />
<text  x="903.91" y="1279.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (33 samples, 0.06%)</title><rect x="1030.5" y="1253" width="0.7" height="15.0" fill="rgb(216,18,7)" rx="2" ry="2" />
<text  x="1033.48" y="1263.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_phase_1 (12 samples, 0.02%)</title><rect x="1009.5" y="1509" width="0.2" height="15.0" fill="rgb(212,87,35)" rx="2" ry="2" />
<text  x="1012.47" y="1519.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (13 samples, 0.02%)</title><rect x="1033.4" y="1317" width="0.3" height="15.0" fill="rgb(252,51,25)" rx="2" ry="2" />
<text  x="1036.41" y="1327.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (42 samples, 0.08%)</title><rect x="1050.1" y="693" width="0.9" height="15.0" fill="rgb(239,1,32)" rx="2" ry="2" />
<text  x="1053.10" y="703.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (20 samples, 0.04%)</title><rect x="1038.0" y="1365" width="0.4" height="15.0" fill="rgb(206,2,4)" rx="2" ry="2" />
<text  x="1040.99" y="1375.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (23 samples, 0.04%)</title><rect x="187.0" y="1365" width="0.5" height="15.0" fill="rgb(230,93,41)" rx="2" ry="2" />
<text  x="190.05" y="1375.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.01%)</title><rect x="192.7" y="1365" width="0.1" height="15.0" fill="rgb(246,8,50)" rx="2" ry="2" />
<text  x="195.69" y="1375.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (6 samples, 0.01%)</title><rect x="1033.7" y="1301" width="0.1" height="15.0" fill="rgb(244,116,40)" rx="2" ry="2" />
<text  x="1036.68" y="1311.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current::_$u7b$$u7b$closure$u7d$$u7d$::h5b3a67a18c04d66c (116 samples, 0.21%)</title><rect x="980.1" y="1221" width="2.4" height="15.0" fill="rgb(213,91,23)" rx="2" ry="2" />
<text  x="983.06" y="1231.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1026.2" y="1141" width="0.1" height="15.0" fill="rgb(215,209,43)" rx="2" ry="2" />
<text  x="1029.19" y="1151.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Events::len (5 samples, 0.01%)</title><rect x="1077.6" y="885" width="0.1" height="15.0" fill="rgb(216,106,12)" rx="2" ry="2" />
<text  x="1080.58" y="895.5" ></text>
</g>
<g >
<title>&lt;arccstr::ArcCStrVisitor as serde::de::Visitor&gt;::visit_bytes (10 samples, 0.02%)</title><rect x="1000.4" y="645" width="0.2" height="15.0" fill="rgb(248,76,22)" rx="2" ry="2" />
<text  x="1003.41" y="655.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_header (55 samples, 0.10%)</title><rect x="759.9" y="1141" width="1.2" height="15.0" fill="rgb(251,183,41)" rx="2" ry="2" />
<text  x="762.89" y="1151.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (6 samples, 0.01%)</title><rect x="1031.0" y="725" width="0.2" height="15.0" fill="rgb(220,46,2)" rx="2" ry="2" />
<text  x="1034.05" y="735.5" ></text>
</g>
<g >
<title>futures::task_impl::core::BorrowedUnpark::to_owned (5 samples, 0.01%)</title><rect x="1056.0" y="1189" width="0.1" height="15.0" fill="rgb(235,156,39)" rx="2" ry="2" />
<text  x="1058.96" y="1199.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (9 samples, 0.02%)</title><rect x="323.0" y="1205" width="0.2" height="15.0" fill="rgb(254,177,44)" rx="2" ry="2" />
<text  x="326.00" y="1215.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueue::poll (12 samples, 0.02%)</title><rect x="1111.1" y="917" width="0.2" height="15.0" fill="rgb(214,157,9)" rx="2" ry="2" />
<text  x="1114.09" y="927.5" ></text>
</g>
<g >
<title>core::alloc::Layout::size (10 samples, 0.02%)</title><rect x="851.3" y="1109" width="0.3" height="15.0" fill="rgb(228,56,28)" rx="2" ry="2" />
<text  x="854.35" y="1119.5" ></text>
</g>
<g >
<title>core::alloc::Layout::size (14 samples, 0.03%)</title><rect x="262.9" y="1253" width="0.3" height="15.0" fill="rgb(243,222,34)" rx="2" ry="2" />
<text  x="265.89" y="1263.5" ></text>
</g>
<g >
<title>&lt;futures::future::map::Map&lt;A,F&gt; as futures::future::Future&gt;::poll (15 samples, 0.03%)</title><rect x="188.6" y="1317" width="0.4" height="15.0" fill="rgb(240,85,22)" rx="2" ry="2" />
<text  x="191.64" y="1327.5" ></text>
</g>
<g >
<title>pipe_poll (8 samples, 0.01%)</title><rect x="1104.7" y="773" width="0.2" height="15.0" fill="rgb(254,96,36)" rx="2" ry="2" />
<text  x="1107.70" y="783.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::hbfefe54f226aaf49 (32 samples, 0.06%)</title><rect x="1021.2" y="1573" width="0.7" height="15.0" fill="rgb(213,80,16)" rx="2" ry="2" />
<text  x="1024.20" y="1583.5" ></text>
</g>
<g >
<title>core::mem::replace (5 samples, 0.01%)</title><rect x="191.8" y="1189" width="0.2" height="15.0" fill="rgb(251,133,31)" rx="2" ry="2" />
<text  x="194.85" y="1199.5" ></text>
</g>
<g >
<title>gen::write (50 samples, 0.09%)</title><rect x="192.8" y="1445" width="1.1" height="15.0" fill="rgb(213,153,16)" rx="2" ry="2" />
<text  x="195.84" y="1455.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (5 samples, 0.01%)</title><rect x="1023.2" y="901" width="0.1" height="15.0" fill="rgb(225,99,46)" rx="2" ry="2" />
<text  x="1026.22" y="911.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfb347edd97d33f3d (36 samples, 0.06%)</title><rect x="1032.5" y="1493" width="0.7" height="15.0" fill="rgb(243,121,43)" rx="2" ry="2" />
<text  x="1035.47" y="1503.5" ></text>
</g>
<g >
<title>&lt;futures::future::either::Either&lt;A,B&gt; as futures::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="1041.1" y="821" width="0.2" height="15.0" fill="rgb(212,137,1)" rx="2" ry="2" />
<text  x="1044.09" y="831.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (16 samples, 0.03%)</title><rect x="1049.4" y="1525" width="0.3" height="15.0" fill="rgb(214,159,40)" rx="2" ry="2" />
<text  x="1052.38" y="1535.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (8 samples, 0.01%)</title><rect x="1059.7" y="1349" width="0.2" height="15.0" fill="rgb(219,131,20)" rx="2" ry="2" />
<text  x="1062.72" y="1359.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::new (544 samples, 0.98%)</title><rect x="232.0" y="1333" width="11.5" height="15.0" fill="rgb(254,185,21)" rx="2" ry="2" />
<text  x="234.99" y="1343.5" ></text>
</g>
<g >
<title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as futures::future::Future&gt;::poll (26 samples, 0.05%)</title><rect x="996.3" y="1541" width="0.5" height="15.0" fill="rgb(250,216,16)" rx="2" ry="2" />
<text  x="999.27" y="1551.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (32 samples, 0.06%)</title><rect x="1037.1" y="1189" width="0.7" height="15.0" fill="rgb(224,42,53)" rx="2" ry="2" />
<text  x="1040.14" y="1199.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="1019.5" y="1429" width="0.1" height="15.0" fill="rgb(205,213,22)" rx="2" ry="2" />
<text  x="1022.51" y="1439.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (42 samples, 0.08%)</title><rect x="256.7" y="1205" width="0.9" height="15.0" fill="rgb(224,195,0)" rx="2" ry="2" />
<text  x="259.73" y="1215.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (32 samples, 0.06%)</title><rect x="225.7" y="1285" width="0.6" height="15.0" fill="rgb(237,179,48)" rx="2" ry="2" />
<text  x="228.67" y="1295.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::entry (14 samples, 0.03%)</title><rect x="1128.9" y="1045" width="0.3" height="15.0" fill="rgb(232,54,39)" rx="2" ry="2" />
<text  x="1131.91" y="1055.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (10 samples, 0.02%)</title><rect x="1051.4" y="1349" width="0.2" height="15.0" fill="rgb(246,46,48)" rx="2" ry="2" />
<text  x="1054.38" y="1359.5" ></text>
</g>
<g >
<title>tokio_timer::wheel::Wheel&lt;T&gt;::poll (70 samples, 0.13%)</title><rect x="1081.5" y="981" width="1.5" height="15.0" fill="rgb(244,67,36)" rx="2" ry="2" />
<text  x="1084.47" y="991.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_ptr (14 samples, 0.03%)</title><rect x="781.1" y="1141" width="0.3" height="15.0" fill="rgb(247,118,7)" rx="2" ry="2" />
<text  x="784.11" y="1151.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h3169cfffdbef5731 (15 samples, 0.03%)</title><rect x="188.6" y="1349" width="0.4" height="15.0" fill="rgb(226,113,52)" rx="2" ry="2" />
<text  x="191.64" y="1359.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (9 samples, 0.02%)</title><rect x="1026.0" y="1061" width="0.2" height="15.0" fill="rgb(211,96,53)" rx="2" ry="2" />
<text  x="1028.98" y="1071.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (10 samples, 0.02%)</title><rect x="1051.4" y="1301" width="0.2" height="15.0" fill="rgb(216,16,15)" rx="2" ry="2" />
<text  x="1054.38" y="1311.5" ></text>
</g>
<g >
<title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (21 samples, 0.04%)</title><rect x="198.9" y="1205" width="0.5" height="15.0" fill="rgb(218,46,32)" rx="2" ry="2" />
<text  x="201.93" y="1215.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (8 samples, 0.01%)</title><rect x="1027.6" y="1029" width="0.1" height="15.0" fill="rgb(206,27,31)" rx="2" ry="2" />
<text  x="1030.57" y="1039.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (8 samples, 0.01%)</title><rect x="1034.7" y="1381" width="0.2" height="15.0" fill="rgb(251,105,19)" rx="2" ry="2" />
<text  x="1037.70" y="1391.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.01%)</title><rect x="992.8" y="1477" width="0.1" height="15.0" fill="rgb(237,162,33)" rx="2" ry="2" />
<text  x="995.81" y="1487.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::DataType&gt;::serialize (33 samples, 0.06%)</title><rect x="998.0" y="1189" width="0.7" height="15.0" fill="rgb(233,159,36)" rx="2" ry="2" />
<text  x="1001.01" y="1199.5" ></text>
</g>
<g >
<title>core::num::wrapping::&lt;impl core::ops::arith::Sub for core::num::Wrapping&lt;usize&gt;&gt;::sub (51 samples, 0.09%)</title><rect x="604.9" y="1237" width="1.1" height="15.0" fill="rgb(209,147,53)" rx="2" ry="2" />
<text  x="607.91" y="1247.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::get (9 samples, 0.02%)</title><rect x="1141.5" y="981" width="0.2" height="15.0" fill="rgb(252,179,48)" rx="2" ry="2" />
<text  x="1144.54" y="991.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (15 samples, 0.03%)</title><rect x="1028.1" y="1189" width="0.3" height="15.0" fill="rgb(235,203,11)" rx="2" ry="2" />
<text  x="1031.06" y="1199.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (20 samples, 0.04%)</title><rect x="1114.1" y="997" width="0.4" height="15.0" fill="rgb(232,222,0)" rx="2" ry="2" />
<text  x="1117.08" y="1007.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (8 samples, 0.01%)</title><rect x="1027.6" y="1093" width="0.1" height="15.0" fill="rgb(233,89,7)" rx="2" ry="2" />
<text  x="1030.57" y="1103.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (6 samples, 0.01%)</title><rect x="1031.0" y="1013" width="0.2" height="15.0" fill="rgb(209,114,9)" rx="2" ry="2" />
<text  x="1034.05" y="1023.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (48 samples, 0.09%)</title><rect x="1034.9" y="1461" width="1.0" height="15.0" fill="rgb(248,29,19)" rx="2" ry="2" />
<text  x="1037.87" y="1471.5" ></text>
</g>
<g >
<title>&lt;hyper::body::chunk::Chunk as core::iter::traits::collect::Extend&lt;u8&gt;&gt;::extend (5 samples, 0.01%)</title><rect x="1041.1" y="677" width="0.1" height="15.0" fill="rgb(215,40,47)" rx="2" ry="2" />
<text  x="1044.11" y="687.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::as_mut_ptr (9 samples, 0.02%)</title><rect x="1180.1" y="805" width="0.2" height="15.0" fill="rgb(254,32,54)" rx="2" ry="2" />
<text  x="1183.13" y="815.5" ></text>
</g>
<g >
<title>core::num::NonZeroUsize::new_unchecked (16 samples, 0.03%)</title><rect x="850.6" y="1077" width="0.3" height="15.0" fill="rgb(215,193,24)" rx="2" ry="2" />
<text  x="853.58" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (16 samples, 0.03%)</title><rect x="922.9" y="1285" width="0.3" height="15.0" fill="rgb(249,21,24)" rx="2" ry="2" />
<text  x="925.86" y="1295.5" ></text>
</g>
<g >
<title>&lt;futures::future::map::Map&lt;A,F&gt; as futures::future::Future&gt;::poll (15 samples, 0.03%)</title><rect x="1020.1" y="1525" width="0.3" height="15.0" fill="rgb(225,89,12)" rx="2" ry="2" />
<text  x="1023.06" y="1535.5" ></text>
</g>
<g >
<title>noria::view::SyncView::lookup (5 samples, 0.01%)</title><rect x="192.7" y="1461" width="0.1" height="15.0" fill="rgb(206,56,9)" rx="2" ry="2" />
<text  x="195.69" y="1471.5" ></text>
</g>
<g >
<title>core::mem::size_of (9 samples, 0.02%)</title><rect x="762.5" y="1141" width="0.2" height="15.0" fill="rgb(206,168,22)" rx="2" ry="2" />
<text  x="765.48" y="1151.5" ></text>
</g>
<g >
<title>chrono::offset::fixed::add_with_leapsecond (11 samples, 0.02%)</title><rect x="196.3" y="1301" width="0.3" height="15.0" fill="rgb(219,7,20)" rx="2" ry="2" />
<text  x="199.32" y="1311.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (25 samples, 0.04%)</title><rect x="1026.9" y="933" width="0.5" height="15.0" fill="rgb(236,219,45)" rx="2" ry="2" />
<text  x="1029.91" y="943.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit::_$u7b$$u7b$closure$u7d$$u7d$::h83d517d17b1a75b2 (12 samples, 0.02%)</title><rect x="1047.6" y="1109" width="0.2" height="15.0" fill="rgb(209,60,36)" rx="2" ry="2" />
<text  x="1050.56" y="1119.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.02%)</title><rect x="1125.4" y="869" width="0.3" height="15.0" fill="rgb(211,185,48)" rx="2" ry="2" />
<text  x="1128.43" y="879.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (9 samples, 0.02%)</title><rect x="189.0" y="1301" width="0.2" height="15.0" fill="rgb(217,37,38)" rx="2" ry="2" />
<text  x="192.02" y="1311.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (58 samples, 0.10%)</title><rect x="1038.5" y="821" width="1.2" height="15.0" fill="rgb(235,172,10)" rx="2" ry="2" />
<text  x="1041.48" y="831.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::new (176 samples, 0.32%)</title><rect x="275.4" y="1285" width="3.8" height="15.0" fill="rgb(222,204,1)" rx="2" ry="2" />
<text  x="278.45" y="1295.5" ></text>
</g>
<g >
<title>core::ptr::read (29 samples, 0.05%)</title><rect x="1161.0" y="885" width="0.7" height="15.0" fill="rgb(213,147,0)" rx="2" ry="2" />
<text  x="1164.04" y="895.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit (12 samples, 0.02%)</title><rect x="1047.6" y="1189" width="0.2" height="15.0" fill="rgb(217,63,26)" rx="2" ry="2" />
<text  x="1050.56" y="1199.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="1029.0" y="869" width="0.2" height="15.0" fill="rgb(215,76,44)" rx="2" ry="2" />
<text  x="1031.99" y="879.5" ></text>
</g>
<g >
<title>serde::de::SeqAccess::next_element (7 samples, 0.01%)</title><rect x="1022.5" y="869" width="0.1" height="15.0" fill="rgb(253,167,2)" rx="2" ry="2" />
<text  x="1025.48" y="879.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (9 samples, 0.02%)</title><rect x="997.2" y="1077" width="0.2" height="15.0" fill="rgb(223,202,39)" rx="2" ry="2" />
<text  x="1000.16" y="1087.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessNode::enqueue_with_wakeup (106 samples, 0.19%)</title><rect x="1144.0" y="933" width="2.3" height="15.0" fill="rgb(214,62,13)" rx="2" ry="2" />
<text  x="1147.04" y="943.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (11 samples, 0.02%)</title><rect x="1059.1" y="1349" width="0.2" height="15.0" fill="rgb(216,202,4)" rx="2" ry="2" />
<text  x="1062.06" y="1359.5" ></text>
</g>
<g >
<title>tokio_timer::clock::clock::with_default (12 samples, 0.02%)</title><rect x="1015.2" y="1285" width="0.2" height="15.0" fill="rgb(254,164,8)" rx="2" ry="2" />
<text  x="1018.18" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::notify (5 samples, 0.01%)</title><rect x="997.0" y="1381" width="0.1" height="15.0" fill="rgb(226,118,45)" rx="2" ry="2" />
<text  x="999.95" y="1391.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (16 samples, 0.03%)</title><rect x="1045.2" y="1077" width="0.4" height="15.0" fill="rgb(229,188,18)" rx="2" ry="2" />
<text  x="1048.22" y="1087.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (7 samples, 0.01%)</title><rect x="1034.2" y="1461" width="0.1" height="15.0" fill="rgb(250,44,8)" rx="2" ry="2" />
<text  x="1037.19" y="1471.5" ></text>
</g>
<g >
<title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll (13 samples, 0.02%)</title><rect x="194.1" y="1429" width="0.2" height="15.0" fill="rgb(233,47,16)" rx="2" ry="2" />
<text  x="197.07" y="1439.5" ></text>
</g>
<g >
<title>tokio_sync::loom::sync::CausalCell&lt;T&gt;::with_mut (11 samples, 0.02%)</title><rect x="182.4" y="1381" width="0.3" height="15.0" fill="rgb(245,143,24)" rx="2" ry="2" />
<text  x="185.42" y="1391.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (7 samples, 0.01%)</title><rect x="1070.6" y="1029" width="0.1" height="15.0" fill="rgb(206,195,26)" rx="2" ry="2" />
<text  x="1073.56" y="1039.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::TryFrom&lt;U&gt;&gt;::try_from (5 samples, 0.01%)</title><rect x="1117.6" y="933" width="0.1" height="15.0" fill="rgb(232,188,12)" rx="2" ry="2" />
<text  x="1120.64" y="943.5" ></text>
</g>
<g >
<title>bincode::internal::deserialize (7 samples, 0.01%)</title><rect x="1058.1" y="1189" width="0.2" height="15.0" fill="rgb(234,115,16)" rx="2" ry="2" />
<text  x="1061.10" y="1199.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::h3c294772b9273f11 (44 samples, 0.08%)</title><rect x="187.5" y="1429" width="1.0" height="15.0" fill="rgb(224,216,17)" rx="2" ry="2" />
<text  x="190.54" y="1439.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (33 samples, 0.06%)</title><rect x="1030.5" y="1205" width="0.7" height="15.0" fill="rgb(243,180,46)" rx="2" ry="2" />
<text  x="1033.48" y="1215.5" ></text>
</g>
<g >
<title>ticker_tick (175 samples, 0.31%)</title><rect x="61.1" y="1461" width="3.7" height="15.0" fill="rgb(205,60,53)" rx="2" ry="2" />
<text  x="64.07" y="1471.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (6 samples, 0.01%)</title><rect x="1076.7" y="869" width="0.1" height="15.0" fill="rgb(235,14,41)" rx="2" ry="2" />
<text  x="1079.71" y="879.5" ></text>
</g>
<g >
<title>futures::sync::oneshot::Inner&lt;T&gt;::drop_tx (6 samples, 0.01%)</title><rect x="996.3" y="1365" width="0.1" height="15.0" fill="rgb(254,11,21)" rx="2" ry="2" />
<text  x="999.27" y="1375.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::de::Deserialize for noria::Tagged&lt;T&gt;&gt;::deserialize (7 samples, 0.01%)</title><rect x="1022.5" y="1349" width="0.1" height="15.0" fill="rgb(236,103,11)" rx="2" ry="2" />
<text  x="1025.48" y="1359.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (22 samples, 0.04%)</title><rect x="1134.4" y="693" width="0.5" height="15.0" fill="rgb(225,221,30)" rx="2" ry="2" />
<text  x="1137.45" y="703.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (7 samples, 0.01%)</title><rect x="1056.9" y="1413" width="0.2" height="15.0" fill="rgb(216,199,30)" rx="2" ry="2" />
<text  x="1059.94" y="1423.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (22 samples, 0.04%)</title><rect x="1104.5" y="789" width="0.5" height="15.0" fill="rgb(217,20,34)" rx="2" ry="2" />
<text  x="1107.53" y="799.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (216 samples, 0.39%)</title><rect x="1044.8" y="1573" width="4.6" height="15.0" fill="rgb(223,133,27)" rx="2" ry="2" />
<text  x="1047.80" y="1583.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.01%)</title><rect x="1053.9" y="1077" width="0.1" height="15.0" fill="rgb(254,21,7)" rx="2" ry="2" />
<text  x="1056.90" y="1087.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (10 samples, 0.02%)</title><rect x="995.3" y="853" width="0.2" height="15.0" fill="rgb(219,168,43)" rx="2" ry="2" />
<text  x="998.32" y="863.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::From&lt;T&gt;&gt;::from (13 samples, 0.02%)</title><rect x="309.4" y="1253" width="0.3" height="15.0" fill="rgb(220,188,22)" rx="2" ry="2" />
<text  x="312.38" y="1263.5" ></text>
</g>
<g >
<title>tokio_threadpool::callback::Callback::call (61 samples, 0.11%)</title><rect x="1031.2" y="1541" width="1.3" height="15.0" fill="rgb(228,68,31)" rx="2" ry="2" />
<text  x="1034.18" y="1551.5" ></text>
</g>
<g >
<title>&lt;futures::future::either::Either&lt;A,B&gt; as futures::future::Future&gt;::poll (17 samples, 0.03%)</title><rect x="1020.6" y="1541" width="0.4" height="15.0" fill="rgb(252,196,13)" rx="2" ry="2" />
<text  x="1023.61" y="1551.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::chan::Rx$LT$T$C$S$GT$::recv::_$u7b$$u7b$closure$u7d$$u7d$::h1c6ba91699d191c4 (55 samples, 0.10%)</title><rect x="1011.8" y="1509" width="1.2" height="15.0" fill="rgb(219,99,3)" rx="2" ry="2" />
<text  x="1014.85" y="1519.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (158 samples, 0.28%)</title><rect x="1041.1" y="1125" width="3.3" height="15.0" fill="rgb(211,45,29)" rx="2" ry="2" />
<text  x="1044.09" y="1135.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1025.6" y="677" width="0.1" height="15.0" fill="rgb(205,6,28)" rx="2" ry="2" />
<text  x="1028.62" y="687.5" ></text>
</g>
<g >
<title>mio::poll::AtomicState::compare_and_swap (6 samples, 0.01%)</title><rect x="1106.3" y="933" width="0.1" height="15.0" fill="rgb(236,71,23)" rx="2" ry="2" />
<text  x="1109.27" y="943.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (33 samples, 0.06%)</title><rect x="1035.2" y="1381" width="0.7" height="15.0" fill="rgb(227,74,30)" rx="2" ry="2" />
<text  x="1038.19" y="1391.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.01%)</title><rect x="1049.8" y="901" width="0.1" height="15.0" fill="rgb(207,97,2)" rx="2" ry="2" />
<text  x="1052.76" y="911.5" ></text>
</g>
<g >
<title>do_futex (10 samples, 0.02%)</title><rect x="1043.8" y="709" width="0.2" height="15.0" fill="rgb(239,77,17)" rx="2" ry="2" />
<text  x="1046.82" y="719.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::entry::WorkerEntry::notify (42 samples, 0.08%)</title><rect x="1048.0" y="1029" width="0.9" height="15.0" fill="rgb(252,84,16)" rx="2" ry="2" />
<text  x="1050.96" y="1039.5" ></text>
</g>
<g >
<title>core::ptr::write (6 samples, 0.01%)</title><rect x="1161.7" y="885" width="0.1" height="15.0" fill="rgb(245,7,24)" rx="2" ry="2" />
<text  x="1164.65" y="895.5" ></text>
</g>
<g >
<title>&lt;tower_balance::p2c::service::Balance&lt;D,Req&gt; as tower_service::Service&lt;Req&gt;&gt;::call (8 samples, 0.01%)</title><rect x="995.4" y="789" width="0.1" height="15.0" fill="rgb(234,179,43)" rx="2" ry="2" />
<text  x="998.36" y="799.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (43 samples, 0.08%)</title><rect x="933.8" y="1285" width="0.9" height="15.0" fill="rgb(217,88,4)" rx="2" ry="2" />
<text  x="936.83" y="1295.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (5 samples, 0.01%)</title><rect x="1023.8" y="1317" width="0.1" height="15.0" fill="rgb(226,54,47)" rx="2" ry="2" />
<text  x="1026.81" y="1327.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (284 samples, 0.51%)</title><rect x="1038.4" y="1493" width="6.0" height="15.0" fill="rgb(235,22,9)" rx="2" ry="2" />
<text  x="1041.41" y="1503.5" ></text>
</g>
<g >
<title>zookeeper::zookeeper::ZooKeeper::connect::_$u7b$$u7b$closure$u7d$$u7d$::h0ba0abee6e09b6d9 (102 samples, 0.18%)</title><rect x="993.2" y="1381" width="2.1" height="15.0" fill="rgb(208,91,0)" rx="2" ry="2" />
<text  x="996.15" y="1391.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (18 samples, 0.03%)</title><rect x="671.2" y="1157" width="0.4" height="15.0" fill="rgb(240,177,28)" rx="2" ry="2" />
<text  x="674.22" y="1167.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (6 samples, 0.01%)</title><rect x="1066.3" y="1061" width="0.1" height="15.0" fill="rgb(224,60,40)" rx="2" ry="2" />
<text  x="1069.29" y="1071.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="201.4" y="1269" width="0.1" height="15.0" fill="rgb(232,109,5)" rx="2" ry="2" />
<text  x="204.39" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h78b272fd5f571c5e (37 samples, 0.07%)</title><rect x="186.3" y="1509" width="0.7" height="15.0" fill="rgb(213,110,52)" rx="2" ry="2" />
<text  x="189.26" y="1519.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::do_run::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfb347edd97d33f3d (46 samples, 0.08%)</title><rect x="1029.0" y="1349" width="0.9" height="15.0" fill="rgb(232,212,53)" rx="2" ry="2" />
<text  x="1031.97" y="1359.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (47 samples, 0.08%)</title><rect x="1048.0" y="1205" width="1.0" height="15.0" fill="rgb(221,36,41)" rx="2" ry="2" />
<text  x="1050.96" y="1215.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (127 samples, 0.23%)</title><rect x="1000.3" y="725" width="2.7" height="15.0" fill="rgb(223,0,33)" rx="2" ry="2" />
<text  x="1003.35" y="735.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (7 samples, 0.01%)</title><rect x="1034.2" y="1285" width="0.1" height="15.0" fill="rgb(221,37,53)" rx="2" ry="2" />
<text  x="1037.19" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (6 samples, 0.01%)</title><rect x="1150.9" y="469" width="0.1" height="15.0" fill="rgb(230,85,33)" rx="2" ry="2" />
<text  x="1153.91" y="479.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (246 samples, 0.44%)</title><rect x="1149.2" y="1013" width="5.2" height="15.0" fill="rgb(251,11,0)" rx="2" ry="2" />
<text  x="1152.15" y="1023.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (44 samples, 0.08%)</title><rect x="892.3" y="1253" width="0.9" height="15.0" fill="rgb(232,153,13)" rx="2" ry="2" />
<text  x="895.26" y="1263.5" ></text>
</g>
<g >
<title>&lt;chan::select::RecvChoice&lt;T&gt; as chan::select::Choice&gt;::unsubscribe (84 samples, 0.15%)</title><rect x="974.8" y="1317" width="1.8" height="15.0" fill="rgb(208,111,45)" rx="2" ry="2" />
<text  x="977.82" y="1327.5" ></text>
</g>
<g >
<title>futures::task_impl::current (6 samples, 0.01%)</title><rect x="1011.7" y="1413" width="0.1" height="15.0" fill="rgb(212,107,24)" rx="2" ry="2" />
<text  x="1014.72" y="1423.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (27 samples, 0.05%)</title><rect x="1030.5" y="997" width="0.5" height="15.0" fill="rgb(254,126,2)" rx="2" ry="2" />
<text  x="1033.48" y="1007.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (5 samples, 0.01%)</title><rect x="996.8" y="1397" width="0.1" height="15.0" fill="rgb(240,139,42)" rx="2" ry="2" />
<text  x="999.82" y="1407.5" ></text>
</g>
<g >
<title>chan::RecvOp&lt;T&gt;::into_result (669 samples, 1.20%)</title><rect x="474.5" y="1269" width="14.2" height="15.0" fill="rgb(221,32,48)" rx="2" ry="2" />
<text  x="477.48" y="1279.5" ></text>
</g>
<g >
<title>tokio_sync::loom::sync::CausalCell&lt;T&gt;::with (6 samples, 0.01%)</title><rect x="1026.7" y="853" width="0.1" height="15.0" fill="rgb(237,129,43)" rx="2" ry="2" />
<text  x="1029.72" y="863.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::TableOperation&gt;::serialize (6 samples, 0.01%)</title><rect x="1014.2" y="1077" width="0.1" height="15.0" fill="rgb(228,191,4)" rx="2" ry="2" />
<text  x="1017.20" y="1087.5" ></text>
</g>
<g >
<title>core::num::wrapping::&lt;impl core::ops::arith::Add for core::num::Wrapping&lt;usize&gt;&gt;::add (22 samples, 0.04%)</title><rect x="569.2" y="1237" width="0.5" height="15.0" fill="rgb(211,10,46)" rx="2" ry="2" />
<text  x="572.22" y="1247.5" ></text>
</g>
<g >
<title>tsd_assert_fast (14 samples, 0.03%)</title><rect x="83.9" y="1541" width="0.3" height="15.0" fill="rgb(214,165,29)" rx="2" ry="2" />
<text  x="86.86" y="1551.5" ></text>
</g>
<g >
<title>&lt;&amp;mut alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (700 samples, 1.26%)</title><rect x="939.8" y="1317" width="14.8" height="15.0" fill="rgb(231,161,30)" rx="2" ry="2" />
<text  x="942.79" y="1327.5" ></text>
</g>
<g >
<title>tokio_timer::wheel::Wheel&lt;T&gt;::next_expiration (35 samples, 0.06%)</title><rect x="1127.6" y="997" width="0.7" height="15.0" fill="rgb(224,45,38)" rx="2" ry="2" />
<text  x="1130.60" y="1007.5" ></text>
</g>
<g >
<title>noria::controller::SyncControllerHandle&lt;A,E&gt;::import_data (124 samples, 0.22%)</title><rect x="986.4" y="1317" width="2.6" height="15.0" fill="rgb(207,113,23)" rx="2" ry="2" />
<text  x="989.36" y="1327.5" ></text>
</g>
<g >
<title>_$LT$tracing_core..dispatcher..DefaultGuard$u20$as$u20$core..ops..drop..Drop$GT$::drop::_$u7b$$u7b$closure$u7d$$u7d$::h145f658dd437d068 (8 samples, 0.01%)</title><rect x="200.4" y="1269" width="0.2" height="15.0" fill="rgb(209,76,32)" rx="2" ry="2" />
<text  x="203.40" y="1279.5" ></text>
</g>
<g >
<title>noria::table::Table::quick_n_dirty::_$u7b$$u7b$closure$u7d$$u7d$::h3f374431d27411e4 (49 samples, 0.09%)</title><rect x="183.8" y="1525" width="1.0" height="15.0" fill="rgb(242,69,34)" rx="2" ry="2" />
<text  x="186.76" y="1535.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (6 samples, 0.01%)</title><rect x="183.3" y="1525" width="0.1" height="15.0" fill="rgb(235,39,0)" rx="2" ry="2" />
<text  x="186.29" y="1535.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.03%)</title><rect x="1071.6" y="1045" width="0.4" height="15.0" fill="rgb(228,218,41)" rx="2" ry="2" />
<text  x="1074.60" y="1055.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (19 samples, 0.03%)</title><rect x="997.6" y="1205" width="0.4" height="15.0" fill="rgb(239,18,22)" rx="2" ry="2" />
<text  x="1000.61" y="1215.5" ></text>
</g>
<g >
<title>tracing_core::dispatcher::State::set_default (6 samples, 0.01%)</title><rect x="201.1" y="1301" width="0.1" height="15.0" fill="rgb(237,113,52)" rx="2" ry="2" />
<text  x="204.08" y="1311.5" ></text>
</g>
<g >
<title>tsd_reentrancy_level_get (36 samples, 0.06%)</title><rect x="79.5" y="1541" width="0.8" height="15.0" fill="rgb(208,122,20)" rx="2" ry="2" />
<text  x="82.53" y="1551.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (11 samples, 0.02%)</title><rect x="1034.3" y="1333" width="0.3" height="15.0" fill="rgb(224,113,5)" rx="2" ry="2" />
<text  x="1037.34" y="1343.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="1025.6" y="789" width="0.2" height="15.0" fill="rgb(227,101,45)" rx="2" ry="2" />
<text  x="1028.62" y="799.5" ></text>
</g>
<g >
<title>&lt;futures::future::map::Map&lt;A,F&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="193.9" y="1173" width="0.2" height="15.0" fill="rgb(211,61,48)" rx="2" ry="2" />
<text  x="196.90" y="1183.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (5 samples, 0.01%)</title><rect x="1126.3" y="981" width="0.1" height="15.0" fill="rgb(237,38,16)" rx="2" ry="2" />
<text  x="1129.32" y="991.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (78 samples, 0.14%)</title><rect x="1049.7" y="1365" width="1.7" height="15.0" fill="rgb(230,176,46)" rx="2" ry="2" />
<text  x="1052.72" y="1375.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (33 samples, 0.06%)</title><rect x="1035.2" y="1189" width="0.7" height="15.0" fill="rgb(229,16,31)" rx="2" ry="2" />
<text  x="1038.19" y="1199.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (8 samples, 0.01%)</title><rect x="1015.2" y="949" width="0.1" height="15.0" fill="rgb(233,131,52)" rx="2" ry="2" />
<text  x="1018.18" y="959.5" ></text>
</g>
<g >
<title>gen::read (399 samples, 0.72%)</title><rect x="977.3" y="1365" width="8.5" height="15.0" fill="rgb(248,164,53)" rx="2" ry="2" />
<text  x="980.30" y="1375.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_and_swap (7 samples, 0.01%)</title><rect x="1094.0" y="901" width="0.2" height="15.0" fill="rgb(227,39,38)" rx="2" ry="2" />
<text  x="1097.01" y="911.5" ></text>
</g>
<g >
<title>pipe_write (55 samples, 0.10%)</title><rect x="1145.0" y="677" width="1.1" height="15.0" fill="rgb(248,49,11)" rx="2" ry="2" />
<text  x="1147.97" y="687.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (18 samples, 0.03%)</title><rect x="182.3" y="1445" width="0.4" height="15.0" fill="rgb(234,92,14)" rx="2" ry="2" />
<text  x="185.30" y="1455.5" ></text>
</g>
<g >
<title>zookeeper::io::ZkIo::start_timeout (6 samples, 0.01%)</title><rect x="995.0" y="1317" width="0.1" height="15.0" fill="rgb(210,177,38)" rx="2" ry="2" />
<text  x="997.96" y="1327.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (7 samples, 0.01%)</title><rect x="1049.4" y="1301" width="0.1" height="15.0" fill="rgb(218,130,12)" rx="2" ry="2" />
<text  x="1052.38" y="1311.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::BoxedNode&lt;K,V&gt;::from_leaf (107 samples, 0.19%)</title><rect x="279.2" y="1285" width="2.3" height="15.0" fill="rgb(238,67,9)" rx="2" ry="2" />
<text  x="282.18" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (6 samples, 0.01%)</title><rect x="1031.0" y="917" width="0.2" height="15.0" fill="rgb(244,0,17)" rx="2" ry="2" />
<text  x="1034.05" y="927.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::stream::Stream&gt;::poll (5 samples, 0.01%)</title><rect x="1033.5" y="1045" width="0.1" height="15.0" fill="rgb(239,145,25)" rx="2" ry="2" />
<text  x="1036.51" y="1055.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (12 samples, 0.02%)</title><rect x="997.4" y="1061" width="0.2" height="15.0" fill="rgb(236,85,44)" rx="2" ry="2" />
<text  x="1000.35" y="1071.5" ></text>
</g>
<g >
<title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (27 samples, 0.05%)</title><rect x="197.7" y="1269" width="0.6" height="15.0" fill="rgb(212,102,48)" rx="2" ry="2" />
<text  x="200.72" y="1279.5" ></text>
</g>
<g >
<title>&lt;T as mio::sys::unix::uio::VecIo&gt;::writev (13 samples, 0.02%)</title><rect x="1131.3" y="533" width="0.2" height="15.0" fill="rgb(253,53,36)" rx="2" ry="2" />
<text  x="1134.27" y="543.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (64 samples, 0.12%)</title><rect x="1050.0" y="1173" width="1.4" height="15.0" fill="rgb(251,227,7)" rx="2" ry="2" />
<text  x="1053.02" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (5 samples, 0.01%)</title><rect x="180.5" y="1045" width="0.1" height="15.0" fill="rgb(224,106,26)" rx="2" ry="2" />
<text  x="183.45" y="1055.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (13 samples, 0.02%)</title><rect x="1054.0" y="1109" width="0.3" height="15.0" fill="rgb(233,51,36)" rx="2" ry="2" />
<text  x="1057.01" y="1119.5" ></text>
</g>
<g >
<title>futures::task_impl::std::&lt;impl futures::task_impl::Spawn&lt;F&gt;&gt;::wait_future (8 samples, 0.01%)</title><rect x="193.9" y="1365" width="0.2" height="15.0" fill="rgb(224,187,0)" rx="2" ry="2" />
<text  x="196.90" y="1375.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (25 samples, 0.04%)</title><rect x="1026.9" y="1093" width="0.5" height="15.0" fill="rgb(222,189,24)" rx="2" ry="2" />
<text  x="1029.91" y="1103.5" ></text>
</g>
<g >
<title>tokio_sync::oneshot::Inner&lt;T&gt;::set_tx_task (27 samples, 0.05%)</title><rect x="1013.5" y="1541" width="0.6" height="15.0" fill="rgb(226,188,10)" rx="2" ry="2" />
<text  x="1016.50" y="1551.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (12 samples, 0.02%)</title><rect x="1114.2" y="981" width="0.3" height="15.0" fill="rgb(220,130,33)" rx="2" ry="2" />
<text  x="1117.25" y="991.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::will_notify_current (6 samples, 0.01%)</title><rect x="1012.5" y="1381" width="0.1" height="15.0" fill="rgb(254,103,23)" rx="2" ry="2" />
<text  x="1015.50" y="1391.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (348 samples, 0.63%)</title><rect x="195.2" y="1493" width="7.3" height="15.0" fill="rgb(239,182,3)" rx="2" ry="2" />
<text  x="198.16" y="1503.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (10 samples, 0.02%)</title><rect x="1045.6" y="901" width="0.2" height="15.0" fill="rgb(220,170,37)" rx="2" ry="2" />
<text  x="1048.58" y="911.5" ></text>
</g>
<g >
<title>&lt;tokio_tcp::stream::TcpStream as std::io::Read&gt;::read (13 samples, 0.02%)</title><rect x="1037.4" y="1045" width="0.3" height="15.0" fill="rgb(251,176,39)" rx="2" ry="2" />
<text  x="1040.39" y="1055.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (34 samples, 0.06%)</title><rect x="1131.0" y="677" width="0.8" height="15.0" fill="rgb(240,149,4)" rx="2" ry="2" />
<text  x="1134.03" y="687.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (9 samples, 0.02%)</title><rect x="1049.5" y="1381" width="0.2" height="15.0" fill="rgb(247,61,28)" rx="2" ry="2" />
<text  x="1052.53" y="1391.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (11 samples, 0.02%)</title><rect x="977.1" y="1461" width="0.2" height="15.0" fill="rgb(221,113,5)" rx="2" ry="2" />
<text  x="980.07" y="1471.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *const T&gt;::offset (6 samples, 0.01%)</title><rect x="314.7" y="1221" width="0.1" height="15.0" fill="rgb(207,141,30)" rx="2" ry="2" />
<text  x="317.68" y="1231.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (7 samples, 0.01%)</title><rect x="1049.4" y="1413" width="0.1" height="15.0" fill="rgb(238,94,12)" rx="2" ry="2" />
<text  x="1052.38" y="1423.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (12 samples, 0.02%)</title><rect x="1150.8" y="565" width="0.2" height="15.0" fill="rgb(254,160,12)" rx="2" ry="2" />
<text  x="1153.79" y="575.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::Client&lt;T,E&gt; as tower_service::Service&lt;&lt;T as futures::sink::Sink&gt;::SinkItem&gt;&gt;::call (20 samples, 0.04%)</title><rect x="1040.6" y="917" width="0.5" height="15.0" fill="rgb(239,187,17)" rx="2" ry="2" />
<text  x="1043.64" y="927.5" ></text>
</g>
<g >
<title>core::mem::replace (10 samples, 0.02%)</title><rect x="1150.0" y="789" width="0.2" height="15.0" fill="rgb(224,224,6)" rx="2" ry="2" />
<text  x="1153.00" y="799.5" ></text>
</g>
<g >
<title>ip_queue_xmit (37 samples, 0.07%)</title><rect x="1041.8" y="581" width="0.8" height="15.0" fill="rgb(233,48,45)" rx="2" ry="2" />
<text  x="1044.81" y="591.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (13 samples, 0.02%)</title><rect x="1033.4" y="1365" width="0.3" height="15.0" fill="rgb(254,69,13)" rx="2" ry="2" />
<text  x="1036.41" y="1375.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (26 samples, 0.05%)</title><rect x="996.3" y="1509" width="0.5" height="15.0" fill="rgb(227,168,45)" rx="2" ry="2" />
<text  x="999.27" y="1519.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (18 samples, 0.03%)</title><rect x="1034.2" y="1557" width="0.4" height="15.0" fill="rgb(241,132,33)" rx="2" ry="2" />
<text  x="1037.19" y="1567.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (7 samples, 0.01%)</title><rect x="1049.4" y="1285" width="0.1" height="15.0" fill="rgb(217,199,51)" rx="2" ry="2" />
<text  x="1052.38" y="1295.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (13 samples, 0.02%)</title><rect x="1031.9" y="1029" width="0.3" height="15.0" fill="rgb(233,134,0)" rx="2" ry="2" />
<text  x="1034.88" y="1039.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.02%)</title><rect x="1045.6" y="1109" width="0.2" height="15.0" fill="rgb(234,191,33)" rx="2" ry="2" />
<text  x="1048.56" y="1119.5" ></text>
</g>
<g >
<title>tsd_reentrancy_levelp_get_unsafe (12 samples, 0.02%)</title><rect x="80.0" y="1509" width="0.3" height="15.0" fill="rgb(247,75,28)" rx="2" ry="2" />
<text  x="83.04" y="1519.5" ></text>
</g>
<g >
<title>futures::task_impl::std::ThreadNotify::with_current (5 samples, 0.01%)</title><rect x="192.7" y="1381" width="0.1" height="15.0" fill="rgb(232,64,20)" rx="2" ry="2" />
<text  x="195.69" y="1391.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (9 samples, 0.02%)</title><rect x="997.2" y="1109" width="0.2" height="15.0" fill="rgb(205,78,43)" rx="2" ry="2" />
<text  x="1000.16" y="1119.5" ></text>
</g>
<g >
<title>&lt;usize as core::iter::range::Step&gt;::add_usize (9 samples, 0.02%)</title><rect x="1112.4" y="885" width="0.2" height="15.0" fill="rgb(232,10,20)" rx="2" ry="2" />
<text  x="1115.36" y="895.5" ></text>
</g>
<g >
<title>futures::task_impl::std::CURRENT_TASK::__getit (5 samples, 0.01%)</title><rect x="1154.2" y="773" width="0.1" height="15.0" fill="rgb(206,12,9)" rx="2" ry="2" />
<text  x="1157.16" y="783.5" ></text>
</g>
<g >
<title>touch_atime (9 samples, 0.02%)</title><rect x="1096.9" y="709" width="0.2" height="15.0" fill="rgb(205,43,14)" rx="2" ry="2" />
<text  x="1099.93" y="719.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1022.3" y="1157" width="0.1" height="15.0" fill="rgb(239,191,43)" rx="2" ry="2" />
<text  x="1025.33" y="1167.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (8 samples, 0.01%)</title><rect x="1026.3" y="1125" width="0.2" height="15.0" fill="rgb(227,8,48)" rx="2" ry="2" />
<text  x="1029.30" y="1135.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (15 samples, 0.03%)</title><rect x="1034.9" y="1445" width="0.3" height="15.0" fill="rgb(208,182,35)" rx="2" ry="2" />
<text  x="1037.87" y="1455.5" ></text>
</g>
<g >
<title>core::mem::drop (5 samples, 0.01%)</title><rect x="827.4" y="1093" width="0.1" height="15.0" fill="rgb(224,177,11)" rx="2" ry="2" />
<text  x="830.41" y="1103.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.01%)</title><rect x="988.2" y="1093" width="0.2" height="15.0" fill="rgb(229,179,38)" rx="2" ry="2" />
<text  x="991.23" y="1103.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="1029.9" y="805" width="0.3" height="15.0" fill="rgb(208,212,25)" rx="2" ry="2" />
<text  x="1032.95" y="815.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (23 samples, 0.04%)</title><rect x="192.8" y="1253" width="0.5" height="15.0" fill="rgb(210,93,31)" rx="2" ry="2" />
<text  x="195.84" y="1263.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (28 samples, 0.05%)</title><rect x="1035.9" y="1445" width="0.6" height="15.0" fill="rgb(221,147,37)" rx="2" ry="2" />
<text  x="1038.89" y="1455.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::now (5 samples, 0.01%)</title><rect x="1080.4" y="869" width="0.1" height="15.0" fill="rgb(252,5,9)" rx="2" ry="2" />
<text  x="1083.36" y="879.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (144 samples, 0.26%)</title><rect x="1000.0" y="1029" width="3.0" height="15.0" fill="rgb(210,2,3)" rx="2" ry="2" />
<text  x="1002.99" y="1039.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Root&lt;K,V&gt;::into_ref (123 samples, 0.22%)</title><rect x="718.7" y="1301" width="2.6" height="15.0" fill="rgb(239,190,20)" rx="2" ry="2" />
<text  x="721.73" y="1311.5" ></text>
</g>
<g >
<title>bincode::config::Options::deserialize (11 samples, 0.02%)</title><rect x="1055.2" y="1221" width="0.2" height="15.0" fill="rgb(235,217,50)" rx="2" ry="2" />
<text  x="1058.15" y="1231.5" ></text>
</g>
<g >
<title>ep_poll (91 samples, 0.16%)</title><rect x="1104.0" y="837" width="1.9" height="15.0" fill="rgb(250,68,10)" rx="2" ry="2" />
<text  x="1106.98" y="847.5" ></text>
</g>
<g >
<title>jemallocator::layout_to_flags (18 samples, 0.03%)</title><rect x="915.0" y="1205" width="0.3" height="15.0" fill="rgb(231,49,9)" rx="2" ry="2" />
<text  x="917.96" y="1215.5" ></text>
</g>
<g >
<title>futures::sync::oneshot::Inner&lt;T&gt;::drop_rx (6 samples, 0.01%)</title><rect x="1150.9" y="533" width="0.1" height="15.0" fill="rgb(237,30,30)" rx="2" ry="2" />
<text  x="1153.91" y="543.5" ></text>
</g>
<g >
<title>arena_dalloc_bin_locked_impl (5 samples, 0.01%)</title><rect x="1060.5" y="1445" width="0.1" height="15.0" fill="rgb(216,204,44)" rx="2" ry="2" />
<text  x="1063.48" y="1455.5" ></text>
</g>
<g >
<title>noria::view::SyncView::lookup (8 samples, 0.01%)</title><rect x="193.9" y="1429" width="0.2" height="15.0" fill="rgb(218,58,46)" rx="2" ry="2" />
<text  x="196.90" y="1439.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::enqueue_node (27 samples, 0.05%)</title><rect x="1091.6" y="885" width="0.5" height="15.0" fill="rgb(221,56,21)" rx="2" ry="2" />
<text  x="1094.57" y="895.5" ></text>
</g>
<g >
<title>chan::select::Select::recv (11 samples, 0.02%)</title><rect x="991.2" y="1589" width="0.3" height="15.0" fill="rgb(231,62,46)" rx="2" ry="2" />
<text  x="994.24" y="1599.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (19 samples, 0.03%)</title><rect x="1052.6" y="1397" width="0.4" height="15.0" fill="rgb(232,46,48)" rx="2" ry="2" />
<text  x="1055.61" y="1407.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::write (18 samples, 0.03%)</title><rect x="1048.4" y="821" width="0.3" height="15.0" fill="rgb(233,229,39)" rx="2" ry="2" />
<text  x="1051.36" y="831.5" ></text>
</g>
<g >
<title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="996.8" y="1429" width="0.3" height="15.0" fill="rgb(238,43,44)" rx="2" ry="2" />
<text  x="999.82" y="1439.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (18 samples, 0.03%)</title><rect x="1136.1" y="997" width="0.4" height="15.0" fill="rgb(247,154,14)" rx="2" ry="2" />
<text  x="1139.15" y="1007.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (590 samples, 1.06%)</title><rect x="246.4" y="1333" width="12.6" height="15.0" fill="rgb(217,216,20)" rx="2" ry="2" />
<text  x="249.44" y="1343.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_and_swap (10 samples, 0.02%)</title><rect x="1075.1" y="917" width="0.2" height="15.0" fill="rgb(218,188,21)" rx="2" ry="2" />
<text  x="1078.10" y="927.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (234 samples, 0.42%)</title><rect x="1130.4" y="965" width="5.0" height="15.0" fill="rgb(229,191,47)" rx="2" ry="2" />
<text  x="1133.44" y="975.5" ></text>
</g>
<g >
<title>tokio_threadpool::pool::Pool::submit_external (56 samples, 0.10%)</title><rect x="184.8" y="1237" width="1.2" height="15.0" fill="rgb(249,220,10)" rx="2" ry="2" />
<text  x="187.80" y="1247.5" ></text>
</g>
<g >
<title>tcp_data_queue (5 samples, 0.01%)</title><rect x="1039.3" y="261" width="0.1" height="15.0" fill="rgb(249,96,4)" rx="2" ry="2" />
<text  x="1042.28" y="271.5" ></text>
</g>
<g >
<title>tcache_event (10 samples, 0.02%)</title><rect x="990.6" y="1525" width="0.2" height="15.0" fill="rgb(252,8,36)" rx="2" ry="2" />
<text  x="993.59" y="1535.5" ></text>
</g>
<g >
<title>&lt;async_bincode::stream::AsyncBincodeStream&lt;S,R,W,D&gt; as futures::stream::Stream&gt;::poll (17 samples, 0.03%)</title><rect x="1031.3" y="1045" width="0.4" height="15.0" fill="rgb(243,168,31)" rx="2" ry="2" />
<text  x="1034.30" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (15 samples, 0.03%)</title><rect x="193.3" y="1253" width="0.3" height="15.0" fill="rgb(231,75,51)" rx="2" ry="2" />
<text  x="196.33" y="1263.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::notify (22 samples, 0.04%)</title><rect x="1024.0" y="1381" width="0.5" height="15.0" fill="rgb(214,1,41)" rx="2" ry="2" />
<text  x="1027.01" y="1391.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (6 samples, 0.01%)</title><rect x="1031.0" y="1109" width="0.2" height="15.0" fill="rgb(221,53,12)" rx="2" ry="2" />
<text  x="1034.05" y="1119.5" ></text>
</g>
<g >
<title>tokio_tower::mediator::Receiver&lt;T&gt;::try_recv (32 samples, 0.06%)</title><rect x="1055.4" y="1285" width="0.7" height="15.0" fill="rgb(226,112,32)" rx="2" ry="2" />
<text  x="1058.39" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (29 samples, 0.05%)</title><rect x="1031.2" y="1205" width="0.6" height="15.0" fill="rgb(221,127,51)" rx="2" ry="2" />
<text  x="1034.18" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (7 samples, 0.01%)</title><rect x="1055.6" y="1205" width="0.2" height="15.0" fill="rgb(227,134,51)" rx="2" ry="2" />
<text  x="1058.64" y="1215.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::poll_future_notify::_$u7b$$u7b$closure$u7d$$u7d$::h46b6efaabf0cf9f9 (93 samples, 0.17%)</title><rect x="1057.1" y="1333" width="2.0" height="15.0" fill="rgb(211,4,27)" rx="2" ry="2" />
<text  x="1060.09" y="1343.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (20 samples, 0.04%)</title><rect x="1059.3" y="1285" width="0.4" height="15.0" fill="rgb(240,226,18)" rx="2" ry="2" />
<text  x="1062.29" y="1295.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (9 samples, 0.02%)</title><rect x="1003.7" y="1525" width="0.2" height="15.0" fill="rgb(219,33,52)" rx="2" ry="2" />
<text  x="1006.74" y="1535.5" ></text>
</g>
<g >
<title>&lt;chrono::naive::datetime::serde::&lt;impl serde::ser::Serialize for chrono::naive::datetime::NaiveDateTime&gt;::serialize::FormatWrapped&lt;D&gt; as core::fmt::Display&gt;::fmt (57 samples, 0.10%)</title><rect x="998.7" y="1061" width="1.2" height="15.0" fill="rgb(244,119,48)" rx="2" ry="2" />
<text  x="1001.71" y="1071.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (60 samples, 0.11%)</title><rect x="1044.9" y="1317" width="1.3" height="15.0" fill="rgb(217,159,4)" rx="2" ry="2" />
<text  x="1047.93" y="1327.5" ></text>
</g>
<g >
<title>&lt;futures::stream::futures_unordered::FuturesUnordered&lt;T&gt; as futures::stream::Stream&gt;::poll (136 samples, 0.24%)</title><rect x="1006.1" y="1525" width="2.9" height="15.0" fill="rgb(247,167,9)" rx="2" ry="2" />
<text  x="1009.08" y="1535.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (399 samples, 0.72%)</title><rect x="977.3" y="1429" width="8.5" height="15.0" fill="rgb(248,217,43)" rx="2" ry="2" />
<text  x="980.30" y="1439.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (12 samples, 0.02%)</title><rect x="1022.2" y="1429" width="0.2" height="15.0" fill="rgb(233,180,7)" rx="2" ry="2" />
<text  x="1025.18" y="1439.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (338 samples, 0.61%)</title><rect x="251.8" y="1301" width="7.2" height="15.0" fill="rgb(217,48,20)" rx="2" ry="2" />
<text  x="254.79" y="1311.5" ></text>
</g>
<g >
<title>tokio_reactor::poll_evented::PollEvented&lt;E&gt;::clear_read_ready (12 samples, 0.02%)</title><rect x="1046.2" y="1189" width="0.3" height="15.0" fill="rgb(245,37,31)" rx="2" ry="2" />
<text  x="1049.20" y="1199.5" ></text>
</g>
<g >
<title>core::mem::take (5 samples, 0.01%)</title><rect x="183.3" y="1509" width="0.1" height="15.0" fill="rgb(219,72,18)" rx="2" ry="2" />
<text  x="186.32" y="1519.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (9 samples, 0.02%)</title><rect x="997.2" y="1125" width="0.2" height="15.0" fill="rgb(251,94,24)" rx="2" ry="2" />
<text  x="1000.16" y="1135.5" ></text>
</g>
<g >
<title>&lt;crossbeam_utils::cache_padded::CachePadded&lt;T&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="1121.6" y="1045" width="0.1" height="15.0" fill="rgb(216,170,45)" rx="2" ry="2" />
<text  x="1124.59" y="1055.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (15 samples, 0.03%)</title><rect x="1028.1" y="1253" width="0.3" height="15.0" fill="rgb(246,121,6)" rx="2" ry="2" />
<text  x="1031.06" y="1263.5" ></text>
</g>
<g >
<title>__vfs_write (16 samples, 0.03%)</title><rect x="185.3" y="885" width="0.4" height="15.0" fill="rgb(241,55,43)" rx="2" ry="2" />
<text  x="188.33" y="895.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Root&lt;K,V&gt;::as_ref (76 samples, 0.14%)</title><rect x="273.7" y="1285" width="1.6" height="15.0" fill="rgb(210,33,21)" rx="2" ry="2" />
<text  x="276.67" y="1295.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (13 samples, 0.02%)</title><rect x="1027.7" y="1125" width="0.3" height="15.0" fill="rgb(226,129,17)" rx="2" ry="2" />
<text  x="1030.74" y="1135.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 0.02%)</title><rect x="1029.9" y="1413" width="0.3" height="15.0" fill="rgb(218,94,33)" rx="2" ry="2" />
<text  x="1032.95" y="1423.5" ></text>
</g>
<g >
<title>isdalloct (22 samples, 0.04%)</title><rect x="1018.7" y="1557" width="0.5" height="15.0" fill="rgb(239,128,25)" rx="2" ry="2" />
<text  x="1021.74" y="1567.5" ></text>
</g>
<g >
<title>std::panicking::try (9 samples, 0.02%)</title><rect x="997.2" y="1141" width="0.2" height="15.0" fill="rgb(224,79,13)" rx="2" ry="2" />
<text  x="1000.16" y="1151.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (10 samples, 0.02%)</title><rect x="431.2" y="1237" width="0.2" height="15.0" fill="rgb(205,107,15)" rx="2" ry="2" />
<text  x="434.15" y="1247.5" ></text>
</g>
<g >
<title>ip_queue_xmit (39 samples, 0.07%)</title><rect x="1050.1" y="645" width="0.9" height="15.0" fill="rgb(210,162,51)" rx="2" ry="2" />
<text  x="1053.13" y="655.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (26 samples, 0.05%)</title><rect x="1022.9" y="1477" width="0.6" height="15.0" fill="rgb(221,7,33)" rx="2" ry="2" />
<text  x="1025.92" y="1487.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (7 samples, 0.01%)</title><rect x="1049.4" y="1397" width="0.1" height="15.0" fill="rgb(240,36,26)" rx="2" ry="2" />
<text  x="1052.38" y="1407.5" ></text>
</g>
<g >
<title>futures::task_impl::NotifyHandle::notify (5 samples, 0.01%)</title><rect x="997.0" y="1317" width="0.1" height="15.0" fill="rgb(241,176,29)" rx="2" ry="2" />
<text  x="999.95" y="1327.5" ></text>
</g>
<g >
<title>_$LT$alloc..collections..btree..map..Keys$LT$K$C$V$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::_$u7b$$u7b$closure$u7d$$u7d$::h1f10e2dcb0e28f2b (7 samples, 0.01%)</title><rect x="655.5" y="1189" width="0.1" height="15.0" fill="rgb(221,36,6)" rx="2" ry="2" />
<text  x="658.50" y="1199.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (33 samples, 0.06%)</title><rect x="789.2" y="1157" width="0.7" height="15.0" fill="rgb(238,157,1)" rx="2" ry="2" />
<text  x="792.24" y="1167.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (6 samples, 0.01%)</title><rect x="1134.2" y="453" width="0.1" height="15.0" fill="rgb(221,8,33)" rx="2" ry="2" />
<text  x="1137.22" y="463.5" ></text>
</g>
<g >
<title>mio::poll::enqueue_with_wakeup (27 samples, 0.05%)</title><rect x="1028.4" y="949" width="0.6" height="15.0" fill="rgb(223,149,34)" rx="2" ry="2" />
<text  x="1031.40" y="959.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (20 samples, 0.04%)</title><rect x="1036.5" y="1381" width="0.4" height="15.0" fill="rgb(253,197,36)" rx="2" ry="2" />
<text  x="1039.48" y="1391.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (9 samples, 0.02%)</title><rect x="1025.4" y="869" width="0.2" height="15.0" fill="rgb(234,76,13)" rx="2" ry="2" />
<text  x="1028.43" y="879.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (20 samples, 0.04%)</title><rect x="1038.0" y="1269" width="0.4" height="15.0" fill="rgb(249,49,2)" rx="2" ry="2" />
<text  x="1040.99" y="1279.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_enum (10 samples, 0.02%)</title><rect x="1055.2" y="1029" width="0.2" height="15.0" fill="rgb(227,3,53)" rx="2" ry="2" />
<text  x="1058.15" y="1039.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (25 samples, 0.04%)</title><rect x="1026.9" y="1189" width="0.5" height="15.0" fill="rgb(242,152,51)" rx="2" ry="2" />
<text  x="1029.91" y="1199.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::hd62e8ff28cbc3286 (5 samples, 0.01%)</title><rect x="189.7" y="1205" width="0.1" height="15.0" fill="rgb(227,87,18)" rx="2" ry="2" />
<text  x="192.70" y="1215.5" ></text>
</g>
<g >
<title>tcache_event (197 samples, 0.35%)</title><rect x="60.6" y="1477" width="4.2" height="15.0" fill="rgb(234,14,51)" rx="2" ry="2" />
<text  x="63.61" y="1487.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (6 samples, 0.01%)</title><rect x="1031.0" y="1077" width="0.2" height="15.0" fill="rgb(228,70,42)" rx="2" ry="2" />
<text  x="1034.05" y="1087.5" ></text>
</g>
<g >
<title>gen::read (15 samples, 0.03%)</title><rect x="188.6" y="1589" width="0.4" height="15.0" fill="rgb(218,192,35)" rx="2" ry="2" />
<text  x="191.64" y="1599.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (13 samples, 0.02%)</title><rect x="1054.0" y="1045" width="0.3" height="15.0" fill="rgb(249,29,37)" rx="2" ry="2" />
<text  x="1057.01" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::add (5 samples, 0.01%)</title><rect x="1099.4" y="885" width="0.1" height="15.0" fill="rgb(237,151,9)" rx="2" ry="2" />
<text  x="1102.40" y="895.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (112 samples, 0.20%)</title><rect x="997.6" y="1525" width="2.4" height="15.0" fill="rgb(238,172,39)" rx="2" ry="2" />
<text  x="1000.61" y="1535.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::is_null (49 samples, 0.09%)</title><rect x="509.1" y="1285" width="1.0" height="15.0" fill="rgb(205,80,4)" rx="2" ry="2" />
<text  x="512.07" y="1295.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (48 samples, 0.09%)</title><rect x="1034.9" y="1509" width="1.0" height="15.0" fill="rgb(247,193,50)" rx="2" ry="2" />
<text  x="1037.87" y="1519.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (6 samples, 0.01%)</title><rect x="998.5" y="901" width="0.1" height="15.0" fill="rgb(250,190,53)" rx="2" ry="2" />
<text  x="1001.48" y="911.5" ></text>
</g>
<g >
<title>core::mem::swap (11 samples, 0.02%)</title><rect x="1129.6" y="917" width="0.2" height="15.0" fill="rgb(228,142,39)" rx="2" ry="2" />
<text  x="1132.57" y="927.5" ></text>
</g>
<g >
<title>&lt;tokio_tcp::stream::TcpStream as std::io::Read&gt;::read (21 samples, 0.04%)</title><rect x="1035.4" y="1029" width="0.4" height="15.0" fill="rgb(240,133,9)" rx="2" ry="2" />
<text  x="1038.38" y="1039.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (399 samples, 0.72%)</title><rect x="977.3" y="1397" width="8.5" height="15.0" fill="rgb(249,37,2)" rx="2" ry="2" />
<text  x="980.30" y="1407.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (15 samples, 0.03%)</title><rect x="1034.9" y="1205" width="0.3" height="15.0" fill="rgb(250,140,46)" rx="2" ry="2" />
<text  x="1037.87" y="1215.5" ></text>
</g>
<g >
<title>core::mem::swap (5 samples, 0.01%)</title><rect x="183.3" y="1477" width="0.1" height="15.0" fill="rgb(246,138,1)" rx="2" ry="2" />
<text  x="186.32" y="1487.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (22 samples, 0.04%)</title><rect x="1059.9" y="1333" width="0.5" height="15.0" fill="rgb(210,190,21)" rx="2" ry="2" />
<text  x="1062.89" y="1343.5" ></text>
</g>
<g >
<title>futures::task_impl::current (5 samples, 0.01%)</title><rect x="1034.5" y="1157" width="0.1" height="15.0" fill="rgb(241,184,38)" rx="2" ry="2" />
<text  x="1037.47" y="1167.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (10 samples, 0.02%)</title><rect x="1026.0" y="1189" width="0.2" height="15.0" fill="rgb(238,34,40)" rx="2" ry="2" />
<text  x="1028.98" y="1199.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (20 samples, 0.04%)</title><rect x="1059.3" y="1429" width="0.4" height="15.0" fill="rgb(242,134,47)" rx="2" ry="2" />
<text  x="1062.29" y="1439.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::ClientInner&lt;T,E&gt; as futures::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="1033.4" y="1061" width="0.3" height="15.0" fill="rgb(231,64,45)" rx="2" ry="2" />
<text  x="1036.41" y="1071.5" ></text>
</g>
<g >
<title>sock_sendmsg (47 samples, 0.08%)</title><rect x="1041.7" y="709" width="1.0" height="15.0" fill="rgb(248,14,13)" rx="2" ry="2" />
<text  x="1044.70" y="719.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (17 samples, 0.03%)</title><rect x="984.9" y="1221" width="0.4" height="15.0" fill="rgb(245,37,0)" rx="2" ry="2" />
<text  x="987.94" y="1231.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (15 samples, 0.03%)</title><rect x="10.7" y="1013" width="0.3" height="15.0" fill="rgb(214,156,36)" rx="2" ry="2" />
<text  x="13.66" y="1023.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (8 samples, 0.01%)</title><rect x="1059.7" y="1381" width="0.2" height="15.0" fill="rgb(253,169,52)" rx="2" ry="2" />
<text  x="1062.72" y="1391.5" ></text>
</g>
<g >
<title>bincode::internal::deserialize_seed (7 samples, 0.01%)</title><rect x="1058.1" y="1173" width="0.2" height="15.0" fill="rgb(251,213,40)" rx="2" ry="2" />
<text  x="1061.10" y="1183.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (48 samples, 0.09%)</title><rect x="1034.9" y="1493" width="1.0" height="15.0" fill="rgb(249,216,25)" rx="2" ry="2" />
<text  x="1037.87" y="1503.5" ></text>
</g>
<g >
<title>&lt;futures::future::then::Then&lt;A,B,F&gt; as futures::future::Future&gt;::poll (114 samples, 0.20%)</title><rect x="1150.4" y="757" width="2.4" height="15.0" fill="rgb(206,204,20)" rx="2" ry="2" />
<text  x="1153.43" y="767.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (11 samples, 0.02%)</title><rect x="1036.9" y="1221" width="0.2" height="15.0" fill="rgb(244,25,40)" rx="2" ry="2" />
<text  x="1039.91" y="1231.5" ></text>
</g>
<g >
<title>std::sync::condvar::Condvar::wait (28 samples, 0.05%)</title><rect x="981.9" y="1173" width="0.6" height="15.0" fill="rgb(238,107,3)" rx="2" ry="2" />
<text  x="984.91" y="1183.5" ></text>
</g>
<g >
<title>generic_perform_write (5 samples, 0.01%)</title><rect x="983.5" y="949" width="0.1" height="15.0" fill="rgb(226,26,23)" rx="2" ry="2" />
<text  x="986.54" y="959.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (8 samples, 0.01%)</title><rect x="1034.7" y="1301" width="0.2" height="15.0" fill="rgb(241,199,4)" rx="2" ry="2" />
<text  x="1037.70" y="1311.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (17 samples, 0.03%)</title><rect x="402.5" y="1269" width="0.3" height="15.0" fill="rgb(245,203,47)" rx="2" ry="2" />
<text  x="405.48" y="1279.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (11 samples, 0.02%)</title><rect x="1034.0" y="1333" width="0.2" height="15.0" fill="rgb(234,91,21)" rx="2" ry="2" />
<text  x="1036.96" y="1343.5" ></text>
</g>
<g >
<title>tokio_timer::timer::Timer&lt;T,N&gt;::process (247 samples, 0.44%)</title><rect x="1113.8" y="1013" width="5.3" height="15.0" fill="rgb(226,226,22)" rx="2" ry="2" />
<text  x="1116.85" y="1023.5" ></text>
</g>
<g >
<title>core::alloc::Layout::new (103 samples, 0.19%)</title><rect x="733.6" y="1253" width="2.2" height="15.0" fill="rgb(215,31,48)" rx="2" ry="2" />
<text  x="736.63" y="1263.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (7 samples, 0.01%)</title><rect x="1050.5" y="293" width="0.2" height="15.0" fill="rgb(208,210,38)" rx="2" ry="2" />
<text  x="1053.53" y="303.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (9 samples, 0.02%)</title><rect x="1180.3" y="805" width="0.2" height="15.0" fill="rgb(228,73,42)" rx="2" ry="2" />
<text  x="1183.32" y="815.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::get (37 samples, 0.07%)</title><rect x="589.2" y="1109" width="0.8" height="15.0" fill="rgb(231,98,12)" rx="2" ry="2" />
<text  x="592.17" y="1119.5" ></text>
</g>
<g >
<title>noria::table::SyncTable::insert (9 samples, 0.02%)</title><rect x="10.0" y="1397" width="0.2" height="15.0" fill="rgb(210,21,12)" rx="2" ry="2" />
<text  x="13.02" y="1407.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (25 samples, 0.04%)</title><rect x="1026.9" y="1141" width="0.5" height="15.0" fill="rgb(250,149,8)" rx="2" ry="2" />
<text  x="1029.91" y="1151.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.02%)</title><rect x="199.0" y="1125" width="0.2" height="15.0" fill="rgb(218,213,28)" rx="2" ry="2" />
<text  x="201.97" y="1135.5" ></text>
</g>
<g >
<title>core::mem::replace (6 samples, 0.01%)</title><rect x="1008.1" y="1365" width="0.2" height="15.0" fill="rgb(220,107,9)" rx="2" ry="2" />
<text  x="1011.13" y="1375.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *mut T&gt;::add (84 samples, 0.15%)</title><rect x="378.2" y="1237" width="1.8" height="15.0" fill="rgb(236,58,21)" rx="2" ry="2" />
<text  x="381.23" y="1247.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (3,212 samples, 5.78%)</title><rect x="632.1" y="1317" width="68.1" height="15.0" fill="rgb(205,183,33)" rx="2" ry="2" />
<text  x="635.05" y="1327.5" >core::i..</text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (37 samples, 0.07%)</title><rect x="186.3" y="1461" width="0.7" height="15.0" fill="rgb(250,226,39)" rx="2" ry="2" />
<text  x="189.26" y="1471.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::h7fdc06b51efca05a (8 samples, 0.01%)</title><rect x="193.9" y="1589" width="0.2" height="15.0" fill="rgb(242,187,35)" rx="2" ry="2" />
<text  x="196.90" y="1599.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (50 samples, 0.09%)</title><rect x="192.8" y="1573" width="1.1" height="15.0" fill="rgb(226,110,30)" rx="2" ry="2" />
<text  x="195.84" y="1583.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="1015.2" y="917" width="0.1" height="15.0" fill="rgb(231,46,9)" rx="2" ry="2" />
<text  x="1018.18" y="927.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (50 samples, 0.09%)</title><rect x="980.2" y="1141" width="1.1" height="15.0" fill="rgb(225,47,10)" rx="2" ry="2" />
<text  x="983.23" y="1151.5" ></text>
</g>
<g >
<title>noria::table::_::&lt;impl serde::ser::Serialize for noria::table::Input&gt;::serialize (33 samples, 0.06%)</title><rect x="998.0" y="1381" width="0.7" height="15.0" fill="rgb(205,28,11)" rx="2" ry="2" />
<text  x="1001.01" y="1391.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (6 samples, 0.01%)</title><rect x="1027.4" y="1077" width="0.2" height="15.0" fill="rgb(230,209,42)" rx="2" ry="2" />
<text  x="1030.44" y="1087.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="1005.5" y="1365" width="0.3" height="15.0" fill="rgb(208,195,15)" rx="2" ry="2" />
<text  x="1008.50" y="1375.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (33 samples, 0.06%)</title><rect x="10.4" y="1461" width="0.7" height="15.0" fill="rgb(216,39,26)" rx="2" ry="2" />
<text  x="13.40" y="1471.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (139 samples, 0.25%)</title><rect x="843.7" y="1109" width="2.9" height="15.0" fill="rgb(231,153,20)" rx="2" ry="2" />
<text  x="846.67" y="1119.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="601.8" y="1013" width="0.1" height="15.0" fill="rgb(221,7,47)" rx="2" ry="2" />
<text  x="604.77" y="1023.5" ></text>
</g>
<g >
<title>core::fmt::Write::write_fmt (19 samples, 0.03%)</title><rect x="997.6" y="1093" width="0.4" height="15.0" fill="rgb(221,146,29)" rx="2" ry="2" />
<text  x="1000.61" y="1103.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (13 samples, 0.02%)</title><rect x="988.5" y="1109" width="0.2" height="15.0" fill="rgb(219,40,38)" rx="2" ry="2" />
<text  x="991.46" y="1119.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (32 samples, 0.06%)</title><rect x="1037.1" y="1253" width="0.7" height="15.0" fill="rgb(220,47,47)" rx="2" ry="2" />
<text  x="1040.14" y="1263.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (5 samples, 0.01%)</title><rect x="1035.9" y="1029" width="0.1" height="15.0" fill="rgb(215,214,54)" rx="2" ry="2" />
<text  x="1038.89" y="1039.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.01%)</title><rect x="986.3" y="1221" width="0.1" height="15.0" fill="rgb(218,224,8)" rx="2" ry="2" />
<text  x="989.26" y="1231.5" ></text>
</g>
<g >
<title>&lt;jemallocator::Jemalloc as core::alloc::GlobalAlloc&gt;::dealloc (38 samples, 0.07%)</title><rect x="729.5" y="1205" width="0.8" height="15.0" fill="rgb(236,53,23)" rx="2" ry="2" />
<text  x="732.49" y="1215.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (13 samples, 0.02%)</title><rect x="1031.9" y="1061" width="0.3" height="15.0" fill="rgb(232,90,8)" rx="2" ry="2" />
<text  x="1034.88" y="1071.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::clone_id (8 samples, 0.01%)</title><rect x="1013.8" y="1397" width="0.2" height="15.0" fill="rgb(249,207,36)" rx="2" ry="2" />
<text  x="1016.84" y="1407.5" ></text>
</g>
<g >
<title>futures::future::Future::wait (6 samples, 0.01%)</title><rect x="989.3" y="1269" width="0.1" height="15.0" fill="rgb(212,2,51)" rx="2" ry="2" />
<text  x="992.27" y="1279.5" ></text>
</g>
<g >
<title>check_entry_exit_locking (20 samples, 0.04%)</title><rect x="125.3" y="1557" width="0.4" height="15.0" fill="rgb(211,27,26)" rx="2" ry="2" />
<text  x="128.26" y="1567.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (14 samples, 0.03%)</title><rect x="1049.7" y="1157" width="0.3" height="15.0" fill="rgb(220,108,30)" rx="2" ry="2" />
<text  x="1052.72" y="1167.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (10 samples, 0.02%)</title><rect x="1053.7" y="1141" width="0.2" height="15.0" fill="rgb(238,50,11)" rx="2" ry="2" />
<text  x="1056.67" y="1151.5" ></text>
</g>
<g >
<title>http::header::name::parse_hdr (7 samples, 0.01%)</title><rect x="1024.6" y="1589" width="0.2" height="15.0" fill="rgb(250,89,52)" rx="2" ry="2" />
<text  x="1027.64" y="1599.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (37 samples, 0.07%)</title><rect x="851.6" y="1125" width="0.7" height="15.0" fill="rgb(219,130,15)" rx="2" ry="2" />
<text  x="854.56" y="1135.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping (6 samples, 0.01%)</title><rect x="1003.8" y="1445" width="0.1" height="15.0" fill="rgb(207,150,54)" rx="2" ry="2" />
<text  x="1006.80" y="1455.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run (6 samples, 0.01%)</title><rect x="1030.2" y="1285" width="0.1" height="15.0" fill="rgb(229,118,31)" rx="2" ry="2" />
<text  x="1033.20" y="1295.5" ></text>
</g>
<g >
<title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (6 samples, 0.01%)</title><rect x="996.4" y="1429" width="0.1" height="15.0" fill="rgb(216,216,3)" rx="2" ry="2" />
<text  x="999.40" y="1439.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Selector::select (125 samples, 0.22%)</title><rect x="1077.7" y="901" width="2.7" height="15.0" fill="rgb(231,225,52)" rx="2" ry="2" />
<text  x="1080.71" y="911.5" ></text>
</g>
<g >
<title>async_bincode::reader::AsyncBincodeReader&lt;R,T&gt;::fill (11 samples, 0.02%)</title><rect x="1038.1" y="1061" width="0.2" height="15.0" fill="rgb(222,48,19)" rx="2" ry="2" />
<text  x="1041.12" y="1071.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::register (6 samples, 0.01%)</title><rect x="1034.4" y="1173" width="0.2" height="15.0" fill="rgb(209,23,30)" rx="2" ry="2" />
<text  x="1037.44" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping (5 samples, 0.01%)</title><rect x="1047.3" y="1221" width="0.2" height="15.0" fill="rgb(227,9,1)" rx="2" ry="2" />
<text  x="1050.35" y="1231.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1034.6" y="1205" width="0.1" height="15.0" fill="rgb(206,90,46)" rx="2" ry="2" />
<text  x="1037.57" y="1215.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (28 samples, 0.05%)</title><rect x="1037.8" y="1445" width="0.6" height="15.0" fill="rgb(231,159,21)" rx="2" ry="2" />
<text  x="1040.82" y="1455.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (5 samples, 0.01%)</title><rect x="11.1" y="1429" width="0.1" height="15.0" fill="rgb(215,120,51)" rx="2" ry="2" />
<text  x="14.10" y="1439.5" ></text>
</g>
<g >
<title>sys_epoll_wait (27 samples, 0.05%)</title><rect x="1113.0" y="853" width="0.6" height="15.0" fill="rgb(239,126,26)" rx="2" ry="2" />
<text  x="1116.00" y="863.5" ></text>
</g>
<g >
<title>bincode::internal::deserialize (24 samples, 0.04%)</title><rect x="1046.6" y="1237" width="0.5" height="15.0" fill="rgb(248,204,36)" rx="2" ry="2" />
<text  x="1049.60" y="1247.5" ></text>
</g>
<g >
<title>byteorder::io::WriteBytesExt::write_u32 (6 samples, 0.01%)</title><rect x="1039.9" y="885" width="0.1" height="15.0" fill="rgb(223,54,36)" rx="2" ry="2" />
<text  x="1042.88" y="895.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (26 samples, 0.05%)</title><rect x="1020.0" y="1541" width="0.6" height="15.0" fill="rgb(212,33,30)" rx="2" ry="2" />
<text  x="1023.04" y="1551.5" ></text>
</g>
<g >
<title>core::mem::align_of (7 samples, 0.01%)</title><rect x="323.2" y="1237" width="0.1" height="15.0" fill="rgb(208,51,44)" rx="2" ry="2" />
<text  x="326.19" y="1247.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::notify (110 samples, 0.20%)</title><rect x="1107.3" y="869" width="2.3" height="15.0" fill="rgb(214,69,54)" rx="2" ry="2" />
<text  x="1110.29" y="879.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::ioevent_to_epoll (28 samples, 0.05%)</title><rect x="1092.9" y="885" width="0.6" height="15.0" fill="rgb(236,204,6)" rx="2" ry="2" />
<text  x="1095.95" y="895.5" ></text>
</g>
<g >
<title>tokio_timer::timer::handle::with_default (12 samples, 0.02%)</title><rect x="1033.7" y="1365" width="0.2" height="15.0" fill="rgb(251,83,37)" rx="2" ry="2" />
<text  x="1036.68" y="1375.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::core::TaskUnpark as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="1007.0" y="1445" width="0.1" height="15.0" fill="rgb(218,76,53)" rx="2" ry="2" />
<text  x="1010.03" y="1455.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_future_notify (9 samples, 0.02%)</title><rect x="1051.4" y="1109" width="0.2" height="15.0" fill="rgb(219,20,17)" rx="2" ry="2" />
<text  x="1054.38" y="1119.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_destroy (18 samples, 0.03%)</title><rect x="907.1" y="1221" width="0.4" height="15.0" fill="rgb(250,34,32)" rx="2" ry="2" />
<text  x="910.07" y="1231.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::h94f53a438a5f0e65 (6 samples, 0.01%)</title><rect x="1151.1" y="677" width="0.1" height="15.0" fill="rgb(218,73,51)" rx="2" ry="2" />
<text  x="1154.11" y="687.5" ></text>
</g>
<g >
<title>&lt;tower_buffer::future::ResponseFuture&lt;T&gt; as futures::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="194.1" y="1301" width="0.2" height="15.0" fill="rgb(235,108,15)" rx="2" ry="2" />
<text  x="197.07" y="1311.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (27 samples, 0.05%)</title><rect x="1030.5" y="917" width="0.5" height="15.0" fill="rgb(238,97,12)" rx="2" ry="2" />
<text  x="1033.48" y="927.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h8ff71702db2b114d (14 samples, 0.03%)</title><rect x="1034.6" y="1525" width="0.3" height="15.0" fill="rgb(240,35,41)" rx="2" ry="2" />
<text  x="1037.57" y="1535.5" ></text>
</g>
<g >
<title>pipe_write (16 samples, 0.03%)</title><rect x="1024.1" y="901" width="0.3" height="15.0" fill="rgb(246,64,1)" rx="2" ry="2" />
<text  x="1027.09" y="911.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (305 samples, 0.55%)</title><rect x="876.9" y="1285" width="6.4" height="15.0" fill="rgb(218,206,41)" rx="2" ry="2" />
<text  x="879.87" y="1295.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (16 samples, 0.03%)</title><rect x="996.8" y="1477" width="0.4" height="15.0" fill="rgb(224,30,0)" rx="2" ry="2" />
<text  x="999.82" y="1487.5" ></text>
</g>
<g >
<title>noria::internal::proto::_::&lt;impl serde::ser::Serialize for noria::internal::proto::LocalOrNotInner&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="1022.3" y="1317" width="0.1" height="15.0" fill="rgb(207,177,50)" rx="2" ry="2" />
<text  x="1025.33" y="1327.5" ></text>
</g>
<g >
<title>sys_recvfrom (7 samples, 0.01%)</title><rect x="1031.4" y="789" width="0.2" height="15.0" fill="rgb(218,182,33)" rx="2" ry="2" />
<text  x="1034.43" y="799.5" ></text>
</g>
<g >
<title>futures::future::chain::Chain&lt;A,B,C&gt;::poll (15 samples, 0.03%)</title><rect x="188.6" y="1285" width="0.4" height="15.0" fill="rgb(208,197,38)" rx="2" ry="2" />
<text  x="191.64" y="1295.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::into_key_slice (94 samples, 0.17%)</title><rect x="648.8" y="1141" width="1.9" height="15.0" fill="rgb(229,40,18)" rx="2" ry="2" />
<text  x="651.75" y="1151.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn$LT$T$GT$::enter::_$u7b$$u7b$closure$u7d$$u7d$::h25966c63a90280c3 (72 samples, 0.13%)</title><rect x="1027.4" y="1429" width="1.6" height="15.0" fill="rgb(206,109,45)" rx="2" ry="2" />
<text  x="1030.44" y="1439.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (20 samples, 0.04%)</title><rect x="1029.0" y="965" width="0.4" height="15.0" fill="rgb(250,202,23)" rx="2" ry="2" />
<text  x="1031.97" y="975.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify (6 samples, 0.01%)</title><rect x="1034.6" y="1285" width="0.1" height="15.0" fill="rgb(226,110,46)" rx="2" ry="2" />
<text  x="1037.57" y="1295.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (91 samples, 0.16%)</title><rect x="276.4" y="1253" width="1.9" height="15.0" fill="rgb(221,46,26)" rx="2" ry="2" />
<text  x="279.38" y="1263.5" ></text>
</g>
<g >
<title>tokio_sync::loom::sync::CausalCell&lt;T&gt;::with_mut (12 samples, 0.02%)</title><rect x="1011.6" y="1461" width="0.2" height="15.0" fill="rgb(234,176,18)" rx="2" ry="2" />
<text  x="1014.59" y="1471.5" ></text>
</g>
<g >
<title>futures::task_impl::core::TaskUnpark::notify (33 samples, 0.06%)</title><rect x="10.4" y="1429" width="0.7" height="15.0" fill="rgb(249,31,19)" rx="2" ry="2" />
<text  x="13.40" y="1439.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h3d3457b86cb67885 (10 samples, 0.02%)</title><rect x="1026.0" y="1509" width="0.2" height="15.0" fill="rgb(254,12,2)" rx="2" ry="2" />
<text  x="1028.98" y="1519.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,D&gt; as futures::sink::Sink&gt;::start_send (14 samples, 0.03%)</title><rect x="1039.8" y="917" width="0.3" height="15.0" fill="rgb(254,186,40)" rx="2" ry="2" />
<text  x="1042.79" y="927.5" ></text>
</g>
<g >
<title>tsd_reentrancy_level_get (127 samples, 0.23%)</title><rect x="161.3" y="1557" width="2.7" height="15.0" fill="rgb(206,203,16)" rx="2" ry="2" />
<text  x="164.29" y="1567.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessState::effective_readiness (8 samples, 0.01%)</title><rect x="1077.2" y="885" width="0.2" height="15.0" fill="rgb(207,200,43)" rx="2" ry="2" />
<text  x="1080.22" y="895.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (588 samples, 1.06%)</title><rect x="859.4" y="1333" width="12.5" height="15.0" fill="rgb(252,161,33)" rx="2" ry="2" />
<text  x="862.41" y="1343.5" ></text>
</g>
<g >
<title>indexmap::map::OrderMapCore&lt;K,V&gt;::swap_remove_found_impl (16 samples, 0.03%)</title><rect x="1010.4" y="1461" width="0.4" height="15.0" fill="rgb(210,32,47)" rx="2" ry="2" />
<text  x="1013.43" y="1471.5" ></text>
</g>
<g >
<title>&lt;tokio_threadpool::notifier::Notifier as futures::task_impl::Notify&gt;::notify (23 samples, 0.04%)</title><rect x="1014.5" y="1253" width="0.4" height="15.0" fill="rgb(225,168,10)" rx="2" ry="2" />
<text  x="1017.46" y="1263.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (17 samples, 0.03%)</title><rect x="1023.0" y="1125" width="0.3" height="15.0" fill="rgb(236,94,17)" rx="2" ry="2" />
<text  x="1025.97" y="1135.5" ></text>
</g>
<g >
<title>futures::task_impl::Task::notify (6 samples, 0.01%)</title><rect x="1150.9" y="517" width="0.1" height="15.0" fill="rgb(213,149,44)" rx="2" ry="2" />
<text  x="1153.91" y="527.5" ></text>
</g>
<g >
<title>futures::task_impl::atomic_task::AtomicTask::register (7 samples, 0.01%)</title><rect x="1051.7" y="1221" width="0.1" height="15.0" fill="rgb(231,54,40)" rx="2" ry="2" />
<text  x="1054.70" y="1231.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (44 samples, 0.08%)</title><rect x="1023.7" y="1589" width="0.9" height="15.0" fill="rgb(214,162,11)" rx="2" ry="2" />
<text  x="1026.71" y="1599.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (7 samples, 0.01%)</title><rect x="988.0" y="1141" width="0.2" height="15.0" fill="rgb(228,52,21)" rx="2" ry="2" />
<text  x="991.04" y="1151.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task2 (8 samples, 0.01%)</title><rect x="1059.7" y="1493" width="0.2" height="15.0" fill="rgb(225,40,27)" rx="2" ry="2" />
<text  x="1062.72" y="1503.5" ></text>
</g>
<g >
<title>core::ptr::real_drop_in_place (6 samples, 0.01%)</title><rect x="978.8" y="1301" width="0.2" height="15.0" fill="rgb(208,171,14)" rx="2" ry="2" />
<text  x="981.83" y="1311.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (12 samples, 0.02%)</title><rect x="995.3" y="1189" width="0.3" height="15.0" fill="rgb(209,198,3)" rx="2" ry="2" />
<text  x="998.32" y="1199.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::uninit (5 samples, 0.01%)</title><rect x="817.5" y="1013" width="0.1" height="15.0" fill="rgb(219,125,0)" rx="2" ry="2" />
<text  x="820.48" y="1023.5" ></text>
</g>
<g >
<title>noria::_::&lt;impl serde::ser::Serialize for noria::Tagged&lt;T&gt;&gt;::serialize (13 samples, 0.02%)</title><rect x="1027.7" y="1253" width="0.3" height="15.0" fill="rgb(208,133,46)" rx="2" ry="2" />
<text  x="1030.74" y="1263.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (37 samples, 0.07%)</title><rect x="1181.2" y="901" width="0.7" height="15.0" fill="rgb(231,139,3)" rx="2" ry="2" />
<text  x="1184.15" y="911.5" ></text>
</g>
<g >
<title>noria::view::View::multi_lookup::_$u7b$$u7b$closure$u7d$$u7d$::hfd25b5db07962f7a (9 samples, 0.02%)</title><rect x="194.8" y="1253" width="0.2" height="15.0" fill="rgb(246,119,40)" rx="2" ry="2" />
<text  x="197.84" y="1263.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (5 samples, 0.01%)</title><rect x="1080.9" y="965" width="0.1" height="15.0" fill="rgb(205,12,2)" rx="2" ry="2" />
<text  x="1083.87" y="975.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *const T&gt;::add (59 samples, 0.11%)</title><rect x="328.3" y="1253" width="1.2" height="15.0" fill="rgb(226,71,22)" rx="2" ry="2" />
<text  x="331.28" y="1263.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (32 samples, 0.06%)</title><rect x="1037.1" y="1413" width="0.7" height="15.0" fill="rgb(215,75,21)" rx="2" ry="2" />
<text  x="1040.14" y="1423.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (5 samples, 0.01%)</title><rect x="1053.3" y="1125" width="0.1" height="15.0" fill="rgb(243,33,33)" rx="2" ry="2" />
<text  x="1056.33" y="1135.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (18 samples, 0.03%)</title><rect x="1034.2" y="1525" width="0.4" height="15.0" fill="rgb(223,148,32)" rx="2" ry="2" />
<text  x="1037.19" y="1535.5" ></text>
</g>
<g >
<title>core::mem::swap (9 samples, 0.02%)</title><rect x="1154.5" y="949" width="0.2" height="15.0" fill="rgb(250,211,41)" rx="2" ry="2" />
<text  x="1157.54" y="959.5" ></text>
</g>
<g >
<title>std::panicking::try (11 samples, 0.02%)</title><rect x="1035.9" y="1317" width="0.2" height="15.0" fill="rgb(244,89,9)" rx="2" ry="2" />
<text  x="1038.89" y="1327.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (40 samples, 0.07%)</title><rect x="1156.7" y="997" width="0.9" height="15.0" fill="rgb(236,113,35)" rx="2" ry="2" />
<text  x="1159.71" y="1007.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (7 samples, 0.01%)</title><rect x="1012.5" y="1413" width="0.1" height="15.0" fill="rgb(207,122,22)" rx="2" ry="2" />
<text  x="1015.48" y="1423.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_owned_task (11 samples, 0.02%)</title><rect x="1036.9" y="1461" width="0.2" height="15.0" fill="rgb(231,6,19)" rx="2" ry="2" />
<text  x="1039.91" y="1471.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (5 samples, 0.01%)</title><rect x="1041.3" y="901" width="0.1" height="15.0" fill="rgb(234,146,22)" rx="2" ry="2" />
<text  x="1044.32" y="911.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (6 samples, 0.01%)</title><rect x="1031.0" y="1125" width="0.2" height="15.0" fill="rgb(215,158,3)" rx="2" ry="2" />
<text  x="1034.05" y="1135.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (33 samples, 0.06%)</title><rect x="873.0" y="1301" width="0.7" height="15.0" fill="rgb(250,30,52)" rx="2" ry="2" />
<text  x="875.99" y="1311.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (7 samples, 0.01%)</title><rect x="1004.9" y="1429" width="0.2" height="15.0" fill="rgb(215,191,11)" rx="2" ry="2" />
<text  x="1007.93" y="1439.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (5 samples, 0.01%)</title><rect x="982.3" y="997" width="0.1" height="15.0" fill="rgb(242,164,23)" rx="2" ry="2" />
<text  x="985.29" y="1007.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::client::Client&lt;T,E&gt; as tower_service::Service&lt;&lt;T as futures::sink::Sink&gt;::SinkItem&gt;&gt;::poll_ready (6 samples, 0.01%)</title><rect x="1008.0" y="1381" width="0.1" height="15.0" fill="rgb(231,28,24)" rx="2" ry="2" />
<text  x="1011.01" y="1391.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::new (903 samples, 1.62%)</title><rect x="208.0" y="1333" width="19.2" height="15.0" fill="rgb(217,149,18)" rx="2" ry="2" />
<text  x="211.01" y="1343.5" ></text>
</g>
<g >
<title>std::panicking::try (11 samples, 0.02%)</title><rect x="1059.1" y="1413" width="0.2" height="15.0" fill="rgb(243,226,50)" rx="2" ry="2" />
<text  x="1062.06" y="1423.5" ></text>
</g>
<g >
<title>futures::task_impl::std::set (37 samples, 0.07%)</title><rect x="186.3" y="1525" width="0.7" height="15.0" fill="rgb(205,156,12)" rx="2" ry="2" />
<text  x="189.26" y="1535.5" ></text>
</g>
<g >
<title>rand::prng::isaac64::Isaac64Rng::isaac64::_$u7b$$u7b$closure$u7d$$u7d$::hb445773023b85df5 (6 samples, 0.01%)</title><rect x="579.0" y="1045" width="0.1" height="15.0" fill="rgb(238,70,8)" rx="2" ry="2" />
<text  x="581.96" y="1055.5" ></text>
</g>
<g >
<title>tokio_sync::mpsc::bounded::Sender&lt;T&gt;::poll_ready (8 samples, 0.01%)</title><rect x="186.3" y="1365" width="0.2" height="15.0" fill="rgb(215,85,52)" rx="2" ry="2" />
<text  x="189.35" y="1375.5" ></text>
</g>
<g >
<title>gen::read (8 samples, 0.01%)</title><rect x="193.9" y="1445" width="0.2" height="15.0" fill="rgb(248,228,6)" rx="2" ry="2" />
<text  x="196.90" y="1455.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (1,787 samples, 3.21%)</title><rect x="345.1" y="1301" width="37.9" height="15.0" fill="rgb(212,189,29)" rx="2" ry="2" />
<text  x="348.07" y="1311.5" >all..</text>
</g>
<g >
<title>core::fmt::write (10 samples, 0.02%)</title><rect x="989.6" y="1221" width="0.2" height="15.0" fill="rgb(206,36,9)" rx="2" ry="2" />
<text  x="992.61" y="1231.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::now (10 samples, 0.02%)</title><rect x="1125.8" y="885" width="0.2" height="15.0" fill="rgb(250,16,13)" rx="2" ry="2" />
<text  x="1128.77" y="895.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.02%)</title><rect x="1043.8" y="741" width="0.2" height="15.0" fill="rgb(238,109,0)" rx="2" ry="2" />
<text  x="1046.82" y="751.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (12 samples, 0.02%)</title><rect x="193.4" y="1173" width="0.2" height="15.0" fill="rgb(218,171,31)" rx="2" ry="2" />
<text  x="196.35" y="1183.5" ></text>
</g>
<g >
<title>compute_size_with_overflow (44 samples, 0.08%)</title><rect x="36.7" y="1541" width="0.9" height="15.0" fill="rgb(253,149,8)" rx="2" ry="2" />
<text  x="39.69" y="1551.5" ></text>
</g>
<g >
<title>noria::data::_::&lt;impl serde::ser::Serialize for noria::data::DataType&gt;::serialize (12 samples, 0.02%)</title><rect x="1045.3" y="933" width="0.2" height="15.0" fill="rgb(253,12,41)" rx="2" ry="2" />
<text  x="1048.29" y="943.5" ></text>
</g>
<g >
<title>futures::task_impl::std::TaskUnpark::notify (21 samples, 0.04%)</title><rect x="1134.5" y="677" width="0.4" height="15.0" fill="rgb(252,152,24)" rx="2" ry="2" />
<text  x="1137.47" y="687.5" ></text>
</g>
<g >
<title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::pop_if_internal (9 samples, 0.02%)</title><rect x="1019.6" y="1429" width="0.2" height="15.0" fill="rgb(220,106,37)" rx="2" ry="2" />
<text  x="1022.63" y="1439.5" ></text>
</g>
<g >
<title>slab::Slab&lt;T&gt;::insert_at (5 samples, 0.01%)</title><rect x="1043.0" y="901" width="0.1" height="15.0" fill="rgb(233,175,24)" rx="2" ry="2" />
<text  x="1045.97" y="911.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_steal_task (25 samples, 0.04%)</title><rect x="1026.9" y="1205" width="0.5" height="15.0" fill="rgb(242,60,36)" rx="2" ry="2" />
<text  x="1029.91" y="1215.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (6 samples, 0.01%)</title><rect x="1161.5" y="853" width="0.2" height="15.0" fill="rgb(225,57,11)" rx="2" ry="2" />
<text  x="1164.52" y="863.5" ></text>
</g>
<g >
<title>tokio_reactor::with_default (36 samples, 0.06%)</title><rect x="1032.5" y="1445" width="0.7" height="15.0" fill="rgb(212,131,43)" rx="2" ry="2" />
<text  x="1035.47" y="1455.5" ></text>
</g>
<g >
<title>alloc::rc::RcBoxPtr::strong (103 samples, 0.19%)</title><rect x="827.5" y="1125" width="2.2" height="15.0" fill="rgb(250,146,14)" rx="2" ry="2" />
<text  x="830.52" y="1135.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::ha5a36fc5828d1332 (8 samples, 0.01%)</title><rect x="189.2" y="1285" width="0.2" height="15.0" fill="rgb(248,208,35)" rx="2" ry="2" />
<text  x="192.21" y="1295.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (264 samples, 0.47%)</title><rect x="801.3" y="1109" width="5.6" height="15.0" fill="rgb(252,31,28)" rx="2" ry="2" />
<text  x="804.29" y="1119.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (10 samples, 0.02%)</title><rect x="988.2" y="1109" width="0.2" height="15.0" fill="rgb(233,28,18)" rx="2" ry="2" />
<text  x="991.23" y="1119.5" ></text>
</g>
<g >
<title>iallocztm (1,556 samples, 2.80%)</title><rect x="40.5" y="1525" width="33.1" height="15.0" fill="rgb(205,51,13)" rx="2" ry="2" />
<text  x="43.53" y="1535.5" >ia..</text>
</g>
<g >
<title>__netif_receive_skb_core (19 samples, 0.03%)</title><rect x="1039.0" y="389" width="0.5" height="15.0" fill="rgb(226,6,13)" rx="2" ry="2" />
<text  x="1042.05" y="399.5" ></text>
</g>
<g >
<title>&lt;&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple::Access&lt;R,O&gt; as serde::de::SeqAccess&gt;::next_element_seed (7 samples, 0.01%)</title><rect x="1022.5" y="853" width="0.1" height="15.0" fill="rgb(240,55,54)" rx="2" ry="2" />
<text  x="1025.48" y="863.5" ></text>
</g>
<g >
<title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::read_from_io (5 samples, 0.01%)</title><rect x="1031.0" y="661" width="0.2" height="15.0" fill="rgb(236,50,52)" rx="2" ry="2" />
<text  x="1034.05" y="671.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (9 samples, 0.02%)</title><rect x="928.8" y="1301" width="0.2" height="15.0" fill="rgb(231,143,27)" rx="2" ry="2" />
<text  x="931.78" y="1311.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (21 samples, 0.04%)</title><rect x="601.5" y="1029" width="0.4" height="15.0" fill="rgb(236,50,6)" rx="2" ry="2" />
<text  x="604.47" y="1039.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (9 samples, 0.02%)</title><rect x="1051.4" y="1157" width="0.2" height="15.0" fill="rgb(206,96,11)" rx="2" ry="2" />
<text  x="1054.38" y="1167.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (8 samples, 0.01%)</title><rect x="1015.2" y="1173" width="0.1" height="15.0" fill="rgb(211,218,29)" rx="2" ry="2" />
<text  x="1018.18" y="1183.5" ></text>
</g>
<g >
<title>__pthread_cond_signal (10 samples, 0.02%)</title><rect x="1134.5" y="597" width="0.2" height="15.0" fill="rgb(215,122,8)" rx="2" ry="2" />
<text  x="1137.49" y="607.5" ></text>
</g>
<g >
<title>serde::de::SeqAccess::next_element (11 samples, 0.02%)</title><rect x="1055.2" y="1093" width="0.2" height="15.0" fill="rgb(233,189,54)" rx="2" ry="2" />
<text  x="1058.15" y="1103.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (11 samples, 0.02%)</title><rect x="1046.6" y="805" width="0.3" height="15.0" fill="rgb(238,120,36)" rx="2" ry="2" />
<text  x="1049.62" y="815.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (12 samples, 0.02%)</title><rect x="1168.0" y="917" width="0.3" height="15.0" fill="rgb(234,157,8)" rx="2" ry="2" />
<text  x="1171.04" y="927.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (7 samples, 0.01%)</title><rect x="1056.9" y="1557" width="0.2" height="15.0" fill="rgb(220,200,26)" rx="2" ry="2" />
<text  x="1059.94" y="1567.5" ></text>
</g>
<g >
<title>_rjem_calloc (5 samples, 0.01%)</title><rect x="1015.4" y="1589" width="0.1" height="15.0" fill="rgb(211,127,34)" rx="2" ry="2" />
<text  x="1018.43" y="1599.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hfd11a552e9cf44a2 (12 samples, 0.02%)</title><rect x="995.3" y="1221" width="0.3" height="15.0" fill="rgb(252,181,34)" rx="2" ry="2" />
<text  x="998.32" y="1231.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (15 samples, 0.03%)</title><rect x="882.7" y="1205" width="0.3" height="15.0" fill="rgb(213,7,26)" rx="2" ry="2" />
<text  x="885.67" y="1215.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Events::push_event (40 samples, 0.07%)</title><rect x="1092.7" y="901" width="0.8" height="15.0" fill="rgb(251,45,21)" rx="2" ry="2" />
<text  x="1095.69" y="911.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (26 samples, 0.05%)</title><rect x="917.0" y="1237" width="0.5" height="15.0" fill="rgb(252,164,44)" rx="2" ry="2" />
<text  x="919.98" y="1247.5" ></text>
</g>
<g >
<title>core::ptr::&lt;impl *const T&gt;::offset (17 samples, 0.03%)</title><rect x="653.9" y="1109" width="0.4" height="15.0" fill="rgb(218,129,50)" rx="2" ry="2" />
<text  x="656.95" y="1119.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::run_task (14 samples, 0.03%)</title><rect x="1049.7" y="1317" width="0.3" height="15.0" fill="rgb(215,4,42)" rx="2" ry="2" />
<text  x="1052.72" y="1327.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::h74e14c124a141e40 (12 samples, 0.02%)</title><rect x="1029.9" y="1221" width="0.3" height="15.0" fill="rgb(218,101,6)" rx="2" ry="2" />
<text  x="1032.95" y="1231.5" ></text>
</g>
<g >
<title>futures::task_impl::Spawn&lt;T&gt;::enter (15 samples, 0.03%)</title><rect x="194.7" y="1413" width="0.3" height="15.0" fill="rgb(208,60,23)" rx="2" ry="2" />
<text  x="197.71" y="1423.5" ></text>
</g>
<g >
<title>&lt;rand::ThreadRng as rand::Rng&gt;::next_u64 (1,529 samples, 2.75%)</title><rect x="570.3" y="1173" width="32.4" height="15.0" fill="rgb(226,13,6)" rx="2" ry="2" />
<text  x="573.28" y="1183.5" >&lt;r..</text>
</g>
<g >
<title>futures::task_impl::current (13 samples, 0.02%)</title><rect x="1007.5" y="1493" width="0.3" height="15.0" fill="rgb(243,190,34)" rx="2" ry="2" />
<text  x="1010.50" y="1503.5" ></text>
</g>
<g >
<title>futures::sync::mpsc::Sender&lt;T&gt;::try_send (9 samples, 0.02%)</title><rect x="1153.3" y="613" width="0.2" height="15.0" fill="rgb(207,33,45)" rx="2" ry="2" />
<text  x="1156.33" y="623.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (20 samples, 0.04%)</title><rect x="850.9" y="1109" width="0.4" height="15.0" fill="rgb(250,107,49)" rx="2" ry="2" />
<text  x="853.92" y="1119.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Root&lt;K,V&gt;::as_mut (81 samples, 0.15%)</title><rect x="951.0" y="1285" width="1.7" height="15.0" fill="rgb(252,139,33)" rx="2" ry="2" />
<text  x="953.99" y="1295.5" ></text>
</g>
<g >
<title>tsd_assert_fast (48 samples, 0.09%)</title><rect x="167.8" y="1573" width="1.1" height="15.0" fill="rgb(251,3,25)" rx="2" ry="2" />
<text  x="170.85" y="1583.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (19 samples, 0.03%)</title><rect x="997.6" y="1285" width="0.4" height="15.0" fill="rgb(212,52,29)" rx="2" ry="2" />
<text  x="1000.61" y="1295.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll2 (133 samples, 0.24%)</title><rect x="1123.2" y="933" width="2.8" height="15.0" fill="rgb(246,174,14)" rx="2" ry="2" />
<text  x="1126.16" y="943.5" ></text>
</g>
<g >
<title>&lt;futures::future::either::Either&lt;A,B&gt; as futures::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1053.1" y="1269" width="0.1" height="15.0" fill="rgb(240,116,52)" rx="2" ry="2" />
<text  x="1056.05" y="1279.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (21 samples, 0.04%)</title><rect x="997.2" y="1429" width="0.4" height="15.0" fill="rgb(241,39,36)" rx="2" ry="2" />
<text  x="1000.16" y="1439.5" ></text>
</g>
<g >
<title>&lt;tokio_tower::multiplex::MultiplexTransport&lt;T,S&gt; as futures::sink::Sink&gt;::start_send (6 samples, 0.01%)</title><rect x="1025.8" y="1333" width="0.1" height="15.0" fill="rgb(237,124,20)" rx="2" ry="2" />
<text  x="1028.79" y="1343.5" ></text>
</g>
<g >
<title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify (5 samples, 0.01%)</title><rect x="11.1" y="1365" width="0.1" height="15.0" fill="rgb(226,54,22)" rx="2" ry="2" />
<text  x="14.10" y="1375.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (16 samples, 0.03%)</title><rect x="879.9" y="1221" width="0.4" height="15.0" fill="rgb(254,187,37)" rx="2" ry="2" />
<text  x="882.93" y="1231.5" ></text>
</g>
<g >
<title>crossbeam_deque::Stealer&lt;T&gt;::steal_batch_and_pop (1,636 samples, 2.94%)</title><rect x="1155.0" y="1029" width="34.7" height="15.0" fill="rgb(209,47,0)" rx="2" ry="2" />
<text  x="1157.99" y="1039.5" >cr..</text>
</g>
<g >
<title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (13 samples, 0.02%)</title><rect x="973.8" y="1253" width="0.2" height="15.0" fill="rgb(232,53,25)" rx="2" ry="2" />
<text  x="976.76" y="1263.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (7 samples, 0.01%)</title><rect x="275.1" y="1237" width="0.2" height="15.0" fill="rgb(248,56,52)" rx="2" ry="2" />
<text  x="278.13" y="1247.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::Mutex::raw_lock (231 samples, 0.42%)</title><rect x="458.8" y="1237" width="4.9" height="15.0" fill="rgb(219,153,28)" rx="2" ry="2" />
<text  x="461.82" y="1247.5" ></text>
</g>
<g >
<title>alloc::rc::Rc&lt;T&gt;::from_inner (58 samples, 0.10%)</title><rect x="616.9" y="1221" width="1.2" height="15.0" fill="rgb(240,76,12)" rx="2" ry="2" />
<text  x="619.90" y="1231.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (19 samples, 0.03%)</title><rect x="180.4" y="1541" width="0.4" height="15.0" fill="rgb(222,84,10)" rx="2" ry="2" />
<text  x="183.43" y="1551.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8&gt;&gt;::write_all (5 samples, 0.01%)</title><rect x="1022.2" y="949" width="0.1" height="15.0" fill="rgb(215,76,53)" rx="2" ry="2" />
<text  x="1025.22" y="959.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::expect (21 samples, 0.04%)</title><rect x="607.9" y="1269" width="0.4" height="15.0" fill="rgb(240,154,50)" rx="2" ry="2" />
<text  x="610.88" y="1279.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicIsize::load (63 samples, 0.11%)</title><rect x="1163.0" y="1013" width="1.3" height="15.0" fill="rgb(223,42,37)" rx="2" ry="2" />
<text  x="1166.01" y="1023.5" ></text>
</g>
<g >
<title>core::ptr::write (19 samples, 0.03%)</title><rect x="602.2" y="1045" width="0.4" height="15.0" fill="rgb(215,101,32)" rx="2" ry="2" />
<text  x="605.17" y="1055.5" ></text>
</g>
<g >
<title>__libc_write (5 samples, 0.01%)</title><rect x="983.6" y="1077" width="0.2" height="15.0" fill="rgb(217,76,47)" rx="2" ry="2" />
<text  x="986.65" y="1087.5" ></text>
</g>
<g >
<title>&lt;async_bincode::writer::AsyncBincodeWriter&lt;W,T,async_bincode::writer::AsyncDestination&gt; as async_bincode::writer::BincodeWriterFor&lt;T&gt;&gt;::append (10 samples, 0.02%)</title><rect x="1014.2" y="1317" width="0.2" height="15.0" fill="rgb(246,127,13)" rx="2" ry="2" />
<text  x="1017.16" y="1327.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (16 samples, 0.03%)</title><rect x="1050.4" y="389" width="0.4" height="15.0" fill="rgb(211,54,36)" rx="2" ry="2" />
<text  x="1053.44" y="399.5" ></text>
</g>
<g >
<title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (6 samples, 0.01%)</title><rect x="1053.1" y="1237" width="0.1" height="15.0" fill="rgb(221,56,49)" rx="2" ry="2" />
<text  x="1056.05" y="1247.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (9 samples, 0.02%)</title><rect x="1045.4" y="917" width="0.1" height="15.0" fill="rgb(212,219,21)" rx="2" ry="2" />
<text  x="1048.35" y="927.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (19 samples, 0.03%)</title><rect x="997.6" y="1237" width="0.4" height="15.0" fill="rgb(230,87,3)" rx="2" ry="2" />
<text  x="1000.61" y="1247.5" ></text>
</g>
<g >
<title>tokio::runtime::threadpool::builder::Builder::build::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h35fc229333fad0de (12 samples, 0.02%)</title><rect x="1015.2" y="1269" width="0.2" height="15.0" fill="rgb(238,196,33)" rx="2" ry="2" />
<text  x="1018.18" y="1279.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll2 (233 samples, 0.42%)</title><rect x="1075.5" y="917" width="5.0" height="15.0" fill="rgb(245,154,53)" rx="2" ry="2" />
<text  x="1078.52" y="927.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h04f609b9c309f6af (348 samples, 0.63%)</title><rect x="195.2" y="1525" width="7.3" height="15.0" fill="rgb(227,28,0)" rx="2" ry="2" />
<text  x="198.16" y="1535.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.01%)</title><rect x="1135.2" y="805" width="0.2" height="15.0" fill="rgb(217,76,8)" rx="2" ry="2" />
<text  x="1138.23" y="815.5" ></text>
</g>
<g >
<title>_$LT$futures..future..and_then..AndThen$LT$A$C$B$C$F$GT$$u20$as$u20$futures..future..Future$GT$::poll::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::ha5a36fc5828d1332 (9 samples, 0.02%)</title><rect x="194.8" y="1269" width="0.2" height="15.0" fill="rgb(246,194,44)" rx="2" ry="2" />
<text  x="197.84" y="1279.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (30 samples, 0.05%)</title><rect x="195.2" y="1349" width="0.7" height="15.0" fill="rgb(213,208,42)" rx="2" ry="2" />
<text  x="198.24" y="1359.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (144 samples, 0.26%)</title><rect x="1000.0" y="1461" width="3.0" height="15.0" fill="rgb(216,73,21)" rx="2" ry="2" />
<text  x="1002.99" y="1471.5" ></text>
</g>
<g >
<title>&lt;async_bincode::reader::AsyncBincodeReader&lt;R,T&gt; as futures::stream::Stream&gt;::poll (7 samples, 0.01%)</title><rect x="1060.0" y="1173" width="0.1" height="15.0" fill="rgb(239,177,47)" rx="2" ry="2" />
<text  x="1062.99" y="1183.5" ></text>
</g>
<g >
<title>tokio_threadpool::worker::Worker::try_run_task (33 samples, 0.06%)</title><rect x="1030.5" y="1157" width="0.7" height="15.0" fill="rgb(223,104,50)" rx="2" ry="2" />
<text  x="1033.48" y="1167.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (16 samples, 0.03%)</title><rect x="1069.2" y="1061" width="0.3" height="15.0" fill="rgb(206,184,20)" rx="2" ry="2" />
<text  x="1072.16" y="1071.5" ></text>
</g>
<g >
<title>crossbeam_epoch::default::is_pinned (221 samples, 0.40%)</title><rect x="1165.1" y="1013" width="4.7" height="15.0" fill="rgb(253,128,20)" rx="2" ry="2" />
<text  x="1168.09" y="1023.5" ></text>
</g>
<g >
<title>mio::poll::SetReadiness::set_readiness (5 samples, 0.01%)</title><rect x="1126.0" y="965" width="0.1" height="15.0" fill="rgb(226,6,34)" rx="2" ry="2" />
<text  x="1128.98" y="975.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run (10 samples, 0.02%)</title><rect x="995.3" y="1061" width="0.2" height="15.0" fill="rgb(218,103,13)" rx="2" ry="2" />
<text  x="998.32" y="1071.5" ></text>
</g>
<g >
<title>tokio_timer::wheel::level::Level&lt;T&gt;::next_expiration (5 samples, 0.01%)</title><rect x="1127.1" y="965" width="0.1" height="15.0" fill="rgb(246,167,8)" rx="2" ry="2" />
<text  x="1130.11" y="975.5" ></text>
</g>
<g >
<title>tokio_threadpool::task::Task::run::_$u7b$$u7b$closure$u7d$$u7d$::h9a50b4d83b18a43b (7 samples, 0.01%)</title><rect x="1049.4" y="1253" width="0.1" height="15.0" fill="rgb(221,71,46)" rx="2" ry="2" />
<text  x="1052.38" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.02%)</title><rect x="983.3" y="1125" width="0.2" height="15.0" fill="rgb(238,199,23)" rx="2" ry="2" />
<text  x="986.31" y="1135.5" ></text>
</g>
<g >
<title>__ip_local_out (8 samples, 0.01%)</title><rect x="1050.1" y="613" width="0.2" height="15.0" fill="rgb(233,150,14)" rx="2" ry="2" />
<text  x="1053.15" y="623.5" ></text>
</g>
<g >
<title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (9 samples, 0.02%)</title><rect x="989.6" y="1061" width="0.2" height="15.0" fill="rgb(247,93,25)" rx="2" ry="2" />
<text  x="992.63" y="1071.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (14 samples, 0.03%)</title><rect x="1049.7" y="1205" width="0.3" height="15.0" fill="rgb(220,100,28)" rx="2" ry="2" />
<text  x="1052.72" y="1215.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.01%)</title><rect x="193.4" y="1125" width="0.2" height="15.0" fill="rgb(242,94,15)" rx="2" ry="2" />
<text  x="196.44" y="1135.5" ></text>
</g>
<g >
<title>futures::task_impl::std::_$LT$impl$u20$futures..task_impl..Spawn$LT$F$GT$$GT$::wait_future::_$u7b$$u7b$closure$u7d$$u7d$::hd0f6d5cc3fe9bd86 (15 samples, 0.03%)</title><rect x="188.6" y="1429" width="0.4" height="15.0" fill="rgb(248,53,33)" rx="2" ry="2" />
<text  x="191.64" y="1439.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeSeq&gt;::serialize_element (17 samples, 0.03%)</title><rect x="1023.0" y="1205" width="0.3" height="15.0" fill="rgb(222,138,50)" rx="2" ry="2" />
<text  x="1025.97" y="1215.5" ></text>
</g>
<g >
<title>core::mem::take (774 samples, 1.39%)</title><rect x="489.8" y="1269" width="16.4" height="15.0" fill="rgb(233,211,13)" rx="2" ry="2" />
<text  x="492.78" y="1279.5" ></text>
</g>
</g>
</svg>
